[
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/4684",
        "createdAt":  "2014-11-13T18:44:41Z",
        "number":  4684,
        "author":  "Tratcher",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-22T18:00:45Z",
        "body":  "RTM milestone.\n\nExternal login providers routinely update their APIs and deprecate the old ones. Before we ship RTM we need to verify that each of our implementations is targeting the latest provider API versions to ensure our packages have the longest useful lifespan.\n\nExample: #85\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOTtOmmg==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyMjI4MTQ0",
                                           "createdAt":  "2015-01-30T16:30:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brentschmaltz",
                                           "body":  "What is the definition for an \u0027External login provider\u0027?\n",
                                           "updatedAt":  "2015-01-30T16:30:15Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyMjI4MzI0",
                                           "createdAt":  "2015-01-30T16:31:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Praburaj",
                                           "body":  "Like Google, Facebook, Twitter, MicrosoftAccount etc. \n",
                                           "updatedAt":  "2015-01-30T16:31:21Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDEyNjA2NzIwMw==",
                                           "createdAt":  "2015-07-29T19:24:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "FYI: Facebook is up to v2.4: https://developers.facebook.com/blog/post/2015/07/08/graph-api-v2.4/\nhttps://katanaproject.codeplex.com/workitem/417\nhttps://github.com/aspnet/Security/issues/365\n",
                                           "updatedAt":  "2015-07-29T19:24:25Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDE1ODEwNDQ1MQ==",
                                           "createdAt":  "2015-11-19T16:15:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "muratg",
                                           "body":  "Let\u0027s have a look in RC2.\n",
                                           "updatedAt":  "2015-11-19T16:15:07Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDE4MzAyNzI1MQ==",
                                           "createdAt":  "2016-02-11T19:35:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "MSA: https://github.com/aspnet/Security/pull/691\n",
                                           "updatedAt":  "2016-02-11T19:35:23Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDIyMDcxODY2Ng==",
                                           "createdAt":  "2016-05-20T21:06:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Google Token Endpoint to v4: https://github.com/aspnet/Security/pull/829\n",
                                           "updatedAt":  "2016-05-20T21:07:11Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDIyMDcxODc3Nw==",
                                           "createdAt":  "2016-05-20T21:07:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "FB to v2.6 https://github.com/aspnet/Security/pull/828\n",
                                           "updatedAt":  "2016-05-20T21:07:29Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDIyMDcxODgyMA==",
                                           "createdAt":  "2016-05-20T21:07:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Twitter looks fine\n",
                                           "updatedAt":  "2016-05-20T21:07:42Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDIyMTA0NjQ0Mw==",
                                           "createdAt":  "2016-05-23T17:57:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Reviving for the next release.\n",
                                           "updatedAt":  "2016-05-23T17:57:11Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDIyMTA1NDQ5Mg==",
                                           "createdAt":  "2016-05-23T18:27:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Its the zombie issue, that will never die...\n",
                                           "updatedAt":  "2016-05-23T18:27:24Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDMxMzgyMTAzMw==",
                                           "createdAt":  "2017-07-08T00:24:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "*ping* @muratg @Eilon reviving this for 2.0 signoff.",
                                           "updatedAt":  "2017-07-08T00:24:33Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDMxNjQ1NDQzMw==",
                                           "createdAt":  "2017-07-19T17:11:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Eilon",
                                           "body":  "@Tratcher - anything we need to do for 2.0 RTM?",
                                           "updatedAt":  "2017-07-19T17:11:41Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDMxNjQ1NjI4MQ==",
                                           "createdAt":  "2017-07-19T17:18:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "I did a pass recently and filed some non-blocking bugs linked above. Move this to 2.1? We should avoid ever putting this issue in the backlog, only the next release.",
                                           "updatedAt":  "2017-07-19T17:18:37Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDMxNjQ1ODQ0MA==",
                                           "createdAt":  "2017-07-19T17:25:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Eilon",
                                           "body":  "Ok.",
                                           "updatedAt":  "2017-07-19T17:25:36Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM2MzkzMTg0Mw==",
                                           "createdAt":  "2018-02-07T22:24:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "Bringing this front and center. Facebook is now at 2.12 and 2.6 will expire in July this year. ",
                                           "updatedAt":  "2018-02-07T22:24:49Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM2MzkzMzM3Mw==",
                                           "createdAt":  "2018-02-07T22:30:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "See https://github.com/aspnet/Security/issues/1306 for Facebook",
                                           "updatedAt":  "2018-02-07T22:30:30Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM2OTMzMzQ3Nw==",
                                           "createdAt":  "2018-02-28T18:21:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOATSCdA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Eilon",
                                                                               "createdAt":  "2018-02-28T18:36:50Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Facebook and Google fixed for 2.1. Twitter and MSA do not appear to require any updates. Punting this zombie issue to 2.2.0.",
                                           "updatedAt":  "2018-02-28T18:21:40Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwMTI1NjQ5OQ==",
                                           "createdAt":  "2019-06-12T12:45:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Update this error message:\r\nhttps://github.com/aspnet/AspNetCore/blob/6c806f91b10c0bf419ab3f2a22c7d64ac5a94663/src/Security/Authentication/Google/src/GoogleHandler.cs#L37\r\n\"Please check if the authentication information is correct and the corresponding Google+ API is enabled.\"",
                                           "updatedAt":  "2019-06-12T12:45:08Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwMzY1MTE0NQ==",
                                           "createdAt":  "2019-06-19T17:17:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Updated facebook for 3.0.0-preivew7.\r\nUpdated the google error message.\r\n\r\nPunting zombie issue again.",
                                           "updatedAt":  "2019-06-19T17:17:07Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUzNzI3MTA3MA==",
                                           "createdAt":  "2019-10-01T23:20:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Moving out of preview1. There\u0027s no expected feature work here, this is just for verification.",
                                           "updatedAt":  "2019-10-01T23:20:43Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUzOTEzODAzMw==",
                                           "createdAt":  "2019-10-07T18:13:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "3.1-preview2 status: All in-box socal providers as well as OIDC and WsFed are working as expected.\r\nFacebook: We\u0027re using 3.3 but the latest version is 4.0. Updating to 4.0 still works as expected. I\u0027ll send a PR.\r\nAll other providers appear to be up to date.",
                                           "updatedAt":  "2019-10-07T18:13:51Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2NjcwNDMzNw==",
                                           "createdAt":  "2020-07-30T21:13:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "Once completed, move to next release planning / backlog.",
                                           "updatedAt":  "2020-07-30T21:13:50Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3ODg0MzUwMA==",
                                           "createdAt":  "2020-08-24T00:05:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\nWe\u0027re moving this issue to the `Next sprint planning` milestone for future evaluation / consideration. We will evaluate the request when we are planning the work for the next milestone. To learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2020-08-24T00:05:01Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3ODg0MzU4Mw==",
                                           "createdAt":  "2020-08-24T00:05:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Completed for 5.0.0 RC1. Revisit in 6.0.",
                                           "updatedAt":  "2020-08-24T00:05:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842kPjU",
                                           "createdAt":  "2021-09-08T18:27:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Updated Facebook to v11 for .NET 6 rc2. Other providers are up to date. \r\n\r\nRevisit late in .NET 7.",
                                           "updatedAt":  "2021-09-08T18:27:39Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85KViwP",
                                           "createdAt":  "2022-09-14T18:39:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `.NET 8 Planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2022-09-14T18:39:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85OvAIl",
                                           "createdAt":  "2022-11-19T18:43:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "FranklinWhale",
                                           "body":  "Both Google and Facebook support PKCE now:\r\nhttps://developers.google.com/identity/protocols/oauth2/native-app#step1-code-verifier\r\nhttps://developers.facebook.com/docs/facebook-login/guides/advanced/oidc-token\r\n\r\nShould `UsePkce` of [`GoogleOptions`](https://github.com/dotnet/aspnetcore/blob/main/src/Security/Authentication/Google/src/GoogleOptions.cs) and [`FacebookOptions`](https://github.com/dotnet/aspnetcore/blob/main/src/Security/Authentication/Facebook/src/FacebookOptions.cs) be set to `true` by default?",
                                           "updatedAt":  "2022-11-19T18:43:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85O0p61",
                                           "createdAt":  "2022-11-21T17:39:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "@FranklinWhale have you tried it? If it works feel free to send us a PR.",
                                           "updatedAt":  "2022-11-21T17:39:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85O05DH",
                                           "createdAt":  "2022-11-21T18:35:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "FranklinWhale",
                                           "body":  "\u003e @FranklinWhale have you tried it? If it works feel free to send us a PR.\r\n\r\nYa, both of them can detect invalid code verifier. I will submit a PR later :)\r\n\r\nShould the tests for Google and Facebook be similar to the one for Microsoft account in #10928?",
                                           "updatedAt":  "2022-11-21T18:35:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85O06aa",
                                           "createdAt":  "2022-11-21T18:40:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Yes, the tests will look similar to the Microsoft ones.",
                                           "updatedAt":  "2022-11-21T18:40:42Z"
                                       }
                                   ],
                         "totalCount":  30
                     },
        "title":  "Verify external providers are using latest APIs",
        "labels":  [
                       "task",
                       "area-auth",
                       "affected-most",
                       "severity-minor"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/4683",
        "createdAt":  "2015-09-03T19:58:59Z",
        "number":  4683,
        "author":  "kevinchalet",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOBXAtlg==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "KhalilMohammad",
                                            "createdAt":  "2020-11-17T08:59:11Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2020-10-22T21:32:15Z",
        "body":  "Wilson doesn\u0027t support JWE yet, but at this moment, we\u0027ll probably want to offer a JWKS endpoint directly in the OIDC middleware (to allow the identity provider to retrieve the public key(s) used to encrypt the identity tokens) and in the JWT bearer middleware (for the access tokens) \n\nRelated specs:\n- JWK/JWKS: http://tools.ietf.org/html/draft-ietf-jose-json-web-key-31\n- OIDC dynamic registration (though dynamic registration is not directly needed to support this feature, it\u0027s the only OIDC specs that contains valuable resources on JWKS): http://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata\n\nRelated tickets:\n- https://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/issues/46\n- https://github.com/aspnet-contrib/AspNet.Security.OpenIdConnect.Server/issues/120 (/cc @MonkeyJamboree)\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOGYIQUQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDEzNzU4Nzk1OQ==",
                                           "createdAt":  "2015-09-03T22:10:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Eilon",
                                           "body":  "@blowdart are you familiar with this at all?\n",
                                           "updatedAt":  "2015-09-03T22:10:31Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDEzNzU4ODM5OQ==",
                                           "createdAt":  "2015-09-03T22:13:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Eilon",
                                           "body":  "Talked to @blowdart and we\u0027re not too eager to support another draft spec right now.\n",
                                           "updatedAt":  "2015-09-03T22:13:02Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDEzNzU4OTkyMA==",
                                           "createdAt":  "2015-09-03T22:22:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "JWK is now an official standard (RFC 7517: http://tools.ietf.org/html/rfc7517), but since OIDC specs have been released before JWK, they explicitly target an older draft. Waiting won\u0027t change anything :smile: \n\nMore info at http://openid.net/specs/openid-connect-core-1_0.html#PreFinalIETFSpecs\n",
                                           "updatedAt":  "2015-09-03T22:23:01Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDEzNzU5MDQ5Mw==",
                                           "createdAt":  "2015-09-03T22:26:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "BTW, JWK is already implemented by IdentityModel, since it\u0027s required to retrieve the provider metadata of an OIDC server :+1: \n",
                                           "updatedAt":  "2015-09-03T22:26:30Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDEzOTQwMDc2NA==",
                                           "createdAt":  "2015-09-10T22:30:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Eilon",
                                           "body":  "Is it really JWE we\u0027re talking about here or JWK/JWKS? We believe that JWK/JWKS are already supported, but that JWE would require more work.\n",
                                           "updatedAt":  "2015-09-10T22:30:18Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDEzOTUxMjk3NQ==",
                                           "createdAt":  "2015-09-11T10:37:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBXAtww==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "KhalilMohammad",
                                                                               "createdAt":  "2020-11-17T08:59:31Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "Actually, we\u0027re talking about both ones :smile: \n\nJWK/JWKS is already implemented in Wilson, but is only used by the OIDC middleware to retrieve the certificates/keys exposed by the identity provider. I\u0027m actually suggesting the opposite: adding a JWKS endpoint to the OIDC middleware and the bearer middleware to expose a certificate/public key registered by the user and used by the identity server to encrypt the tokens.\n\nOf course, it won\u0027t be useful until JWE is implemented in Wilson, but as it\u0027s a big feature, that would be great if we had at least a design before RTM.\n",
                                           "updatedAt":  "2015-12-08T22:47:28Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDE1NjI2MDg5OA==",
                                           "createdAt":  "2015-11-12T22:44:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brentschmaltz",
                                           "body":  "We are trying to get JWE on the schedule, no timeline yet.\n",
                                           "updatedAt":  "2015-11-12T22:44:36Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDI1NTI0Mjc2OQ==",
                                           "createdAt":  "2016-10-20T22:12:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brentschmaltz",
                                           "body":  "@PinpointTownes we are closing in on JWE, see the branch: https://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/tree/JWE  If a host exposes JWK/JWKS endpoint is there a protocol for the initiator to find the right PublicKey and algorithm to use?\n",
                                           "updatedAt":  "2016-10-20T22:12:02Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDI1NTI1NTUyNg==",
                                           "createdAt":  "2016-10-20T23:28:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "@brentschmaltz yep, dynreg: https://tools.ietf.org/html/rfc7591#section-2\n",
                                           "updatedAt":  "2016-10-20T23:28:24Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM3NzM4MTA4OA==",
                                           "createdAt":  "2018-03-29T21:40:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Eilon",
                                           "body":  "@brentschmaltz - some time has elapsed since we looked at this. Any further thoughts on this?",
                                           "updatedAt":  "2018-03-29T21:40:52Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM3NzY1NjE1NQ==",
                                           "createdAt":  "2018-03-31T01:27:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brentschmaltz",
                                           "body":  "@Eilon @PinpointTownes help me understand how this would fit in.",
                                           "updatedAt":  "2018-03-31T01:27:35Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQyNTI0OTA5NA==",
                                           "createdAt":  "2018-09-27T21:28:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Eilon",
                                           "body":  "@brentschmaltz do you have a recent example of how to get the keys to set on the options?",
                                           "updatedAt":  "2018-09-27T21:28:37Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQyNjQ1NDk1Ng==",
                                           "createdAt":  "2018-10-02T22:43:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brentschmaltz",
                                           "body":  "@PinpointTownes @Eilon Are we speaking about inbound and outbound?\r\nInbound, TokenValidationParameters has three ways to find keys for decryption:\r\n\r\ndelegate: \r\nhttps://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/blob/dev/src/Microsoft.IdentityModel.Tokens/TokenValidationParameters.cs#L113\r\n\r\nset keys directly:\r\nhttps://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/blob/dev/src/Microsoft.IdentityModel.Tokens/TokenValidationParameters.cs#L353\r\n\r\nhttps://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/blob/dev/src/Microsoft.IdentityModel.Tokens/TokenValidationParameters.cs#L556\r\n\r\n\r\n",
                                           "updatedAt":  "2018-10-02T22:43:27Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQyNzg3NTg2OQ==",
                                           "createdAt":  "2018-10-08T15:21:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "@brentschmaltz any examples for wiring those up with AAD or any other server? Also, how does the acquisition work?",
                                           "updatedAt":  "2018-10-08T15:21:03Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQyNzk1NDI1Nw==",
                                           "createdAt":  "2018-10-08T19:36:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brentschmaltz",
                                           "body":  "@Tratcher AAD doesn\u0027t have JWE\u0027s yet so nothing for AAD. I\u0027ll leave this issue open until we have a public sample.\r\n\r\nAbout acquisition for outbound, i believe that would be related to what @PinpointTownes has pointed out, we need to obtain a public key from metadata.",
                                           "updatedAt":  "2018-10-08T19:36:32Z"
                                       }
                                   ],
                         "totalCount":  15
                     },
        "title":  "Offer a built-in JWKS endpoint to support encrypted tokens",
        "labels":  [
                       "investigate",
                       "enhancement",
                       "area-auth",
                       "feature-oidc",
                       "affected-few",
                       "severity-minor"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/4678",
        "createdAt":  "2016-08-27T13:28:28Z",
        "number":  4678,
        "author":  "brockallen",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-10-28T14:10:09Z",
        "body":  "A useful event to have would be one that fires after the sid checking is complete and the authentication cookie has been removed. \n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOFn5gNA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDI0MzI2ODg5OA==",
                                           "createdAt":  "2016-08-29T21:51:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "not until v2.0 unless we find a way not to break everybody. https://github.com/aspnet/Security/issues/942#issuecomment-238947101\n",
                                           "updatedAt":  "2016-08-29T21:51:56Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM3NzM4MDkxNg==",
                                           "createdAt":  "2018-03-29T21:40:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Eilon",
                                           "body":  "Parking in 2.2.0 milestone for consideration.",
                                           "updatedAt":  "2018-03-29T21:40:09Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "OpenIdConnectEvents event for RemoteSignOut complete",
        "labels":  [
                       "enhancement",
                       "area-auth",
                       "help candidate"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/4677",
        "createdAt":  "2016-08-27T13:39:18Z",
        "number":  4677,
        "author":  "brockallen",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-10-28T14:10:09Z",
        "body":  "Should emit cache control headers:\n\n```\nCache-Control: no-cache, no-store\nPragma: no-cache\n```\n\nhttps://openid.net/specs/openid-connect-frontchannel-1_0-01.html#RPLogout\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOOOC9Tg==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDI0Mjk5MzUxNQ==",
                                           "createdAt":  "2016-08-28T19:16:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brockallen",
                                           "body":  "Well, I guess this does happen but not in the OIDC MW -- rather this is done in the cookie authentication middleware when SignOut is triggered. Feels leaky to rely upon that. \n",
                                           "updatedAt":  "2016-08-28T19:16:32Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDI0NTc2MTgyMg==",
                                           "createdAt":  "2016-09-08T22:28:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Eilon",
                                           "body":  "We will consider this in a future version.\n",
                                           "updatedAt":  "2016-09-08T22:28:41Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM3NzM4MDY5MQ==",
                                           "createdAt":  "2018-03-29T21:39:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Eilon",
                                           "body":  "Parking in 2.2.0 milestone for consideration.",
                                           "updatedAt":  "2018-03-29T21:39:11Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQwNTc1NDkzMg==",
                                           "createdAt":  "2018-07-17T22:59:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Eilon",
                                           "body":  "Should be easy to add the event. Should also consider setting the HTTP headers by default.",
                                           "updatedAt":  "2018-07-17T22:59:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde8444L1O",
                                           "createdAt":  "2021-10-28T21:56:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "The RemoteSignout event was added in 1.0, or am I missing something?\r\nhttps://github.com/dotnet/aspnetcore/commit/d6763bd77c931aeff1024cafd03255abfe55b753#diff-886d1428dbc1c0d2df68b5c60151330d7aff54021b715d48836f266c0bf235ddR41",
                                           "updatedAt":  "2021-10-28T21:56:41Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "OIDC MW: add HandleRemoteSignOutAsync event",
        "labels":  [
                       "enhancement",
                       "area-auth",
                       "help candidate"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/4674",
        "createdAt":  "2017-05-03T14:01:33Z",
        "number":  4674,
        "author":  "leastprivilege",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODBxc7Q==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Vlaaaaaaad",
                                            "createdAt":  "2025-04-27T14:28:57Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2020-11-10T00:24:54Z",
        "body":  "Wouldn\u0027t that be useful??\r\n\r\nhttps://openid.net/certification/",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOH5Pttg==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDI5OTU3NzIwMw==",
                                           "createdAt":  "2017-05-05T21:12:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Eilon",
                                           "body":  "We should talk to @vibronet to see what they did.",
                                           "updatedAt":  "2017-05-05T21:12:55Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM4NTUwMTQ5NQ==",
                                           "createdAt":  "2018-04-30T19:21:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "leastprivilege",
                                           "body":  "Vittorio is probably not available anymore. Other ideas?",
                                           "updatedAt":  "2018-04-30T19:21:17Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM4NTUwMjE5NA==",
                                           "createdAt":  "2018-04-30T19:24:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "@blowdart ",
                                           "updatedAt":  "2018-04-30T19:24:03Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM4NTUwMzYwMw==",
                                           "createdAt":  "2018-04-30T19:29:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "Yea, we should punt this to Mike Jones and the standards folks. At some point. Might was well do it as part of the identity service pieces.",
                                           "updatedAt":  "2018-04-30T19:29:28Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ1NzgxMjY2OQ==",
                                           "createdAt":  "2019-01-26T08:16:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "leastprivilege",
                                           "body":  "You should do this. My general advice is only use certified OIDC servers/clients. It looks bad it\u0027s not on the list. From a feature point of view you should be complete.",
                                           "updatedAt":  "2019-01-26T08:16:54Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUyOTc4ODM0Mg==",
                                           "createdAt":  "2019-09-10T06:19:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "leastprivilege",
                                           "body":  "ping @blowdart \r\n\r\nWe could do it for you...let me know.",
                                           "updatedAt":  "2019-09-10T06:19:21Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "Certify OIDC middleware?",
        "labels":  [
                       "task",
                       "area-auth",
                       "affected-few",
                       "severity-minor"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/4672",
        "createdAt":  "2017-05-27T10:41:49Z",
        "number":  4672,
        "author":  "bgever",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2019-06-05T09:17:52Z",
        "body":  "To invalidate refresh tokens when the user signs out, it would be great if the OAuthMiddleware could support OAuth 2.0 Token Revocation ([RFC 7005](https://tools.ietf.org/html/rfc7009)).\r\n\r\nRelated to #1236, I\u0027m interested to consider a PR to add this support.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOHb457g==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDMwNzQ4NDEzOA==",
                                           "createdAt":  "2017-06-09T19:52:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Eilon",
                                           "body":  "We generally don\u0027t implement proposed standards, but we will keep tracking this to consider for a future version. We\u0027d certainly welcome a PR when the time comes!",
                                           "updatedAt":  "2017-06-09T19:52:35Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM2MjQyNDA5Ng==",
                                           "createdAt":  "2018-02-01T22:30:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Eilon",
                                           "body":  "It appears that a \"Proposed Standard\" is often as official as an RFC gets, per https://tools.ietf.org/html/rfc7127\r\n\r\nSo, we should certainly consider adding support for this RFC.",
                                           "updatedAt":  "2018-02-01T22:30:50Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM2MjQyOTA5Mg==",
                                           "createdAt":  "2018-02-01T22:52:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brockallen",
                                           "body":  "There\u0027s already a library for this: https://github.com/IdentityModel/IdentityModel2/blob/dev/src/IdentityModel/Client/TokenRevocationClient.cs. ",
                                           "updatedAt":  "2018-02-01T22:52:23Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM2MjQzOTU0NA==",
                                           "createdAt":  "2018-02-01T23:45:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bgever",
                                           "body":  "Neat @brockallen, useful to show our clients how to do the calls, and maybe we can leverage it ourselves.\r\n\r\nWe\u0027ve been using \"proposed standards\" RFC 7005 and [RFC 7523](https://tools.ietf.org/html/rfc7523) successfully for a long time now to handle (JWT) SSO scenarios with our customers.",
                                           "updatedAt":  "2018-02-01T23:45:36Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5OTAwNTkzNA==",
                                           "createdAt":  "2019-06-05T09:17:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fredrikhr",
                                           "body":  "I realize that the RFC 7005 is still a proposed standard, but nowadays all the big Social OAuth providers support token revokation, and Dominick from IdentityServer regularly points out in his talks that you should revoke your access token when signing out to make sure in cannot be used later.\r\n\r\nIt is also rather inconvenient to add this functionality yourself in your own app, especially if you have multiple different OAuth providers in your application, because you\u0027d have to implement the revoking capabilities for every single OAuth provider yourself, and then you\u0027d have to add all the convenient extension methods (like `AddGoogle`) and so on.\r\n\r\nMy current workaround for this is to implement an `OAuthSignOutHandler` that just implements `IAuthenticationSignOutHandler` and then revokes the tokens based on the `AuthenticationType` of the user identity. However, this approach is quite hacky and honestly the revoking capability seems much more at home on the actualy `OAuthHandler` class.\r\n\r\nI have put some thought into how to best integrate this into the existing `OAuthHandler` so I\u0027d be happy to share a Pull Request.",
                                           "updatedAt":  "2019-06-05T09:17:52Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "Support for token revocation on SignOut in OAuthMiddleware",
        "labels":  [
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/4670",
        "createdAt":  "2017-08-10T21:16:52Z",
        "number":  4670,
        "author":  "HaoK",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-02-23T19:24:39Z",
        "body":  "This issue will track all the various Authorization improvements we are looking at for 2.1.\r\n\r\nSome initial thoughts:\r\n----\r\nFrom @davidfowl \r\n\r\nWe\u0027ve had a bunch of feedback about our authz system with respect to flowing context from the authorize attribute to the authorization handler:\r\n \r\n- https://github.com/aspnet/Security/issues/670\r\n- https://github.com/aspnet/Mvc/issues/5607\r\n- https://github.com/aspnet/Security/issues/917\r\n- https://github.com/aspnet/Security/issues/1352\r\n\r\nToday the Authorize attribute supports has enough metadata to describe the policy but it doesn\u0027t let you specify the resource (via IAuthorizeData). I think if we solve that, it might solve a bulk of the issues since people will be able to write custom attributes that flow the relevant context to the authorization handler. \r\n \r\nToday that\u0027s only possible when doing imperative authz. I was thinking something like:\r\n \r\n```\r\npublic interface IAuthorizeResource\r\n{\r\n    object Resource { get; }\r\n}\r\n```\r\n \r\nIf the attribute implemented this, we would flow that as the resource to the handler. This way you implement permissions of whatever you please via resources.\r\n\r\n ----\r\nFrom @rynowak \r\n\r\nLook into providing overriding semantics in MVC, maybe a marker interface: `IAuthorizeMetadata`. Any attributes that implement that interface on the endpoint could be flowed. Then it’s up to developers to build whatever they want.  (Also look into flowing single objects vs many objects + requirements VS resources)\r\n\r\nWe will also look into making it possible to specify requirements via Attributes similar to imperative AuthZ so you don\u0027t have to preconstruct policies for attributes.\r\n\r\nMisc other improvements:\r\n----\r\n- Consider supporting OR logic for policies: https://github.com/aspnet/Security/issues/1356\r\n- Consider enabling policies to be defined in configuration\r\n- Make it easier to be able to display authZ failure reasons in an error page etc https://github.com/aspnet/Security/issues/1530\r\n- Make it easier to pass parameters to policies, i.e. https://github.com/aspnet/Security/issues/1689",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOM_t65A==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDMyNDQ3OTcyOQ==",
                                           "createdAt":  "2017-08-23T22:23:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOAMlVZg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "spottedmahn",
                                                                               "createdAt":  "2017-08-24T12:07:03Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "rynowak",
                                           "body":  "My additional thoughts on this. We\u0027re looking at making the concept of an **endpoint** available at a low level from the dispatcher. Endpoints will have arbitrary metadata in an ordered list. This is the equivalent to what MVC does today by passing the action descriptor.\r\n\r\nWe\u0027ll probably also have a concept of *active metadata* which are metadata items that have been hydrated with the request context.\r\n\r\nThese might be useful/necessary building blocks for these things.\r\n\r\n-------------------------------------\r\n\r\nAdditionally in the case of MVC, the current `[Authorize]` has some surprising behaviors compared to other filters. All authorize filters will execute rather than supporting overriding.  Additionally, `[AllowAnonymous]` cannot be overridden and turns off **all** authorize attributes. These might be consistent with the past, but they don\u0027t really fit with the *zen* of MVC filters.",
                                           "updatedAt":  "2017-08-23T22:24:18Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDMyNDcxNzUyMQ==",
                                           "createdAt":  "2017-08-24T18:26:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Interesting, well if we have a new endpoint concept with a clean slate for metadata, we should probably just expose all of the basic building blocks \r\n\r\n1. Building the ClaimsPrincipal, need to end up with 0 or more authentication schemes.  If none are specified, we continue to use the default user aka httpContext.User, otherwise we build a merged user via authenticating all of the schemes.  We could manifest this with a series of [Authenticate(scheme)] attributes.  \r\n\r\n2. Specifying the Authorization requirements, today the metadata only targets policies, but we could have [Authorize(typeof(MyRequirement), typeof(MyOtherRequirement)]\r\n\r\nSome examples:\r\n\r\n`[Authorize]` \r\n\r\nWould behave the same as today (using some default policy which relies on context.User, and still only does RequireAuthenticatedUser by default\r\n\r\n`[Authenticate(\"Bearer\")]`\r\n`[Authorize]`\r\n\r\nWould use the Bearer scheme and only require that it exists.\r\n\r\n`[Authenticate(\"Bearer\", \"Cookie\")]`\r\n`[Authorize(typeof(RequireAdminClaim)]`\r\n\r\nWould use the merged Bearer Cookie schemes and require an admin claim.",
                                           "updatedAt":  "2017-08-24T18:26:01Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDMyNDc2Nzk0MQ==",
                                           "createdAt":  "2017-08-24T21:53:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Which challenge would you issue?",
                                           "updatedAt":  "2017-08-24T21:53:56Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDMyNDc2ODE0MQ==",
                                           "createdAt":  "2017-08-24T21:54:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "All of them, its not any different than today",
                                           "updatedAt":  "2017-08-24T21:54:47Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDMyNDc2ODYzMQ==",
                                           "createdAt":  "2017-08-24T21:57:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Challenging both Bearer and Cookie is nonsensical.",
                                           "updatedAt":  "2017-08-24T21:57:05Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDMyNDc2ODk0MA==",
                                           "createdAt":  "2017-08-24T21:58:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Not disagreeing, but today if you have a policy that has Bearer and Cookies, that\u0027s what it does today as well",
                                           "updatedAt":  "2017-08-24T21:58:33Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDMyNDc2OTA5OA==",
                                           "createdAt":  "2017-08-24T21:59:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Unless we want to eliminate being able to specify multiple schemes entirely...  that\u0027s an option that would simplify things...",
                                           "updatedAt":  "2017-08-24T21:59:24Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDMyNDc3NTc2OA==",
                                           "createdAt":  "2017-08-24T22:35:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "\u003e Not disagreeing, but today if you have a policy that has Bearer and Cookies, that\u0027s what it does today as well\r\n\r\nIt does? What happens as a result? Don\u0027t they stomp on each other?",
                                           "updatedAt":  "2017-08-24T22:35:44Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDMyNDc4MTA2MA==",
                                           "createdAt":  "2017-08-24T23:06:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Yeah they do, last one wins, multiple auth schemes in policies has always been a bit weird",
                                           "updatedAt":  "2017-08-24T23:06:28Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDMyNDc4MTU1OA==",
                                           "createdAt":  "2017-08-24T23:09:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Some are compatible like Bearer, Basic, and Windows.",
                                           "updatedAt":  "2017-08-24T23:09:29Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM2NDI3MDI4Ng==",
                                           "createdAt":  "2018-02-08T22:28:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Eilon",
                                           "body":  "@HaoK please log new issues for any 2.1.0 proposals.",
                                           "updatedAt":  "2018-02-08T22:28:23Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM4ODgwMTQzNA==",
                                           "createdAt":  "2018-05-14T12:36:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hmvs",
                                           "body":  "@HaoK Is it going to be a part of 2.1 release? ",
                                           "updatedAt":  "2018-05-14T12:36:48Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM4ODgwNTAyMg==",
                                           "createdAt":  "2018-05-14T12:50:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODyfMkA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "BennieCopeland",
                                                                               "createdAt":  "2018-06-07T16:50:24Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "death2233",
                                                                               "createdAt":  "2018-09-29T13:46:27Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "reddogaw",
                                                                               "createdAt":  "2018-12-16T20:01:44Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "franferns",
                                                                               "createdAt":  "2019-01-29T09:42:57Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "wast",
                                                                               "createdAt":  "2019-02-01T11:45:24Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "daiplusplus",
                                                                               "createdAt":  "2019-02-11T08:17:54Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "orenkaf",
                                                                               "createdAt":  "2019-02-20T11:57:24Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "kostteg",
                                                                               "createdAt":  "2019-06-13T11:14:04Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ratbeknurlanov",
                                                                               "createdAt":  "2019-07-25T10:40:23Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "johanclasson",
                                                                               "createdAt":  "2019-08-22T10:28:09Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "shupoval",
                                                                               "createdAt":  "2019-09-26T11:10:32Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "sleemer",
                                                                               "createdAt":  "2019-10-21T15:48:02Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "pietersap",
                                                                               "createdAt":  "2019-11-06T09:22:30Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "fgheysels",
                                                                               "createdAt":  "2019-11-13T22:16:35Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "rcbevans",
                                                                               "createdAt":  "2020-02-11T23:46:08Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "arufolo",
                                                                               "createdAt":  "2020-02-17T20:42:27Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "gayancc",
                                                                               "createdAt":  "2020-04-15T19:07:35Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "harishrathi",
                                                                               "createdAt":  "2020-06-06T14:34:29Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Vasim-DigitalNexus",
                                                                               "createdAt":  "2020-06-08T16:32:28Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "tiakun",
                                                                               "createdAt":  "2020-09-10T08:31:17Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "tb-mtg",
                                                                               "createdAt":  "2020-09-19T11:08:32Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ericsuhong",
                                                                               "createdAt":  "2020-10-20T04:44:27Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "santiaago",
                                                                               "createdAt":  "2021-01-18T09:54:38Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "mix4242",
                                                                               "createdAt":  "2021-01-29T16:38:13Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "josepd247",
                                                                               "createdAt":  "2021-04-27T16:44:13Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ozonni",
                                                                               "createdAt":  "2021-05-28T14:15:00Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "skizdigidy",
                                                                               "createdAt":  "2021-06-24T16:39:10Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "abzubarev",
                                                                               "createdAt":  "2021-11-18T01:56:53Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "carlsonsoft",
                                                                               "createdAt":  "2021-12-08T02:48:25Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "replaysMike",
                                                                               "createdAt":  "2022-02-07T00:50:15Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "aayjaychan",
                                                                               "createdAt":  "2022-03-23T05:09:05Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "gimlichael",
                                                                               "createdAt":  "2024-02-19T11:12:26Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "mesuttalebi",
                                                                               "createdAt":  "2024-09-17T08:30:04Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  33
                                                         },
                                           "author":  "hmvs",
                                           "body":  "I want to have ability to return custom json if specific policy failed. for example \r\n403\r\n{\r\n\"errorType\": \"PrivalcyPolicyAcceptRequired\",\r\n\"errorMessage\": \"You token doesn\u0027t have PolicyAccepted claim\"\r\n}",
                                           "updatedAt":  "2018-05-14T12:50:18Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM4ODg4MDQ0Mg==",
                                           "createdAt":  "2018-05-14T16:32:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOAWiqWw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "CONFUSED",
                                                                               "user":  "hmvs",
                                                                               "createdAt":  "2018-05-15T07:10:05Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "HaoK",
                                           "body":  "No the error authZ improvements didn\u0027t make it into 2.1, I\u0027ll try to get them in 2.2",
                                           "updatedAt":  "2018-05-14T16:32:29Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM4ODg4MDkyNw==",
                                           "createdAt":  "2018-05-14T16:34:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "spottedmahn",
                                           "body":  "I assume that is why the title changed to 2.2 😜⁉",
                                           "updatedAt":  "2018-05-14T16:34:11Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM4ODkxNjA1MQ==",
                                           "createdAt":  "2018-05-14T18:26:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Yup, I\u0027ve got some cycles this week so I\u0027ll try to prototype something ",
                                           "updatedAt":  "2018-05-14T18:26:23Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM4ODkyMTQ0Mg==",
                                           "createdAt":  "2018-05-14T18:44:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "So rough idea of some initial AuthZ improvements I\u0027ve got at the top of my head for 2.2\r\n\r\n- For errors, maybe some kind of scoped `IAuthorizationErrorService`, that the authZ services will report errors to with appropriate context.  This should enable apps to write an appropriate detailed authorization error.\r\n\r\n- `UseAuthorize(\"policyName\")` - middleware equivalent of `[Authorize(\"policyName\")]`, would behave similarly, and also allow sideffect of setting httpContext.User if AuthenticationScheme is specified in the policy. TBD on what to do for failure, redirect to some access denied page which is able to display the appropriate context seems ideal.\r\n\r\n",
                                           "updatedAt":  "2018-05-14T18:44:14Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM4ODk3NTk2NA==",
                                           "createdAt":  "2018-05-14T21:56:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "I think we should close this issue and revisit this in 2.2 planning so we can scope it down.",
                                           "updatedAt":  "2018-05-14T21:56:38Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM4ODk3NjgwNg==",
                                           "createdAt":  "2018-05-14T21:59:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Close or leave it open for planning?",
                                           "updatedAt":  "2018-05-14T21:59:57Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM4OTA3NjEyNQ==",
                                           "createdAt":  "2018-05-15T07:49:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOAXpp5g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "GregMialon",
                                                                               "createdAt":  "2018-06-08T05:59:47Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "hmvs",
                                           "body":  "Have you considered adding some way how we can access the list of policies which is run and which is failed. Also I thought it could be a helpful to have overload of method `context.Fail();` with some object which can be accessed later.",
                                           "updatedAt":  "2018-05-15T07:50:16Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM5NzkxNjE0MQ==",
                                           "createdAt":  "2018-06-18T00:14:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOAgZLvw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "spottedmahn",
                                                                               "createdAt":  "2018-07-05T13:22:13Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jeffrey-igaw",
                                                                               "createdAt":  "2018-10-30T02:35:41Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "reddogaw",
                                                                               "createdAt":  "2018-12-14T03:52:44Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "natelaff",
                                           "body":  "Is this what currently prevents something such as the ability to show a specific page when a specific policy fails. For example, when a policy fails, redirect to a page that shows how to get that particular policy? (i.e. paying for a new membership level).",
                                           "updatedAt":  "2018-06-18T00:14:23Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ0NzY5NTk4Ng==",
                                           "createdAt":  "2018-12-17T01:24:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBBNCOw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "gabynevada",
                                                                               "createdAt":  "2019-02-22T17:13:18Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "kt81",
                                                                               "createdAt":  "2019-07-16T07:28:01Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "johanclasson",
                                                                               "createdAt":  "2019-08-22T10:33:08Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "rcbevans",
                                                                               "createdAt":  "2020-02-11T23:47:43Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "gayancc",
                                                                               "createdAt":  "2020-04-15T19:09:25Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  5
                                                         },
                                           "author":  "reddogaw",
                                           "body":  "@natelaff  I\u0027ve seen that there is a `IPolicyEvaluator` interface you can implement (using a base class of `PolicyEvaluator` to make it easier). This will allowed me to redirect the user on the event of a forbidden policy.\r\n\r\nIn the example below, I have the same behaviour for all policies, but you could filter it out to trigger only on a specific policy based on the first parameter.\r\n\r\n    private class RedirectingPolicyEvaluator : PolicyEvaluator\r\n    {\r\n        public RedirectingPolicyEvaluator(IAuthorizationService authorization) : base(authorization)\r\n        {\r\n        }\r\n\r\n        public override async Task\u003cPolicyAuthorizationResult\u003e AuthorizeAsync(AuthorizationPolicy policy, AuthenticateResult authenticationResult, HttpContext context, object resource)\r\n        {\r\n            var result = await base.AuthorizeAsync(policy, authenticationResult, context, resource);\r\n            if (result.Forbidden)\r\n            {\r\n                // If user is authenticated but not allowed, send them to a special error page\r\n                if (context.User.Identity.IsAuthenticated)\r\n                {\r\n                    var urlHelper = context.RequestServices.GetRequiredService\u003cIUrlHelper\u003e();\r\n                    var redirectTo = urlHelper.Action(nameof(HomeController.Unauthorized), \"Home\", new { ReturnUrl = context.Request.GetEncodedUrl() });\r\n\r\n                    // Redirect the user\r\n                    context.Response.Redirect(redirectTo);\r\n\r\n                    // Return success since we\u0027ve handled it now\r\n                    return PolicyAuthorizationResult.Success();\r\n                }\r\n\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n\r\nAnd registered in my `Startup.cs` with:\r\n\r\n            services\r\n                .AddAuthorization()\r\n                .AddScoped\u003cIPolicyEvaluator, RedirectingPolicyEvaluator\u003e()\r\n                ;\r\n",
                                           "updatedAt":  "2018-12-17T01:24:43Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ0NzcyODYwNw==",
                                           "createdAt":  "2018-12-17T05:42:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "JamesNK",
                                           "body":  "@HaoK @rynowak Yo, I think we can close this now that we have `AuthorizationMiddleware` + endpoints + `AuthorizeAttribute`. Is there anything left to do?",
                                           "updatedAt":  "2018-12-17T05:42:39Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ0Nzc0Mzk2NQ==",
                                           "createdAt":  "2018-12-17T07:09:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOAxMySA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "JamesNK",
                                                                               "createdAt":  "2018-12-17T07:19:04Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ZeekoZhu",
                                                                               "createdAt":  "2019-09-24T05:42:09Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "HaoK",
                                           "body":  "This is currently also serving as tracking several other asks we haven\u0027t done yet for AuthZ:\r\n\r\n- Consider supporting OR logic for policies: aspnet/Security#1356\r\n- Consider enabling policies to be defined in configuration\r\n- Make it easier to be able to display authZ failure reasons in an error page etc aspnet/Security#1530\r\n- Make it easier to pass parameters to policies, i.e. aspnet/Security#1689\r\n\r\nWe moved this into backlog in triage last week so I think its safe to just leave this parked there for now",
                                           "updatedAt":  "2018-12-17T07:09:01Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3Mzk0NDQ1Mw==",
                                           "createdAt":  "2019-03-18T14:55:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOA7zIXw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "reecebradley",
                                                                               "createdAt":  "2019-04-15T17:55:19Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "rsc82",
                                                                               "createdAt":  "2019-05-15T03:49:12Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "gore01",
                                                                               "createdAt":  "2019-06-14T14:23:08Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "arufolo",
                                                                               "createdAt":  "2020-02-17T20:43:04Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  4
                                                         },
                                           "author":  "RamunasAdamonis",
                                           "body":  "Is there any progress on custom failure message? Or any official workaround?",
                                           "updatedAt":  "2019-03-18T14:55:32Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5MjYzMzU2Mg==",
                                           "createdAt":  "2019-05-15T12:28:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "rsc82",
                                           "body":  "I too wonder about how to get a custom json body when ForbidResult is called. \r\n\r\nIs there any way to get at the AuthorizationResult(s) later in the pipeline? As far as I can tell it gets swallowed as part of the PolicyEvaluator (line 84 where it calls authorizationService). The following works inside the controller action but it completely bypasses the filters and I really don\u0027t want to go this route. \r\n\r\n```c#\r\n//ControllerAction\r\npublic async Task\u003cIActionResult\u003e GetSomeThing() {\r\n  var a = await this._authorizationService.AuthorizeAsync(User, \"MyPolicy\");\r\n  if (!a.Succeeded)\r\n  {\r\n    return this.StatusCode(403, a.Failure.FailedRequirements);\r\n  }\r\n}\r\n```\r\n\r\nJust putting this out there as part of the conversation, I came across the following issue and being able to map the AuthorizationResult (and FailedRequirements) to a ProblemDetail would be amazing.  \r\nhttps://github.com/aspnet/AspNetCore/issues/10120\r\n\r\n",
                                           "updatedAt":  "2019-05-15T13:26:19Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUxNDQyODI2Ng==",
                                           "createdAt":  "2019-07-24T00:09:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBZJLsw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "TheTechArch",
                                                                               "createdAt":  "2019-10-11T11:01:58Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "luoxlgh",
                                                                               "createdAt":  "2020-11-09T07:04:44Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "madsdj",
                                                                               "createdAt":  "2020-12-07T17:30:51Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "bugnuker",
                                           "body":  "Ping! Any progress on these issues in this ticket? \r\n\r\nI am looking for a solution to obtain the reason an AuthorizationPolicy failed, as in, what Claim or scope was missing or whatever the reason might be for the HTTP 403 when access is denied. I would like to provide a JSON body in the 403 reply with said information. ",
                                           "updatedAt":  "2019-07-24T00:09:49Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUxNDQzMjkwNA==",
                                           "createdAt":  "2019-07-24T00:35:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "reddogaw",
                                           "body":  "@bugnuker As far as I can tell, there\u0027s still no support for specific \"reasons\" why an authorization is marked as Forbidden. However, if your system is relatively simple (e.g. mine is mostly just role based), then you could write a `PolicyEvaluator` (as mentioned above) and look up the existing `policy.Requirements` to attach detail the redirection. For example:\r\n\r\n```\r\n        private class RedirectingPolicyEvaluator : PolicyEvaluator\r\n        {\r\n            internal static object ItemsKey = new object();\r\n\r\n            public RedirectingPolicyEvaluator(IAuthorizationService authorization) : base(authorization)\r\n            {\r\n            }\r\n\r\n            public override async Task\u003cPolicyAuthorizationResult\u003e AuthorizeAsync(AuthorizationPolicy policy, AuthenticateResult authenticationResult, HttpContext context, object resource)\r\n            {\r\n                var result = await base.AuthorizeAsync(policy, authenticationResult, context, resource);\r\n                if (result.Forbidden \u0026\u0026 policy.Requirements.OfType\u003cRolesAuthorizationRequirement\u003e().Any())\r\n                {\r\n                    // If user is authenticated but not allowed, send them to a special error page\r\n                    if (authenticationResult.Succeeded)\r\n                    {\r\n                        // Find all the role name that are required\r\n                        var rolesRequired = policy.Requirements.OfType\u003cRolesAuthorizationRequirement\u003e().SelectMany(r =\u003e r.AllowedRoles).Where(role =\u003e !authenticationResult.Principal.IsInRole(role));\r\n\r\n                        // Get the URL to the help page, with a return url that\u0027s appropriate to the request type\r\n                        var urlHelper = context.RequestServices.GetRequiredService\u003cIUrlHelper\u003e();\r\n                        var returnUrl = context.Request.GetEncodedUrl();\r\n                        if (context.Request.IsAjaxRequest())\r\n                        {\r\n                            returnUrl = FindAjaxRequestReturnUrl(context, urlHelper);\r\n                        }\r\n                        var redirectTo = urlHelper.AbsoluteAction(nameof(HomeController.Unauthorized), \"Home\", new { ReturnUrl = returnUrl, RolesRequired = rolesRequired.ToArray() });\r\n\r\n                        // Store an item in the context\r\n                        context.Items[ItemsKey] = new ForbiddenRequestDetails { RedirectTo = redirectTo, RolesRequired = rolesRequired.ToArray() };\r\n                    }\r\n                }\r\n                return result;\r\n            }\r\n        }\r\n```\r\n\r\nThen I wrapped/adapted the `IAuthenticationService` interface to override what happens for `ForbidAsync` in particular by looking for that `ForbiddenRequestDetails` in the context items:\r\n\r\n```\r\n        private class RedirectingAuthenticationService : IAuthenticationService\r\n        {\r\n            private readonly IAuthenticationService _adaptee;\r\n\r\n            public RedirectingAuthenticationService(IAuthenticationService adaptee)\r\n            {\r\n                _adaptee = adaptee;\r\n            }\r\n\r\n            .... Other methods removed ...\r\n\r\n            public Task ForbidAsync(HttpContext context, string scheme, AuthenticationProperties properties)\r\n            {\r\n                if (context.Items.ContainsKey(RedirectingPolicyEvaluator.ItemsKey))\r\n                {\r\n                    var options = context.Items[RedirectingPolicyEvaluator.ItemsKey] as ForbiddenRequestDetails;\r\n                    var isApi = context.Request.IsAjaxRequest();\r\n                    if (!isApi)\r\n                    {\r\n                        // Redirect the user\r\n                        context.Response.Redirect(options.RedirectTo);\r\n                        return Task.CompletedTask;\r\n                    }\r\n                    else\r\n                    {\r\n                        // Just write some extra stuff to the content body to make it easier\r\n                        var routeData = context.GetRouteData();\r\n                        var actionDescriptor = new ActionDescriptor();\r\n                        var actionContext = new ActionContext(context, routeData, actionDescriptor);\r\n                        var actionResult = new JsonResult(options) { StatusCode = (int)HttpStatusCode.Forbidden };\r\n                        return actionResult.ExecuteResultAsync(actionContext);\r\n                    }\r\n                }\r\n                return _adaptee.ForbidAsync(context, scheme, properties);\r\n            }\r\n     }\r\n```",
                                           "updatedAt":  "2019-07-24T00:35:03Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU0MTAyMTYyOA==",
                                           "createdAt":  "2019-10-11T11:12:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBOlBSw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ybeauchamph",
                                                                               "createdAt":  "2020-04-03T02:31:04Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "allschu",
                                                                               "createdAt":  "2020-06-19T09:49:06Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Vaccano",
                                                                               "createdAt":  "2020-08-26T21:44:54Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "TheTechArch",
                                           "body":  "We are also building a Asp.Net Web application with api controllers with Attribute based authorization and need a way to returm some additional information about the reason why a request was forbidden by the authorization handler The possibility to add a custom header or json body would do a lot for us. ",
                                           "updatedAt":  "2019-10-11T11:12:45Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2OTgzNzc4NA==",
                                           "createdAt":  "2019-12-31T00:42:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "abowen",
                                           "body":  "Also interested in returning a reason as part failing a policy.\r\n\r\nFor anyone else, there is a very dodgy workaround you can use here\r\nhttps://github.com/aspnet/Security/issues/1560#issue-278186113",
                                           "updatedAt":  "2019-12-31T00:43:00Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYzMzk2NTIzNw==",
                                           "createdAt":  "2020-05-26T11:22:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BorisTheBrave",
                                           "body":  "Returning an auth failure reason now seems to be supported thanks to https://github.com/dotnet/aspnetcore/pull/21117 ?",
                                           "updatedAt":  "2020-05-26T11:22:46Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3NDI4OTQyNg==",
                                           "createdAt":  "2020-08-14T22:00:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericsampson",
                                           "body":  "@HaoK @blowdart is there any design progress on allowing the construction of AuthorizationAttributes that make use of resources? Instead of having to fall back on imperative resource-based authorization.\r\nThere\u0027s solutions like [this article](https://undocumented.dev/declarative-resource-based-authorisation-with-asp-net-core/), but the potential disconnect between the self-parsed values out of ActionArguments and what MVC etc ends up binding to makes it way too easy to end up with security issues.\r\nThanks!",
                                           "updatedAt":  "2020-08-14T22:00:23Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3NDMwMzIwMA==",
                                           "createdAt":  "2020-08-14T22:55:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "No there is not. We can\u0027t have model binding before authz, because people do weird things in model binding which can have side effects, which in turn cause security issues. It\u0027s a non-starter.",
                                           "updatedAt":  "2020-08-14T22:55:58Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3NDU4ODEyMw==",
                                           "createdAt":  "2020-08-16T22:52:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "rynowak",
                                           "body":  "Regarding this specifically - it\u0027s possible to access routing\u0027s info in AuthZ with the current layering. So you could figure out the `id` of the item being accessed (in a typical scenario) but without having run any model binding code to turn arbitrary data into arbitrary objects. \r\n\r\nNot sure if this helps 😆 ",
                                           "updatedAt":  "2020-08-16T22:52:52Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0NzM1MTk4NA==",
                                           "createdAt":  "2020-12-17T10:27:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "xMANIGHTx",
                                           "body":  "I\u0027ve seen that permission based authorizations have finally been taken into account, that\u0027s great! May I suggest hierarchial roles (with parent/child) out of the box?\r\nSince 1997 I find myself skipping over the built-in authorization mechanisms,and writing them from scratch, because of missing permission based authorization and parent/child node structure.\r\nKeep up for your great work! Maybe this time migrating do ASP.NET Core I will be able to use the built in provider... this would be a breakthrough for me! Lol",
                                           "updatedAt":  "2020-12-17T10:27:05Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0NzQ3Njc1OQ==",
                                           "createdAt":  "2020-12-17T14:37:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericsampson",
                                           "body":  "@rynowak could you point me towards the doc for doing that when you have a minute sometime? Maybe I\u0027m misunderstanding your suggestion. Thanks so much!!",
                                           "updatedAt":  "2020-12-17T14:37:54Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc3Njg4MTUxNg==",
                                           "createdAt":  "2021-02-10T17:29:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericsampson",
                                           "body":  "@blowdart , I know you\u0027re busy as heck, but do you know what Ryan was referring to here? I can\u0027t figure out what he\u0027s referring to, or find documentation about it. Thanks so much\r\n\r\n\u003e it\u0027s possible to access routing\u0027s info in AuthZ with the current layering. So you could figure out the id of the item being accessed (in a typical scenario) but without having run any model binding code to turn arbitrary data into arbitrary objects.",
                                           "updatedAt":  "2021-02-10T17:29:33Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc3Njg4Mjc4Mw==",
                                           "createdAt":  "2021-02-10T17:31:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "@ericsampson No idea, and he\u0027s moved on from .net. @pranavkm any idea?",
                                           "updatedAt":  "2021-02-10T17:31:30Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc3NjkwMDQ2Nw==",
                                           "createdAt":  "2021-02-10T17:59:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pranavkm",
                                           "body":  "There\u0027s some discussion about it here: https://github.com/dotnet/AspNetCore.Docs/issues/12564\r\n\r\ntl,dr:\r\n\r\n* AuthorizationHandlerContext.Resource is an instance of [`Endpoint`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.http.endpoint?view=aspnetcore-5.0) with endpoint routing. You can use it to inspect static metadata associated with the endpoint: \r\n\r\n```C#\r\nif (context.Resource is Endpoint endpoint)\r\n{\r\n    var controllerActionDescriptor = endpoint.Metadata\r\n        .GetMetadata\u003cControllerActionDescriptor\u003e();\r\n​\r\n    if (controllerActionDescriptor != null)\r\n    {\r\n        // ...\r\n    }\t\r\n}\r\n```\r\n\r\n* You can inject an `IHttpContextAccessor` in to handler to access route values.\r\n\r\n@HaoK to verify if (2) is still the right way to go about this.",
                                           "updatedAt":  "2021-02-10T17:59:59Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc3NzAyNDA2NA==",
                                           "createdAt":  "2021-02-10T20:46:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Right, with the change that passed the Endpoint as the resource, it should be easier to inspect things from the endpoint without needing to rely on the HttpContext.  I\u0027m not sure what (2) is referring to exactly?",
                                           "updatedAt":  "2021-02-10T20:46:38Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc3NzAyODgyNw==",
                                           "createdAt":  "2021-02-10T20:54:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pranavkm",
                                           "body":  "I think (2) is required if you were looking for the `RouteValueDictionary` which is available as a feature on HttpContext. ",
                                           "updatedAt":  "2021-02-10T20:54:17Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc3NzAzMzE1NQ==",
                                           "createdAt":  "2021-02-10T21:01:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericsampson",
                                           "body":  "is any of this documented in the official docs?",
                                           "updatedAt":  "2021-02-10T21:01:29Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc3NzAzNDQ2NA==",
                                           "createdAt":  "2021-02-10T21:04:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Ah yes, due to layering with the core authz layer being lower than Http, the handlers just have get IHttpContextAccessor from DI",
                                           "updatedAt":  "2021-02-10T21:04:00Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc3NzgzODM0NA==",
                                           "createdAt":  "2021-02-11T22:35:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tb-mtg",
                                           "body":  "If possible, how can the example from @pranavkm (which shows **controllerActionDescriptor**), also be used for razor pages, including getting the razor page handler name?\r\n\r\nAlso is there any way to determine the **HttpMethod** (if it was a **GET** or **POST**) via endpoint metadata as opposed using **IHttpContextAccessor**?\r\n\r\n```\r\nif (context.Resource is Endpoint endpoint) {\r\n\r\n  // can PageActionDescriptor be used?\r\n  var pageActionDescriptor = endpoint.Metadata.GetMetadata\u003cPageActionDescriptor\u003e();​\r\n  if (pageActionDescriptor != null) {\r\n    var area = pageActionDescriptor.AreaName;\r\n    var relativePath = pageActionDescriptor.RelativePath;\r\n    var viewEnginePath = pageActionDescriptor.ViewEnginePath;\r\n    var hander = ???;\r\n    var httpMethod = ???;\r\n    // ...\r\n  }\r\n\r\n  // or should CompiledPageActionDescriptor be used?\r\n  var compiledPageActionDescriptor = endpoint.Metadata.GetMetadata\u003cCompiledPageActionDescriptor\u003e();​\r\n  if (compiledPageActionDescriptor != null) {\r\n    var area = compiledPageActionDescriptor.AreaName;\r\n    var relativePath = compiledPageActionDescriptor.RelativePath;\r\n    var viewEnginePath = compiledPageActionDescriptor.ViewEnginePath;\r\n    var hander = ???;\r\n    var httpMethod = ???;\r\n    // ...\r\n  }\r\n\r\n}\r\n```",
                                           "updatedAt":  "2021-02-11T22:35:43Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1MjkzODQ0OA==",
                                           "createdAt":  "2021-06-02T11:11:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jzhouw",
                                           "body":  "AuthorizationFailure.FailedRequirements is empty even AuthorizeAsync result failed? was trying to add customization message based on failed requirements...",
                                           "updatedAt":  "2021-06-02T11:11:39Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3MjExOTAxMg==",
                                           "createdAt":  "2021-07-01T10:23:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCTf3rg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "anderaus",
                                                                               "createdAt":  "2022-03-04T18:19:35Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "dnxit",
                                                                               "createdAt":  "2022-03-17T19:46:16Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "GarvMS",
                                           "body":  "@HaoK Can we add support for populating the failed requirements in case the explicit Fail() was called? We are internally using it since version 2.0.3 but since we are now migrating to .Net Core, thought of asking here if there is anything that is stopping us in terms of design or core principle of Authz? \r\n\r\nLet me know if you want me to raise a PR first and discuss there? ",
                                           "updatedAt":  "2021-07-01T10:23:27Z"
                                       }
                                   ],
                         "totalCount":  46
                     },
        "title":  "Future AuthZ improvements list",
        "labels":  [
                       "Needs: Design",
                       "enhancement",
                       "area-auth",
                       "severity-major",
                       "affected-medium"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/4668",
        "createdAt":  "2017-08-28T18:14:31Z",
        "number":  4668,
        "author":  "syndicatedshannon",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2019-08-16T01:16:18Z",
        "body":  "The current action of IClaimsTransformation provides non-deterministic identity types on IPrincipal. For example, in the simple scenario where cookies are enabled, IClaimsTransformation does not get run if no cookies are present. In previous versions this transform could be relied upon to permit casting identity to a custom type. In Core 2.0 code breaks, and distributing null checks throughout code is necessary again, defeating the purpose of the transformation.\r\n\r\nI\u0027d just like to point out that this is an issue commonly seen on and off in various previous versions of Microsoft\u0027s identity, and from my perspective at this point seems to be a serious regression.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOHxqcUA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDMyNTQzNDg4Mg==",
                                           "createdAt":  "2017-08-28T18:19:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "If you always want your claims transformation to run on the context.User, you can write a ClaimsTransformationMiddleware that always runs the transformation.    ",
                                           "updatedAt":  "2017-08-28T18:19:43Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDMyNTQ3NTU4Nw==",
                                           "createdAt":  "2017-08-28T20:43:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "syndicatedshannon",
                                           "body":  "Do you mean that IClaimsTransformation is operating as intended relative to my reported defect? Can you offer a reference to information on, or direct guidance on, using middleware to solve this problem as you\u0027ve suggested? This example https://github.com/IdentityModel/Thinktecture.IdentityModel/tree/master/source/Owin.ClaimsTransformation has multiple connection points that are invalid.\r\n",
                                           "updatedAt":  "2017-08-28T20:43:34Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDMyNTQ4NDI4Mw==",
                                           "createdAt":  "2017-08-28T21:15:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "```C#\r\npublic class ClaimsTransformationMiddleware\r\n{\r\n    private readonly RequestDelegate _next;\r\n    private readonly IClaimsTransformation _transform\r\n\r\n    public ClaimsTransformationMiddleware(RequestDelegate next, IClaimsTransformation transform)\r\n    {\r\n        _next = next;\r\n        _transform = transform ?? throw new ArgumentNullException(nameof(transform));\r\n    }\r\n\r\n    public async Task Invoke(HttpContext context)\r\n    {\r\n        context.User = await _transform.TransformAsync(context.User);\r\n        await _next(httpContext);\r\n    }\r\n}\r\n\r\n// in configure call:\r\nIApplicationBuilder.UseMiddleware\u003cClaimsTransformationMiddleware\u003e();\r\n```",
                                           "updatedAt":  "2017-08-28T21:15:51Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDMyNTQ4NDk4Nw==",
                                           "createdAt":  "2017-08-28T21:18:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "syndicatedshannon",
                                           "body":  "awesome, thank you HaoK!",
                                           "updatedAt":  "2017-08-28T21:18:29Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDMyNTQ4OTYzNQ==",
                                           "createdAt":  "2017-08-28T21:35:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "syndicatedshannon",
                                           "body":  "Side note, this runs the transformation twice every hit. It gives me the info I need to get everything wired in though. Thank you!",
                                           "updatedAt":  "2017-08-28T21:35:48Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDMyNTYzODk5Mg==",
                                           "createdAt":  "2017-08-29T11:46:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "syndicatedshannon",
                                           "body":  "Also note that Haok\u0027s code depends on injection, so you\u0027ll still need\r\n\r\n`\t\t\tservices.AddSingleton\u003cIClaimsTransformation, CustomClaimTransformer\u003e();\r\n`",
                                           "updatedAt":  "2017-08-29T11:52:23Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDMyNjQ0NTU3OQ==",
                                           "createdAt":  "2017-08-31T23:18:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Eilon",
                                           "body":  "Moving to Backlog because there are no plans to implement this at this time.",
                                           "updatedAt":  "2017-08-31T23:18:57Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDMyNjU2MjI5MA==",
                                           "createdAt":  "2017-09-01T11:58:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SRJames",
                                           "body":  "This might help other people. \r\nI used this approach when setting up CORS and Windows Authentication in Core 2 hosted in IIS with an Angular UI. \r\nI had to enable anonymous access in IIS to allow preflight checks when POSTing from Angular (not 100% sure that is the correct approach). But when anonymous was allowed using services.AddSingleton\u003cIClaimsTransformation, ClaimsTransformer\u003e();   resulted in no calls to ClaimsTransformer.\r\nI got around the double calls by creating my own interface instead of using IClaimsTransformation.",
                                           "updatedAt":  "2017-09-01T11:58:11Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUyMTgzNzY0OA==",
                                           "createdAt":  "2019-08-15T23:59:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "augustoproiete",
                                           "body":  "It would be great to have a way to configure claims transformation to always run, even if the user is not authenticated.\r\n\r\nWhat\u0027s the recommended way (in terms of design) to implement these kind of switches in aspnetcore? I\u0027d be happy to work on a PR.\r\n\r\n---\r\n\r\nFor now, I\u0027m using @HaoK\u0027s workaround via middleware, but only running the claims transformer if the user is *not* authenticated, in order to avoid running it twice as per @syndicatedshannon\u0027s observation.\r\n\r\n#### ClaimsTransformationMiddleware.cs\r\n\r\n```csharp\r\ninternal class ClaimsTransformationMiddleware\r\n{\r\n    private readonly RequestDelegate _next;\r\n    private readonly IClaimsTransformation _transformer;\r\n\r\n    public ClaimsTransformationMiddleware(RequestDelegate next, IClaimsTransformation transformer)\r\n    {\r\n        _next = next;\r\n        _transformer = transformer ?? throw new ArgumentNullException(nameof(transformer));\r\n    }\r\n\r\n    public async Task Invoke(HttpContext httpContext)\r\n    {\r\n        var user = httpContext.User;\r\n\r\n        // IClaimsTransformation only runs on AuthorizeAsync success\r\n        // so we force it to run for users that are not authenticated\r\n        // https://github.com/aspnet/AspNetCore/issues/4668\r\n        if (user?.Identity is null || !user.Identity.IsAuthenticated)\r\n        {\r\n            httpContext.User = await _transformer.TransformAsync(httpContext.User);\r\n        }\r\n\r\n        await _next(httpContext);\r\n    }\r\n}\r\n```\r\n\r\n#### Startup.cs\r\n\r\n```csharp\r\npublic void ConfigureServices(IServiceCollection services)\r\n{\r\n    // ...\r\n\r\n    services.AddSingleton\u003cIClaimsTransformation, CustomClaimsTransformer\u003e();\r\n}\r\n\r\npublic void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n{\r\n    // ...\r\n\r\n    app.UseAuthentication();\r\n    app.UseMiddleware\u003cClaimsTransformationMiddleware\u003e();\r\n    app.UseMvc();\r\n}\r\n```\r\n\r\n#### CustomClaimsTransformer.cs\r\n\r\n```csharp\r\ninternal class CustomClaimsTransformer : IClaimsTransformation\r\n{\r\n    public Task\u003cClaimsPrincipal\u003e TransformAsync(ClaimsPrincipal principal)\r\n    {\r\n        var transformed = new ClaimsPrincipal();\r\n        transformed.AddIdentities(principal.Identities);\r\n        transformed.AddIdentity(new ClaimsIdentity(new Claim[] \r\n        {\r\n            new Claim(\"Transformed\", DateTimeOffset.Now.ToString(CultureInfo.InvariantCulture))\r\n        }));\r\n\r\n        // ... (additional transformations)\r\n\r\n        return Task.FromResult(transformed);\r\n    }\r\n}\r\n```",
                                           "updatedAt":  "2019-08-16T01:16:18Z"
                                       }
                                   ],
                         "totalCount":  9
                     },
        "title":  "IClaimsTransformation \"runs on AuthorizeAsync success\"",
        "labels":  [
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/6001",
        "createdAt":  "2017-08-29T21:55:11Z",
        "number":  6001,
        "author":  "javiercn",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODKch-g==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "xsoheilalizadeh",
                                            "createdAt":  "2019-03-06T06:54:06Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ulrichb",
                                            "createdAt":  "2019-03-19T14:14:52Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "KLuuKer",
                                            "createdAt":  "2019-05-09T08:06:49Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "jotatoledo",
                                            "createdAt":  "2019-07-14T14:22:09Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "KockaAdmiralac",
                                            "createdAt":  "2019-08-16T10:08:35Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "dazinator",
                                            "createdAt":  "2019-11-05T16:09:18Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "onionhammer",
                                            "createdAt":  "2019-11-22T18:35:03Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "gayancc",
                                            "createdAt":  "2019-12-27T10:13:38Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "possibility022",
                                            "createdAt":  "2020-01-26T03:45:08Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "nbarbettini",
                                            "createdAt":  "2020-04-02T13:48:32Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "murbanowicz",
                                            "createdAt":  "2020-04-03T06:52:16Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "zedL",
                                            "createdAt":  "2020-09-22T17:13:49Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "fowl2",
                                            "createdAt":  "2020-10-08T14:12:40Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "meziantou",
                                            "createdAt":  "2020-10-17T14:27:07Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "las3r",
                                            "createdAt":  "2020-10-20T18:02:34Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Zerotask",
                                            "createdAt":  "2020-10-22T09:38:15Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Trivivium",
                                            "createdAt":  "2020-10-23T21:46:36Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "patrick-hintermayer",
                                            "createdAt":  "2020-11-11T19:50:12Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "tjrobinson",
                                            "createdAt":  "2020-12-01T14:48:48Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "jason-sbs",
                                            "createdAt":  "2021-02-03T15:44:44Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "seangwright",
                                            "createdAt":  "2021-06-15T15:12:27Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "keatkeat87",
                                            "createdAt":  "2021-07-01T02:58:31Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Ponant",
                                            "createdAt":  "2021-08-13T14:08:06Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "Ponant",
                                            "createdAt":  "2021-08-13T14:08:10Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "splitt3r",
                                            "createdAt":  "2021-08-20T15:30:02Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "reduckted",
                                            "createdAt":  "2021-08-31T04:34:49Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "beto-rodriguez",
                                            "createdAt":  "2021-09-03T17:18:03Z"
                                        },
                                        {
                                            "content":  "ROCKET",
                                            "user":  "Ponant",
                                            "createdAt":  "2021-09-13T18:49:55Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "indcoder",
                                            "createdAt":  "2021-10-05T11:42:24Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "harvey-k",
                                            "createdAt":  "2021-11-18T01:00:23Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "adrianwright109",
                                            "createdAt":  "2022-01-12T17:25:27Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "msschl",
                                            "createdAt":  "2022-02-12T19:37:28Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "msschl",
                                            "createdAt":  "2022-02-12T19:37:31Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ascott18",
                                            "createdAt":  "2022-07-11T18:53:29Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "304NotModified",
                                            "createdAt":  "2022-07-13T00:09:04Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "yudracheva",
                                            "createdAt":  "2022-12-06T17:06:41Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "michaelmesser",
                                            "createdAt":  "2024-02-15T18:39:18Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "bachratyg",
                                            "createdAt":  "2024-07-31T21:08:31Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "akirayamamoto",
                                            "createdAt":  "2024-11-26T03:39:36Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Frulfump",
                                            "createdAt":  "2025-08-08T12:33:59Z"
                                        }
                                    ],
                          "totalCount":  40
                      },
        "updatedAt":  "2025-08-22T18:01:51Z",
        "body":  "This is a placeholder issue.\r\n\r\nSimilar to the support that we have for CORS in APIs, we should have support for Content Security Policy to make sites safer by default.\r\nSupport for CSP would be policy based, similar to the one we offer for CORS.\r\n\r\n# Usage from middleware\r\n\r\n```C#\r\nConfigureServices(IServiceCollection services)\r\n{\r\n    ...\r\n    services.AddCsp();\r\n    ...\r\n}\r\n```\r\n\r\n```C#\r\nConfigure(IApplicationBuilder app)\r\n{\r\n    ...\r\n    app.UseCsp();\r\n    ...\r\n}\r\n```\r\n\r\n# Usage from MVC\r\n```C#\r\nConfigureServices(IServiceCollection services)\r\n{\r\n    ...\r\n    services.AddMvc(); // Add MVC will call AddCsp similar to what we do for CORS today.\r\n    ...\r\n}\r\n```\r\n\r\n```C#\r\n[EnableCsp]\r\npublic IActionResult Index()\r\n{\r\n    return View();\r\n}\r\n```\r\n\r\nWe will provide a default policy that limits content to your domain, defines best practices for HTTPS and will be set to report-only. This behavior can be switched per endpoint so that you can progressively enforce the policy one endpoint at a time.\r\n\r\n# References\r\n\r\nhttps://en.wikipedia.org/wiki/Content_Security_Policy\r\n\r\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/CSP\r\n\r\nhttps://www.w3.org/TR/CSP2/\r\n\r\nhttp://caniuse.com/#search=content%20security%20policy\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOhsgmHA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQzMDQxNTIwMQ==",
                                           "createdAt":  "2018-10-16T21:55:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "muratg",
                                           "body":  "We\u0027ll need a design for this guys.",
                                           "updatedAt":  "2018-10-16T21:55:48Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQzMDQxNTI0OQ==",
                                           "createdAt":  "2018-10-16T21:56:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "muratg",
                                           "body":  "cc @shirhatti ",
                                           "updatedAt":  "2018-10-16T21:56:01Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQzMTIxNzY1OA==",
                                           "createdAt":  "2018-10-19T01:40:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCmXolg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "sebastienros",
                                                                               "createdAt":  "2018-10-19T03:25:00Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "itsmecurtis",
                                                                               "createdAt":  "2018-11-29T21:28:05Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "AndreiGorlov",
                                                                               "createdAt":  "2019-04-05T08:24:11Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "AndreiGorlov",
                                                                               "createdAt":  "2019-04-08T08:54:04Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "RemiBou",
                                                                               "createdAt":  "2019-05-06T20:45:01Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "maxkuzmin",
                                                                               "createdAt":  "2019-07-02T21:45:03Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "lol768",
                                                                               "createdAt":  "2019-08-31T20:08:28Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "lol768",
                                                                               "createdAt":  "2019-08-31T20:08:29Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "gayancc",
                                                                               "createdAt":  "2019-12-27T10:14:03Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "nbarbettini",
                                                                               "createdAt":  "2020-04-02T13:33:44Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "RedlineTriad",
                                                                               "createdAt":  "2021-09-01T07:05:25Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "304NotModified",
                                                                               "createdAt":  "2022-07-13T00:09:25Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  12
                                                         },
                                           "author":  "jrestall",
                                           "body":  "I created a policy based Content Security Policy library to use on my own sites while waiting for this support in the core libraries. Since content security policy support is now planned for 3.0, it might help you with the design discussion. I also followed your standards on the off chance you could use any of the code for this issue.\r\n\r\n### Code\r\n[Microsoft.AspNetCore.Csp](https://github.com/jrestall/BasicMiddleware/tree/jrestall/csp/src/Microsoft.AspNetCore.Csp)\r\n[Microsoft.AspNetCore.Mvc.Csp](https://github.com/jrestall/BasicMiddleware/tree/jrestall/csp/src/Microsoft.AspNetCore.Mvc.Csp)\r\n\r\n### Samples\r\n[CspSample](https://github.com/jrestall/BasicMiddleware/tree/jrestall/csp/samples/CspSample)\r\n[CspSample.Mvc](https://github.com/jrestall/BasicMiddleware/tree/jrestall/csp/samples/CspSample.Mvc)\r\n\r\n```csharp\r\npublic void ConfigureServices(IServiceCollection services)\r\n{\r\n    services.AddCsp(options =\u003e\r\n    {\r\n        options.AddPolicy(\"Policy1\", policy =\u003e policy\r\n            .AddDefaultSrc(src =\u003e\r\n            {\r\n                src.AllowSchema(CspDirectiveSchemas.Http);\r\n                src.AllowSchema(CspDirectiveSchemas.Https);\r\n                src.AllowSelf();\r\n                src.AllowEval();\r\n                src.AllowHash(\"sha256-qznLcsROx4GACP2dm0UCKCzCG+HiZ1guq6ZZDob/Tng=\");\r\n            })\r\n            .AddScriptSrc(src =\u003e src.AddNonce())\r\n            .AddStyleSrc(src =\u003e src.AddNonce())\r\n            .ReportUri(\"/csp-reports\")\r\n            .ReportTo(\"csp-reports\")\r\n            .AddManifestSrc(src =\u003e\r\n            {\r\n                src.AllowHost(\"http://*.example.com\");\r\n            })\r\n            .ReportOnly()\r\n        );\r\n\r\n        options.AddPolicy(\"Policy2\", policy =\u003e\r\n            policy.AddDefaultSrc(src =\u003e src.AllowNone().AddNonce())\r\n        );\r\n\r\n        options.AddPolicy(\"BetaUsers\", policy =\u003e\r\n            policy.AddDefaultSrc(src =\u003e src.AllowHost(\"beta-testers.example.org\"))\r\n        );\r\n    });\r\n\r\n    services.AddMvc()\r\n        .AddCspReportMediaType();\r\n\r\n    services.AddMvcCore().AddCsp();\r\n\r\n    services.AddScoped\u003cIConfigureOptions\u003cCspOptions\u003e, TrialUserSrc\u003e();\r\n}\r\n\r\npublic class TrialUserSrc :  IConfigureOptions\u003cCspOptions\u003e\r\n{\r\n    public void Configure (CspOptions options)\r\n    {\r\n        if (context.User.HasClaim(c =\u003e c.Type == ClaimTypes.TrialUser))\r\n        {\r\n            var currentPolicy = options.GetPolicy(\"Policy1\");\r\n\t    currentPolicy.Append(policy =\u003e \r\n                policy.AddDefaultSrc(src =\u003e src.AllowHost(\"trial.company.com\"))\r\n            );\r\n        }\r\n    }\r\n}\r\n```\r\n### Configuration with MVC Attributes\r\n- AppendCsp and OverrideCsp are optional attributes that modify the main policy on a per action basis.\r\n```csharp\r\n[EnableCsp(\"Policy1\", \"Policy2\")]\r\n[AppendCsp(\"BetaUsers\", Targets = \"Policy1, Policy2\")]\r\n[OverrideCsp(\"BetaUsers\")]\r\npublic IActionResult EnablePolicy1And2()\r\n{\r\n    ...\r\n}\r\n\r\n[DisableCsp]\r\npublic IActionResult Disabled()\r\n{\r\n    ...\r\n}\r\n```\r\n\r\n### Default Content-Security-Policy\r\nThis is the default policy I\u0027m using:\r\n```csharp\r\n    public class CspOptions\r\n    {\r\n        // Default Content-Security-Policy:\r\n        //     default-src \u0027self\u0027 https:; font-src \u0027self\u0027 https: data:; img-src \u0027self\u0027 https: data:;\r\n        //     object-src \u0027none\u0027; script-src https:; style-src \u0027self\u0027 https: \u0027unsafe-inline\u0027\r\n        private static readonly ContentSecurityPolicy DefaultContentSecurityPolicy\r\n```\r\n\r\n### Tag Helpers\r\n\r\n**CspMetaTagHelper** - Adds the content security policies as meta tags to the page.\r\n\r\n```html\r\n\u003cmeta http-equiv=\"Content-Security-Policy\" /\u003e\r\n```\r\n\r\n**CspNonceTagHelper** - Adds a nonce to script or style tags and automatically ensures a nonce is returned in the HTTP header.\r\n\r\n**CspGenerateHashTagHelper** - Automatically generates hashes for inline scripts and styles and ensures the hashes are in the HTTP header.\r\n\r\n```html\r\n\u003cstyle asp-add-nonce=\"true\" asp-generate-hash=\"true\"\u003e\r\n    p {\r\n        color: #0000ff;\r\n    }\r\n\u003c/style\u003e\r\n\u003cscript asp-add-nonce=\"true\" asp-generate-hash=\"true\" asp-generate-hash-algorithms=\"HashAlgorithms.SHA256 | HashAlgorithms.SHA512\"\u003e\r\n    console.log(\"I\u0027m a script that will be hashed dynamically.\");\r\n\u003c/script\u003e\r\n```\r\n\r\n**CspPluginTypeTagHelper** - Automatically adds the used plugin types to the content security policy.\r\n```html\r\n\u003cembed asp-type=\"application/testplugintype2\" /\u003e\r\n```\r\n\r\n**CspFallBackTagHelper** - Generates CSP hashes for the inline scripts that are generated when using asp-fallback-href or asp-fallback-src.\r\n\r\n**CspSubresourceIntegrityTagHelper** - Automatically generates SRI hashes for the remote scripts using a local fallback script.\r\n\r\n```html\r\n\u003clink href=\"https://ajax.aspnetcdn.com/ajax/bootstrap/4.0.0/css/bootstrap.min.css\" rel=\"stylesheet\"\r\n      asp-fallback-href=\"~/lib/bootstrap/css/bootstrap.min.css\"\r\n      asp-fallback-test-class=\"sr-only\" asp-fallback-test-property=\"position\" asp-fallback-test-value=\"absolute\"\r\n      asp-subresource-integrity=\"true\"\r\n      asp-subresource-integrity-algorithms=\"HashAlgorithms.SHA256 | HashAlgorithms.SHA384 | HashAlgorithms.SHA512\" /\u003e\r\n```\r\n### CSP Report Support\r\n\r\n- CspReportRequest model\r\n\r\n- Added \u0027application/csp-report\u0027 media type support.\r\n\r\n```csharp\r\n/// \u003csummary\u003e\r\n/// Adds the \u0027application/csp-report\u0027 media type to the JSON input formatter so that csp reports can be received.\r\n/// \u003c/summary\u003e\r\n/// \u003cparam name=\"builder\"\u003eThe \u003csee cref=\"IServiceCollection\" /\u003e to add services to.\u003c/param\u003e\r\n/// \u003creturns\u003eThe \u003csee cref=\"IServiceCollection\"/\u003e so that additional calls can be chained.\u003c/returns\u003e\r\npublic static IMvcBuilder AddCspReportMediaType(this IMvcBuilder builder)\r\n```\r\ncc @sebastienros - When this feature lands in 3.0 I\u0027ll implement CSP for Orchard Core :tada: ",
                                           "updatedAt":  "2018-10-19T02:40:21Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQzMTQ0ODEwNA==",
                                           "createdAt":  "2018-10-19T18:01:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOA_7MBg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "pgy866",
                                                                               "createdAt":  "2018-11-03T08:11:13Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jrestall",
                                                                               "createdAt":  "2018-11-13T01:25:44Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "nbarbettini",
                                                                               "createdAt":  "2020-04-02T13:36:52Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "javiercn",
                                           "body":  "@jrestall Your approach is pretty solid. It\u0027s pretty much what I had in mind. I have some ideas on how to better integrate this with Razor, but the foundation is solid.\r\n\r\nThe way I see this, there will be a core library (similar to what we have for CORS) and then some MVC specific glue/enhancements/opinions.\r\n\r\nIn particular, I think it might be better to specify the policy as a Razor directive as its very resource specific. In many actions you don\u0027t have the ability to know what\u0027s going to be rendered. By doing it as a razor directive it can be something that you put on a _viewStart, _viewImports (not really sure which one of them yet) or simply at the start of your page or view. \r\n\r\nThat way the policy lives close to the resources, regarding hashes and things like that I would have to think more about this. One thing that I\u0027m concern is the size of the policy on the header growing to a significant size, so I\u0027m more inclined to use/recommend a different approach where you hoist the inline-scripts into js files for most cases.\r\n\r\nI think that you are on point with the need to append to an initial policy and to completely override it in some cases.\r\n\r\nHaving a default policy is also great, but the default for the system should be to simply report so that you can start changing the code base to enforce the policy.",
                                           "updatedAt":  "2018-10-19T18:01:50Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ1MzY3MzAyNg==",
                                           "createdAt":  "2019-01-11T22:09:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "shirhatti",
                                           "body":  "@mkArtakMSFT @javiercn Is this still happening in 3.0?",
                                           "updatedAt":  "2019-01-11T22:09:48Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3NDM5MDEzMg==",
                                           "createdAt":  "2019-03-19T14:17:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB2Rh_Q==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "johnwc",
                                                                               "createdAt":  "2019-04-30T17:18:55Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "gbjbaanb",
                                                                               "createdAt":  "2019-07-24T14:23:14Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "AFM-Horizon",
                                                                               "createdAt":  "2019-12-02T15:04:30Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "possibility022",
                                                                               "createdAt":  "2020-01-26T03:45:22Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "FarizF",
                                                                               "createdAt":  "2020-07-16T12:18:59Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Ponant",
                                                                               "createdAt":  "2021-08-13T14:09:28Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  6
                                                         },
                                           "author":  "ulrichb",
                                           "body":  "Please don\u0027t forget about the validation summary (inline `style`-element) mentioned in https://github.com/aspnet/AspNetCore/issues/4817#issuecomment-308058241.\r\n\r\nhttps://github.com/aspnet/AspNetCore/blob/bcead68f0cebf53c1c8fe4c1015cc6961f5a757c/src/Mvc/Mvc.ViewFeatures/src/DefaultHtmlGenerator.cs#L24",
                                           "updatedAt":  "2019-03-19T14:18:11Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3NTczOTcyMQ==",
                                           "createdAt":  "2019-03-22T18:51:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCmXosw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "brockallen",
                                                                               "createdAt":  "2019-03-22T21:19:40Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "RemiBou",
                                                                               "createdAt":  "2019-05-06T20:46:14Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jotatoledo",
                                                                               "createdAt":  "2019-07-14T15:15:35Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Ponant",
                                                                               "createdAt":  "2021-08-13T14:09:46Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "304NotModified",
                                                                               "createdAt":  "2022-07-13T00:09:46Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  5
                                                         },
                                           "author":  "chrisdpratt",
                                           "body":  "Interesting that no one has mentioned NWebSec. This library started life adding much needed security enhancements to ASP.NET MVC, and now support ASP.NET Core as well. There\u0027s already a pretty complete CSP implementation here, so at the very least, it might be worth referencing.\r\n\r\nhttps://docs.nwebsec.com/en/latest/nwebsec/libraries.html",
                                           "updatedAt":  "2019-03-22T18:51:46Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4OTc0MDE3Mw==",
                                           "createdAt":  "2019-05-06T19:13:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB2RiRA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Ponant",
                                                                               "createdAt":  "2021-08-13T14:09:58Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "joeaudette",
                                           "body":  "I\u0027m looking forward to this being part of the aspnet core stack as well. I\u0027ve experimented a bit with NWebSec but it seems it has not been updated in over a year, issues go unanswered and even their SSL cert for their website expired in Feb 2019 and they have not done anything about it. Seems like an abandoned project to me. https://www.nwebsec.com/",
                                           "updatedAt":  "2019-05-06T19:13:51Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwNzg1MTExNw==",
                                           "createdAt":  "2020-04-02T13:35:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB2RiWg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jrestall",
                                                                               "createdAt":  "2020-04-24T23:51:30Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Ponant",
                                                                               "createdAt":  "2021-08-13T14:10:04Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "nbarbettini",
                                           "body":  "NWebSec is solid, but as @joeaudette said it\u0027s under-maintained right now. I would love to see something like @jrestall\u0027s approach built in.\r\n\r\nNWebSec puts everything into `Configure`, but it would be easier to compose with things like the Options pattern if configuration happened in `ConfigureServices` like in James\u0027 example.",
                                           "updatedAt":  "2020-04-02T13:37:58Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2ODIzNDg0OA==",
                                           "createdAt":  "2020-08-03T20:50:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "aaronshim",
                                           "body":  "Hi folks,\r\nMy colleague @salcho has been in contact with some of you for adding framework-level support of CSP for ASP.NET. We\u0027ve created #24548 of our proposed changes, so we will welcome any feedback! Thank you!",
                                           "updatedAt":  "2020-08-03T20:50:04Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyMjcwNDg2NQ==",
                                           "createdAt":  "2020-11-05T23:31:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "V4A001",
                                           "body":  "Is this issue included:  validation summary emitting style=\"display:none\".\r\n`[Report` Only] Refused to apply inline style because it violates the following Content\r\n\r\n`\u003cdiv asp-validation-summary=\"All\" class=\"text-danger\"\u003e\u003c/div\u003e\r\n        \u003cdiv class=\"text-danger validation-summary-valid\" data-valmsg-summary=\"true\"\u003e\u003cul\u003e\u003cli style=\"display:none\"\u003e\u003c/li\u003e`",
                                           "updatedAt":  "2020-11-05T23:31:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde841jgz6",
                                           "createdAt":  "2021-08-13T14:35:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Ponant",
                                           "body":  "@javiercn , I do not see a real benefit of having a csp as a directive. Rather, I think it is better to make the templates more Csp compliant for those who already are implementing Csp (with or without a library) and who may find themselves in using unsafe keywords in the Csp directive set:\r\n\r\nOne example is the style in the default generator as mentioned above\r\nhttps://github.com/dotnet/aspnetcore/blob/ff51fd7105a9003841215f1f3b0b8fc9e2998a67/src/Mvc/Mvc.ViewFeatures/src/DefaultHtmlGenerator.cs#L28 \r\n\r\nAnother one is the injection of javascript during development, see @damienbod here https://github.com/dotnet/aspnetcore/issues/34428\r\n\r\nRegarding the library, from my own experience with Csp at least, I see most benefit in having enable/disable attributes, filters and a global Csp/ReportOnly. For Spa\u0027s, I don\u0027t know yet, so probably meta tags with hashes (?).\r\n \r\n",
                                           "updatedAt":  "2021-08-15T14:07:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842WT9t",
                                           "createdAt":  "2021-09-02T15:39:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "misterspeedy",
                                           "body":  "\u003e Please don\u0027t forget about the validation summary (inline `style`-element) mentioned in [#4817 (comment)](https://github.com/dotnet/aspnetcore/issues/4817#issuecomment-308058241).\r\n\r\nNarrator: They *did* forget about it.",
                                           "updatedAt":  "2021-09-02T15:39:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842v3NP",
                                           "createdAt":  "2021-09-13T19:40:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Ponant",
                                           "body":  "I created a library for CSP because we needed it in production apps and existing libraries including NWebsec did not fully fulfill our conditions. It is based on a *pragmatic* and performance-oriented design philosophy which I believe is worth sharing after a brief exchange with @damienbod  here https://github.com/dotnet/aspnetcore/issues/34428. This lead us to introduce the concept of a CSP Policy Group. This class encompasses the `Content-Security-Policy` and `Content-Security-Policy-Report-Only` headers **in one entity**, because they can and should be used in tandem.\r\n\r\nSo I go along by copy pasting some text, and you can get extensive details here\r\nhttps://github.com/Ponant/Galebra.Security/tree/master/src/Galebra.Security.Headers.Csp , in particular the design section, together with a bunch of references. Critics and/or questions are always welcome.\r\n\r\n## Get Started\r\nAll terminology is explained after. The library does not use `EndPoint` routing, so you can invoke the `UseContentSecurityPolicy`\r\nmiddleware before or after `UseRouting`.\r\n\r\n````csharp\r\napp.UseContentSecurityPolicy();\r\n````\r\n\r\nIt can be placed before `UseStaticFiles` if you need CSP headers to be delivered with peculiar content such as `SVG`.\r\n\r\nYou configure CSP via *appsettings.json* or via an `Action` in *Program.cs*.\r\n\r\nWhen using *appsetting.json*:\r\n\r\n````csharp\r\nusing Galebra.Security.Headers.Csp;\r\n\r\nbuilder.Services.AddContentSecurityPolicy(builder.Configuration.GetSection(\"Csp\"));\r\n````\r\nThere are two services registered, a `Singleton`, essentially holding the configuration, and a `Scoped` service for nonce generation.\r\n\r\nIn the following, three policy **groups** are registered:\r\n\r\n````json\r\n  \"Csp\": {\r\n    \"IsDisabled\": false,//default: Will apply the default policy everywhere until overriden by attributes or filters\r\n    \"PolicyGroups\": {\r\n      \"PolicyGroup1\": {\r\n        \"Csp\": {\r\n          \"Fixed\": \"default-src \u0027none\u0027 \u0027sha256-RFWPLDbv2BY+rCkDzsE+0fr8ylGr2R2faWMhq4lfEQc=\u0027;script-src \u0027self\u0027\"\r\n        },\r\n        \"IsDefault\": false,\r\n        \"NumberOfNonceBytes\": 16//default\r\n      },\r\n      \"PolicyGroup2\": {\r\n        \"Csp\": {\r\n          \"Fixed\": \"default-src \u0027self\u0027;base-uri \u0027self\u0027;form-action \u0027self\u0027;object-src;frame-ancestors;connect-src ws://localhost:65412\",\r\n          \"Nonceable\": [\r\n            \"style-src \u0027self\u0027\"\r\n          ]\r\n        },\r\n        \"CspReportOnly\": {\r\n          \"Fixed\": \"default-src;form-action \u0027self\u0027;base-uri;object-src;frame-ancestors;sandbox\",\r\n          \"Nonceable\": [\r\n            \"style-src\",\r\n            \"script-src\"\r\n          ]\r\n        },\r\n        \"IsDefault\": true,//default\r\n        \"NumberOfNonceBytes\": 8\r\n      },\r\n      \"PolicyGroup3\": {\r\n        \"Csp\": {\r\n          \"Nonceable\": [\r\n            \"style-src\"\r\n          ]\r\n        },\r\n        \"IsDefault\": false,\r\n        \"NumberOfNonceBytes\": 3\r\n      }\r\n    }\r\n  },\r\n````\r\n\r\nThe first policy group does not require nonces (hence fixed, see below) and only requires the `Content-Security-Policy` header to be set.\r\nThe second policy group configures the two headers, CSP and CSP-Report-Only, and requires nonces for each of these headers.\r\nThis policy is the default policy, `IsDefault=true`. The `IsDisabled` property in *Line 1* is set to `false` (default),\r\nwhich means that the default policy named *PolicyGroup2* will be applied globally unless overridden by attributes or filters.\r\nThe third policy uses **only** nonces, for styles. The default value for nonce generation is 16 bytes.\r\nWe used `connect-src ws://localhost:65412` in this example to allow `/_framework/aspnetcore-browser-refresh.js` to work properly.\r\nAlso, we disabled CSS Hot Reload in Visual Studio, see https://github.com/dotnet/aspnetcore/issues/36085, to avoid\r\na weak CSP configuration just for development.\r\n\r\nAlternatively, you can configure everything in code:\r\n\r\n````csharp\r\nbuilder.Services.AddContentSecurityPolicy(c =\u003e\r\n{\r\n    c.IsDisabled = false;\r\n    c.Add(\"Policy1\", g =\u003e\r\n    {\r\n        g.Csp.Fixed = \"default-src \u0027self\u0027;connect-src ws://localhost:65412\";\r\n        g.Csp.Nonceable.Add(\"style-src \u0027self\u0027\");\r\n        g.CspReportOnly.Nonceable.Add(\"script-src\");\r\n        g.IsDefault = true;\r\n        g.NumberOfNonceBytes = 32;\r\n    });\r\n    c.Add(\"Policy2\", g =\u003e\r\n    {\r\n        g.Csp.Fixed = \"default-src \u0027self\u0027;connect-src ws://localhost:65412\";\r\n        g.CspReportOnly.Fixed=\"default-src\";\r\n        g.IsDefault = false;\r\n    });\r\n});\r\n````\r\n\r\nAdd nonces to the body by importing the TagHelpers\r\n\r\n````cshtml\r\n@addTagHelper *, Galebra.Security.Headers.Csp\r\n````\r\n\r\nAnd add to **styles, scripts or link tags** the TagHelper:\r\n\r\n````cshtml\r\nnonce-add=true\r\n````\r\n\r\nFor example, for `PolicyGroup3`, that restricts you to use only nonced styles,\r\nyou would allow loading bootstrap like so:\r\n\r\n````cshtml\r\n    \u003clink rel=\"stylesheet\" href=\"~/lib/bootstrap/dist/css/bootstrap.min.css\" nonce-add=true/\u003e\r\n````\r\nAs you may agree, this logical structure actually is powerful.\r\n \r\n## Design Philosophy and introduction\r\n\r\nThe following design principles, detailed below, have been followed:\r\n\r\n* CSP configuration is well suited in *appsettings.json* because you need to store long strings\r\n* Configuration via `Action` should also be possible in *Program.cs*\r\n* Support multiple policies to use in different parts of the website\r\n* Enable and Disable attributes in pages or actions or controllers\r\n* Enable and Disable Filters for folders in razor pages\r\n* Developper provides a default, global policy, and can override\r\n* Possibility to apply the default policy everywhere, and override for parts of the website,\r\nor have no policy applied globally and set them on specific parts only\r\n* Support CSP and a CSP-Report-Only headers simultaneously, each with a different set of policy directives\r\n* Optimize nonce generation for `script`, `style`, and `link` tags\r\n* Use the latest recommendations for [random number generations](https://github.com/dotnet/runtime/issues/40579)\r\n* Optimize string generation for common CSP string lengths\r\n* Add CSP to headers by using the key already existing in `HttpContext` to avoid memory allocation\r\n* Each policy is, at the end, a long string.\r\nThis string can be either static (fixed) or generated newly on each request if nonces are required.\r\n\r\nConsider the following arguments. CSP is a set of two headers, whose names can be:\r\n\r\n* Content-Security-Policy\r\n* Content-Security-Policy-Report-Only\r\n\r\nEach policy in those headers is defined by an ordered set of directives.\r\nEach directive is a name/value pair; name is non-empty, but value may be empty.\r\nFor example, `script-src` is a directive\u0027s *name* and the value can be, for instance, `\u0027self\u0027` or a url or a set of these.\r\nAnother directive can be `default-src \u0027none\u0027`, where `default-src` is another directive name.\r\nThe directives forming a policy are separated by semicolons.\r\nFor this example, the Content Security Policy would be the header:\r\n\r\n````\r\nContent-Security-Policy: default-src \u0027none\u0027;script-src \u0027self\u0027\r\n````\r\n\r\nwhich is equivalent to the shorter version\r\n\r\n````\r\nContent-Security-Policy: default-src;script-src \u0027self\u0027\r\n````\r\n\r\nIn theory, you can have [multiple CSP policies](https://w3c.github.io/webappsec-csp/#multiple-policies) **for the same header name**\r\nin the same response header; however, we believe **this should not be recommended** because it makes your policy more convoluted\r\nand rather highlights a design flaw, notwithstanding that you send more bytes to the user\u0027s browser. Consequently, the library\r\noutputs only one CSP header for a given header name.\r\nIn practice, we assign the value for the header key (name) rather than adding a new item in the dictionary.\r\nThis also has the consequence of efficient write.\r\n\r\nSo, with this library, **you cannot have** the following:\r\n\r\n````\r\nContent-Security-Policy: Policy1\r\nContent-Security-Policy: Policy2\r\n````\r\n\r\n## The CspPolicyGroup class\r\n\r\nHowever, you can have both a CSP and a CSP-Report-Only policy, and usually **this is recommended**.\r\nSome libraries do not support this configuration. This library does. For example **you can do** something like this:\r\n\r\n````\r\nContent-Security-Policy: default-src \u0027self\u0027\r\nContent-Security-Policy-Report-Only: default-src;style-src \u0027self\u0027\r\n````\r\n\r\nIn this scenario, the website would run without issues if, loosely speaking, all styles and scripts are loaded from the server\r\n(`\u0027self\u0027`), but the browser will report to you what would break if you disable scripts (\u0027none\u0027) and other fetch directives,\r\nexcept for styles which use `\u0027self\u0027`.\r\nThus, this allows you to enforce a policy and at the same time fine-tune another one which ultimately will become\r\nthe enforcing policy when you are ready.\r\n\r\nAllowing for both CSP and CSP-Report-Only headers to coexist introduces the `CspPolicyGroup` class.\r\nIt is this group class that you use to configure your policies. This class contains two properties, `Csp` and `CspReportOnly`, each of\r\nwhich is a `CspPolicy` class. You can leave one of these properties empty; for example if you want to have only browser reports,\r\nyou would build only the property `CspReportOnly`.\r\n\r\n## The CspPolicy class and Nonce TagHelper\r\n\r\nThe usual route to library design is to use the so-called fluent-api. This gives elegant code,\r\nbut with CSP this is unnecessary complication and makes your *Program.cs* (or *Startup.cs*) rather long.\r\nIn addition, CSP configuration ultimately boils down to outputting one or two strings in the headers,\r\nplus the possibility of nonces in those headers and pages.\r\nA developer will ultimately look at the CSP output in the browser\u0027s tools\r\nto see if the formatting is as expected and nonces properly generated and positioned.\r\nThere is already a lot of resources and services in the pipeline, so we decided to keep it simple and focus on performance.\r\n\r\nThis led us to the following observation. A CSP header value is **always** divided into two groups.\r\nThe first group is a fixed, possibly empty, string, i.e. a string that *does not change upon requests on a given page*,\r\nand another string that is dynamically generated upon each request to include one or more nonces.\r\nTherefore the `CspPolicy` class has two public properties, a string `Fixed` and a list of strings called `Nonceable`.\r\n\r\nFor example, the policy:\r\n\r\n````\r\ndefault-src;style-src \u0027self\u0027\r\n````\r\n\r\nwould be set as a `CspPolicy.Fixed` string because a nonce is not required. In *appsettings.json*, this would be:\r\n\r\n````json\r\n\"Fixed\": \"default-src;style-src \u0027self\u0027\",\r\n````\r\n\r\nA `sha256-myshacode`, if needed, would be included in the `Fixed` string.\r\n\r\nIf, now, you want to have this policy, but in addition produce a nonce for styles, then you would need to split your string\r\nand populate the `CspPolicy.Nonceable` list. In appsettings.json, the split would be like this:\r\n\r\n````json\r\n\"Fixed\": \"default-src\",\r\n\"Nonceable\": [\r\n\"style-src \u0027self\u0027\"\r\n]\r\n````\r\n\r\nThe `style-src` is here short, but generally is longer to include for example urls from a Bootstrap CDN. The most important is to\r\nidentify the directive\u0027s name, here `style-src`.\r\n\r\nTo use the nonce on the style in this example, you would invoke the Tag Helper `nonce-add`, e.g.\r\n\r\n````cshtml\r\n\u003cstyle nonce-add=true\u003e\r\n.myclass{\r\n    background:lightgreen;\r\n}\r\n\u003c/style\u003e\r\n\u003ch4 class=\"myclass\"\u003eI am lightgreen, thank you nonce!\u003c/h4\u003e\r\n````\r\n\r\nWhen you use a `nonce`, common libraries are confined to the `script` and `style` tags, but `link` tags are also possible.\r\nNonce generation defaults to the spec-recommended 16 bytes, which gives 256^16=2^128 possibilities,\r\nor a 22 long web-encoded base64 string. You can override this with the property `CspPolicyGroup.NumberOfNonceBytes`,\r\ne.g. in appsettings.json, and the nonce will apply to the entire group.\r\n\r\n````json\r\n\"NumberOfNonceBytes\": 8\r\n````\r\n\r\n## Multiple Policies, Attributes, Filters and default CspPolicyGroup\r\n\r\nWhen you implement CSP on a website, often you need several `CspPolicyGroup` objects depending on the page where the user lands.\r\nFor example, you would have a global CSP policy on all pages, but when processing a payment on a page or Razor Pages folder,\r\nor a Controller, you will want another CSP policy (for example to accept connections to a payment API such as PayPal or Stripe).\r\nThis library allows you to configure many policies and invoke them when needed, through attributes and filters.\r\n\r\nWhen you use the library, unless you override the default described below, the default `CspPolicyGroup`\r\nis applied to all pages as soon as you inject the Middleware in the pipeline.\r\n\r\nYou can apply a given policy to an entire Folder in Razor Pages, e.g. in the *Movies* folder:\r\n\r\n````csharp\r\n//Apply on specific folders\r\nbuilder.Services.AddRazorPages(options =\u003e\r\n{\r\n    options.Conventions.AddFolderApplicationModelConvention(\r\n        \"/Movies\",\r\n                model =\u003e model.Filters.Add(new EnableCspPageFilter { PolicyGroupName = \"PolicyGroup1\" }));\r\n});\r\n````\r\n\r\nYou can also disable CSP in a folder:\r\n\r\n````chsarp\r\n model =\u003e model.Filters.Add(new DisableCspPageFilter { EnforceMode = false }));\r\n````\r\n\r\nWhere `EnforceMode` is `true` by default and is discussed below.\r\n\r\nIn areas, you could do something like this:\r\n\r\n````csharp\r\n    options.Conventions.AddAreaFolderApplicationModelConvention(\"Identity\", \"/Account\",\r\n     model =\u003e model.Filters.Add(new EnableCspPageFilter { PolicyGroupName = \"PolicyGroup1\" }));\r\n\r\n    options.Conventions.AddAreaPageApplicationModelConvention(\"Identity\", \"/Account/Manage/ChangePassword\",\r\n        model =\u003e model.Filters.Add(new EnableCspPageFilter { PolicyGroupName = \"PolicyGroup3\" }));\r\n````\r\n\r\nIn a Razor Page or Action or Controller, you can override the default `CspPolicyGroup` with an attribute:\r\n\r\n````csharp\r\n[EnableCsp(PolicyGroupName=\"PolicyGroup1\")]\r\n````\r\n\r\n````csharp\r\n[DisableCsp]\r\n````\r\n\r\nThe `[DisableCsp]` always wins unless you set the `init` property `DisableCsp.EnforceMode` to false.\r\nThe enforcement rule is useful in a scenario where an entire folder or a controller needs to have CSP disabled on all routes\r\nexcept for those where the enable attribute is present. For example, in the following we use the `DisableCspPageFilter`\r\nto disable CSP in the *Movies* folder:\r\n\r\n````csharp\r\nbuilder.Services.AddRazorPages(options =\u003e\r\n{\r\n    options.Conventions.AddFolderApplicationModelConvention(\r\n        \"/Movies\",\r\n    model =\u003e model.Filters.Add(new DisableCspPageFilter { EnforceMode = false }));\r\n});\r\n````\r\nBecause we have set `EnforceMode = false`, we can set CSP on a page inside the *Movies* folder with an attribute,\r\ne.g. in *Movies/index* `[EnableCsp(PolicyGroupName = \"PolicyGroup3\")]`. The same applies for a controller; you would disable CSP\r\nwith `EnforceMode=false` and use the `EnableCsp` attribute on an action:\r\n\r\n````csharp\r\n[DisableCsp(EnforceMode = false)]\r\npublic class BooksController : Controller\r\n{\r\n    public ActionResult Index()\r\n    {\r\n        //CSP is disabled here\r\n        return View();\r\n    }\r\n\r\n    // GET: BooksController/Details/5\r\n    [EnableCsp(PolicyGroupName =\"PolicyGroup3\")]\r\n    public ActionResult Details(int id)\r\n    {\r\n        //CSP works here owing to EnforceMode=false\r\n        return View();\r\n    }\r\n}\r\n````\r\n\r\n## IsDisabled global boolean\r\n\r\nBy default, the library applies the default `CspPolicyGroup` to all delivered pages until overwritten by attributes or filters.\r\nYou can override this global behaviour in *Program.cs* or in *appsettings.json* where you can set at the top level\r\n`\"IsDisabled\": true,`. This will result in CSP not being applied globally, at all, until you invoke it via attributes or filters.\r\n\r\n\r\n\r\n\r\n",
                                           "updatedAt":  "2021-09-13T20:01:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86GyCYc",
                                           "createdAt":  "2024-07-31T19:23:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "niemyjski",
                                           "body":  "This would be really nice to be built in. Two other libraries support this as well https://github.com/andrewlock/NetEscapades.AspNetCore.SecurityHeaders and https://github.com/juunas11/aspnetcore-security-headers",
                                           "updatedAt":  "2024-07-31T19:23:27Z"
                                       }
                                   ],
                         "totalCount":  15
                     },
        "title":  "Add support for content security policy",
        "labels":  [
                       "Needs: Design",
                       "enhancement",
                       "blocked",
                       "area-auth",
                       "severity-minor",
                       "affected-medium"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/4114",
        "createdAt":  "2017-11-16T21:38:37Z",
        "number":  4114,
        "author":  "HaoK",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2020-11-10T23:23:07Z",
        "body":  "So we can point issues like this: https://github.com/aspnet/Security/issues/1543",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "Add auth sample demonstrating how to handle events using the context classes",
        "labels":  [
                       "enhancement",
                       "area-auth",
                       "Samples",
                       "affected-few",
                       "severity-minor"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/4116",
        "createdAt":  "2017-11-20T22:35:47Z",
        "number":  4116,
        "author":  "Tratcher",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2020-11-10T23:23:35Z",
        "body":  "The API key may come from a request header, the path, query, or form field.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "Add API Key auth handler auth sample",
        "labels":  [
                       "task",
                       "area-auth",
                       "Samples",
                       "affected-few",
                       "severity-minor"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/4120",
        "createdAt":  "2017-12-28T16:49:26Z",
        "number":  4120,
        "author":  "Tratcher",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-01-25T07:45:28Z",
        "body":  "Windows Auth only (IIS Express vs httpsys)\r\nWindows Auth + impersonation\r\nWindows Auth + anonymous + cors\r\n\r\nMixed auth:\r\nWindows Auth + anonymous\r\nWindows Auth + bearer for different endpoints or the same endpoint\r\nWindows Auth + remote/cookie auth with selection page or automatic selection\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOS6GSOg==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ0MzIzMzk3OA==",
                                           "createdAt":  "2018-11-30T15:14:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "RobinHoody",
                                           "body":  "Hi @Tratcher, i followed this from https://github.com/aspnet/Security/issues/1653 Do you know if there\u0027s a working sample for this?\r\n\r\nKind regards,\r\n\r\nDave",
                                           "updatedAt":  "2018-11-30T15:14:20Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ0MzI0OTk2MA==",
                                           "createdAt":  "2018-11-30T16:01:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Are you looking for something that\u0027s not covered here: https://docs.microsoft.com/en-us/aspnet/core/security/authentication/windowsauth?view=aspnetcore-2.1?",
                                           "updatedAt":  "2018-11-30T16:01:19Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5ODcxODExNw==",
                                           "createdAt":  "2019-06-04T15:20:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "code2expert",
                                           "body":  "\u003e \r\n\u003e \r\n\u003e Are you looking for something that\u0027s not covered here: https://docs.microsoft.com/en-us/aspnet/core/security/authentication/windowsauth?view=aspnetcore-2.1?\r\n\r\nYes. I am looking to authenticate with windows authentication but using the forms provided for anonymous authentication. I want to be able to control how a user logs into the app even if it\u0027s windows authentication.",
                                           "updatedAt":  "2019-06-04T15:20:29Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5ODczNDk4OA==",
                                           "createdAt":  "2019-06-04T16:00:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "\u003e I am looking to authenticate with windows authentication but using the forms provided for anonymous authentication.\r\n\r\nDo you mean you want them to enter their username and password into your own login form? That\u0027s not a flow we support, nor should you, it\u0027s much weaker than client based windows auth.",
                                           "updatedAt":  "2019-06-04T16:00:39Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5ODgxMTM4Mg==",
                                           "createdAt":  "2019-06-04T19:33:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "code2expert",
                                           "body":  "Thanks Steve, \r\n\r\nWhat I want is to use my form instead of the pop up that comes up at the moment which I have no control over.",
                                           "updatedAt":  "2019-06-04T19:33:46Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5ODgxMzYyOA==",
                                           "createdAt":  "2019-06-04T19:40:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "code2expert",
                                           "body":  "I\u0027ll like to control the login/logout sessions as users are accessing a pc.",
                                           "updatedAt":  "2019-06-04T19:40:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85LnviY",
                                           "createdAt":  "2022-10-05T17:14:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Plan is to write a well commented mixed auth sample and add it to the docs samples",
                                           "updatedAt":  "2022-10-05T17:14:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85LnwIZ",
                                           "createdAt":  "2022-10-05T17:16:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "@Rick-Anderson in terms of process/PR where should a new mixed auth sample go?  Would it be a new app in https://github.com/dotnet/AspNetCore.Docs/tree/main/aspnetcore/common/samples ?",
                                           "updatedAt":  "2022-10-05T17:16:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85LoZI6",
                                           "createdAt":  "2022-10-05T19:40:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Rick-Anderson",
                                           "body":  "\u003e @Rick-Anderson in terms of process/PR where should a new mixed auth sample go? Would it be a new app in https://github.com/dotnet/AspNetCore.Docs/tree/main/aspnetcore/common/samples ?\r\n\r\nhttps://github.com/dotnet/AspNetCore.Docs.Samples/tree/main/common",
                                           "updatedAt":  "2022-10-05T19:40:54Z"
                                       }
                                   ],
                         "totalCount":  9
                     },
        "title":  "Add WindowsAuth samples",
        "labels":  [
                       "task",
                       "Docs",
                       "area-auth",
                       "Samples",
                       "affected-few",
                       "severity-minor"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/4122",
        "createdAt":  "2017-12-28T16:57:23Z",
        "number":  4122,
        "author":  "Tratcher",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-11-27T07:17:50Z",
        "body":  "This is a simplified version of the org auth template using any single remote provider as the sole auth mechanism.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOlTIq_Q==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde86VMir9",
                                           "createdAt":  "2024-11-27T07:17:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "Is this still relevant?",
                                           "updatedAt":  "2024-11-27T07:17:49Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Add sample for single remote auth",
        "labels":  [
                       "task",
                       "area-auth",
                       "Samples",
                       "severity-minor",
                       "affected-medium"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/4115",
        "createdAt":  "2017-12-28T17:01:37Z",
        "number":  4115,
        "author":  "Tratcher",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2020-11-10T23:23:26Z",
        "body":  "This is an expanded version of the single remote provider scenario (https://github.com/aspnet/AuthSamples/issues/16) that includes a login page where you select which provider you want to login with. No Identity is required.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "Add auth sample for multiple remote auths without Identity",
        "labels":  [
                       "task",
                       "area-auth",
                       "Samples",
                       "affected-few",
                       "severity-minor"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/4117",
        "createdAt":  "2017-12-28T17:08:50Z",
        "number":  4117,
        "author":  "Tratcher",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2020-11-10T23:23:48Z",
        "body":  "The auth handlers all have event classes that can be passed in directly or injected via DI. We need samples for the DI scenario.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "Add auth sample for DI event injection",
        "labels":  [
                       "task",
                       "area-auth",
                       "Samples",
                       "severity-minor",
                       "affected-very-few"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/4119",
        "createdAt":  "2017-12-28T17:26:08Z",
        "number":  4119,
        "author":  "Tratcher",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2020-11-10T23:24:01Z",
        "body":  "AzureAd:\r\nhttps://github.com/azure-samples?utf8=%E2%9C%93\u0026q=active-directory+core\u0026type=\u0026language=\r\nhttps://github.com/Azure-Samples/active-directory-dotnet-webapp-webapi-openidconnect-aspnetcore\r\n\r\nIdentityServer: https://github.com/IdentityServer/IdentityServer4.Samples\r\n\r\nOpenIdDict: https://github.com/openiddict/openiddict-samples",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "Add links to external auth samples",
        "labels":  [
                       "task",
                       "area-auth",
                       "Samples",
                       "affected-few",
                       "severity-minor"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/2457",
        "createdAt":  "2018-01-01T21:41:21Z",
        "number":  2457,
        "author":  "aspnet-hello",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC3pRkw==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "jotatoledo",
                                            "createdAt":  "2020-09-28T10:26:59Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "alrz",
                                            "createdAt":  "2022-09-28T19:10:55Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "N0D4N",
                                            "createdAt":  "2023-02-13T15:18:49Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "bachratyg",
                                            "createdAt":  "2024-05-02T22:30:33Z"
                                        }
                                    ],
                          "totalCount":  4
                      },
        "updatedAt":  "2024-03-02T00:17:06Z",
        "body":  "_From @danroth27 on Thursday, September 24, 2015 11:18:42 AM_\r\n\r\nIn ASP.NET 4.6 you can use the Authorization module to handle authorization for static file requests. We need some what to handle authorization for static files in ASP.NET 5.\n\n@blowdart\n\r\n\r\n_Copied from original issue: aspnet/StaticFiles#70_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOSxwq3g==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM1NDY3OTE3Mg==",
                                           "createdAt":  "2018-01-01T21:41:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "aspnet-hello",
                                           "body":  "_From @blowdart on Thursday, September 24, 2015 11:21:47 AM_\r\n\r\nMy feeling here is we don\u0027t want yet another middleware for this. The Static File middleware should detect the authorization service and enable configuration of policies by path, file type, regex (_kidding - NO REGEX_) or whatever other filtering mechanism they wish to implement.\n\nPushing responsibility off to another middleware, which then becomes order dependent is a path of failure and undiscoverable for most users.\n",
                                           "updatedAt":  "2018-01-01T21:41:22Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM1NDY3OTE3Ng==",
                                           "createdAt":  "2018-01-01T21:41:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "aspnet-hello",
                                           "body":  "_From @longday24 on Saturday, April 9, 2016 6:51:53 AM_\r\n\r\nWhat if UseStaticFiles() excepted optional string param of a named authorizationPolicy when passing requestpath?\n\n`public void ConfigureServices(IServiceCollection services)\n{\n    services.AddAuthentication();\n    services.AddAuthorization(options =\u003e\n    {\n        options.AddPolicy(\"Authenticated\", policy =\u003e policy.RequireAuthenticatedUser());\n    });\n}`\n\nusage would be something like `.UseStaticFiles(\"requestPath\", \"Authenticated\");`\n",
                                           "updatedAt":  "2018-01-01T21:41:24Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM1NDY3OTE3OA==",
                                           "createdAt":  "2018-01-01T21:41:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "aspnet-hello",
                                           "body":  "_From @kyse on Thursday, June 29, 2017 1:59:57 PM_\r\n\r\nJust to push this along figured I\u0027d throw this out there.\r\n\r\nCreate a StaticFileAuthorizationRequirement file that inherits IAuthorizationRequirement for developers to build AuthorizationHandleres against.  Not essential, we can realistically pass in any requirement in updated options, there\u0027s not really a need for injecting anything specific to this library to the requirement except for is it authorizing a directory browser or static file request, which can just be checked against the context.Resource parameter in the handler.\r\n\r\nUpdate SharedOptions and SharedOptionsBase to provide IEnumerable\u003cstring\u003e AuthenticationSchemes, IEnumerable\u003cIAuthorizationRequirement\u003e AuthorizationRequirements, and bool AllowAnonymous properties.\r\n\r\nIn Helpers.cs:\r\n```c#\r\n        internal static bool IsAuthenticated(this HttpContext context, SharedOptionsBase options)\r\n        {\r\n            if (options.AllowAnonymous)\r\n                return true;\r\n\r\n            var authSchemes = options.AuthenticationSchemes ?? context.Authentication.GetAuthenticationSchemes().Select(desc =\u003e desc.AuthenticationScheme).ToArray();\r\n\r\n            foreach (var authScheme in authSchemes)\r\n            {\r\n                var cp = context.Authentication.AuthenticateAsync(authScheme).Result;\r\n                if (cp == null) continue;\r\n                context.User = cp;\r\n                break;\r\n            }\r\n            return (context.User != null \u0026\u0026 context.User.Identity.IsAuthenticated);\r\n        }\r\n\r\n        internal static bool IsAuthorized(this HttpContext context, ILibrary library, SharedOptionsBase options)\r\n        {\r\n            return options.AllowAnonymous ||\r\n                   !options.AuthorizationRequirements.Any() ||\r\n                   context.RequestServices.GetService\u003cIAuthorizationService\u003e().AuthorizeAsync(context.User, library, options.AuthorizationRequirements).Result;\r\n        }\r\n```\r\n\r\nIn the directory browser and static file middleware, update body to include calls to authenticate and authorize.\r\nDirectoryBrowserMiddleware:\r\n```c#\r\n            if (!context.IsAuthenticated(_options))\r\n            {\r\n                context.Response.StatusCode = 401;\r\n                return Constants.CompletedTask;\r\n            }\r\n\r\n            if (!context.IsAuthorized(library, _options))\r\n            {\r\n                context.Response.StatusCode = 403;\r\n                return Constants.CompletedTask;\r\n            }\r\n```\r\n\r\nStaticFileMiddleware:\r\n```c#\r\n            else if (!fileContext.LookupFileInfo())\r\n            {\r\n                _logger.LogFileNotFound(fileContext.SubPath);\r\n            }\r\n            else\r\n            {\r\n                if (!context.IsAuthenticated(_options))\r\n                {\r\n                    _logger.LogNotAuthenticated(fileContext.Library.Name, fileContext.SubPath);\r\n                    return fileContext.SendStatusAsync(Constants.Status401NotAuthenticated);\r\n                }\r\n                if (!context.IsAuthorized(fileContext.Library, _options))\r\n                {\r\n                    _logger.LogNotAuthorized(fileContext.Library.Name, fileContext.SubPath);\r\n                    return fileContext.SendStatusAsync(Constants.Status403NotAuthorized);\r\n                }\r\n```\r\n\r\nUpdate logger to expose authenticated and authorized logging templates, as well as Constants to include the two additional status codes.\r\n\r\nStaticFileAuthorizationHandler : AuthorizationHandler\u003cStaticFileAuthorizationRequirement\u003e can be defined to parse against the ClaimsPrincipal or even an injected DB context (however you want to setup your handler) for authorizing the static file request.\r\n\r\nI further updated my customization to build this out based on entries my DB for ILibrary, thus I can define a LibraryServer with an endpoint of library, and it parses libraries and generates PhysicalFileProvider and serves the Path for the libraries exposed based on authentication and authorization.  Since this library treats each instance as a single path there\u0027s on need for that and would probably be best for this repo to instead utilize the authorization handler to treat the resource as the type of request being authorized, ie allow viewing the directory browser, or allow grabbing the static file.\r\n\r\nThen you can just allow the developer to add in the auth requirements as desired:\r\n```c#\r\n            app.UseLibraryServer(new LibraryServerOptions\r\n            {\r\n                RequestPath = new PathString(\"/Library\"),\r\n                PathProvider = dbContextOrRepositoryOrServiceInheritingILibraryPathProvider,\r\n                AuthenticationSchemes = new List\u003cstring\u003e { CookieAuthenticationDefaults.AuthenticationScheme },\r\n                AuthorizationRequirements = new List\u003cIAuthorizationRequirement\u003e { new LibraryAuthorizationRequirement() },\r\n                LibraryFileOptions =\r\n                {\r\n                    ServeUnknownFileTypes = true\r\n                }\r\n            });\r\n```\r\nObviously in that example I\u0027m also providing a PathProvider for my db library entities that is out of scope of this post.  But you could pass AllowAnonymous = true, or pass in desired authentication schemes to target or against any defined, and any specific requirements.  Probably best to further expand it to allow just providing a policy name instead.\r\n\r\nI could probably put together a pull request if you like this direction without the dynamic sub path options.  Biggest question would be is it worth while to provide a base requirement class or just let the developer define their own.",
                                           "updatedAt":  "2018-01-01T21:41:25Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM2MzM1NzE1Mg==",
                                           "createdAt":  "2018-02-06T09:08:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lumogox",
                                           "body":  "Any updates on this? @aspnet-hello ",
                                           "updatedAt":  "2018-02-06T09:09:14Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM3MDA5ODE0OQ==",
                                           "createdAt":  "2018-03-03T00:38:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "muratg",
                                           "body":  "@blowdart What\u0027s your current thoughts on this?",
                                           "updatedAt":  "2018-03-03T00:38:40Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM3MDEwNTc5OA==",
                                           "createdAt":  "2018-03-03T01:48:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBRszew==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jotatoledo",
                                                                               "createdAt":  "2020-09-28T10:26:43Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "blowdart",
                                           "body":  "How about the same way you handled razor pages, with paths in the config?",
                                           "updatedAt":  "2018-03-03T01:48:27Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM3MDUxOTQ5Mg==",
                                           "createdAt":  "2018-03-05T18:40:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "muratg",
                                           "body":  "Tentatively putting into the next milestone.",
                                           "updatedAt":  "2018-03-05T18:40:24Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM3MDUyMTI5MQ==",
                                           "createdAt":  "2018-03-05T18:46:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kyse",
                                           "body":  "FYI, in the mean time.  You could make use of this to achieve auth on static files.\r\nhttps://github.com/kyse/Kyse.AspNetCore.StaticLibrary",
                                           "updatedAt":  "2018-03-05T18:46:07Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM4MzE4NjU4MQ==",
                                           "createdAt":  "2018-04-20T18:41:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Here\u0027s a sample showing how to do AuthN and AuthZ for static files as a middleware on a pipeline branch: \r\nhttps://github.com/aspnet/AuthSamples/blob/c7bb6607307072f6e098d0e4a2c9fa7e6d017916/samples/StaticFilesAuth/Startup.cs#L120-L134\r\n\r\nThis isn\u0027t ideal, we should still figure out how to integrate this as a first class citizen.\r\n\r\nI also tried writing a sample using MVC\u0027s Authorize features, but MVC does not provide good handling for serving static files, directory browsing, default files, etc... See the discussion at https://github.com/aspnet/AuthSamples/pull/37.",
                                           "updatedAt":  "2018-04-20T18:41:06Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ1MzY3MDYwNg==",
                                           "createdAt":  "2019-01-11T21:59:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "shirhatti",
                                           "body":  "@Tratcher In 3.0, should we rewrite static files as an end-ware? That should solve this problem",
                                           "updatedAt":  "2019-01-11T21:59:40Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ1MzY3MTE0Mg==",
                                           "createdAt":  "2019-01-11T22:01:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "@shirhatti it\u0027s worth a try. You\u0027d still need a way to mark files as requiring authorization policies though.",
                                           "updatedAt":  "2019-01-11T22:02:07Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwMTQ1NjIwNA==",
                                           "createdAt":  "2019-06-12T21:08:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBRsw3A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ericop",
                                                                               "createdAt":  "2019-06-27T18:44:11Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "kaylumah",
                                                                               "createdAt":  "2019-09-03T09:11:05Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "damianog",
                                                                               "createdAt":  "2019-12-26T10:20:31Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jotatoledo",
                                                                               "createdAt":  "2020-09-28T10:19:21Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  4
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "@rynowak are StaticFiles endpoints still on your list?",
                                           "updatedAt":  "2019-06-12T21:08:45Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5OTk0Mzc5Nw==",
                                           "createdAt":  "2020-09-28T11:17:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jotatoledo",
                                           "body":  "Up, any updates related to this?",
                                           "updatedAt":  "2020-09-28T11:17:34Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcwMDExNjI2Nw==",
                                           "createdAt":  "2020-09-28T15:45:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBRwHKg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jotatoledo",
                                                                               "createdAt":  "2020-09-28T17:42:12Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Only some updated guidance docs:\r\nhttps://docs.microsoft.com/en-us/aspnet/core/fundamentals/static-files?view=aspnetcore-3.1#static-file-authorization",
                                           "updatedAt":  "2020-09-28T15:45:55Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcwMDIwNjk2Ng==",
                                           "createdAt":  "2020-09-28T18:30:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alrz",
                                           "body":  "I made a custom endpoint pipeline with static file middleware. A few things to consider:\r\n\r\n- Make sure to reset endpoint to null\r\n- Pass an identical route to both RequestPath and Map\r\n\r\nThis has a tradeoff of matching the route twice (via endpoint and the middleware itself). You could manually set Path instead but it causes issues hard to diagnose.",
                                           "updatedAt":  "2020-09-28T18:30:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85LHCre",
                                           "createdAt":  "2022-09-27T22:26:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `.NET 8 Planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2022-09-27T22:26:07Z"
                                       }
                                   ],
                         "totalCount":  16
                     },
        "title":  "Need a way to handle authorization for static files",
        "labels":  [
                       "Needs: Design",
                       "enhancement",
                       "feature-static-files",
                       "area-auth",
                       "affected-few",
                       "severity-minor"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/19730",
        "createdAt":  "2018-01-29T19:14:55Z",
        "number":  19730,
        "author":  "Tratcher",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2020-11-10T23:29:36Z",
        "body":  "The Security repo has some of our only first party usage of HttpClient. We should try using HttpClientFactory there and see if it makes sense.\r\n\r\n@glennc ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOGjOBuQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM2MjQyMzUzNw==",
                                           "createdAt":  "2018-02-01T22:28:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "glennc",
                                           "body":  "Is it extensible enough today that you could use the factory if you wanted to? Like giving security libraries a delegate or HTTPClient instance that they use instead of creating it themselves.",
                                           "updatedAt":  "2018-02-01T22:28:35Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM2MjQyNTY4Nw==",
                                           "createdAt":  "2018-02-01T22:37:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "You can give it a handler or client in the options at startup, not per request.",
                                           "updatedAt":  "2018-02-01T22:37:45Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQzOTU3MTQ2Mw==",
                                           "createdAt":  "2018-11-17T00:49:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "poke",
                                           "body":  "Just saw this due to the transfer, I assume that we don’t need any more prototyping for the HttpClientFactory now, given that it’s already out for quite a while now.\r\n\r\nBut do we then want to attempt to migrate some of the client usages within the Security repo to use this?",
                                           "updatedAt":  "2018-11-17T00:49:27Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQzOTU4MzE2MQ==",
                                           "createdAt":  "2018-11-17T03:10:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "It would still be interesting to try using the client factory in the auth providers.",
                                           "updatedAt":  "2018-11-17T03:10:27Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "Use HttpClientFactory in Auth Providers",
        "labels":  [
                       "enhancement",
                       "area-auth",
                       "severity-minor",
                       "affected-medium"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/4659",
        "createdAt":  "2018-04-01T00:20:07Z",
        "number":  4659,
        "author":  "D3MaxT",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODI6s7Q==",
                          "nodes":  [
                                        {
                                            "content":  "EYES",
                                            "user":  "msschl",
                                            "createdAt":  "2022-05-30T08:53:46Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "msschl",
                                            "createdAt":  "2022-05-30T08:53:53Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "msschl",
                                            "createdAt":  "2022-05-30T08:53:55Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "MarioGruda",
                                            "createdAt":  "2022-11-24T09:49:08Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "andi0b",
                                            "createdAt":  "2023-02-01T21:19:37Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "guillaume86",
                                            "createdAt":  "2023-03-30T13:05:55Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ricsv",
                                            "createdAt":  "2023-08-01T18:12:38Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "OsmanMElsayed",
                                            "createdAt":  "2023-12-04T17:08:10Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "svilenstefanov",
                                            "createdAt":  "2024-01-23T12:20:42Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "spaasis",
                                            "createdAt":  "2024-05-07T06:11:33Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "bdsWind",
                                            "createdAt":  "2024-06-28T08:10:22Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Trivivium",
                                            "createdAt":  "2025-07-22T12:53:36Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "3breadt",
                                            "createdAt":  "2025-07-29T09:04:57Z"
                                        }
                                    ],
                          "totalCount":  13
                      },
        "updatedAt":  "2023-09-11T17:07:13Z",
        "body":  "There is a default endpoint for front-channel signout: signout-oidc\r\n\r\nIs there a plan to include a similar endpoint for back-channel signout in 2.1 release?\r\nSpec: http://openid.net/specs/openid-connect-backchannel-1_0.html\r\n\r\nThank you.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOZi23ng==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM3NzczMzYxMA==",
                                           "createdAt":  "2018-04-01T00:34:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOAUpDxw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "D3MaxT",
                                                                               "createdAt":  "2018-04-01T01:56:02Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "No plans for this at the moment, most 2.1 feature work is already done.\r\n\r\nThe middleware couldn\u0027t implement a back channel by itself. The front channel sign out removes the user\u0027s cookie. The back channel couldn\u0027t, it would have to track sessions and invalidate them so that next time the user presents the cookie it would be rejected. Identity has features like this but it requires plugging into the cookie auth handler to enforce them.",
                                           "updatedAt":  "2018-04-01T00:34:32Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM3NzczNjkzNw==",
                                           "createdAt":  "2018-04-01T01:55:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "D3MaxT",
                                           "body":  "Thank you for the response.",
                                           "updatedAt":  "2018-04-01T01:55:54Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM3NzczNzM2Ng==",
                                           "createdAt":  "2018-04-01T02:05:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODOb26Q==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "D3MaxT",
                                                                               "createdAt":  "2018-04-01T02:29:23Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "roblapp",
                                                                               "createdAt":  "2018-04-13T09:18:30Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "OsmanMElsayed",
                                                                               "createdAt":  "2023-12-04T17:09:17Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "brockallen",
                                           "body":  "We have a super simple sample that shows mechanics here: https://github.com/IdentityServer/IdentityServer4.Samples/tree/release/Clients/src/MvcHybridBackChannel",
                                           "updatedAt":  "2018-04-01T02:05:36Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM3NzczODMyNw==",
                                           "createdAt":  "2018-04-01T02:29:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "D3MaxT",
                                           "body":  "Awesome!\r\nThank you Brock!",
                                           "updatedAt":  "2018-04-01T02:29:43Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM3OTM5OTkzNg==",
                                           "createdAt":  "2018-04-06T22:19:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOAU7D9A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "D3MaxT",
                                                                               "createdAt":  "2018-04-07T05:30:12Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "Eilon",
                                           "body":  "Parking in Backlog until we see sufficient interest in this. This would be a fairly costly feature for us to implement.",
                                           "updatedAt":  "2018-04-06T22:19:57Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUyNzc2NjM5Mw==",
                                           "createdAt":  "2019-09-04T06:45:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "LindaLawton",
                                           "body":  "@brockallen  this link is dead do you have an updated link?",
                                           "updatedAt":  "2019-09-04T06:45:50Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUyNzc4MzUxNg==",
                                           "createdAt":  "2019-09-04T07:42:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "damienbod",
                                           "body":  "@LindaLawton \r\n\r\nexample is here now\r\n\r\nhttps://github.com/IdentityServer/IdentityServer4/tree/master/samples/Clients/src/MvcHybridBackChannel\r\n",
                                           "updatedAt":  "2019-09-04T07:42:10Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgwODIwOTkxOA==",
                                           "createdAt":  "2021-03-26T13:21:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODno0cg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "MoishyS",
                                                                               "createdAt":  "2021-12-15T00:46:10Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "leftnet",
                                                                               "createdAt":  "2022-05-10T23:23:32Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "andi0b",
                                                                               "createdAt":  "2023-02-01T21:24:26Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "bdsWind",
                                                                               "createdAt":  "2024-06-28T08:10:49Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  4
                                                         },
                                           "author":  "daiplusplus",
                                           "body":  "I feel this issue should be raised in priority and severity as recent - and still upcoming (as of Q1 2021) - changes to browser handling of third-party cookies will effectively break front-channel OIDC operations, e.g. https://leastprivilege.com/2020/03/31/spas-are-dead/ and https://auth0.com/blog/browser-behavior-changes-what-developers-need-to-know/ so there is a pressing need for built-in support for OIDC\u0027s back-channel - or at least to make it easier to implement (as well as documentation and guidance for how to handle OIDC back-channel in web-farm situations).\r\n\r\nThere are workarounds: Edge, Safari and Firefox both support [the Storage Access API](https://webkit.org/blog/11545/updates-to-the-storage-access-api/) which allow nested third-party iframes to access their own cookies - but only after user-interaction with the nested iframe (e.g. a \"click here to also log-out of RP website\", so it isn\u0027t a graceful user-experience, but better than the user thinking they are logged-out of other websites) - curiously, Chrome doesn\u0027t support it. \r\n\r\n",
                                           "updatedAt":  "2021-03-26T13:22:34Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgwODMxNjk1Mg==",
                                           "createdAt":  "2021-03-26T15:37:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brockallen",
                                           "body":  "Coincidentally we made an announcement today about a new OSS library to address this scenario: https://blog.duendesoftware.com/posts/20210326_bff/",
                                           "updatedAt":  "2021-03-26T15:37:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85GPjeP",
                                           "createdAt":  "2022-07-08T02:50:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jdaigle",
                                           "body":  "Maybe the handler could simply handle and validate the backchannel logout request, but then raise an event to be implemented by the application in whatever way it needs?",
                                           "updatedAt":  "2022-07-08T02:50:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85JpX1S",
                                           "createdAt":  "2022-09-02T14:37:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODGaY8g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "andi0b",
                                                                               "createdAt":  "2023-09-11T17:00:15Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "raffaeler",
                                           "body":  "I would really love to see this. The ability to forcibly logout a user is mandatory in many enterprise apps and a requirement in certain GDPR-related scenarios.\r\n\r\nBTW the current documentation is missing some details on what is exactly supported or not for the back-channel.\r\n",
                                           "updatedAt":  "2022-09-02T14:37:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85QEHuU",
                                           "createdAt":  "2022-12-08T19:34:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODJbwDA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "raffaeler",
                                                                               "createdAt":  "2022-12-08T19:39:39Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "MoishyS",
                                                                               "createdAt":  "2022-12-09T00:53:46Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "oleks9o6",
                                                                               "createdAt":  "2023-01-20T14:53:03Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jokk-itu",
                                                                               "createdAt":  "2023-03-12T15:26:19Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "timeshift92",
                                                                               "createdAt":  "2023-03-13T06:59:58Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "guillaume86",
                                                                               "createdAt":  "2023-03-30T13:05:18Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ricsv",
                                                                               "createdAt":  "2023-08-01T18:12:43Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Smith00101010",
                                                                               "createdAt":  "2023-10-12T11:50:34Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  8
                                                         },
                                           "author":  "frederikprijck",
                                           "body":  "With the spec having reached a final stage, are there any changes to what\u0027s been mentioned by @Eilon [before](https://github.com/dotnet/aspnetcore/issues/4659#issuecomment-379399936) regarding prioritisation?\r\n\r\nLooking at the issue here, I wouldn\u0027t say there\u0027s a significant increase in interest.\r\n\r\nHowever, with the spec having reached its final state, and IDP\u0027s starting to consider implementing this, it might be helpful to know if there are any short-term plans to have built-in support for back-channel logout in `Microsoft.AspNetCore.Authentication.OpenIdConnect`.",
                                           "updatedAt":  "2022-12-08T19:34:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Y08Au",
                                           "createdAt":  "2023-03-30T13:06:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODNyVig==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "andi0b",
                                                                               "createdAt":  "2023-11-28T10:28:16Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "guillaume86",
                                           "body":  "Any progress/timeline on this? ",
                                           "updatedAt":  "2023-03-30T13:06:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85mLbee",
                                           "createdAt":  "2023-09-11T17:07:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODnoXoA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "raffaeler",
                                                                               "createdAt":  "2023-09-11T17:25:57Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ChienNQuang",
                                                                               "createdAt":  "2023-11-26T12:45:28Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "svilenstefanov",
                                                                               "createdAt":  "2024-01-23T12:20:51Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Sealia",
                                                                               "createdAt":  "2024-06-28T07:08:02Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  4
                                                         },
                                           "author":  "andi0b",
                                           "body":  "\u003eParking in Backlog until we see sufficient interest in this. This would be a fairly costly feature for us to implement.\r\n\r\nIt surprising this is still missing. Backchannel log out is quite a basic OIDC feature, and it should not be a big effort implementing this.\r\n\r\nFront channel log out is already implemented, so all the required information is there. Instead of issuing a redirect to the IDP the same information just needs to be sent via a backchannel request. A method for backchannel communication is also already there for the token request. It just needs to be put together and tested.\r\n\r\nIt may even be possible to hack it into the `options.Events.OnRemoteSignOut` callback in a few lines of code. Need to look into it once.",
                                           "updatedAt":  "2023-09-11T17:07:12Z"
                                       }
                                   ],
                         "totalCount":  14
                     },
        "title":  "Back-channel logout support for OpenIdConnect?",
        "labels":  [
                       "enhancement",
                       "area-auth",
                       "affected-few",
                       "severity-minor"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/4126",
        "createdAt":  "2018-04-11T01:40:39Z",
        "number":  4126,
        "author":  "HaoK",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2020-05-10T14:39:16Z",
        "body":  "See https://github.com/aspnet/Security/issues/1718 for more context",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOJVTf-A==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM5MDA4Mzc1OQ==",
                                           "createdAt":  "2018-05-18T03:29:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "aagarwal10",
                                           "body":  "hi @HaoK - I have scenario of multi-tenant auth, where I need to dynamically add OAuth2 Scheme based on tenant (each tenant has its own OAuth Options) and wire it with cookie scheme for my aspnet core web app (not implemented with any Javascript framework). Please suggest if this is possible with these auth samples. Thanks",
                                           "updatedAt":  "2018-05-18T03:29:57Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM5MDA5MTYzNg==",
                                           "createdAt":  "2018-05-18T04:34:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Try doing something like this sample https://github.com/aspnet/AuthSamples/pull/44",
                                           "updatedAt":  "2018-05-18T04:34:05Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM5MDg1MjMzNA==",
                                           "createdAt":  "2018-05-22T03:34:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "aagarwal10",
                                           "body":  "@HaoK - Is it also possible to add Auth Handler dynamically, similar to adding/removing auth scheme from a controller?\r\n\r\nfor example in a controller action method, can we do something like?\r\n\r\n.AddScheme\u003cSimpleOptions, SimpleAuthHandler\u003e(\"fromAction\", o =\u003e o.DisplayMessage = \"I am from controller action.\") \r\n\r\nAlso, even if this possible, how can this whole dynamic auth handler registration via action method be done for application running in a web farm. \r\n\r\nActually I have a case where a tenant gets dynamically registered to the web application passing there OAuth Options on the fly. This is scenario of SMART on FHIR (HL7 Standard)",
                                           "updatedAt":  "2018-05-22T03:34:57Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM5MDg1NTMyNA==",
                                           "createdAt":  "2018-05-22T03:57:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Yes, you can just use the IAuthenticationSchemeProvider and call AddScheme, but you would probably have to have your implementation of this use some kind of shared data store backing the implementation to make them consistent across the web farm.",
                                           "updatedAt":  "2018-05-22T03:57:34Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM5MzcyMjIxNw==",
                                           "createdAt":  "2018-06-01T00:21:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "aagarwal10",
                                           "body":  "@HaoK -- So I am trying to get PostConfigureOptions going my \"SimpleOptions\" by registering like this;\r\n\r\n ```csharp\r\n  public void ConfigureServices(IServiceCollection services)\r\n        {\r\n             services.AddAuthentication();\r\n\r\n            services.AddSingleton\u003cIAuthenticationSchemeProvider, CustomAuthenticationSchemeProvider\u003e();\r\n            services.TryAddEnumerable(ServiceDescriptor.Singleton\u003cIPostConfigureOptions\u003cSimpleOptions\u003e, SimpleOptionsPostConfigureOptions\u003cSimpleOptions, SimpleAuthHandler\u003e());\r\n\r\n            services.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_1);\r\n        } \r\n```\r\n\r\nBut the PostConfigure method in my SimpleOptionsPostConfigureOptions never hits ?\r\n\r\nhere is my SimpleOptionsPostConfigureOptions class, Please suggest whats missing;\r\n\r\n ```csharp\r\npublic class SimpleOptionsPostConfigureOptions\u003cSimpleOptions, SimpleAuthHandler\u003e : IPostConfigureOptions\u003cSimpleOptions\u003e\r\n        where SimpleOptions : AuthenticationSchemeOptions, new()\r\n        where SimpleAuthHandler : AuthenticationHandler\u003cSimpleOptions\u003e\r\n    {\r\n        public void PostConfigure(string name, SimpleOptions options)\r\n        {\r\n            throw new NotImplementedException();\r\n        }\r\n    }\r\n ```",
                                           "updatedAt":  "2018-06-01T00:26:59Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQzMjczNDQyNg==",
                                           "createdAt":  "2018-10-24T16:41:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "muratg",
                                           "body":  "@HaoK will this be in 2.2, or should we move this out?",
                                           "updatedAt":  "2018-10-24T16:41:38Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQzMjc0ODg4MA==",
                                           "createdAt":  "2018-10-24T17:17:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOAd6Qtw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "muratg",
                                                                               "createdAt":  "2018-10-24T18:21:18Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "HaoK",
                                           "body":  "You can move it out, there\u0027s some weird build flakiness that this sample introduces, I will merge it into master once its consistently passing on CI",
                                           "updatedAt":  "2018-10-24T17:17:39Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyNjMxOTM1Mg==",
                                           "createdAt":  "2020-05-10T12:17:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dasiths",
                                           "body":  "Assuming we have some sort of middleware that sets the `HttpContext.RequestServices` for the tenant, If we now resolve the `IAuthenticationSchemeProvider` we get the correct options for the tenant. But the [`AuthenticationMiddleware`](https://github.com/dotnet/aspnetcore/blob/master/src/Security/Authentication/Core/src/AuthenticationMiddleware.cs) has this injected at construction as a singleton as you know.\r\n\r\n**Do you see any problems doing this custom AuthenticationMiddleware that has `IAuthenticationSchemeProvider`  injected per request? (In the Invoke() method)** Why is it a Singleton to begin with?\r\n\r\nNow we can easily have a \"container\" per tenant with Authentication schemes/options defined there.\r\n\r\nExample from: \r\n1. https://michael-mckenna.com/multi-tenant-asp-dot-net-core-application-tenant-containers\r\n2. https://michael-mckenna.com/multi-tenant-asp-dot-net-core-application-tenant-specific-authentication\r\n\r\n```\r\n/// \u003csummary\u003e\r\n/// AuthenticationMiddleware.cs from framework with injection point moved\r\n/// \u003c/summary\u003e\r\npublic class TenantAuthMiddleware\r\n{\r\n    private readonly RequestDelegate _next;\r\n\r\n    public TenantAuthMiddleware(RequestDelegate next)\r\n    {\r\n        _next = next ?? throw new ArgumentNullException(nameof(next));\r\n    }\r\n    \r\n    public async Task Invoke(HttpContext context, IAuthenticationSchemeProvider Schemes)\r\n    {\r\n        context.Features.Set\u003cIAuthenticationFeature\u003e(new AuthenticationFeature\r\n        {\r\n            OriginalPath = context.Request.Path,\r\n            OriginalPathBase = context.Request.PathBase\r\n        });\r\n\r\n        // Give any IAuthenticationRequestHandler schemes a chance to handle the request\r\n        var handlers = context.RequestServices.GetRequiredService\u003cIAuthenticationHandlerProvider\u003e();\r\n        foreach (var scheme in await Schemes.GetRequestHandlerSchemesAsync())\r\n        {\r\n            var handler = await handlers.GetHandlerAsync(context, scheme.Name) \r\n                as IAuthenticationRequestHandler;\r\n            if (handler != null \u0026\u0026 await handler.HandleRequestAsync())\r\n            {\r\n                return;\r\n            }\r\n        }\r\n\r\n        var defaultAuthenticate = await Schemes.GetDefaultAuthenticateSchemeAsync();\r\n        if (defaultAuthenticate != null)\r\n        {\r\n            var result = await context.AuthenticateAsync(defaultAuthenticate.Name);\r\n            if (result?.Principal != null)\r\n            {\r\n                context.User = result.Principal;\r\n            }\r\n        }\r\n        \r\n        await _next(context);\r\n    }\r\n}\r\n```\r\n",
                                           "updatedAt":  "2020-05-10T14:39:16Z"
                                       }
                                   ],
                         "totalCount":  8
                     },
        "title":  "Add a multitenant auth options sample",
        "labels":  [
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/4657",
        "createdAt":  "2018-04-11T08:34:37Z",
        "number":  4657,
        "author":  "Guymestef",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODKch4A==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "danieldsmith",
                                            "createdAt":  "2023-07-30T22:49:50Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "pavinan",
                                            "createdAt":  "2023-10-31T04:28:26Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "danports",
                                            "createdAt":  "2024-11-01T18:27:05Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "travisterrell",
                                            "createdAt":  "2024-12-17T18:07:13Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "tevariou",
                                            "createdAt":  "2025-03-04T23:08:09Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Vlaaaaaaad",
                                            "createdAt":  "2025-04-22T23:21:39Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Frulfump",
                                            "createdAt":  "2025-08-08T12:33:47Z"
                                        }
                                    ],
                          "totalCount":  7
                      },
        "updatedAt":  "2025-08-22T18:01:50Z",
        "body":  "Hello,\r\n\r\nThe API should be available in Chrome and Firefox May release.\r\nStarting to look at it and be ready for it could be a good idea?\r\n\r\n[webauthn specs](https://www.w3.org/TR/webauthn/)",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOZuoXWg==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM4MDQ4NzMyNQ==",
                                           "createdAt":  "2018-04-11T15:09:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "FIDO2/WebAuthn is definitely the future and I\u0027d personally love to see it adopted everywhere.\r\n\r\nThat said, it essentially dictates how things happen client-side, not server-side. The specification doesn\u0027t say how you\u0027re supposed to retrieve the challenge from the server or how you send the public key when creating an account or adding a new key to an existing account: all this stuff is necessarily implementation-specific (which gives you total flexibility).\r\n\r\nAs such, I\u0027m not sure aspnet/Security will ever have anything related to FIDO, just like there\u0027s nothing for \"password authentication\" in this repo (on the other hand, membership frameworks like ASP.NET Core Identity will have to offer ways to store the public keys in the DB).",
                                           "updatedAt":  "2018-04-11T15:09:28Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM4MDUxODI2NQ==",
                                           "createdAt":  "2018-04-11T16:41:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Guymestef",
                                           "body":  "About validating the client/user signature, I thought it would be considered as an external authentication provider.\r\nBut you are probably right about adding this as a whole feature into Identity.",
                                           "updatedAt":  "2018-04-11T16:41:10Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM4MDUyMzI2MA==",
                                           "createdAt":  "2018-04-11T16:57:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Eilon",
                                           "body":  "Should we close the issue here then? A new Identity issue was just logged at https://github.com/aspnet/Identity/issues/1747.",
                                           "updatedAt":  "2018-04-11T16:57:23Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM4MDUzMzEzMQ==",
                                           "createdAt":  "2018-04-11T17:30:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEKFgZA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Trolldemorted",
                                                                               "createdAt":  "2025-03-16T11:54:18Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "blowdart",
                                           "body":  "I think it belongs in both, because it\u0027s not just an identity issue.",
                                           "updatedAt":  "2018-04-11T17:30:05Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3MTE4NzQ5Ng==",
                                           "createdAt":  "2019-03-09T15:07:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tstojecki",
                                           "body":  "I agree with @blowdart. Aspnet Identity could store and retrieve credentials but it seems that something like an authorization handler (or maybe a middleware?) to handle the challenge, registration and authentication requests, etc... would be helpful.\r\nThe login pages in aspnet templates would also have to be updated to accommodate this option for registering/logging-in. This might be what @Guymestef was referring to in the comment about external providers.\r\n\r\nAdding a link to the diagram and the code references below as it might be helpful for this discussion\r\nhttps://developers.yubico.com/FIDO2/Libraries/Using_a_library.html",
                                           "updatedAt":  "2019-03-09T15:07:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85NEP_1",
                                           "createdAt":  "2022-10-27T04:30:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODdSIZw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Mrxx99",
                                                                               "createdAt":  "2022-12-22T09:16:46Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "viacheslav-mik",
                                                                               "createdAt":  "2023-01-13T15:13:28Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "utilsites",
                                                                               "createdAt":  "2024-01-18T14:37:03Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "lucaritossa",
                                                                               "createdAt":  "2024-04-07T06:49:05Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  4
                                                         },
                                           "author":  "wsy",
                                           "body":  "It has been many years since this issue has been created.\nFIDO2 is now being trending.\n- iOS 16 and iPadOS 16 is supporting FIDO2. (https://www.apple.com/ios/ios-16/features/ , \"Passkeys\" section)\n- Android has been FIDO2 certified since 2019. (https://fidoalliance.org/android-now-fido2-certified-accelerating-global-migration-beyond-passwords/ )\n- GitHub already supports FIDO2 passkey login. (https://github.com/settings/two_factor_authentication/configure )\n- Microsoft Account also supports FIDO2 passkey. (https://support.microsoft.com/en-us/windows/sign-in-to-your-microsoft-account-with-windows-hello-or-a-security-key-800a8c01-6b61-49f5-0660-c2159bea4d84 )\n\nSo, I think it\u0027s time to move this issue out of Backlog and start to plan something about it.",
                                           "updatedAt":  "2022-10-27T04:31:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85m6hda",
                                           "createdAt":  "2023-09-19T22:19:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODgP5Ng==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "utilsites",
                                                                               "createdAt":  "2024-01-18T14:37:29Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "JoostVanVelthoven",
                                                                               "createdAt":  "2024-03-19T11:41:29Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Serge-N",
                                                                               "createdAt":  "2024-05-01T16:33:21Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "Bartmax",
                                           "body":  "What\u0027s the status on this?",
                                           "updatedAt":  "2023-09-19T22:19:29Z"
                                       }
                                   ],
                         "totalCount":  7
                     },
        "title":  "Q: Is WebAuthn planned to be implemented by aspnet.security?",
        "labels":  [
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/4656",
        "createdAt":  "2018-04-11T17:49:52Z",
        "number":  4656,
        "author":  "blowdart",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-08-26T07:32:59Z",
        "body":  "_From @allevyMS on April 11, 2018 17:10_\n\nI am trying to set up authentication and authorization but I am seeing unexpected behavior.\r\nI am running an ASPNET Core 2.0 app on windows (tried this on windows 10 and in a docker container  with the following image 2.0.6-sdk-2.1.104-nanoserver-sac2016) and I have my authentication and authorization set up like this:\r\nusing Nuget package: Microsoft.AspNetCore.All 2.0.0 and also tried with 2.0.6\r\n\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.AddAuthorization(options =\u003e\r\n            {\r\n                options.AddPolicy(\"Test\", policy =\u003e\r\n                {\r\n                    policy.Requirements.Add(new TestRequirement());\r\n                });\r\n            });\r\n\r\n            services.AddSingleton\u003cIAuthorizationHandler, TestAuthorizationHandler\u003e();\r\n\r\n            services.AddMvc();\r\n\r\n            services.AddAuthentication(JwtBearerDefaults.AuthenticationScheme)\r\n                .AddJwtBearer();\r\n\r\n            services.AddSingleton\u003cIConfigureOptions\u003cJwtBearerOptions\u003e\u003e(sp =\u003e\r\n            {\r\n                return new ConfigureNamedOptions\u003cJwtBearerOptions\u003e(\r\n                    JwtBearerDefaults.AuthenticationScheme,\r\n                    options =\u003e\r\n                    {\r\n                        options.TokenValidationParameters = new TokenValidationParameters\r\n                        {\r\n                            RequireSignedTokens = true,\r\n                            ValidateIssuer = false,\r\n                            ValidateAudience = false,\r\n                            ValidateLifetime = true,\r\n                            IssuerSigningKey = rsaSecurityKey\r\n                        };\r\n                    });\r\n            });\r\n        }\r\n\r\n        public void Configure(IServiceProvider sp, IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory)\r\n        {\r\n            loggerFactory.AddConsole(Configuration.GetSection(\"Logging\"));\r\n\r\n            app.UseAuthentication();\r\n\r\n            app.UseMvc();\r\n        }\r\n\r\nMy requirement is empty and this is my authorization handler:\r\n\r\n    public class TestAuthorizationHandler : AuthorizationHandler\u003cTestRequirement\u003e\r\n    {\r\n        protected override Task HandleRequirementAsync(AuthorizationHandlerContext context,\r\n                                                       TestRequirement requirement)\r\n        {\r\n            context.Succeed(requirement);\r\n            return Task.CompletedTask;\r\n        }\r\n    }\r\n\r\nMy Controller get method:\r\n\r\n        [Authorize(Policy = \"Test\")]\r\n        [HttpGet]\r\n        [Route(\"Data\")]\r\n        public async Task\u003cstring\u003e GetDataAsync()\r\n        {\r\n            return await Task.FromResult(\"data\");\r\n        }\r\n\r\nThe unexpected behavior:\r\n\r\nAuthentication is always ignored for that controller method, my authorization handler and controller are always reached, even if I don\u0027t supply an Authentication header or supply an invalid token.\r\n\r\nExpected behavior:\r\n\r\nAuthorization should use the supplied default scheme in AddAuthentication to challenge the Authentication and not allow these calls through unless Authentication was successful.\r\n\r\nWorkaround:\r\n\r\nAdd the default scheme directly to the policy and require the user to be authenticated\r\n\r\npolicy.AuthenticationSchemes.Add(JwtBearerDefaults.AuthenticationScheme);\r\npolicy.RequireAuthenticatedUser();\r\n\r\nWhen these are added I see the behavior I expect.\r\n\r\nAm I misunderstanding the expected flow? Is this the expected behavior and RequireAuthenticatedUser is needed explicitly to block unauthenticated requests to go through authorization?\r\n\r\n\r\n\r\n\r\n\n\n_Copied from original issue: aspnet/Home#3046_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHONgMCUA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM4MDU0MTMxMQ==",
                                           "createdAt":  "2018-04-11T17:56:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOA5TLtg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "dcarr42",
                                                                               "createdAt":  "2018-04-11T22:21:05Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "slimeygecko",
                                                                               "createdAt":  "2018-11-27T15:23:33Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "tommy-ly",
                                                                               "createdAt":  "2020-01-17T11:33:53Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "\u003e Am I misunderstanding the expected flow? Is this the expected behavior and RequireAuthenticatedUser is needed explicitly to block unauthenticated requests to go through authorization?\r\n\r\nWhile not super convenient, it\u0027s the expected behavior (and it\u0027s a quite frequent question: https://stackoverflow.com/questions/49545706/adding-a-policy-based-authorization-skips-jwt-bearer-token-authentication-check/49545923#49545923).\r\n\r\nIn a better world (and IMHO), `DenyAnonymousAuthorizationRequirement` should always be added by default and `RequireAuthenticatedUser()` should be replaced by `AllowAnonymousUser()`. But hem... it\u0027s probably a breaking change :sweat_smile: ",
                                           "updatedAt":  "2018-04-11T17:56:55Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM4MDYwNzM4MQ==",
                                           "createdAt":  "2018-04-11T21:51:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "Oh heck, I moved it and never replied. As @PinpointTownes says it\u0027s expected, and yes it\u0027d be a big breaking change, like major version number breaking change.",
                                           "updatedAt":  "2018-04-11T21:51:46Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM4MTEzMjA2MQ==",
                                           "createdAt":  "2018-04-13T13:17:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "@blowdart do you mind re-opening this thread and putting it in the `3.0.0` milestone so it has a chance to be discussed for the next major version?",
                                           "updatedAt":  "2018-04-13T13:17:07Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM4MTE1MzA3NQ==",
                                           "createdAt":  "2018-04-13T14:28:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "I can, but as it\u0027s turning things on its head, it\u0027s going to be a hard sell :)",
                                           "updatedAt":  "2018-04-13T14:28:40Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ0Njk0NzM5MA==",
                                           "createdAt":  "2018-12-13T12:12:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOA8xnFg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "allevyMS",
                                                                               "createdAt":  "2018-12-13T21:45:59Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "yanrez",
                                                                               "createdAt":  "2018-12-13T23:17:10Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "veikkoeeva",
                                                                               "createdAt":  "2019-01-08T21:53:32Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "erjicles",
                                                                               "createdAt":  "2019-08-29T21:49:51Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "colotiline",
                                                                               "createdAt":  "2019-10-09T16:11:16Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "mingazhev",
                                                                               "createdAt":  "2020-02-28T06:21:24Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  6
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "So, who can I bribe to make that happen? @DamianEdwards maybe? :trollface:\r\n\r\nThe fact `DenyAnonymousAuthorizationRequirement` is not automatically added to new authorization policies (you have to explicitly call `RequireAuthenticatedUser()`) is a serious trap for too many people.\r\n\r\n@DamianEdwards would you be opposed to changing that to make the default behavior more secure in 3.0?",
                                           "updatedAt":  "2018-12-13T12:12:37Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ1OTczNjExNg==",
                                           "createdAt":  "2019-02-01T14:16:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOAmXTig==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "dominicusmento",
                                                                               "createdAt":  "2019-04-05T05:51:10Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "DamascenoRafael",
                                           "body":  "Does anyone know if the workaround no longer works on .NET Core 2.2.0?\r\nI configured the policy as follows:\r\n```c#\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            // ...\r\n            JWTExtension.AddJwtAuthentication(services, Configuration);\r\n            // ...\r\n            services.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_1);\r\n            // ...\r\n            {\r\n                options.AddPolicy(\"AdminRole\", policy =\u003e\r\n                {\r\n                    policy.AuthenticationSchemes.Add(CookieAuthenticationDefaults.AuthenticationScheme);\r\n                    policy.RequireAuthenticatedUser();\r\n                    policy.Requirements.Add(new UserRoleRequirement(ProfileEnum.Admin));\r\n                });\r\n            });\r\n            // ...\r\n        }\r\n```\r\nBut the policy is always called before checking the existence and validity of JWT. In my case the token is validated through the Cookie so I put the corresponding schema.\r\n\r\nMy `Configure(IApplicationBuilder app, IHostingEnvironment env)` is as follows:\r\n\r\n\u003cdetails\u003e\r\n\r\n```c#\r\n        public void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n        {\r\n            RewriteOptions options = new RewriteOptions().AddRewrite(@\"^(?!(swagger|token|api|.+[.])).*\", \"/\", skipRemainingRules: true);\r\n\r\n            app.UseRewriter(options);\r\n            \r\n            if (env.IsDevelopment())\r\n            {\r\n                app.UseDeveloperExceptionPage();\r\n            }\r\n            else\r\n            {\r\n                app.UseHsts();\r\n            }\r\n\r\n            string[] allowedAppUrls = Configuration[\"AllowedAppUrls\"].Split(\u0027,\u0027); \r\n            app.UseCorsAllow(allowedAppUrls);\r\n            app.UseMiddleware(typeof(ExceptionHandlerMiddleware));\r\n            app.UseAuthentication();\r\n            app.UseMiddleware(typeof(TokenExpirationMiddleware));\r\n            app.UseMvc(routes =\u003e\r\n            {\r\n                routes.MapRoute\r\n                (\r\n                    name: \"default\",\r\n                    template: \"api/{controller=Home}/{action=Index}/{id?}\" \r\n                );\r\n            });\r\n            app.UseDefaultFiles();\r\n            app.UseStaticFiles();\r\n\r\n            app.ConfigSwagger();\r\n\r\n            app.UseHttpsRedirection();\r\n        }\r\n```\r\n\r\n\u003c/details\u003e",
                                           "updatedAt":  "2019-02-01T14:16:04Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ2MjQ2MzczOQ==",
                                           "createdAt":  "2019-02-11T19:35:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MichaelHudgins",
                                           "body":  "I too would like to know if this workaround is still supported.  I am having the same effect where my authorization policy is checked even when there is an invalid jwt.  I am working around by checking the user again in the authorization policy, but it would be better if the authorization policy was never called given the failure of the authentication. ",
                                           "updatedAt":  "2019-02-11T19:36:05Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4MDE4OTY1Mg==",
                                           "createdAt":  "2019-04-05T08:18:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dominicusmento",
                                           "body":  "\u003e Does anyone know if the workaround no longer works on .NET Core 2.2.0?\r\n\u003e I configured the policy as follows:\r\n\u003e \r\n\u003e ```cs\r\n\u003e         public void ConfigureServices(IServiceCollection services)\r\n\u003e         {\r\n\u003e             // ...\r\n\u003e             JWTExtension.AddJwtAuthentication(services, Configuration);\r\n\u003e             // ...\r\n\u003e             services.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_1);\r\n\u003e             // ...\r\n\u003e             {\r\n\u003e                 options.AddPolicy(\"AdminRole\", policy =\u003e\r\n\u003e                 {\r\n\u003e                     policy.AuthenticationSchemes.Add(CookieAuthenticationDefaults.AuthenticationScheme);\r\n\u003e                     policy.RequireAuthenticatedUser();\r\n\u003e                     policy.Requirements.Add(new UserRoleRequirement(ProfileEnum.Admin));\r\n\u003e                 });\r\n\u003e             });\r\n\u003e             // ...\r\n\u003e         }\r\n\u003e ```\r\n\u003e \r\n\u003e But the policy is always called before checking the existence and validity of JWT. In my case the token is validated through the Cookie so I put the corresponding schema.\r\n\u003e \r\n\u003e My `Configure(IApplicationBuilder app, IHostingEnvironment env)` is as follows:\r\n\r\nI\u0027ve had a same problem. My workaround was that I put controller under default [Authorize] attribute and then every action has it\u0027s own policy [Authorize(Policy = \"FullAccess\")]. To me it wasn\u0027t such a big deal because I had only one controller which action\u0027s was under the same policy. RequireAuthenticatedUser and similar wasn\u0027t necessary.\r\n",
                                           "updatedAt":  "2019-04-05T08:18:33Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4MDM3Mjk0MQ==",
                                           "createdAt":  "2019-04-05T18:13:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Can you guys share a simple repro app so we can take a closer look at the behavior changes you are seeing?\r\n\r\nIn regards to \"I am having the same effect where my authorization policy is checked even when there is an invalid jwt.\".  This is by design, all of the authorization logic is run always, the presence or lack of the `.RequireAuthenticatedUser()` requirement doesn\u0027t short circuit the rest of the authorization checks.  So if you want to hard block that, you do need to have logic inside of your handlers to no-op if there\u0027s no user",
                                           "updatedAt":  "2019-04-05T18:13:58Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwMzM1NTYzMw==",
                                           "createdAt":  "2019-06-19T00:04:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "allevyMS",
                                           "body":  "@HaoK I am experiencing the same regression mentioned above\r\n\r\n.RequireAuthenticatedUser() used to in fact short circuit the flow and block the authorization if the user was not authentication, now it no longer seems to do that.\r\n\r\nWhat is the function of \u0027RequireAuthenticatedUser()\u0027 if it doesn\u0027t enforce authentication?\r\n\r\n",
                                           "updatedAt":  "2019-06-19T00:04:38Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwMzM2MzgyMA==",
                                           "createdAt":  "2019-06-19T00:51:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "allevyMS",
                                           "body":  "This is a clear behavior change between the versions, you can use my sample app in the start of this thread as a repro",
                                           "updatedAt":  "2019-06-19T00:51:59Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwMzM3OTU2Nw==",
                                           "createdAt":  "2019-06-19T02:20:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "The likely behavior change you are seeing if its between 2.0 and 2.1/2.2/3.0 is most likely due to mvcOptions.AllowCombiningAuthorizeFilters, make sure that is false",
                                           "updatedAt":  "2019-06-19T02:20:58Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwMzY2Mzk5OQ==",
                                           "createdAt":  "2019-06-19T17:52:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "allevyMS",
                                           "body":  "I don\u0027t set that property and the documentation states that it is set to false by default",
                                           "updatedAt":  "2019-06-19T17:52:20Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwMzY2NjMyOQ==",
                                           "createdAt":  "2019-06-19T17:58:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "allevyMS",
                                           "body":  "To clarify, I am using version 2.2",
                                           "updatedAt":  "2019-06-19T17:58:41Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwMzY3NDUwMg==",
                                           "createdAt":  "2019-06-19T18:21:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Can you upload your project to a github repo in a minimal state that reproduces what you are seeing?",
                                           "updatedAt":  "2019-06-19T18:21:30Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwMzc4NTgyNg==",
                                           "createdAt":  "2019-06-19T23:43:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "allevyMS",
                                           "body":  "Thanks @HaoK I created a minimal repro with a noop handler and requirement\r\n\r\nSo after trying it out end to end, I can confirm that \u0027RequireAuthenticatedUser()\u0027 is still respected correctly.\r\nThe only difference is that in 2.2 the handlers are called regardless of the authentication status.\r\nIn earlier versions (2.0) the handlers weren\u0027t called at all if the authentication failed.\r\nIn both cases the calls result in a 401 return status when the authentication fails.\r\n\r\nHere is the setup for my repro for posterity: \r\n\r\nStartup:\r\n\r\n    public class Startup\r\n    {\r\n        public Startup(IConfiguration configuration)\r\n        {\r\n            Configuration = configuration;\r\n        }\r\n\r\n        public IConfiguration Configuration { get; }\r\n\r\n        // This method gets called by the runtime. Use this method to add services to the container.\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.AddSingleton\u003cIAuthorizationHandler, TestAuthorizationHandler\u003e();\r\n\r\n            services.AddMvc();\r\n\r\n            services.AddAuthentication(JwtBearerDefaults.AuthenticationScheme)\r\n                .AddJwtBearer();\r\n\r\n            services.AddSingleton\u003cIConfigureOptions\u003cJwtBearerOptions\u003e\u003e(sp =\u003e\r\n            {\r\n                return new ConfigureNamedOptions\u003cJwtBearerOptions\u003e(\r\n                    JwtBearerDefaults.AuthenticationScheme,\r\n                    options =\u003e\r\n                    {\r\n                        options.TokenValidationParameters = new TokenValidationParameters\r\n                        {\r\n                            RequireSignedTokens = false,\r\n                            ValidateIssuer = false,\r\n                            ValidateAudience = false,\r\n                            ValidateLifetime = true,\r\n                        };\r\n                    });\r\n            });\r\n\r\n            services.AddAuthorization(options =\u003e\r\n            {\r\n                options.AddPolicy(\"Test\", policy =\u003e\r\n                {\r\n                    policy.AuthenticationSchemes.Add(JwtBearerDefaults.AuthenticationScheme);\r\n                    policy.RequireAuthenticatedUser();\r\n                    policy.Requirements.Add(new TestRequirement());\r\n                });\r\n            });\r\n\r\n            services.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Latest);\r\n        }\r\n\r\n        public void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n        {\r\n            app.UseAuthentication();\r\n            app.UseMvc();\r\n        }\r\n    }\r\n\r\nMain:\r\n\r\n    public class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n            CreateWebHostBuilder(args).Build().Run();\r\n        }\r\n\r\n        public static IWebHostBuilder CreateWebHostBuilder(string[] args) =\u003e\r\n            WebHost.CreateDefaultBuilder(args)\r\n                .UseStartup\u003cStartup\u003e();\r\n    }\r\n\r\nAuthZ Handler:\r\n\r\n    public class TestRequirement : IAuthorizationRequirement\r\n    {\r\n    }\r\n\r\n    public class TestAuthorizationHandler : AuthorizationHandler\u003cTestRequirement\u003e\r\n    {\r\n        protected override Task HandleRequirementAsync(AuthorizationHandlerContext context,\r\n                                                       TestRequirement requirement)\r\n        {\r\n            context.Succeed(requirement);\r\n            return Task.CompletedTask;\r\n        }\r\n    }\r\n\r\nController:\r\n\r\n    [ApiController]\r\n    public class TestController : ControllerBase\r\n    {\r\n        [Authorize(Policy = \"Test\")]\r\n        [HttpGet]\r\n        [Route(\"data\")]\r\n        public string Get()\r\n        {\r\n            return \"test\";\r\n        }\r\n    }",
                                           "updatedAt":  "2019-06-19T23:55:30Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwMzc4NjkzMQ==",
                                           "createdAt":  "2019-06-19T23:49:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "allevyMS",
                                           "body":  "To be explicit:\r\n\r\nmaking a call with an invalid/missing token when specifying policy.RequireAuthenticatedUser(); will trigger the TestAuthorizationHandler.HandleRequirementAsync method  but  the request will still result in a 401 http status\r\n\r\nwithout the policy.RequireAuthenticatedUser(); it will go on to the controller",
                                           "updatedAt":  "2019-06-19T23:49:38Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUyMzE0OTk0MQ==",
                                           "createdAt":  "2019-08-20T18:56:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jrovny",
                                           "body":  "Any update on this? Was this resolved in version 3.0?\r\n\r\nThanks,",
                                           "updatedAt":  "2019-08-20T18:56:50Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUyMzE1MjYyNA==",
                                           "createdAt":  "2019-08-20T19:04:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "There are intentional behavior changes between 2.0/2.1 and 3.0, the best thing to do is to try your app on 2.2 and 3.0 and see if it behaves in a way you expect, if not we can try and explain any behavior differences you see",
                                           "updatedAt":  "2019-08-20T19:04:22Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU5MjMzOTc3Ng==",
                                           "createdAt":  "2020-02-28T06:39:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOA814Jg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Lonli-Lokli",
                                                                               "createdAt":  "2020-02-28T07:19:22Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "allevyMS",
                                                                               "createdAt":  "2020-02-28T19:23:37Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "mingazhev",
                                           "body":  "I can confirm  @allevyMS \u0027s answer, this flow works this way in .NET Core 3.1 too and this is not so obvious behavior.\r\n\r\nI\u0027ve expected that short circuiting (not walking till authorization policies with not authenticated user) could be done easily but it I couldn\u0027t find a perfect way.\r\nSo workaround for me was registering custom PolicyEvaluator wrapper to forbid requests manually:\r\n\r\n**Startup.cs**\r\n`services.AddTransient\u003cIPolicyEvaluator, ForbidUnauthenticatedPolicyEvaluator\u003e();\r\n            services.AddTransient\u003cPolicyEvaluator\u003e();`\r\n\r\n**ForbidUnauthenticatedPolicyEvaluator.cs**\r\n\r\n```\r\npublic class ForbidUnauthenticatedPolicyEvaluator : IPolicyEvaluator\r\n    {\r\n        public ForbidUnauthenticatedPolicyEvaluator(PolicyEvaluator defaultEvaluator)\r\n        {\r\n            _defaultEvaluator = defaultEvaluator;\r\n        }\r\n\r\n\r\n        public Task\u003cAuthenticateResult\u003e AuthenticateAsync(AuthorizationPolicy policy, HttpContext context)\r\n            =\u003e _defaultEvaluator.AuthenticateAsync(policy, context);\r\n\r\n\r\n        public Task\u003cPolicyAuthorizationResult\u003e AuthorizeAsync(AuthorizationPolicy policy, AuthenticateResult authenticationResult, HttpContext context,\r\n            object resource)\r\n        {\r\n            if (!authenticationResult.Succeeded)\r\n                return Task.FromResult(PolicyAuthorizationResult.Forbid());\r\n\r\n            return _defaultEvaluator.AuthorizeAsync(policy, authenticationResult, context, resource);\r\n        }\r\n\r\n\r\n        private readonly PolicyEvaluator _defaultEvaluator;\r\n    }\r\n```",
                                           "updatedAt":  "2020-02-28T06:39:42Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwNTAxMjAxNA==",
                                           "createdAt":  "2020-03-27T13:51:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB32Oyg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "kakugiki",
                                                                               "createdAt":  "2020-10-23T14:29:40Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "weny-tang",
                                                                               "createdAt":  "2020-11-30T07:49:09Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "sushilb21",
                                                                               "createdAt":  "2021-08-26T07:30:38Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "rosdi",
                                           "body":  "Got bitten by this as well, I have a code like this:\r\n\r\n```\r\nservices.AddAuthorization(options =\u003e\r\n  {\r\n     options.DefaultPolicy = new AuthorizationPolicyBuilder()\r\n        .RequireAuthenticatedUser()\r\n        .AddRequirements(new MustBeSuperAdminRequirement())\r\n        .Build();\r\n  })\r\n```\r\n\r\nOne would be forgiven to think that `MustBeSuperAdminRequirement` won\u0027t be called if user has not logged in... **but it is not so**!... it went straight in and I spent a few hours scratching my head...\r\n\r\nAs a workaround I did this in my requirement handler:\r\n\r\n```\r\nprotected override async Task HandleRequirementAsync(\r\n            AuthorizationHandlerContext context,\r\n            MustBeSuperAdminRequirement requirement)\r\n{\r\n    var principal = context.User;\r\n    if (!principal.IsAuthenticated())\r\n    {\r\n        return;  //user not logged in\r\n    }\r\n\r\n   //the rest of the codes\r\n}\r\n```\r\n\r\n.. and here...\r\n```\r\napp.UseEndpoints(endpoints =\u003e \r\n{\r\n    endpoints.MapControllers().RequireAuthorization();\r\n});\r\n```\r\n**UPDATE**\r\n\r\nI am **not** observing different behaviour between these two codes:\r\n\r\n```\r\n//code 1\r\nservices.AddAuthorization(options =\u003e\r\n  {\r\n     options.DefaultPolicy = new AuthorizationPolicyBuilder()\r\n        .RequireAuthenticatedUser()\r\n        .AddRequirements(new MustBeSuperAdminRequirement())\r\n        .Build();\r\n  })\r\n```\r\n\r\n```\r\n//code 2\r\nservices.AddAuthorization(options =\u003e\r\n  {\r\n     options.DefaultPolicy = new AuthorizationPolicyBuilder()\r\n        //.RequireAuthenticatedUser()  //\u003c-- this is intentionally removed\r\n        .AddRequirements(new MustBeSuperAdminRequirement())\r\n        .Build();\r\n  })\r\n```\r\n\r\nBoth returning `401`, now I am more puzzled in what scenario would I need `RequireAuthenticatedUser()` ?\r\n\r\nShouldn\u0027t we consider this a bug? I am on .NET Core 3.1 btw.\r\n",
                                           "updatedAt":  "2020-03-27T14:04:48Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5NDkzOTY0MA==",
                                           "createdAt":  "2020-09-18T15:38:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "IngoVals",
                                           "body":  "Just had this issue. Now we must write every Handler with the assumption that the user maybe isn\u0027t authenticated. So each handler is also a `DenyAnonymousAuthorizationRequirement` handler in theory. This is counter intuitive, and strange considering that a failed authentication gives us a 401, but authorization a 403, so it seems asp.net core is at least ensuring that authentication prevails anyways.",
                                           "updatedAt":  "2020-09-18T15:38:51Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5NTc3NzgzMw==",
                                           "createdAt":  "2020-09-20T11:46:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mingazhev",
                                           "body":  "\u003e \r\n\u003e \r\n\u003e Just had this issue. Now we must write every Handler with the assumption that the user maybe isn\u0027t authenticated. So each handler is also a `DenyAnonymousAuthorizationRequirement` handler in theory. This is counter intuitive, and strange considering that a failed authentication gives us a 401, but authorization a 403, so it seems asp.net core is at least ensuring that authentication prevails anyways.\r\n\r\nJust to update a workaround I\u0027ve written before:\r\nNow we return `PolicyAuthorizationResult.Challenge()` instead of `PolicyAuthorizationResult.Forbid()` and that returns 401 as expected for unauthenticated users.",
                                           "updatedAt":  "2020-09-20T11:46:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842AwJQ",
                                           "createdAt":  "2021-08-26T07:32:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sushilb21",
                                           "body":  "\u003e Got bitten by this as well, I have a code like this:\r\n\u003e \r\n\u003e ```\r\n\u003e services.AddAuthorization(options =\u003e\r\n\u003e   {\r\n\u003e      options.DefaultPolicy = new AuthorizationPolicyBuilder()\r\n\u003e         .RequireAuthenticatedUser()\r\n\u003e         .AddRequirements(new MustBeSuperAdminRequirement())\r\n\u003e         .Build();\r\n\u003e   })\r\n\u003e ```\r\n\u003e \r\n\u003e One would be forgiven to think that `MustBeSuperAdminRequirement` won\u0027t be called if user has not logged in... **but it is not so**!... it went straight in and I spent a few hours scratching my head...\r\n\u003e \r\n\u003e As a workaround I did this in my requirement handler:\r\n\u003e \r\n\u003e ```\r\n\u003e protected override async Task HandleRequirementAsync(\r\n\u003e             AuthorizationHandlerContext context,\r\n\u003e             MustBeSuperAdminRequirement requirement)\r\n\u003e {\r\n\u003e     var principal = context.User;\r\n\u003e     if (!principal.IsAuthenticated())\r\n\u003e     {\r\n\u003e         return;  //user not logged in\r\n\u003e     }\r\n\u003e \r\n\u003e    //the rest of the codes\r\n\u003e }\r\n\u003e ```\r\n\u003e \r\n\u003e .. and here...\r\n\u003e \r\n\u003e ```\r\n\u003e app.UseEndpoints(endpoints =\u003e \r\n\u003e {\r\n\u003e     endpoints.MapControllers().RequireAuthorization();\r\n\u003e });\r\n\u003e ```\r\n\u003e \r\n\u003e **UPDATE**\r\n\u003e \r\n\u003e I am **not** observing different behaviour between these two codes:\r\n\u003e \r\n\u003e ```\r\n\u003e //code 1\r\n\u003e services.AddAuthorization(options =\u003e\r\n\u003e   {\r\n\u003e      options.DefaultPolicy = new AuthorizationPolicyBuilder()\r\n\u003e         .RequireAuthenticatedUser()\r\n\u003e         .AddRequirements(new MustBeSuperAdminRequirement())\r\n\u003e         .Build();\r\n\u003e   })\r\n\u003e ```\r\n\u003e \r\n\u003e ```\r\n\u003e //code 2\r\n\u003e services.AddAuthorization(options =\u003e\r\n\u003e   {\r\n\u003e      options.DefaultPolicy = new AuthorizationPolicyBuilder()\r\n\u003e         //.RequireAuthenticatedUser()  //\u003c-- this is intentionally removed\r\n\u003e         .AddRequirements(new MustBeSuperAdminRequirement())\r\n\u003e         .Build();\r\n\u003e   })\r\n\u003e ```\r\n\u003e \r\n\u003e Both returning `401`, now I am more puzzled in what scenario would I need `RequireAuthenticatedUser()` ?\r\n\u003e \r\n\u003e Shouldn\u0027t we consider this a bug? I am on .NET Core 3.1 btw.\r\n\r\nIndeed it is a bug. RequireAuthenticatedUser() does not work at all. I am also using .net core 3.1\r\n\r\nYour workaround worked for me, thanks! I just made the slight changes as below:\r\n\r\n` var principal = context.User;\r\n            if (!principal.Identity.IsAuthenticated)\r\n            {\r\n                return Task.FromResult(0);  //user not logged in\r\n            }`",
                                           "updatedAt":  "2021-08-26T07:32:59Z"
                                       }
                                   ],
                         "totalCount":  24
                     },
        "title":  "[ASPNET Core 2.0]Authorization Policy ignoring Authentication",
        "labels":  [
                       "enhancement",
                       "area-auth",
                       "affected-few",
                       "severity-minor"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/5297",
        "createdAt":  "2018-04-26T20:10:16Z",
        "number":  5297,
        "author":  "analogrelay",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODOovJA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "swilliams96",
                                            "createdAt":  "2020-06-11T08:57:52Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "reduckted",
                                            "createdAt":  "2022-01-27T05:11:35Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "MariovanZeist",
                                            "createdAt":  "2022-02-08T21:00:39Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Joren-Thijs",
                                            "createdAt":  "2022-02-09T21:17:28Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "PhilippRoessner",
                                            "createdAt":  "2022-07-12T06:37:02Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "SylvainGantois",
                                            "createdAt":  "2022-09-28T06:10:35Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ThirstyJarek",
                                            "createdAt":  "2022-11-01T23:36:21Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "wkoeter",
                                            "createdAt":  "2023-01-25T09:14:42Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "rbgarcia",
                                            "createdAt":  "2023-03-10T12:28:23Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "kemsky",
                                            "createdAt":  "2023-03-15T22:36:38Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "gbryer",
                                            "createdAt":  "2023-04-02T12:15:32Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "KeterSCP",
                                            "createdAt":  "2023-06-06T06:53:20Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "miroslavp",
                                            "createdAt":  "2023-08-18T17:38:40Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Cyberboss",
                                            "createdAt":  "2023-11-06T20:59:41Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "sei-aschlackman",
                                            "createdAt":  "2024-02-05T16:19:41Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "janjhnsn",
                                            "createdAt":  "2024-04-16T06:40:27Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "NikolayRogchev",
                                            "createdAt":  "2024-07-17T13:28:57Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "sidneyxvr",
                                            "createdAt":  "2024-08-22T03:00:03Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Misiu",
                                            "createdAt":  "2024-09-04T09:13:10Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "DAHAG-ArisNourbakhsh",
                                            "createdAt":  "2024-11-13T09:03:00Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "thirstyape",
                                            "createdAt":  "2025-01-21T02:27:30Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Shrumpf",
                                            "createdAt":  "2025-02-19T12:46:04Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "justinasmussen",
                                            "createdAt":  "2025-02-27T06:51:01Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Frulfump",
                                            "createdAt":  "2025-02-27T10:03:58Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "alefcarlos",
                                            "createdAt":  "2025-03-04T02:40:57Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "bensimpson-covetrus",
                                            "createdAt":  "2025-03-06T23:03:22Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "rwarford",
                                            "createdAt":  "2025-04-19T15:15:43Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "s-beji",
                                            "createdAt":  "2025-05-24T15:41:06Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Varorbc",
                                            "createdAt":  "2025-09-03T08:33:12Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "boukenka",
                                            "createdAt":  "2025-09-05T12:29:31Z"
                                        }
                                    ],
                          "totalCount":  30
                      },
        "updatedAt":  "2025-09-08T12:27:32Z",
        "body":  "Below is one option we\u0027ve considered, but I\u0027m re-framing this issue to build *some* story for refreshing auth tokens.\r\n\r\nTo improve the ability to \"refresh\" expired tokens, we should consider caching the access token provided by the factory. Then, when an HTTP request gets a `401`, we call the factory again before re-issuing the request. That way the user can configure a process to \"refresh\" the token without forcing the connection to be reestablished\r\n\r\n* For the WebSockets transport, this has no effect. There is only ever a single request. This logic would **not** cover reconnecting in the event of something like #1159 (where the WebSocket is terminated when the token expires)\r\n* For the SSE transport, this only affects `POST` (send) requests. We would call the token factory again and re-issue the send. The unsent data would stay buffered in the pipe\r\n* For Long Polling, this affects `POST` requests like SSE, and the `GET` (poll) requests. The client would assume that a `401` error indicates that the data is **still in the pipe** for them to read. The server would be expected to keep data in the pipe in the case of a `401`",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOm0YfAg==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM4NDc5NTI5Mw==",
                                           "createdAt":  "2018-04-26T21:31:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "analogrelay",
                                           "body":  "We need to make sure that if two requests are outstanding simultaneously, the access token factory is only called once. So we should use a shared component and lock properly",
                                           "updatedAt":  "2018-04-26T21:31:04Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM4NDgwMTc1Nw==",
                                           "createdAt":  "2018-04-26T21:57:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCN6x5A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "analogrelay",
                                                                               "createdAt":  "2018-04-27T02:20:31Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "davidfowl",
                                                                               "createdAt":  "2018-05-02T06:09:19Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Joren-Thijs",
                                                                               "createdAt":  "2022-02-09T21:17:52Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "JamesNK",
                                           "body":  "Also need to make sure any new new requests that need to get sent wait while the access token is refreshed.\r\n\r\nThe same behavior should happen while starting a connection. Requests that need to get sent with an access token should wait while a single call to the factory is made, and then get sent out once the token is ready.\r\n\r\nI\u0027m assuming the behavior between C# and TS should be the same.",
                                           "updatedAt":  "2018-04-26T22:03:30Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUxODg1NzcxMA==",
                                           "createdAt":  "2019-08-06T21:51:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "analogrelay",
                                           "body":  "@SteveSandersonMS @rynowak FYI, just something that popped up in our backlog grooming and @BrennanConroy mentioned this was something you cared about. So we put our special happy label on it.",
                                           "updatedAt":  "2019-08-06T21:51:48Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUzNzIzNTY0NA==",
                                           "createdAt":  "2019-10-01T21:20:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODqIqxA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "miroslavp",
                                                                               "createdAt":  "2019-12-01T01:35:13Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "sarphiv",
                                                                               "createdAt":  "2020-03-23T12:55:04Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "swilliams96",
                                                                               "createdAt":  "2020-06-11T08:56:08Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "MarosValter",
                                                                               "createdAt":  "2021-03-17T14:40:50Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "JoFrMueller",
                                                                               "createdAt":  "2021-06-04T11:28:46Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "treg",
                                                                               "createdAt":  "2022-07-16T16:51:28Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "NikolayRogchev",
                                                                               "createdAt":  "2024-07-17T12:59:11Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  7
                                                         },
                                           "author":  "analogrelay",
                                           "body":  "Expanding this to also cover the possibility of in-band refresh of the token. We may want to build a way to refresh the user principal **without** terminating the connection.",
                                           "updatedAt":  "2019-10-01T21:20:41Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc2Mzk0MjQyMw==",
                                           "createdAt":  "2021-01-20T21:00:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\nWe\u0027re moving this issue to the `Next sprint planning` milestone for future evaluation / consideration. We will evaluate the request when we are planning the work for the next milestone. To learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2021-01-20T21:00:35Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc2NDAwOTA3Mw==",
                                           "createdAt":  "2021-01-20T23:00:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC7W_AA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "EYES",
                                                                               "user":  "IEvangelist",
                                                                               "createdAt":  "2021-01-21T04:33:31Z"
                                                                           },
                                                                           {
                                                                               "content":  "EYES",
                                                                               "user":  "s-beji",
                                                                               "createdAt":  "2023-05-09T12:50:21Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "BrennanConroy",
                                           "body":  "We should author a doc about handling auth expiration correctly. See https://github.com/dotnet/aspnetcore/issues/5283#issuecomment-368864944 for a code example.\r\n\r\n@bradygaster asked me to add @IEvangelist ",
                                           "updatedAt":  "2021-01-20T23:00:16Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgyMzY0NTA3OQ==",
                                           "createdAt":  "2021-04-20T22:43:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BrennanConroy",
                                           "body":  "Notes:\r\nAdd an option to enable automatic refresh of connection on token expiration (note: this closes the connection)\r\n* Store some sort of auth information that has expiration on it on the transport\r\n* Use IConnectionLifetimeNotificationFeature from heartbeat on expiration to tell SignalR to abort connection (with retry allowed)\r\n* If expiration of token happens, can we first run auth again to check if the token hasn\u0027t had its expiry updated?",
                                           "updatedAt":  "2021-04-20T23:05:39Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1NDU1MTc3OA==",
                                           "createdAt":  "2021-06-04T10:07:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC9Mgvg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "AntoCanza",
                                                                               "createdAt":  "2021-06-07T13:52:56Z"
                                                                           },
                                                                           {
                                                                               "content":  "ROCKET",
                                                                               "user":  "AntoCanza",
                                                                               "createdAt":  "2021-06-07T13:53:09Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "SylvainCME",
                                                                               "createdAt":  "2021-07-12T10:34:58Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "gregoriusus",
                                                                               "createdAt":  "2022-02-02T22:46:02Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "SylvainGantois",
                                                                               "createdAt":  "2022-09-28T06:13:49Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "kemsky",
                                                                               "createdAt":  "2023-03-15T22:38:28Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "s-beji",
                                                                               "createdAt":  "2023-06-05T22:35:38Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  7
                                                         },
                                           "author":  "SebastianKunz",
                                           "body":  "Not checking the expiration of the access token in SignalR is a huge security risk. And it adds some work for the appilcation developer to make sure the access token is always fresh. I think it makes sense to add it to the SignalR library where the developer can opt in the feature #14578\r\nI don\u0027t like the approach of closing the connection to then refresh the access token and then connect with the new access token. It does the job, but it\u0027s slow and hacky. There is also the possibility that the backend gets confused because of a completely new connectionId.\r\n\r\nFurthermore I see a second problem arising, which is not solved by keeping the access token fresh. And that is changing roles within the access token.\r\nFor that let me give an example.\r\n\r\nYou have a priviliged user that manages other users in your application. The priviliged user then removes a role from one of the users he manages (e.g. removes the role of adding comment to you blogpost). Assuming this communication is via SignalR and the access token is always valid (not expired) then the user is still authorized to the the tasks (comment on your blogpost) he just was removed from. In the worst case, the access token was just refreshed and the user can abuse his roles up to EXPIRATION_TIME (e.g. 4 minutes).\r\n\r\nThis is a more complex problem to solve then just making sure that the token is always valid, because the Identity Provider needs to inform you that the roles of a user were updated.\r\n\r\nTo sum this up. \r\nI see two problems with signalR and authorization. The first is that the access token is never looked at after the inital connection and second updating roles while a connection is live.\r\nI think we should focus on the first one (keeping the access token fresh). I think it would already help a lot of developers when SignalR with websockets support this feature.",
                                           "updatedAt":  "2021-06-04T10:07:09Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1NDU3ODIwMA==",
                                           "createdAt":  "2021-06-04T10:19:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC3-JzQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "AntoCanza",
                                                                               "createdAt":  "2021-06-07T13:53:00Z"
                                                                           },
                                                                           {
                                                                               "content":  "ROCKET",
                                                                               "user":  "AntoCanza",
                                                                               "createdAt":  "2021-06-07T13:53:13Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "SylvainCME",
                                                                               "createdAt":  "2021-07-12T11:33:08Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "gregoriusus",
                                                                               "createdAt":  "2022-02-02T22:43:35Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "kemsky",
                                                                               "createdAt":  "2023-03-16T14:42:29Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  5
                                                         },
                                           "author":  "JoFrMueller",
                                           "body":  "@BrennanConroy killing the connection in case of an expired refresh token sounds like a blunt hack to be honest. Everything that relates to the connection would be thrown away, while what we actually want to achieve is a \"cache invalidation\" on the side of the hub with the support of the client. Couldn\u0027t we think about it from the \"bi-directional communication feature\" perspective of SignalR itself?\r\n\r\n1. Hub informs clients some seconds (configurable) before the access token will become invalid. Either because of a timer or because of the heartbeat mechanism. The hub has to know about it, because it persists/caches the initial access token and relates it to the connection itself.\r\n2. Clients can react to this event, that is triggered by the hub to then re-send their access token (which should be refreshed by their local access token handling mechanism anyways) to allow the hub to update the authorization properties related to the client.\r\n3. The hub receives the updated token from the client and overwrites all related ClaimsPrincipal properties for the sending client and therefore updates its internally cached/connectation related state to reflect the latest acces token content.\r\n4. Because of this update, if we remove a role from a client (like described by @SebastianKunz f.e.), this change will be reflected with the next access token refresh cycle, which usually should take 5 minutes maximum.",
                                           "updatedAt":  "2021-06-04T10:19:07Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1OTkyODcwMQ==",
                                           "createdAt":  "2021-06-11T21:54:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCs7gvA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Misiu",
                                                                               "createdAt":  "2021-07-12T07:07:16Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "SylvainGantois",
                                                                               "createdAt":  "2022-09-28T06:08:23Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "BrennanConroy",
                                           "body":  "Apologies, I realize I left out some critical information when jotting down notes. Closing the connection after token expiration is one part of what we plan on implementing. We do want to have a nicer experience where the token can be refreshed without closing the connection. That does require a lot more thought and care and will be additive with the expiration check.\r\n\r\nThe current plan is to add just the expiration part in 6.0 (opt in) and then build on top of that and design the experience for refresh for a future release.",
                                           "updatedAt":  "2021-06-11T21:54:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde840jXw9",
                                           "createdAt":  "2021-07-16T20:04:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BrennanConroy",
                                           "body":  "6.0 work is done, there is a new option to close connections on auth expiration. See https://github.com/dotnet/aspnetcore/pull/32431 for info.\r\n\r\nBacklogging for future work in 7.0",
                                           "updatedAt":  "2021-07-16T20:04:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde840jXxz",
                                           "createdAt":  "2021-07-16T20:04:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2021-07-16T20:04:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde8489eP8",
                                           "createdAt":  "2022-01-27T01:03:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `.NET 7 Planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2022-01-27T01:03:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde849TJyq",
                                           "createdAt":  "2022-02-02T22:49:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC9MhEg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "SylvainGantois",
                                                                               "createdAt":  "2022-09-28T06:08:45Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "s-beji",
                                                                               "createdAt":  "2023-06-05T22:37:16Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "gregoriusus",
                                           "body":  "In addition to the security flaw mentioned before, there is also another problem. In high loaded signalr system disconnecting and reconnecting can lead to a lot of messages being lost. Disconnecting and reconnecting are expensive operations that should be avoided.\r\n\r\nThis issue is somehow addressed in many places. I guess that a lot of solutions, that are based on nsignalr, are with jwt authentication with refresh token.",
                                           "updatedAt":  "2022-02-02T22:56:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde849TO1b",
                                           "createdAt":  "2022-02-02T23:23:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "gregoriusus",
                                           "body":  "I am testing CloseOnAuthenticationExpiration feature. It works. On my development machine with all resources free it takes 1 second to process all operations:\r\n[2022-02-02T23:19:24.859Z] Information: Connection disconnected.\r\n[2022-02-02T23:19:25.904Z] Information: WebSocket connected to....\r\n\r\nA lot can happen in 1 second and on a high load system with a lot of users and messages can lead to messages lost.",
                                           "updatedAt":  "2022-02-02T23:23:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85HcRCi",
                                           "createdAt":  "2022-07-28T20:19:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "rafikiassumani-msft",
                                           "body":  "Below are individual items to consider for refreshing auth tokens for SignalR: \r\n\r\n- [ ] Fix error message on client side for OnClose (.NET7):\r\n- Add info to CloseMessage that auth is expired and make it easy for clients to see that (strongly typed exception) and request a new token if required. This should include the error message and status code (401 for example). \r\n\r\n- [ ] Immediate easy ™ win for (.NET7):\r\n- Change AccessTokenFactory to only be called on startup and on 401/403 and retry the request, not for every single http request\r\n\r\n- [ ] Doc improvement (.NET7):\r\n- Add doc on how users can setup an endpoint to refresh their token on the server\r\n\r\n- [ ] Protocol change (.NET8):\r\n- Add new hub message type for \"pre-close\" that\u0027s effectively an auth challenge and has a grace period for a response before killing connection\r\n- Could make use of Hub message headers to flow auth info to server instead.",
                                           "updatedAt":  "2022-07-28T20:24:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85NbXe4",
                                           "createdAt":  "2022-11-01T19:37:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCu88Mg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "EYES",
                                                                               "user":  "jwillmer",
                                                                               "createdAt":  "2022-11-03T09:12:12Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `.NET 8 Planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2022-11-01T19:37:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85QMPd_",
                                           "createdAt":  "2022-12-10T21:18:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODfHFMg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "alexb5dh",
                                                                               "createdAt":  "2022-12-11T04:08:00Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "gregoriusus",
                                                                               "createdAt":  "2022-12-11T11:27:59Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "rbgarcia",
                                                                               "createdAt":  "2023-03-10T12:30:51Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "reiinoldo",
                                                                               "createdAt":  "2024-04-22T16:47:50Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  4
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "This is a popular issue, so I figured I\u0027d shared some updates. The team is looking at ways to keep the make sure there\u0027s a new auth token that represents the updated user information. Since SignalR isn\u0027t a simple request-response based system, it\u0027s challenging and anything we do here will require protocol changes (that means new client and server changes). \r\n\r\nThere are 2 approaches being considered:\r\n\r\n1. A way to renew user information using [the transport protocol](https://github.com/dotnet/aspnetcore/blob/f543e3552514c5c420eeddd55c505bbc131f10a6/src/SignalR/docs/specs/TransportProtocols.md) (HTTP in the common case) \r\n2. A way to renew the user information in [the hub protocol](https://github.com/dotnet/aspnetcore/blob/f543e3552514c5c420eeddd55c505bbc131f10a6/src/SignalR/docs/specs/HubProtocol.md) \r\n\r\nDoing auth at the transport layer lets us reuse all of the ASP.NET Core based authentication handlers so it\u0027s attractive. Doing it over the transport means we need to encode the auth representation in the hub protocol and then have code on the server side that understands how to \"unpack\" the token (the equivalent of auth handlers but for SignalR specifically).\r\n\r\nThese are the forms of auth being looked at:\r\n\r\n- Cookie \r\n- JWT (generally bearer tokens)\r\n- Cert\r\n- API-Key\r\n",
                                           "updatedAt":  "2022-12-11T00:22:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85R0yNR",
                                           "createdAt":  "2023-01-05T21:21:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC9MhPA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "s-beji",
                                                                               "createdAt":  "2023-06-05T22:38:31Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "Gruski",
                                           "body":  "I\u0027d be happy if we could control when the accessTokenFactory is called to retrieve new access token. For custom authentication I would like to send a new auth token on every hub method call for reasons too elaborate to go into detail here. Sure I could do it though method parameters but that\u0027s ugly especially when there is an elegant way to do it on initial connection. Then on the back end we could develop more unified ways to custom handle those tokens, update identity, and so on.",
                                           "updatedAt":  "2023-01-05T21:21:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85SBCVs",
                                           "createdAt":  "2023-01-09T17:37:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODslc4Q==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Gruski",
                                                                               "createdAt":  "2023-01-10T03:50:09Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "kemsky",
                                                                               "createdAt":  "2023-03-15T22:36:24Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "elglogins",
                                                                               "createdAt":  "2023-04-01T09:59:24Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "davidhenley",
                                                                               "createdAt":  "2023-05-26T16:17:02Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "s-beji",
                                                                               "createdAt":  "2023-06-30T01:18:13Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "badsyntax",
                                                                               "createdAt":  "2024-08-02T13:30:31Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  6
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "@Gruski SignalR can\u0027t get a new token, the issue is about how to force the accessTokenFactory to run more than once per connection establishment for long running connections.",
                                           "updatedAt":  "2023-01-09T17:37:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85aHd5U",
                                           "createdAt":  "2023-04-17T18:48:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODFwMXA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "EYES",
                                                                               "user":  "s-beji",
                                                                               "createdAt":  "2023-05-09T12:52:08Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Ghyath-Serhal",
                                                                               "createdAt":  "2023-09-05T08:43:31Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "gregoriusus",
                                           "body":  "Has been this addressed in. NET8?  At the moment, when getting a new token with refresh token, I can only disconnect an connect with a new token to trigger all auth procedure in Signalr backend. Isn\u0027t this a big issue? Can\u0027t just implement client side function who will send some magic word with token and reauthenticate connection or change URL param? ",
                                           "updatedAt":  "2023-04-17T18:54:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85by4fa",
                                           "createdAt":  "2023-05-09T12:52:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODC-bbw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Ghyath-Serhal",
                                                                               "createdAt":  "2023-08-08T05:49:25Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "s-beji",
                                           "body":  "\u003e Has been this addressed in. NET8? At the moment, when getting a new token with refresh token, I can only disconnect an connect with a new token to trigger all auth procedure in Signalr backend. Isn\u0027t this a big issue? Can\u0027t just implement client side function who will send some magic word with token and reauthenticate connection or change URL param?\r\n\r\nI agree this would be required to implement in net8 i\u0027m having the same issues",
                                           "updatedAt":  "2023-05-09T12:52:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85ksvF7",
                                           "createdAt":  "2023-08-23T07:41:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODKFfQg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "kemsky",
                                                                               "createdAt":  "2023-08-23T17:50:36Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "marcvan-dijk",
                                                                               "createdAt":  "2023-09-07T13:50:28Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Sequelator123",
                                                                               "createdAt":  "2023-09-20T07:17:07Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "s-beji",
                                                                               "createdAt":  "2023-10-05T11:12:20Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Ghyath-Serhal",
                                                                               "createdAt":  "2023-10-18T07:13:24Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  5
                                                         },
                                           "author":  "gregoriusus",
                                           "body":  "There are at least 3 issues ( opened on this issue. Any movement on this directions or at least feedback?",
                                           "updatedAt":  "2023-08-23T07:41:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85oOpa3",
                                           "createdAt":  "2023-10-05T11:07:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODI0TLA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "s-beji",
                                                                               "createdAt":  "2023-10-05T11:12:27Z"
                                                                           },
                                                                           {
                                                                               "content":  "CONFUSED",
                                                                               "user":  "s-beji",
                                                                               "createdAt":  "2023-10-05T11:12:28Z"
                                                                           },
                                                                           {
                                                                               "content":  "CONFUSED",
                                                                               "user":  "NSTA2",
                                                                               "createdAt":  "2023-10-06T09:07:19Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "Misiu",
                                           "body":  "This issue should be moved to .NET 9 Planning as .NET 8 will be released soon. Hopefully, it will get addressed in .NET 9",
                                           "updatedAt":  "2023-10-05T11:07:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85pSFrJ",
                                           "createdAt":  "2023-10-17T12:47:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODqIr8g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "reduckted",
                                                                               "createdAt":  "2023-10-17T20:42:11Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "s-beji",
                                                                               "createdAt":  "2023-11-06T14:54:53Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "NikolayRogchev",
                                                                               "createdAt":  "2024-07-17T13:01:20Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "Skyppid",
                                           "body":  "\u003e This issue should be moved to .NET 9 Planning as .NET 8 will be released soon. Hopefully, it will get addressed in .NET 9\r\n\r\nAs often as it was moved to the next iteration without **any** visible update on it makes me doubt that .NET 9 will be our saviour. It\u0027s been two years almost since I last used it and had to work around this issue. Now again, I really thought they might have fixed it by now. But looks like even ASPNET.Core and SignalR aren\u0027t important enough projects for MS to fix critical issues. Not to mention how you can overlook this issue in the first place. Sad.",
                                           "updatedAt":  "2023-10-17T12:48:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85pS8lg",
                                           "createdAt":  "2023-10-17T14:47:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "gregoriusus",
                                           "body":  "As I am aware, there is even no clue how to solve this from architecture point of view ",
                                           "updatedAt":  "2023-10-17T14:47:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85q5ROq",
                                           "createdAt":  "2023-11-04T09:46:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "gregoriusus",
                                           "body":  "Is this issue\u0027s milestone moved to NET8 planning? ",
                                           "updatedAt":  "2023-11-04T09:46:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85q_gW3",
                                           "createdAt":  "2023-11-06T15:02:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "s-beji",
                                           "body":  "It\u0027s just to sad that signalR suffer from that issue and since months I hoped that they fix it but I guess it will never be fixed my impression is that all those Microsoft\u0027s projects are suffering from the same issues that the team behind it has not the resources to tackle all the bleeding wounds in their project and they just try to fix it but it\u0027s simply to much work for those people. That\u0027s my opinion based on the experience working at multiple .net Maui and asp.net core projects. Reported over 12 issues and followed a lot more of already reported issues that I as well encountered in those projects. And still a lot of the issues are still remaining present in the latest versions.",
                                           "updatedAt":  "2023-11-06T15:02:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85rFyHb",
                                           "createdAt":  "2023-11-06T21:51:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "gregoriusus",
                                           "body":  "@mkArtakMSFT, guess you have some insider information. Are you going to tackle this issue?",
                                           "updatedAt":  "2023-11-06T21:51:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85rGDYQ",
                                           "createdAt":  "2023-11-06T21:56:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "Hopefully in .NET 9",
                                           "updatedAt":  "2023-11-06T21:56:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85rGaF3",
                                           "createdAt":  "2023-11-06T22:11:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "gregoriusus",
                                           "body":  "@davidfowl , are there any new information regarding 2 approaches, have you talked about it?",
                                           "updatedAt":  "2023-11-06T22:11:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85rLt6E",
                                           "createdAt":  "2023-11-07T10:30:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Skyppid",
                                           "body":  "\u003e Hopefully in .NET 9\r\n\r\nThat\u0027d be great. SignalR itself is a great tool and usually works really well. But that issue is a huge deal breaker and always was. Is about time that this will be fixed.\r\n\r\nMaybe the community can help with that.",
                                           "updatedAt":  "2023-11-07T10:30:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85zX-gV",
                                           "createdAt":  "2024-02-09T10:20:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "yuvi-pc",
                                           "body":  "Came across this [stackoverflow ](https://stackoverflow.com/a/70871191/4060087) workaround. It is working for us for our self hosted service. Is this a viable solution for now? ",
                                           "updatedAt":  "2024-02-09T10:20:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85zZgzS",
                                           "createdAt":  "2024-02-09T14:50:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODWdPNg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "yuvi-pc",
                                                                               "createdAt":  "2024-02-12T20:34:59Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "gregoriusus",
                                           "body":  "\u003e Came across this [stackoverflow ](https://stackoverflow.com/a/70871191/4060087) workaround. It is working for us for our self hosted service. Is this a viable solution for now?\r\n\r\nWell, this implies to stop and reconnect... this is only solution for now....",
                                           "updatedAt":  "2024-02-09T14:50:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85zbnzY",
                                           "createdAt":  "2024-02-09T21:22:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODnRFWw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "gregoriusus",
                                                                               "createdAt":  "2024-02-09T21:34:05Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "NielsJorck",
                                                                               "createdAt":  "2024-02-13T14:57:41Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Jaben",
                                                                               "createdAt":  "2024-06-26T15:04:27Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "\u003e @davidfowl , are there any new information regarding 2 approaches, have you talked about it?\r\n\r\nYes, we would go with an \"over the transport\" approach. Which means protocol changes to accommodate doing auth without a reconnect. ",
                                           "updatedAt":  "2024-02-09T21:22:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85zbrKW",
                                           "createdAt":  "2024-02-09T21:34:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODbOSGw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "CONFUSED",
                                                                               "user":  "Ghyath-Serhal",
                                                                               "createdAt":  "2024-03-20T08:20:47Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "gregoriusus",
                                           "body":  "That\u0027s great. Is it already on road map?",
                                           "updatedAt":  "2024-02-09T21:34:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86HE9a9",
                                           "createdAt":  "2024-08-02T22:40:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODtHE5w==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "EYES",
                                                                               "user":  "Skyppid",
                                                                               "createdAt":  "2024-08-03T11:03:37Z"
                                                                           },
                                                                           {
                                                                               "content":  "EYES",
                                                                               "user":  "Cyberboss",
                                                                               "createdAt":  "2024-08-04T15:58:28Z"
                                                                           },
                                                                           {
                                                                               "content":  "EYES",
                                                                               "user":  "NklsP",
                                                                               "createdAt":  "2024-08-05T06:29:56Z"
                                                                           },
                                                                           {
                                                                               "content":  "EYES",
                                                                               "user":  "Misiu",
                                                                               "createdAt":  "2024-08-07T11:53:57Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  4
                                                         },
                                           "author":  "gregoriusus",
                                           "body":  "Any news on this topic?",
                                           "updatedAt":  "2024-08-02T22:40:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86Kx6g1",
                                           "createdAt":  "2024-09-04T09:16:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Misiu",
                                           "body":  "So maybe .NET 10? ",
                                           "updatedAt":  "2024-09-04T09:16:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86K1d3G",
                                           "createdAt":  "2024-09-04T14:47:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEDUx0w==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "s-beji",
                                                                               "createdAt":  "2024-09-04T21:05:20Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "thirstyape",
                                                                               "createdAt":  "2025-01-21T02:30:07Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "\u003e So maybe .NET 10?\r\n\r\nAt a minimum",
                                           "updatedAt":  "2024-09-04T14:47:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86K3pVD",
                                           "createdAt":  "2024-09-04T19:45:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Skyppid",
                                           "body":  "Wow that\u0027s crazy... too bad there\u0027s not much good alternatives to SignalR as of now...",
                                           "updatedAt":  "2024-09-04T19:45:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86K4eVq",
                                           "createdAt":  "2024-09-04T20:57:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEDU0nQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "LAUGH",
                                                                               "user":  "thirstyape",
                                                                               "createdAt":  "2025-01-21T02:37:58Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "reduckted",
                                           "body":  "\u003e At a minimum\r\n\r\nThe earliest we\u0027ll see it is in the next version? How about a maximum? 😆 ",
                                           "updatedAt":  "2024-09-04T20:57:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86K4tOY",
                                           "createdAt":  "2024-09-04T21:07:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "s-beji",
                                           "body":  "\u003e \u003e At a minimum\n\u003e \n\u003e \n\u003e \n\u003e The earliest we\u0027ll see it is in the next version? How about a maximum? 😆 \n\nIt\u0027s sadly the fact that Microsoft does not invest enough in the development department in comparison to how many technologies they are invented and maintaining. \n\nBest course is to build the solution yourself or even better try to avoid such incompleted frameworks.",
                                           "updatedAt":  "2024-09-04T21:07:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86bLl6Z",
                                           "createdAt":  "2025-01-21T02:38:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEgVssQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "s-beji",
                                                                               "createdAt":  "2025-01-21T19:15:37Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "Misiu",
                                                                               "createdAt":  "2025-09-01T08:24:10Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "thirstyape",
                                           "body":  "6 years and 9 months and not even close to any real progress, just a bunch of classic MS bureaucracy.\n\nWhy is there not at least a manual way to refresh tokens or even just the stored value?",
                                           "updatedAt":  "2025-01-21T02:38:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86bOC_X",
                                           "createdAt":  "2025-01-21T09:28:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEDay3g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "s-beji",
                                                                               "createdAt":  "2025-01-21T09:48:38Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "reduckted",
                                                                               "createdAt":  "2025-01-21T11:10:17Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "thirstyape",
                                                                               "createdAt":  "2025-01-21T15:05:00Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "Skyppid",
                                           "body":  "\u003e 6 years and 9 months and not even close to any real progress, just a bunch of classic MS bureaucracy.\n\u003e \n\u003e Why is there not at least a manual way to refresh tokens or even just the stored value?\n\nFrom what I understand by using the `accessTokenFactory` you always fetch a fresh token when a request is being sended. To optimize it, you can cache it until expiry and request a new one only if expired.\n\n```ts\n    const hubConnectionBuilder = new HubConnectionBuilder().withUrl(this.SERVER_HUB_URL, {\n      transport: HttpTransportType.None,\n      logger: LogLevel.Debug,\n      accessTokenFactory: () =\u003e this.identityService.getToken()\n    });\n```",
                                           "updatedAt":  "2025-01-21T09:28:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86bOP02",
                                           "createdAt":  "2025-01-21T09:50:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "s-beji",
                                           "body":  "\u003e \u003e 6 years and 9 months and not even close to any real progress, just a bunch of classic MS bureaucracy.\n\u003e \u003e \n\u003e \u003e Why is there not at least a manual way to refresh tokens or even just the stored value?\n\u003e \n\u003e From what I understand by using the `accessTokenFactory` you always fetch a fresh token when a request is being sended. To optimize it, you can cache it until expiry and request a new one only if expired.\n\u003e \n\u003e ```ts\n\u003e     const hubConnectionBuilder = new HubConnectionBuilder().withUrl(this.SERVER_HUB_URL, {\n\u003e       transport: HttpTransportType.None,\n\u003e       logger: LogLevel.Debug,\n\u003e       accessTokenFactory: () =\u003e this.identityService.getToken()\n\u003e     });\n\u003e ```\n\nThis does not solve the original issue. The issue is that a reconnect is required to revaildet the token if its expired and that requires a full reconnect and if a client is connected without any connection loss even the token is invalid he can still accces protected hub methods etc . And some other issues that\u0027d come with the whole auth system of signalR just read the thread  ",
                                           "updatedAt":  "2025-01-21T09:50:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86bRVVs",
                                           "createdAt":  "2025-01-21T15:16:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "gregoriusus",
                                           "body":  "Interesting that this is not some major issue. No one is refreshing token until logout/login?",
                                           "updatedAt":  "2025-01-21T15:16:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86bRWim",
                                           "createdAt":  "2025-01-21T15:17:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Skyppid",
                                           "body":  "Is it? I remember in a previous company we used it and had the problem that after the expiry all requests failed. Back then we had to actually reconnect. But using the factory it requests a token on each request, so if the token is outdated it should still fail?\n\nOr do you mean backend-side? Honestly, we haven\u0027t been using SignalR that much so far, as those features were just UX convenience and there were more pressing things to build. It works for us, but maybe I\u0027m overlooking something here as I\u0027m not that deep into it anymore.\n\nJust wanted to hint that this helps at least with some common issues in low-frequency / non-critical scenarios.",
                                           "updatedAt":  "2025-01-21T15:17:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86bReeC",
                                           "createdAt":  "2025-01-21T15:29:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "thirstyape",
                                           "body":  "\u003e Interesting that this is not some major issue. No one is refreshing token until logout/login?\n\nBy default this is pretty much the issue, the token request does not happen until an HTTP request goes out, which doesn\u0027t happen often as most communication is facilitated via WebSocket. \n\nMaybe the thought process here is that since the connection remains open it doesn\u0027t require re-validation? Not sure I agree with this.\n\nJust seems wrong when I\u0027m adding methods on the hub for them to not check for a valid token on each request. And when an invalid token is found just abort the connection. My current workaround is two-fold: on the hub add a method that informs whether the token is valid; on the client check with the hub each request whether the token is valid and reconnect when it is not. Additionally, the hub will do a single retry if the request failed due to closure from the hub.",
                                           "updatedAt":  "2025-01-21T15:29:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86bRfKM",
                                           "createdAt":  "2025-01-21T15:31:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "gregoriusus",
                                           "body":  "Yes, we are solving now, on client side, to pool all request to signalr when we are refreshing token and then we disconnect and reconnect. But on high volume of calls to/from signalr this will pose a problem of messages being lost or invest on some kind of retry mechanism. ",
                                           "updatedAt":  "2025-01-21T15:31:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86bRh8C",
                                           "createdAt":  "2025-01-21T15:35:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "thirstyape",
                                           "body":  "\u003e Yes, we are solving now, on client side, to pool all request to signalr when we are refreshing token and then we disconnect and reconnect. But on high volume of calls to/from signalr this will pose a problem of messages being lost or invest on some kind of retry mechanism.\n\nExactly!\n\nOnly dealing with maybe 100 low traffic connections at a time right now, but this is going to be a scaling nightmare. ",
                                           "updatedAt":  "2025-01-21T15:35:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86bRj0I",
                                           "createdAt":  "2025-01-21T15:38:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEDbJiQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "thirstyape",
                                                                               "createdAt":  "2025-01-21T15:42:12Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "s-beji",
                                           "body":  "\u003e Yes, we are solving now, on client side, to pool all request to signalr when we are refreshing token and then we disconnect and reconnect. But on high volume of calls to/from signalr this will pose a problem of messages being lost or invest on some kind of retry mechanism. \n\nIt\u0027s more about the actual backend issue that we can have the case an invalid token or a user that changed permissions on runtime can still access protected methods since the validation just happens on the initial handshake of the websocket connection afterwards if the connection persists than we got the issue with unauthorized users can still access protected resources. The only workaround is to attach to the signalR heartbeat and validate it yourself but on client side we got the reconnect issue it\u0027s a slight different issue but still all is kinda sharing the same issue that authentication is rather fragile in signalR \n\nThe workaround works but ain\u0027t optimal and causes scaling issues if the demand increases so yeah total conclusion is rather bad since it\u0027s a issue known for nearly 7 years ",
                                           "updatedAt":  "2025-01-21T15:38:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86bRlGj",
                                           "createdAt":  "2025-01-21T15:40:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "s-beji",
                                           "body":  "\u003e \u003e Yes, we are solving now, on client side, to pool all request to signalr when we are refreshing token and then we disconnect and reconnect. But on high volume of calls to/from signalr this will pose a problem of messages being lost or invest on some kind of retry mechanism.\n\u003e \n\u003e Exactly!\n\u003e \n\u003e Only dealing with maybe 100 low traffic connections at a time right now, but this is going to be a scaling nightmare. \n\nSadly we already experienced issues  at our company in therms of scaling and there is no real solution sadly since it\u0027s a concept issue in signalR and can\u0027t be changed that easily that\u0027s why I wonder what did Microsoft all the 6 years. That would be sufficient time to fix such a major flaw ",
                                           "updatedAt":  "2025-01-21T15:41:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86bRpTW",
                                           "createdAt":  "2025-01-21T15:47:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "thirstyape",
                                           "body":  "\u003e It\u0027s more about the actual backend issue that we can have the case an invalid token or a user that changed permissions on runtime can still access protected methods since the validation just happens on the initial handshake of the websocket connection afterwards if the connection persists than we got the issue with unauthorized users can still access protected resources. The only workaround is to attach to the signalR heartbeat and validate it yourself but on client side we got the reconnect issue it\u0027s a slight different issue but still all is kinda sharing the same issue that authentication is rather fragile in signalR\n\u003e \n\u003e The workaround works but ain\u0027t optimal and causes scaling issues if the demand increases so yeah total conclusion is rather bad since it\u0027s a issue known for nearly 7 years\n\nWow! I hadn\u0027t even thought of token invalidation or permission changes, that\u0027s huge.",
                                           "updatedAt":  "2025-01-21T15:47:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86bRqI6",
                                           "createdAt":  "2025-01-21T15:48:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "gregoriusus",
                                           "body":  "Me niether regarding permission changes, this is additional issue :-(\n\nAt the time when they architect this, refresh token was not a big issue. We have one solution on old Signalr (NET framework) and we are using cookie based authentication. It works flawless. Anyone knows, if it is possible to mix and for signalr send cookie based authneticaton with some custom validation on server and for API calls token based?",
                                           "updatedAt":  "2025-01-21T15:49:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86bRsaK",
                                           "createdAt":  "2025-01-21T15:52:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEGfJCA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "7amou3",
                                                                               "createdAt":  "2025-02-16T00:17:08Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "s-beji",
                                           "body":  "\u003e \u003e It\u0027s more about the actual backend issue that we can have the case an invalid token or a user that changed permissions on runtime can still access protected methods since the validation just happens on the initial handshake of the websocket connection afterwards if the connection persists than we got the issue with unauthorized users can still access protected resources. The only workaround is to attach to the signalR heartbeat and validate it yourself but on client side we got the reconnect issue it\u0027s a slight different issue but still all is kinda sharing the same issue that authentication is rather fragile in signalR\n\u003e \u003e \n\u003e \u003e The workaround works but ain\u0027t optimal and causes scaling issues if the demand increases so yeah total conclusion is rather bad since it\u0027s a issue known for nearly 7 years\n\u003e \n\u003e Wow! I hadn\u0027t even thought of token invalidation or permission changes, that\u0027s huge.\n\nIt\u0027s a huge issue and no real solution wich would solve the root issue \n\nI mean that\u0027s why nobody srs uses Microsoft tech because their them self don\u0027t use it in the extend their should to prove it\u0027s viable for production and sadly this case if you require high security that\u0027s a no no \n\nIt\u0027s a killer issue out of my perspective I wonder why nobody points that out as what it is \n\nI mean I follow this issue since 4 years and still no progress at all only more people find out about the surface issue but only a small handful of people understands the overall impact on therms of auth security and I am no expert in that terms and still even I saw the issues that comes with this type of of implementation ",
                                           "updatedAt":  "2025-01-21T15:54:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86bRxrD",
                                           "createdAt":  "2025-01-21T16:00:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "gregoriusus",
                                           "body":  "Do you think that token authentication for api calls and cookie based for signalr would help in this issue? Just a thought...",
                                           "updatedAt":  "2025-01-21T16:00:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86bR7T_",
                                           "createdAt":  "2025-01-21T16:14:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "thirstyape",
                                           "body":  "\u003e Do you think that token authentication for api calls and cookie based for signalr would help in this issue? Just a thought...\n\nFrom what I can tell this would be subject to the same issue. \n\nThe documentation, and examples I googled, seem to suggest that the cookie would only be provided on the initial HTTP request, and subsequent requests over the WebSocket would be doing the same thing as token based requests. ",
                                           "updatedAt":  "2025-01-21T16:14:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86bSQGb",
                                           "createdAt":  "2025-01-21T16:50:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEDb9JQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "s-beji",
                                                                               "createdAt":  "2025-01-21T17:12:14Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "channeladam",
                                           "body":  "It has been a while since I have looked at the SignalR code in my project, but I think I mitigate the many SignalR issues/concerns with the following approach:\n\n1. My  SignalR access token is a very short-lived token just for the hubs - no other endpoints will accept them - they are different from my normal api endpoint access tokens.\n\n2. I never send data to the hub via the SignalR connection!  When calling the backend, I always use a normal api endpoint with the normal session security mechanism.\n\n3. As you can guess, data is only sent from the backend to the frontend, for the specified user guid that was part of the original access token when initially connecting to SignalR.  The backend can check the current role of the user (e.g. against the database) before sending the data if necessary or if concerned about a role change.\nI believe that makes it okay for the SignalR connection to remain open as long as the user is on that web page.\nIf the user\u0027s web session times out, they are redirected to the login page, so their connection is closed from the frontend at that point.\n\n4. Due to the javascript library having issues reconnecting server-sent events or long-polling (more specifically not bothering to properly inspect the response status code), I use a custom HttpClient that extends DefaultHttpClient and overrides send()  in order to catch any error and and return a specific HttpResponse to address those issues to allow them to reconnect.\n\nHaving said all that, if I recall correctly (please be kind - I could be wrong!), the backend Hub Context keeps the initial connection request details - so the user\u0027s guid that was in the SignalR access token is always accessible via a claim via the Hub.Context.GetHttpContext().  I believe, if I wanted to, I could add other custom claims such as a session expiry timestamp if I wanted to check that later in a hub method, and then call Abort() if it had expired - or something similar if there was a role change and it had to be invalidated. Could be wrong!  \nEither way, given my approach, I don\u0027t need that.\n\nHope this helps someone.",
                                           "updatedAt":  "2025-01-21T16:50:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86bSdNq",
                                           "createdAt":  "2025-01-21T17:13:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEDb-TA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "channeladam",
                                                                               "createdAt":  "2025-01-21T17:14:29Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "s-beji",
                                           "body":  "\u003e It has been a while since I have looked at the SignalR code in my project, but I think I mitigate the many SignalR issues/concerns with the following approach:\n\u003e \n\u003e 1. My  SignalR access token is a very short-lived token just for the hubs - no other endpoints will accept them - they are different from my normal api endpoint access tokens.\n\u003e \n\u003e 2. I never send data to the hub via the SignalR connection!  When calling the backend, I always use a normal api endpoint with the normal session security mechanism.\n\u003e \n\u003e 3. As you can guess, data is only sent from the backend to the frontend, for the specified user guid that was part of the original access token when initially connecting to SignalR.  The backend can check the current role of the user (e.g. against the database) before sending the data if necessary or if concerned about a role change.\n\u003e I believe that makes it okay for the SignalR connection to remain open as long as the user is on that web page.\n\u003e If the user\u0027s web session times out, they are redirected to the login page, so their connection is closed from the frontend at that point.\n\u003e \n\u003e 4. Due to the javascript library having issues reconnecting server-sent events or long-polling (more specifically not bothering to properly inspect the response status code), I use a custom HttpClient that extends DefaultHttpClient and overrides send()  in order to catch any error and and return a specific HttpResponse to address those issues to allow them to reconnect.\n\u003e \n\u003e Having said all that, if I recall correctly (please be kind - I could be wrong!), the backend Hub Context keeps the initial connection request details - so the user\u0027s guid that was in the SignalR access token is always accessible via a claim via the Hub.Context.GetHttpContext().  I believe, if I wanted to, I could add other custom claims such as a session expiry timestamp if I wanted to check that later in a hub method, and then call Abort() if it had expired - or something similar if there was a role change and it had to be invalidated. Could be wrong!  \n\u003e Either way, given my approach, I don\u0027t need that.\n\u003e \n\u003e Hope this helps someone.\n\nSadly it won\u0027t work for my use case but I see how it can minimize the issues for many use cases but still they are just a workaround out of my perspective ",
                                           "updatedAt":  "2025-01-21T17:13:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86bSvRH",
                                           "createdAt":  "2025-01-21T17:47:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Gruski",
                                           "body":  "I need this a few years ago too but since there was nothing being done I ended up changing my auth from token based to where info was actually stored in token, to database based so now token never needs to be updated because I can just update the auth info of the static client token on the server side in DB user\u0027s record. That also helped with heterogeneous systems that could not share auth which I also needed and sliding expiration which I believe none of the other workarounds address. Then use filters in the hub to auth against DB on every SignalR request.",
                                           "updatedAt":  "2025-01-21T17:57:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86bTHh3",
                                           "createdAt":  "2025-01-21T18:40:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEDc3MA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "thirstyape",
                                                                               "createdAt":  "2025-01-21T19:02:59Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "s-beji",
                                           "body":  "https://www.youtube.com/watch?v=kAGlATRcgY4\nSecurity \u0026 Auth .NET 10 planning discussion\n\nThats currently live on going maybe it will tackel this issue in .net 10\nAt least i hope so ",
                                           "updatedAt":  "2025-01-21T18:40:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86bTQv2",
                                           "createdAt":  "2025-01-21T19:00:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOENqpgw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "thirstyape",
                                                                               "createdAt":  "2025-01-21T19:02:55Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "boukenka",
                                                                               "createdAt":  "2025-01-22T07:56:43Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "TBG-FR",
                                                                               "createdAt":  "2025-01-22T10:31:27Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "Skyppid",
                                                                               "createdAt":  "2025-01-22T15:05:26Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "JoostVanVelthoven",
                                                                               "createdAt":  "2025-01-27T07:43:30Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "Misiu",
                                                                               "createdAt":  "2025-04-10T08:09:43Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  6
                                                         },
                                           "author":  "s-beji",
                                           "body":  "They mentioned that it will be worked on this issue in .Net 10 \n\nGladly 🎉",
                                           "updatedAt":  "2025-01-21T19:00:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86u9F7G",
                                           "createdAt":  "2025-06-03T13:30:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Vandersteen",
                                           "body":  "Looks like they removed it from the list\n\n\u003cimg width=\"385\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/64845a56-76de-48f0-b5e3-dccf1b90346f\" /\u003e",
                                           "updatedAt":  "2025-06-03T13:30:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86u9L9i",
                                           "createdAt":  "2025-06-03T13:34:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Misiu",
                                           "body":  "It is still in .NET 10 Planning, so I hope this will be finally added. Fingers crossed.",
                                           "updatedAt":  "2025-06-03T13:34:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86u9MZl",
                                           "createdAt":  "2025-06-03T13:34:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "s-beji",
                                           "body":  "Fml I was really hoping they tackle that this time it\u0027s just disappointing ",
                                           "updatedAt":  "2025-06-03T13:34:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86u9TrB",
                                           "createdAt":  "2025-06-03T13:40:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEVRh5g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "s-beji",
                                                                               "createdAt":  "2025-06-03T16:19:23Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "reduckted",
                                                                               "createdAt":  "2025-06-03T21:33:07Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Misiu",
                                                                               "createdAt":  "2025-06-04T09:05:12Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "Skyppid",
                                           "body":  "\u003e It is still in .NET 10 Planning, so I hope this will be finally added. Fingers crossed.\n\n.NET is already in RC - this won\u0027t be coming. At least the 2 weeks of workaround were now well invested and not just something we\u0027re gonna rip out in 3 months. Still it\u0027s hilarious how neglected this issue is.\n\nSignalR has been spamming our Sentry for weeks now with thousands of incidents as once the token expires any disconnect leads to an exception due to user info not being valid anymore.\n\nNow we signal to the backend services that a user reconnects for a new token, then we cut the connection but keep the state and reconnect. Acknowledgement happens, so in case it connects to a different pod the original knows it was handled. It\u0027s like 4 times the size of what our current hub actually handles feature-wise just to make the connection work.\n\nI\u0027d like to know why they keep discarding this issue all the time. It\u0027s a severe flaw. Would it require to rebuild SignalR from scratch or do they lack enough experienced developers to work out a solution for that? It\u0027s not quantum computing, is it?",
                                           "updatedAt":  "2025-06-03T13:40:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86u9kvK",
                                           "createdAt":  "2025-06-03T13:55:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "martincostello",
                                           "body":  "\u003e It is still in .NET 10 Planning, so I hope this will be finally added\n\nGiven many other issues against the .NET 10 milestone have already been moved back to Backlog for lack of capacity I imagine this same is the case for this issue and it\u0027s just that the milestone hasn\u0027t been updated.\n\n\u003e .NET is already in RC\n\nThis isn\u0027t the case - that\u0027s usually in August. The next release for 10 is preview.5, and I imagine we\u0027ll get preview.6 in July.\n",
                                           "updatedAt":  "2025-06-03T13:59:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86vMOiW",
                                           "createdAt":  "2025-06-04T09:03:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Skyppid",
                                           "body":  "\u003e \u003e .NET is already in RC\n\u003e \n\u003e This isn\u0027t the case - that\u0027s usually in August. The next release for 10 is preview.5, and I imagine we\u0027ll get preview.6 in July.\n\nTrue, my bad, mixed up Preview and RC. But still, no doubt that this won\u0027t come in .NET 10 as well. Who knows when though, as often as they moved it out of the roadmap I doubt it\u0027s gonna be in any of the next versions though. Well it works now and we won\u0027t add any features on top of it until it\u0027s fixed. Rather switch to a different solution alltogether.",
                                           "updatedAt":  "2025-06-04T09:03:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86vweOe",
                                           "createdAt":  "2025-06-06T09:56:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "gregoriusus",
                                           "body":  "But what is other solution? socket.io?",
                                           "updatedAt":  "2025-06-06T09:56:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86vxpu6",
                                           "createdAt":  "2025-06-06T11:58:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEhmL-A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "s-beji",
                                                                               "createdAt":  "2025-06-06T11:59:19Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "reduckted",
                                                                               "createdAt":  "2025-06-07T00:41:28Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Misiu",
                                                                               "createdAt":  "2025-06-11T06:04:00Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "RenatoCaenaro",
                                                                               "createdAt":  "2025-07-07T14:01:43Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "NikolayRogchev",
                                                                               "createdAt":  "2025-09-10T04:34:07Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  5
                                                         },
                                           "author":  "Skyppid",
                                           "body":  "That, raw websockets (unbearable amount of work probably) or gRPC Streaming. Unfortunately not a lot of good alternatives. That\u0027s why it\u0027s even worse that MS is not fixing the most crucial and basic issues of SignalR since it\u0027s actually a great tool.",
                                           "updatedAt":  "2025-06-06T11:58:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86vyXnA",
                                           "createdAt":  "2025-06-06T13:04:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "gregoriusus",
                                           "body":  "Well, at least other solutions (socket.io, MQTTnet), have ability to change headers on server side. Headers are set at handshake and remain same for whole session. But then one can make custom method resfresh-token and refresh token header on server side.",
                                           "updatedAt":  "2025-06-06T13:04:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde87Bm84z",
                                           "createdAt":  "2025-09-03T08:28:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Misiu",
                                           "body":  "So maybe .NET11? There is .NET 11 Planning Milestone.",
                                           "updatedAt":  "2025-09-03T08:28:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde87CM55d",
                                           "createdAt":  "2025-09-05T12:21:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEhmL3Q==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "reduckted",
                                                                               "createdAt":  "2025-09-05T23:21:05Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "s-beji",
                                                                               "createdAt":  "2025-09-06T10:27:26Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "NikolayRogchev",
                                                                               "createdAt":  "2025-09-10T04:33:47Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "Skyppid",
                                           "body":  "We will certainly get rid of it. Seems like even though it\u0027s a great tool in theory the overall usage of it is too low for MS to care about maintaining it or even fixing the most crucial of design flaws. It\u0027s been known for years, makes it completely useless in almost any real use case and yet it get\u0027s ditched from the roadmap year by year.\n\nBuilding on broken foundations.",
                                           "updatedAt":  "2025-09-05T12:21:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde87CRq1-",
                                           "createdAt":  "2025-09-05T18:49:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Gruski",
                                           "body":  "\u003e We will certainly get rid of it. \n\nGet rid of what? SignalR? The thread is about adding a feature to it.\n\n",
                                           "updatedAt":  "2025-09-05T18:49:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde87CrCwh",
                                           "createdAt":  "2025-09-08T12:27:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEhmLyA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "NikolayRogchev",
                                                                               "createdAt":  "2025-09-10T04:33:35Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "Skyppid",
                                           "body":  "\u003e \u003e We will certainly get rid of it.\n\u003e \n\u003e Get rid of what? SignalR? The thread is about adding a feature to it.\n\nSorry, I\u0027m just frustrated. I mean this feature request exists for 7 years and was officially advertised to be addressed in .NET 10. Now it\u0027s back to Backlog, not even .NET 11. It\u0027s a fundamental flaw that makes SignalR useless in almost any production scenario or causes a painful amount of boilerplate to manually fix with plenty of issues coming with that.\n\nI\u0027ll shut up now, I get that it\u0027s the wrong place to vent and am sorry for that. Still, it\u0027s really just frustrating. But we will ditch SignalR. There are other solutions and by now I lost any hope and regret the time we spent builing on top of it.",
                                           "updatedAt":  "2025-09-08T12:27:32Z"
                                       }
                                   ],
                         "totalCount":  75
                     },
        "title":  "Refreshing auth tokens for SignalR",
        "labels":  [
                       "Needs: Design",
                       "enhancement",
                       "area-auth",
                       "area-signalr",
                       "Blazor ♥ SignalR",
                       "severity-major",
                       "affected-medium"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/4121",
        "createdAt":  "2018-05-01T22:48:49Z",
        "number":  4121,
        "author":  "HaoK",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2020-11-10T23:24:54Z",
        "body":  "Might be useful to give an brief overview of what each sample does consolidated in one place at the root of the repo",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "Consider adding overview/listing of all samples in root README",
        "labels":  [
                       "task",
                       "area-auth",
                       "Samples",
                       "severity-nice-to-have",
                       "affected-few"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/4652",
        "createdAt":  "2018-05-29T16:36:32Z",
        "number":  4652,
        "author":  "null-d3v",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-10-28T14:09:41Z",
        "body":  "# Overview\r\n\r\nI have a basic MVC website utilizing OIDC with authorization code flow for authentication. After implementing a content security policy, remote sign out will no longer function.\r\n\r\nOn remote signout the OpenIdConnectHandler will respond with a response of code 200 but with no body. As a result, browsers will interpret the response by improvising the text/html content. This can result in a content security policy violation based on the browser\u0027s improvisation.\r\n\r\n# Reproduction\r\n\r\n[I have a repository with the most basic configuration.](https://github.com/null-d3v/OidcCsp)\r\nUsing Chrome, navigate directly to the `RemoteSignOutPath` (/signout-oidc)\r\nChrome will report a content security policy violation from the pre element\u0027s inline style:\r\n```\r\n\u003chtml\u003e\r\n    \u003chead\u003e\u003c/head\u003e\r\n    \u003cbody\u003e\r\n        \u003cpre style=\"word-wrap: break-word; white-space: pre-wrap;\"\u003e\u003c/pre\u003e\r\n    \u003c/body\u003e\r\n\u003c/html\u003e\r\n```\r\n\r\nCurrently there is limited recourse. I understand I have several options: using \u0027unsafe-inline\u0027, overriding the remote sign out implementation via the `OnRemoteSignOut` event, or add middleware to change the content security policy for the `RemoteSignOutPath` specifically. These options are somewhat contrived and not what I would think ideal. However, if there is a better solution that I am overlooking I would appreciate any insight.\r\n\r\nI would request consideration for the text/html status code 200 HTTP responses include a body to avoid this browser improvisation.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOF-mHoA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM5Mjg1NjM4MQ==",
                                           "createdAt":  "2018-05-29T17:04:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Additional mitigation: UseStatusCodePages\r\nhttps://github.com/aspnet/Diagnostics/blob/2f297de23215f981d6ed521868e4f235ee8afa48/samples/StatusCodePagesSample/Startup.cs",
                                           "updatedAt":  "2018-05-29T17:04:59Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQwMTE4MDU3Ng==",
                                           "createdAt":  "2018-06-28T21:34:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Eilon",
                                           "body":  "It seems worth considering placing a simple text response in the body.",
                                           "updatedAt":  "2018-06-28T21:34:38Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Empty body responses can violate content security policy",
        "labels":  [
                       "enhancement",
                       "area-auth",
                       "help candidate"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/4651",
        "createdAt":  "2018-06-01T17:54:50Z",
        "number":  4651,
        "author":  "Tratcher",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-10-28T14:09:40Z",
        "body":  "\"Correlation failed\" is one of the most common failures in OIDC or OAuth flows. Many of the things that can go wrong here happen on the client and can\u0027t be traced from the server. However there\u0027s one scenario where everything does flow back to the server and the server fails to decrypt the values. This can happen in a multi-node environment with misconfigured dataprotection (RE: https://github.com/aspnet/Security/issues/1755). We can highlight this by logging decryption failures in OAuth, OIDC, and CookieAuth.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOGZVrkA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQwMTE3OTY0MQ==",
                                           "createdAt":  "2018-06-28T21:30:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Eilon",
                                           "body":  "Marking as up-for-grabs in Backlog.",
                                           "updatedAt":  "2018-06-28T21:30:56Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQyOTIyMjgwMA==",
                                           "createdAt":  "2018-10-12T06:49:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SanderDeclerck",
                                           "body":  "Would it perhaps be possible to have a more specific Exception type for this as well? Then it would be easier to handle this kind of issue in an application.\r\n\r\nI am investigating a \"correlation failed\" issue in one of my applications, and in order to add extra logging when this exception occurs, I needed to add a check on the Exception message. Wouldn\u0027t it be nicer if we could check for a specific Exception type instead?\r\n\r\nThis might be especially the case as:\r\n\r\n\u003e \"Correlation failed\" is one of the most common failures in OIDC or OAuth flows.",
                                           "updatedAt":  "2018-10-12T06:49:20Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Log decryption failures",
        "labels":  [
                       "enhancement",
                       "area-auth",
                       "severity-minor",
                       "affected-medium",
                       "help candidate"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/4650",
        "createdAt":  "2018-07-11T12:29:14Z",
        "number":  4650,
        "author":  "jgoyvaerts",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCvYR8g==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "jokk-itu",
                                            "createdAt":  "2023-04-10T11:04:58Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2021-12-07T22:08:15Z",
        "body":  "I\u0027m integrating with an identity provider who uses OpenId connect with userinfo in an encrypted jwt.\r\n\r\nUnfortunately, OpenIdConnectHandler is unable to handle this specific case. Crashes at: https://github.com/aspnet/Security/blob/beaa2b443d46ef8adaf5c2a89eb475e1893037c2/src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectHandler.cs#L815-L819 because userInfoEndpointJwt.Payload is null in this case\r\n\r\nSee also https://github.com/aspnet/Security/pull/517#discussion_r42279158 where @PinpointTownes suggests it will possibly crash but he can\u0027t test it versus a server with this behavior.\r\n\r\nSince it\u0027s allowed in the openid connect spec, the handler should probably be able to handle it.\r\n\r\nI managed to make it work by replacing the code above with this:\r\n\r\n\r\n    else if (contentType.MediaType.Equals(\"application/jwt\", StringComparison.OrdinalIgnoreCase))\r\n            {\r\n                var validationParameters = Options.TokenValidationParameters.Clone();\r\n                validationParameters.RequireSignedTokens = false;\r\n                validationParameters.ValidateLifetime = false;\r\n                if (_configuration != null)\r\n                {\r\n                    var issuer = new[] { _configuration.Issuer };\r\n                    validationParameters.ValidIssuers = validationParameters.ValidIssuers?.Concat(issuer) ?? issuer;\r\n                    validationParameters.IssuerSigningKeys = validationParameters.IssuerSigningKeys?.Concat(_configuration.SigningKeys)\r\n                                                             ?? _configuration.SigningKeys;\r\n                }\r\n\r\n                var princip = Options.SecurityTokenValidator.ValidateToken(userInfoResponse, validationParameters, out SecurityToken validatedToken);\r\n                var userInfoJwt = validatedToken as JwtSecurityToken;\r\n                user = JObject.FromObject(userInfoJwt.Payload);\r\n                userInfoResponse = new JwtSecurityTokenHandler().WriteToken(userInfoJwt.InnerToken);\r\n    }\r\n\r\nBut this is just an ugly workaround for this specific provider, I\u0027m sure someone can come up with a more generic implementation which fixes both cases. (The reason I\u0027m replacing the userInfoResponse is because later in the method the userInfoResponse is being validated and this method ALSO assumes it\u0027s unencrypted)",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOOug2BQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQwNDE2MzMxNQ==",
                                           "createdAt":  "2018-07-11T13:11:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "\u003e See also #517 (comment) where @PinpointTownes suggests it will possibly crash but he can\u0027t test it versus a server with this behavior.\r\n\r\nGlad to know I was right :rofl: \r\n\r\nMore seriously: another workaround may consist in disabling the built-in userinfo retrieval support and doing it yourself using the `TokenValidated` event.",
                                           "updatedAt":  "2018-07-11T13:11:02Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQwNDE2NDk2Ng==",
                                           "createdAt":  "2018-07-11T13:16:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jgoyvaerts",
                                           "body":  "Should I really be writing workarounds when integrating with a party who follows the specification? :wink: \r\n\r\nMy goal is to improve the current implementation so it supports more variants of openid connect out of the box, and hopefully this issue can help with that.",
                                           "updatedAt":  "2018-07-11T13:16:47Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQwNDE2NTc4MQ==",
                                           "createdAt":  "2018-07-11T13:19:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "\u003e Should I really be writing workarounds when integrating with a party who follows the specification?\r\n\r\nWorkarounds are not long-term fixes, they\u0027re just meant to unblock you until a proper fix is released :smile: \r\n\r\nFixing the OIDC handler is certainly the right thing to do, but you\u0027ll have to wait for 2.2 to ship to benefit from your fix :smile: ",
                                           "updatedAt":  "2018-07-11T13:19:20Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQwNTc0NzUwNw==",
                                           "createdAt":  "2018-07-17T22:22:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Eilon",
                                           "body":  "@brentschmaltz - do  you have a tracking item for supporting this in IdentityModel?",
                                           "updatedAt":  "2018-07-17T22:22:18Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQwNjAzMjcxNg==",
                                           "createdAt":  "2018-07-18T18:38:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brentschmaltz",
                                           "body":  "@Eilon IdentityModel supports JWE. \r\nThe problem is as @PinpointTownes points out the OIDC handle doesn\u0027t recognize or support JWE.\r\nWe have the pieces in place that would allow us to put a solution together. I believe it would involve changes to ASP.Net.",
                                           "updatedAt":  "2018-07-18T18:39:04Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQwNjAzMzkzMQ==",
                                           "createdAt":  "2018-07-18T18:42:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jgoyvaerts",
                                           "body":  "The problem exists in 2 places, the following 2 parts assume that the token is unencrypted:\r\nhttps://github.com/aspnet/Security/blob/beaa2b443d46ef8adaf5c2a89eb475e1893037c2/src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectHandler.cs#L815-L819\r\nhttps://github.com/aspnet/Security/blob/beaa2b443d46ef8adaf5c2a89eb475e1893037c2/src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectHandler.cs#L834-L838\r\n\r\nChanges in the validator could be avoided by decrypting the token and then reassigning the unencrypted inner token to the userInfoResponse variable (similar to Id_token, the validator doesn\u0027t do decryption, it only validates unencrypted tokens). However, the resulting code wouldn\u0027t be very pretty...",
                                           "updatedAt":  "2018-07-18T18:42:30Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQwNjA2NDU3OQ==",
                                           "createdAt":  "2018-07-18T20:32:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Eilon",
                                           "body":  "Got it; we\u0027ll evaluate what\u0027s needed in ASP.NET Core.",
                                           "updatedAt":  "2018-07-18T20:32:06Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQwNjA3MzYwNw==",
                                           "createdAt":  "2018-07-18T21:03:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "What identity servers provide encrypted tokens that we can test against?",
                                           "updatedAt":  "2018-07-18T21:03:03Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQwNjA3NjMzNg==",
                                           "createdAt":  "2018-07-18T21:13:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jgoyvaerts",
                                           "body":  "I\u0027m afraid the one I encountered is private and I\u0027m unable to share it for\r\ntesting.\r\n\r\nMaybe someone can setup a IdentityServer4 repo PoC which encrypts userinfo\r\ntokens?",
                                           "updatedAt":  "2018-07-18T21:15:09Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQwNjM3OTgzOA==",
                                           "createdAt":  "2018-07-19T18:57:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brentschmaltz",
                                           "body":  "@Tratcher http://testingsts.azurewebsites.net/ has a discovery endpoint and can return jwe.",
                                           "updatedAt":  "2018-07-19T18:57:31Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQwODU1MjIwMA==",
                                           "createdAt":  "2018-07-27T22:16:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Eilon",
                                           "body":  "Thanks for the info, everyone. We will consider this in the 3.0 release.",
                                           "updatedAt":  "2018-07-27T22:16:01Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQxMDA0MzY0OQ==",
                                           "createdAt":  "2018-08-02T19:38:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brentschmaltz",
                                           "body":  "@Eilon when is 3.0 planned for release?",
                                           "updatedAt":  "2018-08-02T19:38:12Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQxMDEwMjQzNg==",
                                           "createdAt":  "2018-08-02T23:52:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Eilon",
                                           "body":  "@brentschmaltz looks like next year (definitely not this year).",
                                           "updatedAt":  "2018-08-02T23:52:21Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUzODA5ODczNw==",
                                           "createdAt":  "2019-10-03T19:45:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "@brentschmaltz Is JWE now supported from your side? If so we can look at this for 5.0",
                                           "updatedAt":  "2019-10-03T19:45:10Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUzODEwNTQ2Ng==",
                                           "createdAt":  "2019-10-03T20:02:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "IdentityModel already supports JWE, as @brentschmaltz said last year:\r\n\r\n\u003e @Eilon IdentityModel supports JWE.\r\nThe problem is as @PinpointTownes points out the OIDC handle doesn\u0027t recognize or support JWE.\r\nWe have the pieces in place that would allow us to put a solution together. I believe it would involve changes to ASP.Net.\r\n\r\nIt\u0027s a bit surprising to see at least two reports related to this missing **optional** feature, since the OIDC spec is pretty clear about the fact signed and/or encrypted userinfo responses are things the client itself must opt-in for during registration (which is frankly a super marginal case):\r\n\r\n\u003e The UserInfo Claims MUST be returned as the members of a JSON object unless a signed or encrypted response was requested during Client Registration.",
                                           "updatedAt":  "2019-10-03T20:02:39Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUzODEwNjM5Mw==",
                                           "createdAt":  "2019-10-03T20:05:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "Expecting client registration to be correct in a lot of handlers is probably a pipe dream. Anyway, moving this to 5.0 planning then",
                                           "updatedAt":  "2019-10-03T20:05:01Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU0MDgzNjAyNg==",
                                           "createdAt":  "2019-10-10T23:14:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brentschmaltz",
                                           "body":  "@blowdart we have had support for JWE for a while. One issue is IdentityModel 5.5.0 is needed for tokens that use \u0027deflate\u0027.",
                                           "updatedAt":  "2019-10-10T23:14:30Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU0MTA2NTM4MQ==",
                                           "createdAt":  "2019-10-11T13:30:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "Cool, we\u0027ll get this done in 5.0 then :) Expect a bunch of questions in the new year",
                                           "updatedAt":  "2019-10-11T13:30:45Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU0MzA1NTM5Mw==",
                                           "createdAt":  "2019-10-17T07:59:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sliekens",
                                           "body":  "\u003e It\u0027s a bit surprising to see at least two reports related to this missing **optional** feature, since the OIDC spec is pretty clear about the fact signed and/or encrypted userinfo responses are things the client itself must opt-in for during registration (which is frankly a super marginal case):\r\n\r\nOne of those reports was mine and in my particular case it was not opt-in. In fact there isn\u0027t even an opt-out.  I guess that means that my identity provider doesn\u0027t follow the spec. Sending `Accept: application/json` to the user info endpoint results in a 400 Bad Request.  \r\nEither way I\u0027m glad to see this will get fixed. 😄 ",
                                           "updatedAt":  "2019-10-17T07:59:36Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU0MzA3Njg1Mw==",
                                           "createdAt":  "2019-10-17T08:55:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jgoyvaerts",
                                           "body":  "\u003e One of those reports was mine and in my particular case it was not opt-in. In fact there isn\u0027t even an opt-out. I guess that means that my identity provider doesn\u0027t follow the spec. Sending Accept: application/json to the user info endpoint results in a 400 Bad Request.\r\n\r\nSeeing as we\u0027re from the same country we\u0027re probably talking about the same identity provider (itsme) 😉",
                                           "updatedAt":  "2019-10-17T08:55:51Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU0MzA4OTU5MQ==",
                                           "createdAt":  "2019-10-17T09:28:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sliekens",
                                           "body":  "Yep that\u0027s the one... I guess I\u0027ll file a bug report with them and link to this issue...",
                                           "updatedAt":  "2019-10-17T09:28:02Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2NjY5ODk3NQ==",
                                           "createdAt":  "2020-07-30T21:04:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2020-07-30T21:04:46Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2ODEzMzExOQ==",
                                           "createdAt":  "2020-08-03T17:01:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brentschmaltz",
                                           "body":  "The issue here is how do the decryption keys needed for the Jwt.",
                                           "updatedAt":  "2020-08-03T17:01:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde8466DYF",
                                           "createdAt":  "2021-12-07T22:08:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ytqsl",
                                           "body":  "We have an userinfo encryption policy in place with our organization OIDC provider, so decrypting the returned JWE from the endpoint is a must. Will this issue be prioritized any time soon, or this is going to be a \u0027known issue\u0027 for the foreseeable future?\r\n",
                                           "updatedAt":  "2021-12-07T22:08:15Z"
                                       }
                                   ],
                         "totalCount":  24
                     },
        "title":  "Encrypted userinfo jwt not working",
        "labels":  [
                       "enhancement",
                       "area-auth",
                       "affected-few",
                       "severity-major"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/4649",
        "createdAt":  "2018-07-26T03:16:14Z",
        "number":  4649,
        "author":  "brockallen",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOBUsi2A==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "dasiths",
                                            "createdAt":  "2020-05-10T12:21:07Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "justinhelgerson",
                                            "createdAt":  "2020-10-26T15:00:52Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2020-10-19T17:07:21Z",
        "body":  "In short, accepting the IAuthenticationSchemeProvider as a ctor to the AuthenticationMiddleware forces it to be a singleton. I know the default is deigned that way and put in DI that way, but if someone wants to replace it (say with something that hits a DB) then it\u0027s difficult.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOJVTnLA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQwODE0MzY4OA==",
                                           "createdAt":  "2018-07-26T15:49:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Interesting. You wouldn\u0027t be able to use most of the AddFacebook/OIDC extensions with that pattern as they all rely on the singleton. It would be a pretty sharp one-or-the-other divergence.\r\n\r\nYou may be better off replacing the IAuthenticationService with something that doesn\u0027t use IAuthenticationSchemeProvider at all, and IAuthenticationService is already scoped.",
                                           "updatedAt":  "2018-07-26T15:49:25Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQwODUwMTYzOA==",
                                           "createdAt":  "2018-07-27T18:27:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brockallen",
                                           "body":  "I think whatever larger multi-tenant solution is finally presented (assuming it\u0027s eventually done as what Damian said here: https://github.com/aspnet/Security/issues/1718), that would prolly address my issue and provide me a workaround. \r\n\r\nIn the short term, I\u0027ll see if hooking in at the authN service gets me what I need.",
                                           "updatedAt":  "2018-07-27T18:28:11Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQwODU1MTIzMw==",
                                           "createdAt":  "2018-07-27T22:10:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Eilon",
                                           "body":  "Parking in backlog. We will look into this again when we eventually embark on proper multi-tenant support.",
                                           "updatedAt":  "2018-07-27T22:10:38Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyNjMxOTcyOQ==",
                                           "createdAt":  "2020-05-10T12:21:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dasiths",
                                           "body":  "I gave an example about how this could be useful in #4126. ",
                                           "updatedAt":  "2020-05-10T12:21:12Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyNjMyMTE5Ng==",
                                           "createdAt":  "2020-05-10T12:32:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dasiths",
                                           "body":  "@Eilon any updates on this?",
                                           "updatedAt":  "2020-05-10T12:32:04Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "Consider resolving IAuthenticationSchemeProvider from DI in Invoke in AuthenticationMiddleware",
        "labels":  [
                       "area-auth",
                       "multi-tenancy"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/5113",
        "createdAt":  "2018-12-14T20:14:17Z",
        "number":  5113,
        "author":  "Tratcher",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2020-11-10T00:24:38Z",
        "body":  "\"Only if supported_response_modes is present in the discovery doc and form_post is listed there, should the RP ever try to use it.  If our RP code is sending response_mode=form_post when the IdP doesn’t support that, that’s a bug in our RP code, and needs to be fixed.\" ~Mike Jones, OIDC spec master\r\n\r\nWarn or fail if the OIDCOptions.ResponseMode value isn\u0027t listed in the discovery doc. Note we default to \u0027form_post\u0027 which isn\u0027t required to be supported in the spec. The spec default is \u0027query\u0027.\r\n\r\nhttps://openid.net/specs/oauth-v2-multiple-response-types-1_0.html#ResponseModes\r\n\r\n@blowdart ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOHL--BQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ0NzU2NjA2NQ==",
                                           "createdAt":  "2018-12-15T12:46:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "It\u0027s worth noting that the OIDC middleware uses `response_type=id_token` by default, which **forces** using `response_type=form_post` as neither `query` (forbidden) nor `fragment` (not applicable to server-side components) are usable in this case.\r\n\r\nThis kind of check would only make sense with the authorization code flow (`response_type=code`), not with implicit or hybrid.",
                                           "updatedAt":  "2018-12-15T12:46:25Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ0NzU4MzI4Mw==",
                                           "createdAt":  "2018-12-15T17:13:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "That\u0027s why the suggested behavior is to warn or fail, not to downgrade.  This came up when we found a server that didn\u0027t support form_post and resulted in some very odd behavior.",
                                           "updatedAt":  "2018-12-15T17:13:30Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ0NzU4NDAxNg==",
                                           "createdAt":  "2018-12-15T17:24:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "My point is that failing sounds dangerous for a default (and de facto almost mandatory) option like `response_mode=form_post`, as an OAuth2/OIDC server doesn\u0027t have to return the list of response modes it supports.\r\n\r\nIf `response_modes_supported` is missing, a server is assumed to support both `query` and `fragment` and nothing else. If you decide to throw, then you may break implementations that support `form_post` but don\u0027t explicitly disclose it as part of their discovery document or clients that manually create the `OpenIdConnectConfiguration` instance.",
                                           "updatedAt":  "2018-12-15T17:29:07Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ0NzU4NDU3Mg==",
                                           "createdAt":  "2018-12-15T17:32:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "\u003e That\u0027s why the suggested behavior is to warn or fail, not to downgrade.\r\n\r\nEven if you wanted to, you couldn\u0027t, as all/most OIDC servers would reject your request if it used an invalid `response_mode`/`response_type` combination.\r\n\r\n\u003e This came up when we found a server that didn\u0027t support form_post and resulted in some very odd behavior.\r\n\r\nOut of curiosity, what did it do? If an OAuth2/OIDC server doesn\u0027t support the `response_mode` specified by the client, it should very likely return an explicit error stating a parameter is invalid or not supported.",
                                           "updatedAt":  "2018-12-15T17:35:15Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ1MTMwMDY0Mw==",
                                           "createdAt":  "2019-01-03T22:40:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Eilon",
                                           "body":  "Here\u0027s the proposal:\r\n- [ ] We verify the response mode and fail if it is a downgrade\r\n- [ ] The failure message will link to a new doc saying what to do (for example, change the expected mode to the lower mode, or set the flag to restore the old behavior)\r\n- [ ] We add a new option to say to allow downgrades anyway\r\n- [ ] Post an announcement about this breaking change",
                                           "updatedAt":  "2019-01-03T22:40:23Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4MjMyODA2OQ==",
                                           "createdAt":  "2019-04-11T21:28:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Eilon",
                                           "body":  "Moving to backlog because we can\u0027t get this breaking change into preview5.",
                                           "updatedAt":  "2019-04-11T21:28:19Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "OIDC should verify response_mode",
        "labels":  [
                       "bug",
                       "breaking-change",
                       "area-auth",
                       "severity-nice-to-have",
                       "affected-few"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/6946",
        "createdAt":  "2019-01-23T11:57:54Z",
        "number":  6946,
        "author":  "leastprivilege",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODH-Khw==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "davidkudera",
                                            "createdAt":  "2020-11-25T09:24:03Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "MichaCo",
                                            "createdAt":  "2021-10-01T13:53:57Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "damianh",
                                            "createdAt":  "2021-12-21T14:38:08Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "radverg",
                                            "createdAt":  "2022-01-23T15:26:30Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ahaeber",
                                            "createdAt":  "2023-10-30T20:15:35Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "MehdiSaeedifar",
                                            "createdAt":  "2024-06-29T06:13:04Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "tedchirvasiu",
                                            "createdAt":  "2024-10-26T12:08:10Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Trivivium",
                                            "createdAt":  "2025-07-22T12:43:23Z"
                                        }
                                    ],
                          "totalCount":  8
                      },
        "updatedAt":  "2025-02-10T14:12:48Z",
        "body":  "Wouldn\u0027t it make sense to resolve the ITicketStore for the cookie handler from DI in the future?",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOndcAyA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ1NjgxNTUzMA==",
                                           "createdAt":  "2019-01-23T14:12:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "FYI, it\u0027s been discussed here: https://github.com/aspnet/Security/pull/1719.",
                                           "updatedAt":  "2019-01-23T14:12:52Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ1NzgxMjU1OQ==",
                                           "createdAt":  "2019-01-26T08:14:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "leastprivilege",
                                           "body":  "I am glad you have the time to search the archives ;)",
                                           "updatedAt":  "2019-01-26T08:14:45Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ1NzgzMDk3OA==",
                                           "createdAt":  "2019-01-26T13:26:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brockallen",
                                           "body":  "It would nice to add this. ",
                                           "updatedAt":  "2019-01-26T13:26:17Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ2MTYxNTAyNQ==",
                                           "createdAt":  "2019-02-07T22:14:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Eilon",
                                           "body":  "Marking as up-for-grabs in case someone wants to take a crack at this. We don\u0027t currently plan to implement this ourselves, but we\u0027d be open to a collaboration/contribution for this.",
                                           "updatedAt":  "2019-02-07T22:14:57Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ2MTY3Mjk3Ng==",
                                           "createdAt":  "2019-02-08T02:49:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "crozone",
                                           "body":  "We\u0027re currently implementing a `DbContext` based implementation of `ITicketStore`, and this requires `ITicketStore` to be accessible via DI in a `Scoped` context.\r\n\r\nThe solution should be very similar to the implementation for `services.AddDataProtection().PersistKeysToDbContext\u003cApplicationDbContext\u003e();`, however the `AddCookie()` extension provides no access to the DI container.\r\n\r\nThe current solution is to use `services.AddOptions\u003cCookieAuthenticationOptions\u003e(CookieAuthenticationDefaults.AuthenticationScheme).Configure\u003cITicketStore\u003e((o, t) =\u003e o.SessionStore = t);`, but we cannot make guarantees about `DbContext` lifetime. If we discover a cleaner way to do this, I\u0027ll look into submitting a PR.\r\n\r\nEDIT: Our workaround for the `DbContext` lifetime issue is to have `IServiceProvider` injected into our implementation of `ITicketStore`, and it creates and manages the necessary scopes internally to safely use `DbContext`. In this way, the lifetime of `ITicketStore` becomes a non-issue. It\u0027s not pretty, but it works for now. We\u0027ll continue to look into creating a more elegant solution.",
                                           "updatedAt":  "2019-02-08T03:48:40Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU0MjE0Nzk0NA==",
                                           "createdAt":  "2019-10-15T10:30:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODDnrDA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "cocowalla",
                                                                               "createdAt":  "2021-08-25T10:47:11Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "CasperAlant",
                                                                               "createdAt":  "2021-09-21T12:29:07Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Pilchard123",
                                                                               "createdAt":  "2023-08-14T21:24:51Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "niklasholm",
                                           "body":  "Also, it would be neat to have some default implementation(s) for `ITicketStore` available, for example one using `ISession` to store the data.",
                                           "updatedAt":  "2019-10-15T10:30:58Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYxMDA0OTI5OQ==",
                                           "createdAt":  "2020-04-06T21:34:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "FYI this is much improved by https://github.com/dotnet/aspnetcore/pull/19268.\r\n`.AddCookie\u003cMemoryCacheTicketStore\u003e((o, ticketStore) =\u003e o.SessionStore = ticketStore);`",
                                           "updatedAt":  "2020-04-06T21:34:28Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYxMDA1NjMwNw==",
                                           "createdAt":  "2020-04-06T21:52:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "@Tratcher it only works with singleton services, right?",
                                           "updatedAt":  "2020-04-06T21:52:18Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYxMDA2ODc1Mw==",
                                           "createdAt":  "2020-04-06T22:24:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Correct, but a singleton can inject the IServiceProvider and create its own scope.",
                                           "updatedAt":  "2020-04-06T22:24:34Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYxMDA3MTg1OA==",
                                           "createdAt":  "2020-04-06T22:33:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "Interesting. Why not adding a `SessionStoreType` property like what we did for `EventsType`? It works amazingly well.",
                                           "updatedAt":  "2020-04-06T22:33:57Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYxMDA3NzM0OQ==",
                                           "createdAt":  "2020-04-06T22:51:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "We can, but it\u0027s never become a priority. The new extensions are a general feature for a general problem.",
                                           "updatedAt":  "2020-04-06T22:51:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde840yvFS",
                                           "createdAt":  "2021-07-23T15:22:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AnthonyMastrean",
                                           "body":  "\u003e FYI this is much improved by #19268.\r\n\u003e `.AddCookie\u003cMemoryCacheTicketStore\u003e((o, ticketStore) =\u003e o.SessionStore = ticketStore);`\r\n\r\nThese are greatly improved signatures... but don\u0027t these services get resolved from the root service provider? Doesn\u0027t that mean we can\u0027t resolve scoped dependencies in the `ITicketStore` implementation type? There doesn\u0027t seem to be any way to use the request scope or to create short-lived scopes... is our only option to inject a scope factory and create a instance scope that lives for the lifetime of the store?\r\n\r\n---\r\nUpdate: Oh, I could grab the `IHttpContextAccessor` and use its service provider.\r\n\r\n```csharp\r\nthis.httpContextAccessor.HttpContext.RequestServices.GetRequiredService\u003cWhatever\u003e();\r\n```",
                                           "updatedAt":  "2021-07-23T15:58:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86d1wDI",
                                           "createdAt":  "2025-02-10T14:12:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEg0ogg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "bhavishyachandra",
                                                                               "createdAt":  "2025-02-27T09:09:07Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "CurlyFire",
                                                                               "createdAt":  "2025-03-20T17:45:31Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "flatproject",
                                                                               "createdAt":  "2025-06-06T13:03:16Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "anthonymastreanvae",
                                                                               "createdAt":  "2025-06-09T20:40:56Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "fahminlb33",
                                                                               "createdAt":  "2025-08-15T12:18:43Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jannikbuschke",
                                                                               "createdAt":  "2025-09-04T10:22:07Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  6
                                                         },
                                           "author":  "juantxorena",
                                           "body":  "6 years later, what is the proper way of using ITicketStore from DI? A method was implemented in #19268 as mentioned, but it was reverted in #24253 with no alternative.",
                                           "updatedAt":  "2025-02-10T14:12:47Z"
                                       }
                                   ],
                         "totalCount":  13
                     },
        "title":  "ITicketStore from DI",
        "labels":  [
                       "enhancement",
                       "area-auth",
                       "affected-few",
                       "severity-minor",
                       "help candidate"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/7288",
        "createdAt":  "2019-02-05T22:16:37Z",
        "number":  7288,
        "author":  "ryanbrandenburg",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2020-11-10T23:29:04Z",
        "body":  "At least the following samples do not work if you do `.\\build.cmd` move into their directory and do `dotnet run`.\r\n\r\n- [OpenIdConnect.AzureAdSample](https://github.com/aspnet/AspNetCore/tree/master/src/Security/Authentication/OpenIdConnect/samples/OpenIdConnect.AzureAdSample)\r\n- [WsFederation](https://github.com/aspnet/AspNetCore/tree/master/src/Security/Authentication/WsFederation/samples/WsFedSample)\r\n- [OpenIdConnectSample](https://github.com/aspnet/AspNetCore/tree/master/src/Security/Authentication/OpenIdConnect/samples/OpenIdConnectSample)\r\n\r\nThese samples should either be fixed so that an outside user can run them without modification (or if modification is required for config or some such, it should be explicitly called out in the error message), or removed entirely if they no longer serve a purpose.\r\n\r\nMore generally it would be a good idea for us build and test basic functionality of all our samples (IE, index page returns 200) so we can ensure that they are up to date and not misleading to customers.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOG3u9qA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ2MDg1MjA5Mg==",
                                           "createdAt":  "2019-02-05T23:55:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "I just fixed one issue with the missing launchsettings in https://github.com/aspnet/AspNetCore/pull/7105.\r\n\r\nThe other blocker here is that these scenarios require client secrets, it\u0027s a very bad practice to check those into source control. That also prevents automated testing.\r\n\r\nSome of these samples have explicit config instructions such as https://github.com/aspnet/AspNetCore/blob/b21c09665e868526057dd3785f1d4518359b9a25/src/Security/Authentication/samples/SocialSample/Startup.cs#L51-L56",
                                           "updatedAt":  "2019-02-05T23:55:53Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ2MDg1MzI4Nw==",
                                           "createdAt":  "2019-02-06T00:01:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Also, these samples should stay as they make for very good manual verification of the various providers.",
                                           "updatedAt":  "2019-02-06T00:01:18Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ2MTA5NDMxMg==",
                                           "createdAt":  "2019-02-06T16:43:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ryanbrandenburg",
                                           "body":  "Yeah, if you have uses for these by all means keep them. The error message you linked is pretty good, but maybe it could call out specifically where to set that config, or link to docs on the subject?",
                                           "updatedAt":  "2019-02-06T16:43:09Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Some samples do not work out of box",
        "labels":  [
                       "task",
                       "area-auth",
                       "affected-few",
                       "severity-minor"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/8175",
        "createdAt":  "2019-03-04T18:32:49Z",
        "number":  8175,
        "author":  "nelle775",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODGhSZw==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "TilmannBach",
                                            "createdAt":  "2022-02-23T22:23:02Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "timaiv",
                                            "createdAt":  "2023-05-02T07:23:33Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "markwiese",
                                            "createdAt":  "2024-03-08T05:13:04Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "NitroEvil",
                                            "createdAt":  "2024-04-10T09:29:49Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Redestros",
                                            "createdAt":  "2024-04-16T23:41:12Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "cdschneider",
                                            "createdAt":  "2024-09-24T03:48:32Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "albi005",
                                            "createdAt":  "2024-11-27T20:49:58Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "damienbod",
                                            "createdAt":  "2025-01-12T08:58:24Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ChrisKrikade",
                                            "createdAt":  "2025-01-21T18:58:45Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "DAHAG-ArisNourbakhsh",
                                            "createdAt":  "2025-02-13T18:06:21Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Frulfump",
                                            "createdAt":  "2025-02-27T10:03:36Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "AslanAmca",
                                            "createdAt":  "2025-02-28T22:17:22Z"
                                        },
                                        {
                                            "content":  "EYES",
                                            "user":  "AslanAmca",
                                            "createdAt":  "2025-02-28T22:17:25Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "GMouaad",
                                            "createdAt":  "2025-03-05T15:24:32Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "afshin29",
                                            "createdAt":  "2025-03-13T16:00:56Z"
                                        },
                                        {
                                            "content":  "EYES",
                                            "user":  "StonedHackerman",
                                            "createdAt":  "2025-04-06T23:50:04Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Tawmy",
                                            "createdAt":  "2025-04-08T09:54:39Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "timdeschryver",
                                            "createdAt":  "2025-04-17T12:08:35Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "jvereecken",
                                            "createdAt":  "2025-04-17T12:08:47Z"
                                        },
                                        {
                                            "content":  "EYES",
                                            "user":  "yannic-hamann-abb",
                                            "createdAt":  "2025-04-25T04:20:42Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "StonedHackerman",
                                            "createdAt":  "2025-05-11T04:41:07Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "splitt3r",
                                            "createdAt":  "2025-05-29T21:05:02Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "0xfeeddeadbeef",
                                            "createdAt":  "2025-06-03T08:55:51Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "boukenka",
                                            "createdAt":  "2025-06-04T10:59:09Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Fronix",
                                            "createdAt":  "2025-06-25T18:27:16Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Simeon231",
                                            "createdAt":  "2025-07-10T15:38:40Z"
                                        }
                                    ],
                          "totalCount":  26
                      },
        "updatedAt":  "2025-07-04T11:39:02Z",
        "body":  "The OAuthHandler class does not provide any option to expire the underlying Cookie ticket upon expiry of the Bearer Token, also it does not have any support for Refresh tokens other than storing the value in AuthenticationProperties.\r\n\r\nI Suggest the following:\r\nAdd a property: bool ExpireUponTokenExpiry to RemoteAuthenticationOptions\r\n\r\nOn authenticating ticket, check this property \r\nif false just return AuthenticateResult.Success upon validating the ticket\r\nif true and bearer token is not expired return AuthenticateResult.Success\r\nif true and bearer token is expired\r\n-\u003e if refresh_token isSet in AuthenticationProperties, Exhange the refresh token for new bearer token through http backchannel,\r\n-\u003e if no refresh_token is set, start a new OAuth authentication flow, with RedirectResult",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOtPJTtw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ2OTQ3NjgzMA==",
                                           "createdAt":  "2019-03-04T23:58:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEZAC8Q==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "timaiv",
                                                                               "createdAt":  "2023-05-08T10:33:35Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "christophorusdou",
                                                                               "createdAt":  "2024-06-25T15:58:31Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "cdschneider",
                                                                               "createdAt":  "2024-09-24T03:49:20Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "afshin29",
                                                                               "createdAt":  "2025-03-13T16:04:32Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "nicholasf-at-schultztechnology",
                                                                               "createdAt":  "2025-07-03T02:17:49Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  5
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "The [UseTokenLifetime](https://github.com/aspnet/AspNetCore/blob/39e52578d354a6a7abb3f6169d5ac2174ffe4551/src/Security/Authentication/OpenIdConnect/src/OpenIdConnectOptions.cs#L272) OIDC option already does part of this, tying the cookie lifetime to the token lifetime, though most people don\u0027t like it and have turned it off.\r\n\r\nThe biggest gap in the suggested design is that RemoteAuth.AuthenticateAsync doesn\u0027t run every request, it only runs during sign-in. After sign-in it\u0027s CookieAuth.AuthenticateAsync that runs every request and it doesn\u0027t know about the upstream details.\r\n\r\nThe other big gap is that refresh is not a well standardized behavior for OAuth. I tried it with a few of our common providers and only two out of five were able to share any of their logic. This was my last experiment at refresh: https://github.com/aspnet/AspNetCore/blob/39e52578d354a6a7abb3f6169d5ac2174ffe4551/src/Security/Authentication/samples/SocialSample/Startup.cs\r\n\r\nWe do need to provide better refresh support, but I doubt it would ever be completely automatic. A big reason is concurrency. If you have any parallel requests from the same user they would all start attempting the refresh as soon as the token expired. A better pattern I\u0027ve seen is to only refresh the token when you go to use it. That cuts down the concurrency as you only use that token on a small subset of requests.",
                                           "updatedAt":  "2019-03-04T23:58:25Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3Njg2Mjc4Mg==",
                                           "createdAt":  "2019-03-26T21:37:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Eilon",
                                           "body":  "Placing in backlog so we can consider in a future version.",
                                           "updatedAt":  "2019-03-26T21:37:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86NFTVn",
                                           "createdAt":  "2024-09-22T21:41:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AdamWyzgol",
                                           "body":  "really still in backlog? since 2019?",
                                           "updatedAt":  "2024-09-22T21:41:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86N3sg0",
                                           "createdAt":  "2024-09-27T22:09:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEIPo3Q==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "captnord",
                                                                               "createdAt":  "2024-09-30T13:06:51Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Tawmy",
                                                                               "createdAt":  "2025-03-03T10:16:03Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "halter73",
                                           "body":  "Moving out of backlog for consideration in .NET 10. We could look at [CookieOidcRefresher](https://github.com/dotnet/blazor-samples/blob/dd2f19f5b81e0eba66321eb6ec103d1fdcdbd995/8.0/BlazorWebAppOidcBff/BlazorWebAppOidc/CookieOidcRefresher.cs) for inspiration although that\u0027s specifically for the `OpenIdConnectHandler` rather than the `OAuthHandler`. It would be nice to add refresh support to both.\r\n\r\nhttps://github.com/dotnet/aspnetcore/issues/55213 is related but even tricker because in the case of Blazor Server interactivity it\u0027s harder to store the refreshed tokens in an updated cookie",
                                           "updatedAt":  "2024-09-27T22:10:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86S63-j",
                                           "createdAt":  "2024-11-08T14:30:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEY01jw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "damianh",
                                                                               "createdAt":  "2025-01-20T10:32:10Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "DevTKSS",
                                                                               "createdAt":  "2025-07-02T05:28:30Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "Fronix",
                                           "body":  "For anyone who keeps returning here hoping for some type of revelation:\n\nhttps://github.com/DuendeSoftware/Duende.AccessTokenManagement has created something that seems to work and has working examples...",
                                           "updatedAt":  "2024-11-08T14:30:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86S8c5D",
                                           "createdAt":  "2024-11-08T17:18:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEY01tA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "damianh",
                                                                               "createdAt":  "2024-11-10T22:50:49Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "hugh-maaskant",
                                                                               "createdAt":  "2025-02-23T14:30:46Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "DevTKSS",
                                                                               "createdAt":  "2025-07-02T05:28:56Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "josephdecock",
                                           "body":  "Thanks for the shoutout @Fronix! I\u0027m one of the maintainers of Duende.AccessTokenManagement, so I thought I\u0027d chime in. We\u0027re an apache licensed library sponsored by Duende Software for automatically managing access tokens.\n\nIn addition to simple token management, we also have support for DPoP (sender constrained tokens). And we have an extensibility point for storing tokens outside of cookies (especially helpful for [Blazor Server](https://docs.duendesoftware.com/foss/accesstokenmanagement/blazor_server/)).\n\n- Documentation: https://docs.duendesoftware.com/foss/accesstokenmanagement/\n- Sample: https://docs.duendesoftware.com/identityserver/v7/samples/basics/#mvc-client-with-automatic-access-token-management",
                                           "updatedAt":  "2024-11-08T17:20:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86XtON-",
                                           "createdAt":  "2024-12-16T10:36:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "developer9969",
                                           "body":  "@josephdecock  Hi come across this thread and also used in a pluralsight course I have just watched, my question is , is the accesstokenManagment nuget free to use in commercial application?\n",
                                           "updatedAt":  "2024-12-16T10:36:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86XuwR4",
                                           "createdAt":  "2024-12-16T13:19:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOD_STzw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "developer9969",
                                                                               "createdAt":  "2024-12-17T08:25:07Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "brockallen",
                                           "body":  "\u003e Hi come across this thread and also used in a pluralsight course I have just watched, my question is , is the accesstokenManagment nuget free to use in commercial application?\n\nYes, Apache2.\n\nhttps://www.nuget.org/packages/Duende.AccessTokenManagement\n",
                                           "updatedAt":  "2024-12-16T13:19:39Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86fgJjy",
                                           "createdAt":  "2025-02-22T04:28:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alefcarlos",
                                           "body":  "Hey, [josephdecock](https://github.com/josephdecock), good ? Even if I use Duende.AccessTokenManagement I have to implement [CookieRefresh](https://github.com/dotnet/blazor-samples/blob/dd2f19f5b81e0eba66321eb6ec103d1fdcdbd995/8.0/BlazorWebAppOidcBff/BlazorWebAppOidc/CookieOidcRefresher.cs)\u0027s logic, right ? \n",
                                           "updatedAt":  "2025-02-22T04:28:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86zJ5Ps",
                                           "createdAt":  "2025-06-25T18:14:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEZOXCg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "CONFUSED",
                                                                               "user":  "vincentscode",
                                                                               "createdAt":  "2025-06-25T18:19:52Z"
                                                                           },
                                                                           {
                                                                               "content":  "CONFUSED",
                                                                               "user":  "Frulfump",
                                                                               "createdAt":  "2025-06-25T18:24:38Z"
                                                                           },
                                                                           {
                                                                               "content":  "LAUGH",
                                                                               "user":  "Fronix",
                                                                               "createdAt":  "2025-06-25T18:27:05Z"
                                                                           },
                                                                           {
                                                                               "content":  "CONFUSED",
                                                                               "user":  "jvereecken",
                                                                               "createdAt":  "2025-06-25T19:18:23Z"
                                                                           },
                                                                           {
                                                                               "content":  "CONFUSED",
                                                                               "user":  "alefcarlos",
                                                                               "createdAt":  "2025-06-25T20:42:47Z"
                                                                           },
                                                                           {
                                                                               "content":  "CONFUSED",
                                                                               "user":  "Kumima",
                                                                               "createdAt":  "2025-06-26T03:14:35Z"
                                                                           },
                                                                           {
                                                                               "content":  "CONFUSED",
                                                                               "user":  "boukenka",
                                                                               "createdAt":  "2025-06-26T05:24:56Z"
                                                                           },
                                                                           {
                                                                               "content":  "CONFUSED",
                                                                               "user":  "DAHAG-ArisNourbakhsh",
                                                                               "createdAt":  "2025-06-26T08:52:24Z"
                                                                           },
                                                                           {
                                                                               "content":  "CONFUSED",
                                                                               "user":  "developer9969",
                                                                               "createdAt":  "2025-06-26T15:45:51Z"
                                                                           },
                                                                           {
                                                                               "content":  "CONFUSED",
                                                                               "user":  "naydevops",
                                                                               "createdAt":  "2025-06-27T11:56:46Z"
                                                                           },
                                                                           {
                                                                               "content":  "LAUGH",
                                                                               "user":  "DevTKSS",
                                                                               "createdAt":  "2025-07-02T05:29:30Z"
                                                                           },
                                                                           {
                                                                               "content":  "LAUGH",
                                                                               "user":  "nicholasf-at-schultztechnology",
                                                                               "createdAt":  "2025-07-03T02:19:05Z"
                                                                           },
                                                                           {
                                                                               "content":  "CONFUSED",
                                                                               "user":  "nicholasf-at-schultztechnology",
                                                                               "createdAt":  "2025-07-03T02:19:06Z"
                                                                           },
                                                                           {
                                                                               "content":  "CONFUSED",
                                                                               "user":  "Tawmy",
                                                                               "createdAt":  "2025-07-04T05:57:15Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  14
                                                         },
                                           "author":  "mikekistler",
                                           "body":  "Sadly we have to drop this off the roadmap for .NET 10 due to resource constraints.",
                                           "updatedAt":  "2025-06-25T18:14:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde860nthl",
                                           "createdAt":  "2025-07-03T02:21:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEbch6Q==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "LAUGH",
                                                                               "user":  "Frulfump",
                                                                               "createdAt":  "2025-07-22T11:30:01Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "tisaconundrum2",
                                           "body":  "Guess this part of the [documentation](https://learn.microsoft.com/en-us/aspnet/core/security/authentication/configure-jwt-bearer-authentication?view=aspnetcore-9.0\u0026source=recommendations) \n\n\u003e SaveTokens will not currently refresh access tokens automatically, but this functionality is planned for .NET 10. \n\nWill need updating 😂",
                                           "updatedAt":  "2025-07-03T02:21:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde8608lO3",
                                           "createdAt":  "2025-07-04T11:36:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEh0Wwg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Frulfump",
                                                                               "createdAt":  "2025-07-04T12:08:19Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "hugh-maaskant",
                                                                               "createdAt":  "2025-07-04T14:14:08Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "StuFrankish",
                                                                               "createdAt":  "2025-07-04T15:28:42Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "tisaconundrum2",
                                                                               "createdAt":  "2025-07-05T00:32:46Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Tawmy",
                                                                               "createdAt":  "2025-07-05T07:56:29Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "asm0x",
                                                                               "createdAt":  "2025-08-01T15:35:53Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "developer9969",
                                                                               "createdAt":  "2025-08-19T02:26:15Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "mip1983",
                                                                               "createdAt":  "2025-09-11T10:28:31Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  8
                                                         },
                                           "author":  "Kumima",
                                           "body":  "\u003e Sadly we have to drop this off the roadmap for .NET 10 due to resource constraints.\n\nCan you just hire someone new or re-organize the authentication team to manage the authentication part? If you look at the \"Authentication and Identity\" part of the roadmap, there are most drops. This situation has been happening for several .NET versions. \nThe only improvements we got recently are just some kind of template things. To be honest, they are more like doc improvement, instead of functionality improvement. And I can\u0027t find someone officially concentrates on the authentication part of ASP.NET Core.\n\nThis issue is created 6 years ago, and you are keeping drop it.",
                                           "updatedAt":  "2025-07-04T11:39:02Z"
                                       }
                                   ],
                         "totalCount":  12
                     },
        "title":  "OAuth 2 refresh token support",
        "labels":  [
                       "enhancement",
                       "area-auth",
                       "severity-major",
                       "affected-medium"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/9154",
        "createdAt":  "2019-04-07T13:53:10Z",
        "number":  9154,
        "author":  "scottbrady91",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOBt_vxw==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "KhalilMohammad",
                                            "createdAt":  "2020-09-28T10:23:06Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "LeszekKalibrate",
                                            "createdAt":  "2021-06-09T11:40:34Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2020-07-24T23:24:00Z",
        "body":  "I am trying to handle JWE identity tokens returned from an OpenID Provider. Since `OpenIdConnectProtocolValidator` is meant for JWS, I must ensure that the token sent for validation is the inner token of the decrypted JWE.\r\n\r\nA JWE identity token returned from the authorization endpoint (implicit flow) or token endpoint (authorization code flow) can be handled using the token validated event.\r\n\r\nHowever, when using the hybrid flow and receiving a JWE identity token from both the authorization endpoint and token endpoint (e.g. response type of `code id_token`), I am not given the opportunity to handle the identity token: https://github.com/aspnet/AspNetCore/blob/v2.2.3/src/Security/Authentication/OpenIdConnect/src/OpenIdConnectHandler.cs#L614.\r\n\r\nMy current workaround is to override the protocol validator to handle JWS extraction, however according to [this issue](https://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/pull/841), the protocol validator is not the place to do this.\r\n\r\nPlease consider adding an event that would allow the identity token to be modified in this scenario.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOJ5BY_w==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4MDU5Nzc4Nw==",
                                           "createdAt":  "2019-04-07T15:01:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "Also https://github.com/aspnet/AspNetCore/issues/9092",
                                           "updatedAt":  "2019-04-07T15:01:19Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4MjMyNDEwNA==",
                                           "createdAt":  "2019-04-11T21:21:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOAmz3sg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "scottbrady91",
                                                                               "createdAt":  "2019-04-12T09:55:40Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "Eilon",
                                           "body":  "We\u0027ve moved this issue is in the Backlog milestone. This means that it is not going to happen for the coming release. We will re-assess the backlog following the current release and consider this item at that time. However, keep in mind that there are many other high priority features with which it will be competing for resources.",
                                           "updatedAt":  "2019-04-11T21:21:39Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2Mzc3MTM5MQ==",
                                           "createdAt":  "2020-07-24T23:24:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "thesuavehog",
                                           "body":  "I\u0027ve been looking for a (ideally simple) way to access the `id_token` after a successful OIDC login in my Blazor WebAssembly project.\r\nMy use case is that I am trying to leverage the AWS Cognito Identity Pool to provide a scoped AWS Role for my users to use to access AWS resources once they have logged in. This is done via the AWS CognitoAWSCredentials class in their .NET SDK (which you pass to the various `IAmazonServiceClient`s), however in order to initialize a CognitoAWSCredentials instance with a JWT token after an OpenID Connect login, I need to pass it the `id_token`.\r\n\r\nOn a .NET Core 3.1 WebApi (running as a Lambda function) the OpenID Connect can be used to authenticate the user if I directly access the API in my browser (it redirects to the Cognito hosted login page, and back once I successfully login). Within my HttpContext I can then access the `id_token` as it is automatically added there (`Microsoft.AspNetCore.Authentication.AuthenticationHttpContextExtensions.GetTokenAsync`).\r\n\r\nIn a Blazor WebAssembly project, the `access_token` is available via `Microsoft.AspNetCore.Components.WebAssembly.Authentication.Internal.IAccessTokenProviderAccessor.TokenProvider.RequestAccessToken` however there is no equivalent `IIdTokenProviderAccessor` ... why? The ID, Access and Refresh tokens should all be available to be used by the application - in this case so I can leverage the AWS client libraries to access AWS resources directly in the Blazor WebAssembly - but I\u0027m sure there are other use cases for people as well.",
                                           "updatedAt":  "2020-07-24T23:24:00Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Consider adding OIDC event to handle identity token validation for hybrid flow",
        "labels":  [
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/10037",
        "createdAt":  "2019-05-07T11:46:05Z",
        "number":  10037,
        "author":  "damienbod",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-05-27T20:42:08Z",
        "body":  "## Problem Description:\r\n\r\nIf a user logs in from an ASP.NET Core application using the AddMicrosoftAccount extension method, it is impossible to change user on the aad, because the app does an auto login if only one aad account is logged in.\r\n\r\nIf 2 aad accounts are logged in, then it waits, and I can choose. This is correct.\r\n\r\nIf only 1 aad user is logged in, and if I click the popup window to change an account, I then get a Correlation failed exception (If I’m fast enough to complete the login) in the ASP.NET Core application. \r\n\r\nThe auto login breaks everything.\r\n\r\na)\tHow can you turn this off?\r\nb)\tHow can you logout from the ASP.NET Core application?  The signout is not sent to the aad APP Registration.  This is possible in the Azure Portal. Maybe I want to logout in the aad using the application.\r\n\r\n## Code to reproduce:\r\n\r\nhttps://github.com/damienbod/AspNetCoreID4External/blob/master/src/IdentityServerWithAspNetIdentity/Startup.cs#L61-L67\r\n\r\nAzure Portal\r\n\r\nUsed Azure Active Directory / App registrations to configure the client.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOMqjeWQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5MDIzODc3NA==",
                                           "createdAt":  "2019-05-07T20:15:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOAoOf9A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "damienbod",
                                                                               "createdAt":  "2019-05-08T05:11:34Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "For AAD you should be using OpenIdConnect rather than Microsoft Account. OIDC has the remote signout capability.",
                                           "updatedAt":  "2019-05-07T20:15:30Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5MDM0ODU1Ng==",
                                           "createdAt":  "2019-05-08T05:04:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "damienbod",
                                           "body":  "@Tratcher I use https://apps.dev.microsoft.com which now recommends you do this in the portal as a application personal account. It\u0027s not in the aad, but this is how you navigate to it in the portal. A bit confusing I think.\r\n\r\nHere\u0027s the existing docs which probably should be updated.\r\n\r\nhttps://docs.microsoft.com/en-us/aspnet/core/security/authentication/social/microsoft-logins?view=aspnetcore-2.2\r\n",
                                           "updatedAt":  "2019-05-08T05:04:09Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5MTA2OTIyMg==",
                                           "createdAt":  "2019-05-09T21:15:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBseGDA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "damienbod",
                                                                               "createdAt":  "2019-05-09T21:52:20Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ericsampson",
                                                                               "createdAt":  "2021-05-27T14:55:10Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "Eilon",
                                           "body":  "It seems like the best path forward is to add a new API, such as `.AddMicrosoftAccountOidc(...)` that uses OIDC (instead of OAuth) to connect Microsoft Account for auth. \r\n\r\nUsing OIDC will help gain newer features such as what\u0027s being discussed in this issue. However, it\u0027s a behavioral breaking change, so we should add this via a new API, rather than changing the existing APIs.",
                                           "updatedAt":  "2019-05-09T21:15:28Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5MTA3MDIxNQ==",
                                           "createdAt":  "2019-05-09T21:19:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOAoX5cA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "damienbod",
                                                                               "createdAt":  "2019-05-09T21:52:17Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "Eilon",
                                           "body":  "The above is for part (b).\r\n\r\nFor part (a), you can handle the [`OnRedirectToAuthorizationEndpoint`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.authentication.oauth.oauthevents.onredirecttoauthorizationendpoint?view=aspnetcore-2.0#Microsoft_AspNetCore_Authentication_OAuth_OAuthEvents_OnRedirectToAuthorizationEndpoint) event and add a `prompt=login` query string parameter to the [`RedirectUri`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.authentication.redirectcontext-1.redirecturi?view=aspnetcore-2.0#Microsoft_AspNetCore_Authentication_RedirectContext_1_RedirectUri) to force prompting for accounts.",
                                           "updatedAt":  "2019-05-09T21:21:37Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5MTM4ODIyNg==",
                                           "createdAt":  "2019-05-10T18:30:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "damienbod",
                                           "body":  "Thanks for your replies\r\n\r\nI have switched from MS Account extension to OpenID Connect. By using OpenID connect I can send a prompt=login using the property, and this prevents the auto login. I could also do it the way @Eilon suggested, but @Tratcher recommended OIDC as does the Azure docs for this type on APP. \r\n\r\nSecondly, I had many problems with Correlation cookie (also for single instance), we solved this by customizing the creation of the cookie and the correlation ID. The default values did not work.  The multiple instance was solved by moving the data protection to a cache.\r\n\r\nI think the AddMicrosoftAccount should be made obsolete. Maybe the new API is not required, but an OIDC recommendation should be made in the Obsolete text. \r\n\r\nStill have problems with one deployment, the user always receives a correlation exception, cookie not found. No idea why this is happening here yet.\r\n",
                                           "updatedAt":  "2019-05-10T18:39:20Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5MTM5MDAxOQ==",
                                           "createdAt":  "2019-05-10T18:36:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "\u003e customizing the creation of the cookie and the correlation ID\r\n\r\nYou shouldn\u0027t need to do that. See https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/web-farm?view=aspnetcore-2.2#required-configuration for hosting multiple instances of your site.",
                                           "updatedAt":  "2019-05-10T18:36:29Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5MTU5Nzc4NA==",
                                           "createdAt":  "2019-05-12T13:52:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "damienbod",
                                           "body":  "@Tratcher thanks for you answer. I had/ have no problems with the multiple instance. The correlation exceptions was caused by time outs, SameSite and cookie not found. The timeouts and the same site cookie problems are fixed. \r\n\r\n```\r\noptions.RemoteAuthenticationTimeout = TimeSpan.FromSeconds(30);\r\noptions.CorrelationCookie = new Microsoft.AspNetCore.Http.CookieBuilder()\r\n{\r\n\tExpiration = new TimeSpan(0, 0, 30),\r\n\tSameSite = Microsoft.AspNetCore.Http.SameSiteMode.None,\r\n\tIsEssential = true\r\n};\r\n```\r\nStill have correlation Cookie not Found exceptions by some clients and no idea what causes this. \r\n\r\nGreetings Damien",
                                           "updatedAt":  "2019-05-12T13:53:39Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5MTYwMjA1MA==",
                                           "createdAt":  "2019-05-12T14:47:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOAoeuYQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "damienbod",
                                                                               "createdAt":  "2019-05-12T14:51:11Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "@damienbod Don\u0027t change the cookie builder.\r\nSameSite and IsEssential are the default values.\r\nhttps://github.com/aspnet/AspNetCore/blob/208299aa31ef78de7da8d7bf2b96e8b8d5a98786/src/Security/Authentication/Core/src/RemoteAuthenticationOptions.cs#L26-L33\r\nRemoteAuthenticationTimeout and Expiration do the same thing.\r\nhttps://github.com/aspnet/AspNetCore/blob/d7a7c65b2b40a97bb0ba78c07380c46bc5920400/src/Security/Authentication/Core/src/RemoteAuthenticationOptions.cs#L160-L163",
                                           "updatedAt":  "2019-05-12T14:47:32Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5MTgzNzI0Mg==",
                                           "createdAt":  "2019-05-13T14:07:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "damienbod",
                                           "body":  "The correlation Cookie not found exceptions were caused by an anti-virus, firewall setting on the client PCs. Now the external provider is working stable. \r\n\r\nI think making AddMicrosoftAccount  obsolete would be good. I also think AddOpenIdConnect is enough, and the .AddMicrosoftAccountOidc is not required. This needs documentation.\r\n\r\nThanks for you feedback and answers.",
                                           "updatedAt":  "2019-05-13T14:13:46Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5MzMyODMxNw==",
                                           "createdAt":  "2019-05-17T05:47:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "damienbod",
                                           "body":  "I made some docs for this, and how I could fix this for me, maybe it will help others.\r\n\r\nhttps://damienbod.com/2019/05/17/updating-microsoft-account-logins-in-asp-net-core-with-openid-connect-and-azure-active-directory/\r\n",
                                           "updatedAt":  "2019-05-17T05:47:18Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3ODM1ODk1Mg==",
                                           "createdAt":  "2020-08-21T15:44:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Update: For 6.0 we should obsolete AddMicrosoftAccount and AddGoogle and rewrite the docs to use AddOpenIdConnect.",
                                           "updatedAt":  "2020-08-21T15:44:45Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg0OTcwNjM1NA==",
                                           "createdAt":  "2021-05-27T14:58:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericsampson",
                                           "body":  "@Tratcher just bumping this as 6.0 is almost upon us.\r\n\r\nThis issue that got autoclosed/locked still looks valid to me, but I can\u0027t comment on it as it\u0027s locked for externals:\r\nhttps://github.com/dotnet/aspnetcore/issues/26919",
                                           "updatedAt":  "2021-05-27T14:58:48Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg0OTc1MDYxNw==",
                                           "createdAt":  "2021-05-27T15:57:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "#26919 was a rather complicated proposal for something that should already be possible with named options. We didn\u0027t have any plans to pursue it.\r\n\r\n@blowdart looks like this got stuck in backlog. Any ambition to address it for 6.0?",
                                           "updatedAt":  "2021-05-27T15:57:44Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg0OTc1Nzc2OA==",
                                           "createdAt":  "2021-05-27T16:07:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "We aren\u0027t going to deprecate in an LTS unfortunately, because that\u0027s now a principal. So it\u0027ll be 7",
                                           "updatedAt":  "2021-05-27T16:07:23Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg0OTc2MDM4MA==",
                                           "createdAt":  "2021-05-27T16:10:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Should we at least re-write the docs to recommend OIDC?",
                                           "updatedAt":  "2021-05-27T16:10:48Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg0OTc2NDQ5OA==",
                                           "createdAt":  "2021-05-27T16:16:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericsampson",
                                           "body":  "Thanks Chris.",
                                           "updatedAt":  "2021-05-27T16:16:53Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg0OTkyNzc2OQ==",
                                           "createdAt":  "2021-05-27T20:42:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "We should, or IdentityWeb which should work with MSAs",
                                           "updatedAt":  "2021-05-27T20:42:07Z"
                                       }
                                   ],
                         "totalCount":  17
                     },
        "title":  "MicrosoftAccount should use OIDC (was: AddMicrosoftAccount  \u0026 Azure Active Directory - App registrations signin/signout problems)",
        "labels":  [
                       "enhancement",
                       "area-auth",
                       "severity-minor",
                       "affected-medium"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/10336",
        "createdAt":  "2019-05-17T18:07:18Z",
        "number":  10336,
        "author":  "mkArtakMSFT",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-04-27T19:14:45Z",
        "body":  "This is listed in the Templating epic with questionmark, so not sure what exactly needs to happen here or how important it is to get it done in 3.0.\r\n\r\nThere is also tooling impact here. There is no such option in the New Project Dialog UI",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOHWuXyw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5MzU0NjkxOQ==",
                                           "createdAt":  "2019-05-17T18:07:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mkArtakMSFT",
                                           "body":  "This depends on https://github.com/aspnet/AspNetCore/issues/4663",
                                           "updatedAt":  "2019-05-17T18:07:36Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5MzU1OTEzMA==",
                                           "createdAt":  "2019-05-17T18:47:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "Given the desire to drive templates to be smaller, this is probably a rare enough want that it doesn\u0027t need template integration, but documentation will suffice.",
                                           "updatedAt":  "2019-05-17T18:47:05Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5MzU5MDQ3NQ==",
                                           "createdAt":  "2019-05-17T20:32:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "analogrelay",
                                           "body":  "Agreed. I don\u0027t think we should overload the template with samples. We just finished scaling it back :)",
                                           "updatedAt":  "2019-05-17T20:32:32Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Enable Certificate authentication option in API template",
        "labels":  [
                       "enhancement",
                       "Docs",
                       "area-auth",
                       "Needs: Spec",
                       "affected-few",
                       "severity-minor",
                       "feature-templates"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/10337",
        "createdAt":  "2019-05-17T18:11:51Z",
        "number":  10337,
        "author":  "mkArtakMSFT",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-04-27T19:14:35Z",
        "body":  "This is listed in the Templating epic with questionmark, so not sure what exactly needs to happen here or how important it is to get it done in 3.0.\r\n\r\nThere is also tooling impact here. There is no such option in the New Project Dialog UI\r\n\r\nThis work depends on https://github.com/aspnet/AspNetCore/issues/8897",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOHaDsnw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5NzAyNTM0MQ==",
                                           "createdAt":  "2019-05-29T17:07:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mkArtakMSFT",
                                           "body":  "Talked to @blowdart regarding this. We aren\u0027t going to load templates with this. Rather there will be just docs covering enabling this.",
                                           "updatedAt":  "2019-05-29T17:07:11Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5NzA4NTU5OQ==",
                                           "createdAt":  "2019-05-29T19:54:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brockallen",
                                           "body":  "Don\u0027t forget to enable anti-forgery for the API calls.",
                                           "updatedAt":  "2019-05-29T19:54:28Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Enable Kerberos authentication option in API template",
        "labels":  [
                       "enhancement",
                       "Docs",
                       "area-auth",
                       "Needs: Spec",
                       "severity-nice-to-have",
                       "affected-few",
                       "feature-templates"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/10542",
        "createdAt":  "2019-05-26T05:52:16Z",
        "number":  10542,
        "author":  "huan086",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODH-I0A==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "andrewbadera",
                                            "createdAt":  "2019-05-26T09:18:33Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "aayjaychan",
                                            "createdAt":  "2020-01-29T03:52:06Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "aetos382",
                                            "createdAt":  "2021-10-05T02:09:44Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "TheoBP",
                                            "createdAt":  "2023-03-24T11:45:29Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ad-eg-dk",
                                            "createdAt":  "2025-01-30T15:35:14Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ArturDorochowicz",
                                            "createdAt":  "2025-02-20T19:06:09Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Trivivium",
                                            "createdAt":  "2025-07-22T12:40:48Z"
                                        }
                                    ],
                          "totalCount":  7
                      },
        "updatedAt":  "2024-12-16T15:46:02Z",
        "body":  "### Is your feature request related to a problem? Please describe.\r\nASP.NET Core 2.1 introduced IHttpClientFactory to solve the [problems with creating and disposing HttpClient with every call](https://aspnetmonsters.com/2016/08/2016-08-27-httpclientwrong/), and the [problems with creating a long-lived HttpClient](https://github.com/dotnet/corefx/issues/11224).\r\n\r\nHowever, long-lived HttpClient is still created within the framework. Specifically, in [RemoteAuthenticationOptions.Backchannel](https://github.com/aspnet/AspNetCore/blob/master/src/Security/Authentication/Core/src/RemoteAuthenticationOptions.cs#L79) and [RemoteAuthenticationOptions.BackchannelHttpHandler](https://github.com/aspnet/AspNetCore/blob/master/src/Security/Authentication/Core/src/RemoteAuthenticationOptions.cs#L74), these have effectively application lifetime because instances of AuthenticationOptions are cached in the singleton IOptionsMonitorCache.\r\n\r\n### Describe the solution you\u0027d like\r\nReplace RemoteAuthenticationOptions.Backchannel and RemoteAuthenticationOptions.BackchannelHttpHandler with RemoteAuthenticationOptions.BackchannelFactory, so that whenever an HttpClient is needed, it is created from the BackchannelFactory and disposed.\r\n\r\nThis would also require a new [HttpDocumentRetriever](https://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/blob/master/src/Microsoft.IdentityModel.Protocols/Configuration/HttpDocumentRetriever.cs) constructor that takes an IHttpClientFactory, because [JwtBearerPostConfigureOptions](https://github.com/aspnet/AspNetCore/blob/master/src/Security/Authentication/JwtBearer/src/JwtBearerPostConfigureOptions.cs#L58), [WsFederationPostConfigureOptions](https://github.com/aspnet/AspNetCore/blob/master/src/Security/Authentication/WsFederation/src/WsFederationPostConfigureOptions.cs#L84) and [OpenIdConnectPostConfigureOptions](https://github.com/aspnet/AspNetCore/blob/master/src/Security/Authentication/OpenIdConnect/src/OpenIdConnectPostConfigureOptions.cs#L96) initializes a long-lived ConfigurationManager.\r\n\r\n### Describe alternatives you\u0027ve considered\r\n- Do not store AuthenticationOptions in IOptionsMonitorCache and make it scoped per request. However, it means that JwtBearer, OpenIdConnect and WsFederation (or 3rd party Saml2 protocol handler) would require fetching metadata on every request, which would slow down every request.\r\n\r\n- Roll my own ConfigurationManager and HttpDocumentRetriever, which would bypass any kind of niceities that `.AddJwtBearer`, `.AddOpenIdConnect` extension methods provide.\r\n\r\n### Additional context\r\n[The Grand Auth Redesign of 2017](https://github.com/aspnet/Security/issues/1179) in Core 2.0 predates IHttpClientFactory in Core 2.1.\r\n\r\nIn Core 2.0, the new [SocketsHttpHandler does not solve DNS problem](https://github.com/aspnet/HttpClientFactory/issues/10#issuecomment-398511183)\r\n\r\n[Exploring DNS issue](https://github.com/aspnet/HttpClientFactory/wiki/Exploring-DNS-issues)",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOl8CLNQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5NjMwMTM1OQ==",
                                           "createdAt":  "2019-05-27T20:37:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "This would be easy enough for OAuth, but for the IdentityModel based providers (OIDC, WsFed) we\u0027d need updated, refactored dependencies. @brentschmaltz  ",
                                           "updatedAt":  "2019-05-27T20:37:00Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5NzE2MTc4OA==",
                                           "createdAt":  "2019-05-30T01:02:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brentschmaltz",
                                           "body":  "@Tratcher see: https://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/issues/1197\r\n\r\nHow do you prioritize this for this 3.0?\r\nOther users have asked for this.",
                                           "updatedAt":  "2019-05-30T01:02:44Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5NzIwMDg3MQ==",
                                           "createdAt":  "2019-05-30T04:47:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "- It\u0027s a bit late for new 3.0 features, more likely it will be a future release.\r\n- You\u0027d need to do IdentityModel first\r\n- We\u0027d want to add it in a non-breaking way (new properties \u0026 overloads)",
                                           "updatedAt":  "2019-05-30T04:47:31Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5NzIwMTY0NQ==",
                                           "createdAt":  "2019-05-30T04:52:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brentschmaltz",
                                           "body":  "@Tratcher OK, we will add this and make sure you know when it is available.",
                                           "updatedAt":  "2019-05-30T04:52:07Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU5MjQ4OTg4Ng==",
                                           "createdAt":  "2020-02-28T12:21:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "damianh",
                                           "body":  "Also in `JwtBearerOptions`:\r\n\r\nhttps://github.com/dotnet/aspnetcore/blob/ce0579255104f6ea1902b62c1e21195a7b93f828/src/Security/Authentication/JwtBearer/src/JwtBearerOptions.cs#L65 \r\n\r\nhttps://github.com/dotnet/aspnetcore/blob/62351067ff4c1401556725b401478e648b66acdc/src/Security/Authentication/JwtBearer/src/JwtBearerPostConfigureOptions.cs#L53\r\n\r\n...and probably several other places.",
                                           "updatedAt":  "2020-02-28T12:21:09Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU5MjU3NTAzNg==",
                                           "createdAt":  "2020-02-28T15:54:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "It\u0027s the expectation that it would resolve the client per request or only at startup? Per request would be challenging for OIDC and JwtBearer due to their use of ConfigManager.",
                                           "updatedAt":  "2020-02-28T15:54:44Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU5MjU5NjcxNA==",
                                           "createdAt":  "2020-02-28T16:43:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brentschmaltz",
                                           "body":  "@Tratcher our focus is on a 6.4.2 public release.\r\nPOR is weekly as we find issues.\r\nOnce 6.4.2 is released, we can address this and other issues.",
                                           "updatedAt":  "2020-02-28T16:43:47Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU5NTE1MDYwNA==",
                                           "createdAt":  "2020-03-05T10:23:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "damianh",
                                           "body":  "\u003e It\u0027s the expectation that it would resolve the client per request or only at startup? Per request would be challenging for OIDC and JwtBearer due to their use of ConfigManager.\r\n\r\nSorry, I\u0027m not confident enough on this topic to make an assertion.",
                                           "updatedAt":  "2020-03-05T10:23:51Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwMzA4NTY3MA==",
                                           "createdAt":  "2020-03-24T07:57:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEEoAEQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "TheoBP",
                                                                               "createdAt":  "2023-03-24T11:45:18Z"
                                                                           },
                                                                           {
                                                                               "content":  "EYES",
                                                                               "user":  "willianantunes",
                                                                               "createdAt":  "2023-05-15T12:18:56Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "IGx89",
                                                                               "createdAt":  "2023-12-06T19:18:09Z"
                                                                           },
                                                                           {
                                                                               "content":  "EYES",
                                                                               "user":  "ad-eg-dk",
                                                                               "createdAt":  "2025-01-30T15:47:16Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  4
                                                         },
                                           "author":  "jeffreyrivor",
                                           "body":  ".NET Core 2.1 introduced `SocketsHttpHandler` as the default handler, which is designed to be used in a long-lived singleton-like way and can be made to work. In the [documentation for alternatives to IHttpClientFactory](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/http-requests?view=aspnetcore-3.1#alternatives-to-ihttpclientfactory), it says that setting a finite `SocketsHttpHandler.PooledConnectionLifetime` solves the stale DNS problem of long-lived handlers while keeping the performance benefits of pooled resource management. The default value for `SocketsHttpHandler.PooledConnectionLifetime` is `Timeout.InfiniteTimeSpan`, so default construction of `HttpClient` or `SocketsHttpHandler` won\u0027t have the behavior and it has to be manually set.\r\n\r\nThis should allow us to use an application-lifetime (non-disposed) `HttpClient` for the `Backchannel` (or `BackchannelHttpHandler`) as a workaround.\r\n\r\n``` csharp\r\nservices.AddAuthentication().AddOpenIdConnect(options =\u003e\r\n{\r\n    // use the handler config\r\n    options.BackchannelHttpHandler = new SocketsHttpHandler\r\n    {\r\n        // recycle pooled sockets every 5 minutes\r\n        PooledConnectionLifetime = TimeSpan.FromMinutes(5),\r\n    };\r\n\r\n    // or use the client config\r\n    options.Backchannel = new HttpClient(new SocketsHttpHandler\r\n    {\r\n        PooledConnectionLifetime = TimeSpan.FromMinutes(5),\r\n    }, disposeHandler: false);\r\n});\r\n```\r\n\r\nIf you still want to use `IHttpClientFactory` (it\u0027s got really good delegating handler building overloads) and can work within the fact that the `Backchannel` will be application-lifetime, you could get fancy with [using DI services to configure options](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/configuration/options?view=aspnetcore-3.1#use-di-services-to-configure-options).\r\n\r\n``` csharp\r\n// configure a named HttpClient for use as the backchannel, use SocketsHttpHandler\r\n// configure delegating handler pipeline like Polly here as usual\r\nservices.AddHttpClient(\"backchannel\")\r\n    .ConfigurePrimaryHttpMessageHandler(() =\u003e new SocketsHttpHandler\r\n    {\r\n        PooledConnectionLifetime = TimeSpan.FromMinutes(5),\r\n    });\r\n\r\n// configure the options (match the authentication scheme name used in AddOpenIdConnect)\r\nservices.AddOptions\u003cOpenIdConnectOptions\u003e(OpenIdConnectDefaults.AuthenticationScheme)\r\n    .Bind(Configuration.GetSection(\"AzureAD\")) // similar trick to AADv2 tutorials for using settings from appsettings.json\r\n    .Configure\u003cIHttpClientFactory\u003e((options, httpClientFactory) =\u003e\r\n    {\r\n        // use the injected IHttpClientFactory to get the named client\r\n        // note: this only happens once (the options are still bound in singleton fashion)\r\n        options.Backchannel = httpClientFactory.CreateClient(\"backchannel\");\r\n\r\n        // configure other options here or in the normal AddOpenIdConnect options lambda\r\n    });\r\n\r\n// match the authentication scheme used for the options name\r\nservices.AddAuthentication()\r\n    .AddOpenIdConnect(OpenIdConnectDefaults.AuthenticationScheme, options =\u003e { /* configure options here or above with backchannel config */ });\r\n```",
                                           "updatedAt":  "2020-03-24T07:57:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86XwIs1",
                                           "createdAt":  "2024-12-16T15:46:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "wdnijdam",
                                           "body":  "Will there be any progress on this item. Having a BackChannelFactory would be convenient here.",
                                           "updatedAt":  "2024-12-16T15:46:01Z"
                                       }
                                   ],
                         "totalCount":  10
                     },
        "title":  "Use IHttpClientFactory in RemoteAuthenticationOptions",
        "labels":  [
                       "enhancement",
                       "area-auth",
                       "severity-minor",
                       "affected-medium"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/10564",
        "createdAt":  "2019-05-28T01:43:10Z",
        "number":  10564,
        "author":  "slaneyrw",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-08-11T11:51:57Z",
        "body":  "### Is your feature request related to a problem? Please describe.\r\nI\u0027m trying to augment the standard OpenId/Connect handler to configure additional information in the OIDC challenge and expose additional events for specific Auth failure reasons.\r\n\r\nI want to subclass the existing OpenIdConnect handler but I\u0027m have issues with getting access to some private variables, getting hooks for configuring the OpenIdConnect protocol message prior to raising events, and the hardcoding of the Options type into the base RemoteAuthenticationHandler class.\r\n\r\n### Describe the solution you\u0027d like\r\nCreate an open generic OpenIdConnectHandler that has an OpenIdConnectOptions type constraint.\r\nRefactor the current OpenIdConnectHandler to close the new generic over the existing OpenIdConnectOptions.\r\n\r\nExpose the OpenIdConnectConfiguration private variable to protected scope\r\n\r\nAdd virtual methods to allow configuring/creation of the OpenIdConnect protocol messages BEFORE invoking the RedirectToIdentityProvider event \r\n\r\nAllow setting of the JSON parsing settings ( JObject or JsonDocument ) instead of calling the overload of Parse without settings\r\n\r\nAllow a way of Removing default claim actions added in the OpenIdConnectOptions constructor, we have to clear and duplicate the actions just because I want some of the OpenId claims ( specifically AMR ) to be available to the OpenId client\u0027s system.\r\n\r\n### Describe alternatives you\u0027ve considered\r\nI created a new set of classes inheriting from RemoteAuthenticationHandler\u003cT\u003e, but creating an internal OpenIdConnect handler and routing the HandleChallengeAsync, HandleRemoteAuthenticateAsync, and SignOutAsync from the outer handler to the inner OpenIdConnect handler.\r\nI\u0027m getting significant friction with the way the Events property is created (InitializeEventsAsync) to coordinate the Events instance between the 2 handlers\r\n\r\n\r\n### Additional context\r\nAdd any other context or screenshots about the feature request here.\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHONXN88A==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5NjMzNTQxMw==",
                                           "createdAt":  "2019-05-28T01:45:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brockallen",
                                           "body":  "\u003e specifically AMR\r\n\r\nI have a feeling `amr` will be automatically available in a upcoming release, and other claims easier to make available.",
                                           "updatedAt":  "2019-05-28T01:45:53Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5NjYwMjIxOA==",
                                           "createdAt":  "2019-05-28T17:00:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "As this would be a rather large, and potentially break change, it could only take place ion a major release, so moving to the backlog until we plan the next major release",
                                           "updatedAt":  "2019-05-28T17:00:27Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5NzE2NjYxNA==",
                                           "createdAt":  "2019-05-30T01:29:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "slaneyrw",
                                           "body":  "Just an additional note that to get my Options subclass into the Events context I need to inherit from each context type, override the Options property and EACH Handle method.  A lot of work when doing from the outside, and trying to navigate the mire of private and protected scopes.\r\n\r\n",
                                           "updatedAt":  "2019-05-30T01:29:47Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5NzE2NzQzNQ==",
                                           "createdAt":  "2019-05-30T01:34:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "slaneyrw",
                                           "body":  "\u003e \u003e specifically AMR\r\n\u003e \r\n\u003e I have a feeling `amr` will be automatically available in a upcoming release, and other claims easier to make available.\r\n\r\nNot really my sticking point... getting my Options subclass into the _entire_ Handler/Events object structure means I have to wrap most of them and forward method calls.",
                                           "updatedAt":  "2019-05-30T01:34:07Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2MTU1NjU1Mg==",
                                           "createdAt":  "2021-06-15T14:38:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB47WWQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "joseftw",
                                                                               "createdAt":  "2021-09-03T06:43:42Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "DumboJet",
                                           "body":  "I have the same requirement, because our authentication provider (Signicat) seems to be trying to make the token endpoint to require the client ID and secret passed as a basic auth header. They have only enabled this behavior in a test environment of theirs and created a mess for us.\r\nFrom what I have seen, this is now recommended practice:\r\n\r\nhttps://datatracker.ietf.org/doc/html/rfc6749#section-2.3.1\r\n\r\n\u003e    Including the client credentials in the request-body using the two\r\n   parameters is NOT RECOMMENDED and SHOULD be limited to clients unable\r\n   to directly utilize the HTTP Basic authentication scheme (or other\r\n   password-based HTTP authentication schemes).  The parameters can only\r\n   be transmitted in the request-body and MUST NOT be included in the\r\n   request URI.\r\n\r\nThe only way to support this, seems to be overriding the `OpenIdConnectHandler` (the `RedeemAuthorizationCodeAsync` method [here](https://github.com/aspnet/Security/blob/master/src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectHandler.cs#L746)) but, unlike @slaneyrw, I am still struggling on how to do this...\r\nI mostly have a problem making the framework use my handler, not overriding its methods (although, getting the TokenEndpoint URL in there might be a challenge too...), so if someone can help on this it would be nice.\r\n\r\nI am trying things like:\r\n\r\n```\r\n            services.AddSingleton\u003cAuthenticationHandler\u003cOpenIdConnectOptions\u003e, CustomOpenIdConnectHandler\u003e();\r\n```\r\n\r\n..but they don\u0027t work.\r\n\r\n----\r\n**UPDATE:**\r\nOK, I think this is how you replace the handler:\r\n\r\n```\r\nservices.Replace(ServiceDescriptor.Transient\u003cOpenIdConnectHandler, CustomOpenIdConnectHandler\u003e());\r\n```\r\n\r\nBut turns out there is an easier way to do what I want:\r\nhttps://github.com/signicat/Quick-start-guide-Authentication-.NET-Core\r\n\r\n```\r\n options.Events.OnAuthorizationCodeReceived = RedeemAuthorizationCodeAsync;\r\n\r\n....\r\nprotected virtual async Task RedeemAuthorizationCodeAsync(AuthorizationCodeReceivedContext context)\r\n{\r\n    var configuration = await context.Options.ConfigurationManager.GetConfigurationAsync(CancellationToken.None);\r\n    var requestMessage = new HttpRequestMessage(HttpMethod.Post, configuration.TokenEndpoint);\r\n    string authInfo = context.TokenEndpointRequest.ClientId + \":\" + context.TokenEndpointRequest.ClientSecret;\r\n    authInfo = Convert.ToBase64String(Encoding.Default.GetBytes(authInfo));\r\n    requestMessage.Headers.Authorization = new AuthenticationHeaderValue(\"Basic\", authInfo);\r\n    var msg = context.TokenEndpointRequest.Clone();\r\n    msg.ClientSecret = null;\r\n    requestMessage.Content = new FormUrlEncodedContent(msg.Parameters);\r\n\r\n\r\n    var responseMessage = await context.Backchannel.SendAsync(requestMessage);\r\n    if (!responseMessage.IsSuccessStatusCode)\r\n    {\r\n        Console.WriteLine(await responseMessage.Content.ReadAsStringAsync());\r\n        return;\r\n    }\r\n\r\n    try\r\n    {\r\n        var responseContent = await responseMessage.Content.ReadAsStringAsync();\r\n        var message = new OpenIdConnectMessage(responseContent);\r\n        context.HandleCodeRedemption(message);\r\n    }\r\n    catch (Exception)\r\n    {\r\n    }\r\n}\r\n```",
                                           "updatedAt":  "2021-06-16T09:44:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde841c3zw",
                                           "createdAt":  "2021-08-11T11:51:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC_dbaA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "DumboJet",
                                                                               "createdAt":  "2021-08-16T13:11:59Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "JoeShook",
                                                                               "createdAt":  "2023-06-29T22:32:34Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "slaneyrw",
                                           "body":  "@DumboJet Handling an existing Event callback is how it was designed to work.  But I wanted to add new events and add additional properties to the options.  That is where my \"fun\" started.",
                                           "updatedAt":  "2021-08-11T11:51:56Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "OpenIdConnectHandler - Design for override",
        "labels":  [
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/10615",
        "createdAt":  "2019-05-29T16:31:56Z",
        "number":  10615,
        "author":  "Tratcher",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOBMvR8g==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "kevinchalet",
                                            "createdAt":  "2019-05-29T16:39:48Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "chrgraefe",
                                            "createdAt":  "2019-10-11T22:06:40Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "nlaveck",
                                            "createdAt":  "2020-06-22T11:53:13Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "michaelpfister",
                                            "createdAt":  "2020-08-07T13:26:10Z"
                                        }
                                    ],
                          "totalCount":  4
                      },
        "updatedAt":  "2024-01-29T20:36:47Z",
        "body":  "https://github.com/aspnet/AspNetCore/pull/9448#issuecomment-484298711\r\n\r\nOAuth and OIDC have a standard flow of sending the clientid and secret to the token endpoint using a custom basic auth format. 4 of the auth handlers in aspnet-contrib require this flow and have to implement it manually. We expect many other providers also support this format since it\u0027s the one required in the spec.\r\n\r\nNote the encoding is customized in the OAuth spec. (I don\u0027t think the FitBit handler is following that).\r\nhttps://github.com/aspnet-contrib/AspNet.Security.OAuth.Providers/blob/aad5420654c65b5fb9908ddf298dbab17076338c/src/AspNet.Security.OAuth.Fitbit/FitbitAuthenticationHandler.cs#L66-L70\r\n\r\n@PinpointTownes ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOa8rnfw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5NzAxNDk4NQ==",
                                           "createdAt":  "2019-05-29T16:39:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "\u003e I don\u0027t think the FitBit handler is following that\r\n\r\nYeah, the logic is not standard-compliant. Not sure whether it\u0027s an oversight or not (I guess it is), but here\u0027s an example of a valid basic header construction: https://github.com/aspnet-contrib/AspNet.Security.OAuth.Extensions/blob/378348bb4efb1d277020e2a55f41a546368f7a31/src/AspNet.Security.OAuth.Introspection/OAuthIntrospectionHandler.cs#L414-L429\r\n\r\n/cc @martincostello ",
                                           "updatedAt":  "2019-05-29T16:39:34Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5NzAzNTczNQ==",
                                           "createdAt":  "2019-05-29T17:35:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "martincostello",
                                           "body":  "@PinpointTownes I\u0027ll look at updating that in https://github.com/aspnet-contrib/AspNet.Security.OAuth.Providers/pull/280 based on the above sample.",
                                           "updatedAt":  "2019-05-29T17:35:49Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcxMTkyOTY1MQ==",
                                           "createdAt":  "2020-10-19T09:37:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "prochnowc",
                                           "body":  "@Tratcher Is there any plans to implement this in the `OAuthHandler` ? I need to add federation for some authority which only supports credentials via authorization header.",
                                           "updatedAt":  "2020-10-19T09:42:00Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcxMjEzMTYwNw==",
                                           "createdAt":  "2020-10-19T12:45:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBT7ZEQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "prochnowc",
                                                                               "createdAt":  "2020-10-19T14:46:43Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "@prochnowc no plans at present. Only a few providers have required it, and even they don\u0027t use standard implementations.\r\n\r\nYou can handle this today the same way they did for FitBit.\r\nhttps://github.com/aspnet-contrib/AspNet.Security.OAuth.Providers/blob/aad5420654c65b5fb9908ddf298dbab17076338c/src/AspNet.Security.OAuth.Fitbit/FitbitAuthenticationHandler.cs#L66-L70",
                                           "updatedAt":  "2020-10-19T12:45:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde843f2Sq",
                                           "createdAt":  "2021-09-30T09:05:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MrSmoke",
                                           "body":  "Just throwing my two cents on this ticket as I\u0027ve also ran into this recently (also ended up using a similar method to the FitBit handler so no biggie).\r\n\r\nSince its defined in the [RFC](https://datatracker.ietf.org/doc/html/rfc6749#section-2.3.1) it would be nice to have it as an option for those very few providers who do implement it as per the spec.",
                                           "updatedAt":  "2021-09-30T09:05:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Iu8t5",
                                           "createdAt":  "2022-08-19T05:26:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dylantack",
                                           "body":  "Curiously, the documentation contains a description of [TokenEndpointAuthMethodsSupported](https://docs.microsoft.com/en-us/dotnet/api/microsoft.identitymodel.protocols.openidconnect.openidconnectconfiguration.tokenendpointauthmethodssupported?view=azure-dotnet#microsoft-identitymodel-protocols-openidconnect-openidconnectconfiguration-tokenendpointauthmethodssupported), but it appears to be unimplemented.\r\n\r\nAt least for me, this has no effect:\r\n\r\n```\r\n       options.Configuration = new OpenIdConnectConfiguration\r\n       {\r\n           TokenEndpointAuthMethodsSupported = { \"client_secret_basic\" },\r\n       };\r\n```",
                                           "updatedAt":  "2022-08-19T05:26:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85rv9At",
                                           "createdAt":  "2023-11-13T09:11:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lausitzer",
                                           "body":  "@Tratcher a whole rewrite of ExchangeCodeAsync() to support client_secret_basic is a bad idea (at least in my opinion) because you decouple from further improvements in the development and run the risk of incompatibilities. The linked FitBit code is a good example for that, it doesn\u0027t support PKCE verifier_code like the original implementation does. That results in trouble if your identity provider relies on PKCE (like ADFS) or expects verifier_code in the token request if you sent code_challenge in the authorization request (like GitLab).\r\n\r\nIf I may wish for something, implement client_secret_basic or split ExchangeCodeAsync() in one part for content creation and another one for transmission. That gives us a chance to adjust content in dedicated points before transmission without the need to generate it from scratch.",
                                           "updatedAt":  "2023-11-13T09:11:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85ryud_",
                                           "createdAt":  "2023-11-13T16:04:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "\u003e The linked FitBit code is a good example for that, it doesn\u0027t support PKCE verifier_code like the original implementation does.\r\n\r\nIt\u0027s worth noting that the permalink present in the OP points to an old commit: the implementation has since been updated to optionally support PKCE (which isn\u0027t too terrible as it requires just 5 lines of code, braces included: https://github.com/aspnet-contrib/AspNet.Security.OAuth.Providers/blob/dev/src/AspNet.Security.OAuth.Fitbit/FitbitAuthenticationHandler.cs)\r\n\r\nAs part of the [OpenIddict web providers development](https://kevinchalet.com/2022/12/16/getting-started-with-the-openiddict-web-providers/), I had to implement and test ~60 integrations (including a lot of providers we already support via aspnet-contrib), so I can shed some - fresh - light for those who are interested:\r\n\r\n  - Some providers - e.g Dropbox, LinkedIn, PayPal or Salesforce - have started offering OpenID Connect support (either by updating their existing OAuth 2.0 implementation or by providing new endpoints).\r\n\r\n  - Most of the providers that implemented OpenID Connect also implemented the optional discovery specification (which is a great thing). Sadly, I didn\u0027t see much appetite for the OAuth 2.0 equivalent/backport - `OAuth 2.0 Authorization Server Metadata` - that wasn\u0027t adopted by any major service.\r\n\r\n  - PKCE is slowly being implemented in popular services: ArcGIS, Discord, Facebook, Fitbit, Lichess, Twitter and Zoom now officially support it.\r\n\r\n  - There are still providers that only support `client_secret_basic`: Fitbit, Kroger, Notion, Reddit, ServiceChannel and Twitter. Reddit is still the weirdest one in that list as it requires sending the `client_id` using basic authentication even when there\u0027s no `client_secret` (in this case, the standard approach would be to send `client_id` in the form).\r\n\r\n  - The fact a provider offers a recent implementation doesn\u0027t mean it\u0027s standard-compliant, even if it implements OIDC. For instance:\r\n      - The new OIDC-based LinkedIn implementation doesn\u0027t return a `token_endpoint_auth_methods_supported` node in its discovery document, so a standard client would have to use `client_secret_basic` (since it\u0027s the default client authentication method)... but LinkedIn doesn\u0027t support basic authentication AT ALL 🤣\r\n      - The quite recent EpicGames service (OIDC-based too) doesn\u0027t implement the standard `client_secret_basic` encoding method as it doesn\u0027t support formURL-encoding AND returns chars that need to be escaped in its tokens...\r\n\r\nConclusion: it\u0027s sadly still a hot mess.",
                                           "updatedAt":  "2024-01-29T20:36:47Z"
                                       }
                                   ],
                         "totalCount":  8
                     },
        "title":  "Supporting basic authentication Token exchange in both the OAuth2 and OIDC handlers ",
        "labels":  [
                       "enhancement",
                       "area-auth",
                       "severity-minor",
                       "affected-very-few"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/11368",
        "createdAt":  "2019-06-19T11:56:48Z",
        "number":  11368,
        "author":  "vasicvuk",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC0fVRg==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "mausch",
                                            "createdAt":  "2023-12-07T14:31:33Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2021-03-01T23:36:11Z",
        "body":  "### Describe the bug\r\n\r\nif you have more then one authentication server (JWT or OpenID) that you trust if one of them is down we are getting error: \r\n\r\n```\r\n IDX20803: Unable to obtain configuration from: \u0027[PII is hidden by default. Set the \u0027ShowPII\u0027 flag in IdentityModelEventSource.cs to true to reveal it.]\u0027.\r\n```\r\n\r\nWe should have a way to make this check optional\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Add two authentication schemas with two Authority URLs\r\n2. Turn off one of the authorities\r\n3. See error when try to navigate to endpoint supporting both authorities\r\n\r\nSample configuration of two JWT bearer can be found here\r\nhttps://stackoverflow.com/questions/49694383/use-multiple-jwt-bearer-authentication\r\n\r\n### Expected behavior\r\n\r\nIgnore authentication service if not available. Return 401 if it is the only trusted source.\r\n\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOLv4JXA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwNDI2MjA5NA==",
                                           "createdAt":  "2019-06-21T02:09:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "analogrelay",
                                           "body":  "Can you clarify your scenario? Are these just alternate ways clients can be configured and if one isn\u0027t functional, then you want to continue to allow clients configured with the other token source to be authenticated? That doesn\u0027t seem unreasonable but it\u0027s not something we\u0027ve had significant demand for. I\u0027m putting this on the backlog for now, but I don\u0027t expect it\u0027s something we\u0027ll have the resources to look at in our upcoming releases.",
                                           "updatedAt":  "2019-06-21T02:09:45Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwNDI4ODc2Ng==",
                                           "createdAt":  "2019-06-21T04:55:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBhzN4w==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "strainovic",
                                                                               "createdAt":  "2019-08-09T10:24:37Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jayeshkv",
                                                                               "createdAt":  "2021-03-01T21:46:44Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "vasicvuk",
                                           "body":  "Scenario is next. I have two authentication servers that i trust. One is issuing tokens to general users on the single environment and the second one is admin authority (authentication server) which is trusted by multiple environments. If the admin authentication server is down i still want users to be able to access environment. Currently if i have some downtime on admin authentication server all the environments are unaccessible by users.\r\n\r\n",
                                           "updatedAt":  "2019-06-21T04:55:01Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc4ODM0OTY5NQ==",
                                           "createdAt":  "2021-03-01T22:29:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jayeshkv",
                                           "body":  "@vasicvuk were you able to find a workaround for this specific issue ?",
                                           "updatedAt":  "2021-03-01T22:29:45Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc4ODQwMDQ3Ng==",
                                           "createdAt":  "2021-03-01T23:36:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "LukeStephen",
                                           "body":  "\u003e Can you clarify your scenario? Are these just alternate ways clients can be configured and if one isn\u0027t functional, then you want to continue to allow clients configured with the other token source to be authenticated? That doesn\u0027t seem unreasonable but it\u0027s not something we\u0027ve had significant demand for. I\u0027m putting this on the backlog for now, but I don\u0027t expect it\u0027s something we\u0027ll have the resources to look at in our upcoming releases.\r\n\r\nWe\u0027re in this situation right now, one identity server authentication server went down at a 3rd party company we had integrated SSO with and then no one could log in on the Azure AD instance that was configured for all other users.",
                                           "updatedAt":  "2021-03-01T23:36:11Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "Cannot handle error if host is not reachable for JwtBearer",
        "labels":  [
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/12269",
        "createdAt":  "2019-07-17T09:09:45Z",
        "number":  12269,
        "author":  "leastprivilege",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2020-11-10T23:27:25Z",
        "body":  "This is really more an issue for the underlying JWT handler\r\n\r\nhttps://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/issues/1220\r\n\r\nBut I thought it might be interesting to bring this to your attention. @blowdart ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOHpOQrA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUxMjk4NzMwOA==",
                                           "createdAt":  "2019-07-18T21:05:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "analogrelay",
                                           "body":  "Triage: Yep, we will probably need to react to this. Backlogging since we don\u0027t have a timeline on the AAD changes yet.",
                                           "updatedAt":  "2019-07-18T21:05:16Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "JwtBearer and OpenIdConnect handlers should have support for JWT type validation",
        "labels":  [
                       "enhancement",
                       "area-auth",
                       "affected-few",
                       "severity-minor"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/12939",
        "createdAt":  "2019-08-07T11:35:10Z",
        "number":  12939,
        "author":  "AquilaSands",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC2YZkw==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "davisnw",
                                            "createdAt":  "2024-03-07T22:03:58Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2023-02-03T16:18:59Z",
        "body":  "### Describe the bug\r\nWhen an exception is thrown from the `UseAuthentication` middleware it propagates back up the pipeline until caught by the `UseExceptionHandler` middleware which then re-executes the pipeline using the error path which then gets to the `UseAuthentication` middleware a second time but because the cached `Task` from the first call to `UseAuthentication` is returned the second time around the initial exception on the `Task` is returned as soon as it is awaited causing `UseExceptionHandler` to catch it as a secondary exception and then throw the original exception it caught.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\nVersion 2.2.6 of ASP.NET Core\r\nMinimal reproduction https://github.com/AquilaSands/AspNetCoreCookieErrorHandlerBug based on https://github.com/aspnet/AspNetCore.Docs/tree/master/aspnetcore/security/authentication/cookie/samples/2.x/CookieSample\r\n\r\n1. Run the minimal repro\r\n2. Sign in\r\n3. Follow the \u0027Contact (Authentication Required)\u0027 link\r\n4. This will cause a `CustomException` to be thrown from the custom `ValidatePrincipal()` method\r\n5. The custom error page is not shown and you get the generic browser 500 error page\r\n\r\n### Expected behavior\r\nExpect the custom error page to be shown.\r\n\r\n### Sample log output\r\nhttps://github.com/AquilaSands/AspNetCoreCookieErrorHandlerBug/blob/dc50eda4b1dfc0bbc926f00109d57b6f2193499d/log-output.txt\r\n\r\n### Additional context\r\nThe behaviour of the authentication middleware is clearly by design but I think it either needs a way to clear the cached `Task` or it should avoid caching a faulted `Task`.\r\n\r\n### Output of `dotnet --info`\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.301\r\n Commit:    70d6be0814\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.301\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.6\r\n  Commit:  7dac9b1b51\r\n\r\n.NET Core SDKs installed:\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.701 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.301 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOVGfd4Q==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUxOTE5MzQ0MA==",
                                           "createdAt":  "2019-08-07T17:26:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Your repro app makes sense, but could you please describe the original exception scenario where you encountered this? Were you able to work around it? That will help us prioritize this.",
                                           "updatedAt":  "2019-08-07T17:26:53Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUxOTIyMzM5NA==",
                                           "createdAt":  "2019-08-07T18:48:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AquilaSands",
                                           "body":  "Hi, the original scenario uses social authentication providers along with the cookie auth scheme but it is essentially the same as the repro, once a user is authenticated they are signed in with the cookie scheme. The app is multi tenant database per customer so it provides an implementation of the ValidatePrincipal() event to get additional claims for authorization from a tenant db I had a bug in my implementation which caused an exception which triggered this issue.\r\n\r\nI haven\u0027t found a workaround for this issue other than writing my own code a bit better so it doesn\u0027t cause exceptions in the first place 😄. ",
                                           "updatedAt":  "2019-08-07T18:48:50Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUxOTI0MzIwMw==",
                                           "createdAt":  "2019-08-07T19:47:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC1aRLw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "apoulet1234",
                                                                               "createdAt":  "2019-09-05T00:43:08Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "GnktYnk",
                                                                               "createdAt":  "2020-03-22T02:52:59Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "dalfonsop",
                                                                               "createdAt":  "2021-12-06T16:11:17Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "AquilaSands",
                                                                               "createdAt":  "2023-02-03T16:55:15Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  4
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Indeed, not throwing in the first place is your best option 😁.  `UseExceptionHandler` is a best effort to show a friendly error, but it will never be able to handle all errors. We\u0027ll see if there\u0027s something we can do to address this specific scenario.",
                                           "updatedAt":  "2019-08-07T19:47:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85UV-ns",
                                           "createdAt":  "2023-02-03T05:49:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "michael-freidgeim-webjet",
                                           "body":  "Is any workaround available since 2019? ",
                                           "updatedAt":  "2023-02-03T05:49:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85UZ93h",
                                           "createdAt":  "2023-02-03T16:18:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "You can use the other overload of UseExceptionHandler to provide a response without re-executing the middleware pipeline.\r\nhttps://github.com/dotnet/aspnetcore/blob/6a547f269de700cfe333946e1fd744e4332a904a/src/Middleware/Diagnostics/src/ExceptionHandler/ExceptionHandlerExtensions.cs#L56",
                                           "updatedAt":  "2023-02-03T16:18:58Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "UseExceptionHandler middleware can\u0027t handle exceptions from UseAuthentication middleware",
        "labels":  [
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/13011",
        "createdAt":  "2019-08-09T18:35:26Z",
        "number":  13011,
        "author":  "Tratcher",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-07-22T22:36:37Z",
        "body":  "In https://github.com/aspnet/AspNetCore/issues/12566 we had to work around some corefx linux limitations. These were fixed in https://github.com/dotnet/corefx/pull/40105. Remove the workarounds.\r\n\r\nMainly these parts:\r\nhttps://github.com/aspnet/AspNetCore/blob/6e25a9fc53dd5fb8332c685e0c92f10c70bc225f/src/Security/Authentication/Negotiate/src/Internal/ReflectedNegotiateState.cs#L52-L58\r\nhttps://github.com/aspnet/AspNetCore/blob/6e25a9fc53dd5fb8332c685e0c92f10c70bc225f/src/Security/Authentication/Negotiate/src/Internal/ReflectedNegotiateState.cs#L111-L127\r\n\r\nThis is only cleanup, it can happen in master/5.x.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHONHfYlQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2NDY3Njk1Mw==",
                                           "createdAt":  "2019-12-11T18:38:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Removing my assignment here. We need to get someone else ramped up on this scenario.",
                                           "updatedAt":  "2019-12-11T18:38:43Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg4MDI2OTQ2MQ==",
                                           "createdAt":  "2021-07-14T23:12:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2021-07-14T23:12:10Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "React to corefx negotiate linux error reporting changes",
        "labels":  [
                       "task",
                       "area-auth",
                       "severity-nice-to-have",
                       "affected-very-few"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/13046",
        "createdAt":  "2019-08-12T09:34:52Z",
        "number":  13046,
        "author":  "acblksun",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC1ATJw==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "HudsonAkridge",
                                            "createdAt":  "2019-09-20T17:25:58Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "taurit",
                                            "createdAt":  "2020-07-21T13:15:12Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "surenderssm",
                                            "createdAt":  "2021-01-27T17:49:51Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "flagbug",
                                            "createdAt":  "2021-04-20T18:36:31Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "rcollette",
                                            "createdAt":  "2021-08-16T16:01:58Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "lbse",
                                            "createdAt":  "2022-11-12T22:26:20Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "davidruhmann",
                                            "createdAt":  "2024-01-06T22:58:58Z"
                                        }
                                    ],
                          "totalCount":  7
                      },
        "updatedAt":  "2021-12-09T00:11:54Z",
        "body":  "### Describe the bug\r\nWe require accepting multiple JwtBearer audience/authority pairs for our api. \r\n\r\nWhen we setup multiple JwtBearer authentication for our api, we notice that aspnetcore middleware is continually calling the `.well-known/openid-configuration` at the minimum refresh interval of 30 seconds instead of the desired AutomaticRefreshInterval of 1 day.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using ASP.NET Core Version 2.2\r\n2. Configure to use multiple Jwt Bearers (see code below)\r\n3. Get a valid authorization token (note - invalid tokens have the same result)\r\n4. Run any endpoint that engages the middleware e.g. `[Authorize]` and pass the token correctly\r\n3. Observe that the `.well-known/openid-configuration` for all configured JwtBearer\u0027s will be called every 30 seconds (or every `RefreshInterval`) instead of once a day (or every `AutomaticRefreshInterval`).\r\n\r\n### Expected behavior\r\nExpect the default Refresh Interval of 30 seconds, and AutomaticRefreshInterval of 1 day to be sufficient, and the `.well-known/openid-configuration` to be called at most once per day per scheme.\r\n\r\nNote that I did perform a test of a single Jwt Bearer registered as the default, and it did perform as expected only calling at the AutomaticRefreshInterval \r\n\r\n### Additional context\r\n- using the http interceptor isn\u0027t required if you can monitor with Application Insights\r\n- it makes no difference if the audience strings are the same or different\r\n\r\nInclude the output of `dotnet --info`\r\n\r\n```\r\nC:\\repos\\test\u003edotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.401\r\n Commit:    729b316c13\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.401\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.6\r\n  Commit:  7dac9b1b51\r\n\r\n.NET Core SDKs installed:\r\n  1.0.2 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.102 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.103 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.302 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.701 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.102 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.301 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.401 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n```\r\n\r\nCode to reproduce. I used the VS2019 template for a webapi and modified it slightly.\r\n\r\n```c#\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.AspNetCore.Authentication;\r\nusing Microsoft.AspNetCore.Authorization;\r\nusing Microsoft.AspNetCore.Builder;\r\nusing Microsoft.AspNetCore.Hosting;\r\nusing Microsoft.AspNetCore.HttpsPolicy;\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing Microsoft.Extensions.Configuration;\r\nusing Microsoft.Extensions.DependencyInjection;\r\nusing Microsoft.Extensions.Logging;\r\nusing Microsoft.Extensions.Options;\r\n\r\nnamespace WebApplicationAuthTest\r\n{\r\n    public class Startup\r\n    {\r\n        public Startup(IConfiguration configuration)\r\n        {\r\n            Configuration = configuration;\r\n        }\r\n\r\n        public IConfiguration Configuration { get; }\r\n\r\n        // This method gets called by the runtime. Use this method to add services to the container.\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            // this example uses 2 different auth0 tenants, but this shouldn\u0027t matter\r\n            const string audience_one = \"https://api1.example.com\";\r\n            const string authority_one = \"https://test-tenant-a.au.auth0.com/\";\r\n            const string audience_two = \"https://api2.example.com\";\r\n            const string authority_two = \"https://test-tenant-b.au.auth0.com/\";\r\n\r\n            var auth = services\r\n                .AddAuthentication()\r\n#if true\r\n                .AddJwtBearerWithHttpIntercept(\"Auth-A\", audience_one, authority_one)\r\n                .AddJwtBearerWithHttpIntercept(\"Auth-B\", audience_two, authority_two)\r\n#else\r\n                // AddJwtBearerWithHttpIntercept is equivalent to these. All it adds is http client interception for request/response logging.\r\n                .AddJwtBearer(\"Auth-A\", options =\u003e\r\n                {\r\n                    options.Audience = audience_one;\r\n                    options.Authority = authority_one;\r\n\r\n                    options.Validate();\r\n                })\r\n                .AddJwtBearer(\"Auth-B\", options =\u003e\r\n                {\r\n                    options.Audience = audience_two;\r\n                    options.Authority = authority_two;\r\n\r\n                    options.Validate();\r\n                })\r\n#endif\r\n                ;\r\n\r\n\r\n            services.AddAuthorization(options =\u003e\r\n            {\r\n                options.DefaultPolicy = new AuthorizationPolicyBuilder()\r\n                    .RequireAuthenticatedUser()\r\n                    .AddAuthenticationSchemes(\"Auth-A\", \"Auth-B\")\r\n                    .Build();\r\n            });\r\n\r\n            services.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_2);\r\n        }\r\n\r\n        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.\r\n        public void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n        {\r\n            if (env.IsDevelopment())\r\n            {\r\n                app.UseDeveloperExceptionPage();\r\n            }\r\n            else\r\n            {\r\n                // The default HSTS value is 30 days. You may want to change this for production scenarios, see https://aka.ms/aspnetcore-hsts.\r\n                app.UseHsts();\r\n            }\r\n\r\n            app.UseHttpsRedirection();\r\n            app.UseMvc();\r\n        }\r\n    }\r\n\r\n\r\n    public static class JwtConfiguration\r\n    {\r\n        public static AuthenticationBuilder AddJwtBearerWithHttpIntercept(this AuthenticationBuilder authenticationBuilder, string schemeIdentifier, string audience, string authority)\r\n        {\r\n            return authenticationBuilder\r\n                 .AddJwtBearer(schemeIdentifier, options =\u003e\r\n                 {\r\n                     options.Audience = audience;\r\n                     options.Authority = authority;\r\n\r\n\r\n                     // Except for this - we added it ourselves. Technically all we should need to set is this unless we want to modify configurationManager.\r\n                     options.BackchannelHttpHandler = new LoggingHandler(new System.Net.Http.HttpClientHandler());\r\n\r\n#if false\r\n\r\n                     // this is as-is defaults from https://github.com/aspnet/AspNetCore/blob/v2.2.6/src/Security/Authentication/JwtBearer/src/JwtBearerPostConfigureOptions.cs\r\n                     if (string.IsNullOrEmpty(options.MetadataAddress) \u0026\u0026 !string.IsNullOrEmpty(options.Authority))\r\n                     {\r\n                         options.MetadataAddress = options.Authority;\r\n                         if (!options.MetadataAddress.EndsWith(\"/\", StringComparison.Ordinal))\r\n                         {\r\n                             options.MetadataAddress += \"/\";\r\n                         }\r\n\r\n                         options.MetadataAddress += \".well-known/openid-configuration\";\r\n                     }\r\n\r\n                     var httpClient = new System.Net.Http.HttpClient(options.BackchannelHttpHandler ?? new System.Net.Http.HttpClientHandler());\r\n                     httpClient.Timeout = options.BackchannelTimeout;\r\n                     httpClient.MaxResponseContentBufferSize = 1024 * 1024 * 10; // 10 MB\r\n\r\n                     var configurationManager = new Microsoft.IdentityModel.Protocols.ConfigurationManager\u003cMicrosoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfiguration\u003e(\r\n                         options.MetadataAddress, new Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfigurationRetriever(),\r\n                         new Microsoft.IdentityModel.Protocols.HttpDocumentRetriever(httpClient) { RequireHttps = options.RequireHttpsMetadata });\r\n                     options.ConfigurationManager = configurationManager;\r\n\r\n\r\n                     // Except here - we manually increase the RefreshInterval to prove it\u0027s the RefreshInterval\r\n                     configurationManager.RefreshInterval = TimeSpan.FromMinutes(5);\r\n                     // configurationManager.AutomaticRefreshInterval = \r\n#endif\r\n\r\n\r\n                     options.Validate();\r\n                     Console.WriteLine($\"Added {schemeIdentifier} for authority {authority} and audience {audience}\");\r\n\r\n                 });\r\n        }\r\n    }\r\n\r\n    public class LoggingHandler : System.Net.Http.DelegatingHandler\r\n    {\r\n        public LoggingHandler(System.Net.Http.HttpMessageHandler innerHandler)\r\n            : base(innerHandler)\r\n        {\r\n        }\r\n\r\n        protected override async Task\u003cSystem.Net.Http.HttpResponseMessage\u003e SendAsync(System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken)\r\n        {\r\n            Console.WriteLine(\"Request:\");\r\n            Console.WriteLine(request.ToString());\r\n            if (request.Content != null)\r\n            {\r\n                Console.WriteLine(await request.Content.ReadAsStringAsync());\r\n            }\r\n            Console.WriteLine();\r\n\r\n            System.Net.Http.HttpResponseMessage response = await base.SendAsync(request, cancellationToken);\r\n\r\n            Console.WriteLine(\"Response:\");\r\n            Console.WriteLine(response.ToString());\r\n            if (response.Content != null)\r\n            {\r\n                Console.WriteLine(await response.Content.ReadAsStringAsync());\r\n            }\r\n            Console.WriteLine();\r\n\r\n            return response;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOOvf8Ig==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUzMDU2MjI2Mg==",
                                           "createdAt":  "2019-09-11T20:56:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Does it hit this code path?\r\nhttps://github.com/aspnet/AspNetCore/blob/71c5c66b211c7ab9d44751e39cef27c525124bb7/src/Security/Authentication/JwtBearer/src/JwtBearerHandler.cs#L112-L121\r\nA) Token arrives for Auth-B.\r\nB) Authenticate runs for Auth-A, fails with SecurityTokenSignatureKeyNotFoundException (?), requests a rate limited refresh of metadata\r\nC) Authenticate runs for Auth-B and succeeds.\r\n\r\nIf this is what\u0027s happening then you should only see refreshes for A, not B. Disabling RefreshOnIssuerKeyNotFound would prevent it.",
                                           "updatedAt":  "2019-09-11T20:56:25Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUzMzY0MjYwMg==",
                                           "createdAt":  "2019-09-20T17:28:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HudsonAkridge",
                                           "body":  "We\u0027re having the exact same problem where `RefreshOnIssuerKeyNotFound` is firing on either Bearer Scheme failing. One of the two will always fail for us, while the other succeeds.",
                                           "updatedAt":  "2019-09-20T17:28:00Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUzMzcyMTIxOQ==",
                                           "createdAt":  "2019-09-20T21:51:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "@HudsonAkridge it should only ever fire for the first provider. Can you confirm?",
                                           "updatedAt":  "2019-09-20T21:51:52Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUzNDc2MjA1NQ==",
                                           "createdAt":  "2019-09-24T21:47:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "eliaslopezgt",
                                           "body":  "@Tratcher If I add 4 JWTBearerHandlers and only one can validate the token, it reloads the configuration on the other 3.  Hope that helps. https://github.com/aspnet/AspNetCore/issues/14397",
                                           "updatedAt":  "2019-09-24T21:47:50Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUzNDc2ODgzMw==",
                                           "createdAt":  "2019-09-24T22:10:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "Does it happen every time? Every so often isn\u0027t unsurprising as it will go through the handlers in order and refresh to see if there\u0027s a new key.",
                                           "updatedAt":  "2019-09-24T22:10:09Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUzNDgzOTU4NQ==",
                                           "createdAt":  "2019-09-25T03:52:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB8dcIg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "taurit",
                                                                               "createdAt":  "2020-07-21T13:27:43Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "mitchharvey-dsg",
                                                                               "createdAt":  "2021-09-30T14:28:35Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "eliaslopezgt",
                                           "body":  "Maybe this section from the issue I created helps.\r\n\r\n### Expected behavior\r\nThis behavior is acceptable as long as there\u0027s only one `JWTBearerHandler`.\r\nHaving multiple `JWTBearerHandlers` results in unwanted traffic to the configuration endpoints.\r\nThis can be currently mitigated by:\r\n\r\n1. Setting the `RefreshInterval` to something different than its default (30 seconds)\r\n2. Setting `RefreshOnIssuerKeyNotFound` to false in all the `JWTBearerHandlers`\r\n\r\nMy proposed solution is to create an additional `OnSignatureValidationFailed` event that can be triggered before `Options.ConfigurationManager.RequestRefresh();` in `JwtBearerHandler.cs` \r\nhttps://github.com/aspnet/AspNetCore/blob/master/src/Security/Authentication/JwtBearer/src/JwtBearerHandler.cs\r\n\r\nThis with the purpose of allowing the caller to intercept the `RequestRefresh` and in this case, inject logic that can compare the `invalid token` audience and authority, with the audience and authority of `the handler`, if they are the same, then trigger the refresh otherwise it means we are trying to validate a token that is going to fail the validation no matter if we refresh.\r\n\r\nThe only change to the JWTBearerHandler is the addition of the `OnSignatureValidationFailed` event. I have a PR ready but wanted to discuss if this could bring any value or not.",
                                           "updatedAt":  "2019-09-25T03:52:20Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUzNTEwNDQyNA==",
                                           "createdAt":  "2019-09-25T16:31:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBK_Kcg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "eliaslopezgt",
                                                                               "createdAt":  "2019-09-25T17:20:18Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "taurit",
                                                                               "createdAt":  "2020-07-21T13:28:04Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "@blowdart this is functioning as intended, and the mitigations listed above are effective:\r\n1. Setting the RefreshInterval to something different than its default (30 seconds)\r\n1. Setting RefreshOnIssuerKeyNotFound to false in all the JWTBearerHandlers\r\n\r\nOne way to redesign this would be to build one JwtAuthHandler that could contain multiple configurations. It would loop through all of them before triggering this kind of failure. Similar logic already exists when there are multiple token validators configured.\r\n\r\nhttps://github.com/aspnet/AspNetCore/blob/752d99ca531f587fae92da63c1120f95c453e72a/src/Security/Authentication/JwtBearer/src/JwtBearerHandler.cs#L103-L105\r\n\r\nRecommend backlog.",
                                           "updatedAt":  "2019-09-25T16:31:15Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUzNTE4MTEyMg==",
                                           "createdAt":  "2019-09-25T19:43:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "eliaslopezgt",
                                           "body":  "@blowdart can I help with it?",
                                           "updatedAt":  "2019-09-25T19:43:56Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUzNzIzMDUwNQ==",
                                           "createdAt":  "2019-10-01T21:06:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "@eliaslopezgt feel free to make some proposals, but for a refactor this large we want to agree on a design before starting any PRs.",
                                           "updatedAt":  "2019-10-01T21:06:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde8469_wi",
                                           "createdAt":  "2021-12-09T00:11:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCGOiOg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "acblksun",
                                                                               "createdAt":  "2021-12-12T08:37:06Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "Tiberriver256",
                                           "body":  "If anyone else is struggling with this, I stumbled across a workaround for this issue here:\r\nhttps://oliviervaillancourt.com/posts/Fixing-IDX10501-MultipleAuthScheme\r\n\r\nBasically, the issue seems to be that when running multiple auth schemes every auth scheme will attempt to validate the token. For the correct auth scheme everything happens as expected. For the other auth schemes, signature validation will fail with `SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match key` since the jwt token was issued by a different Idp. This marks the auth scheme with the `RefreshOnIssuerKeyNotFound` and the metadata is forced to reload.\r\n\r\nThe solution from the blog is basically to only attempt token validation if the issuer on the token matches the authority issuer:\r\n\r\n```cs\r\nvar token = jwtHandler.ReadJwtToken(jwtToken);\r\nif (string.Equals(token.Issuer, authorityIssuer, StringComparison.OrdinalIgnoreCase))\r\n{\r\n    // means the token was issued by this authority, we make sure full validation runs as normal\r\n    return await base.HandleAuthenticateAsync();\r\n}\r\nelse\r\n{\r\n    // Skip validation since the token as issued by a an issuer that this instance doesn\u0027t know about\r\n    // That has zero of success, so we will not issue a \"fail\" since it crowds the logs with failures of type IDX10501 \r\n    // which are not really true and certainly not useful.\r\n    this.Logger.LogDebug($\"Skipping jwt token validation because token issuer was {token.Issuer} but the authority issuer is: {authorityIssuer}\");\r\n    return AuthenticateResult.NoResult();\r\n}\r\n```\r\n\r\nAs a side note, it also gets rid of the problem in #18940",
                                           "updatedAt":  "2021-12-09T00:11:54Z"
                                       }
                                   ],
                         "totalCount":  10
                     },
        "title":  "multiple JwtBearer authentication schemes continually refresh metadata",
        "labels":  [
                       "bug",
                       "area-auth",
                       "severity-major",
                       "affected-medium",
                       "multi-tenancy"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/14250",
        "createdAt":  "2019-09-23T08:05:19Z",
        "number":  14250,
        "author":  "Aaronmsv",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOBSJHSA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "schmitch",
                                            "createdAt":  "2020-10-01T14:50:04Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "schmitch",
                                            "createdAt":  "2020-10-01T14:50:06Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2022-09-28T15:32:58Z",
        "body":  "Hi,\r\n\r\nI want to support (re)configuring authentication providers at runtime. There are many authentication types supported in the application: cookie authentication, a custom AuthenticationHandler and external providers (such as Google).\r\n\r\nIs it possible to enable/disable and reconfigure authentication providers at runtime, even for external providers provided out of the box, such as Google? Additionally, it is possible to use the same external provider multiple times, but with different configurations?\r\n\r\nI saw the example for dynamic schemes (https://github.com/aspnet/AspNetCore/blob/5a6b6c90b6e32ecab4975c546228cc63199f168b/src/AuthSamples/samples/DynamicSchemes/Controllers/AuthController.cs), but I was wondering how to do this with external providers that are supported out of the box. Since this is abstracted behind the `AddGoogle` extension on the AuthenticationBuilder, will I need to implement this myself?\r\n\r\nI\u0027m using ASP.NET Core 2.2.\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOM7vScA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUzNDA3NDUxMQ==",
                                           "createdAt":  "2019-09-23T12:20:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "@Tratcher do you have a suitable sample?",
                                           "updatedAt":  "2019-09-23T12:20:28Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUzNTY4NjMwMg==",
                                           "createdAt":  "2019-09-26T21:06:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC8GoXQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "eulerchavez",
                                                                               "createdAt":  "2023-05-21T14:01:49Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "analogrelay",
                                           "body":  "We don\u0027t have a concrete sample for using the existing auth providers.\r\n\r\n\u003e Since this is abstracted behind the `AddGoogle` extension on the AuthenticationBuilder, will I need to implement this myself?\r\n\r\nYes, you\u0027d have to unpack the `AddGoogle` method (look at the implementation) and adapt it to the patterns shown in the sample you referenced above.",
                                           "updatedAt":  "2019-09-26T21:06:41Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUzNTkyNDY4Mw==",
                                           "createdAt":  "2019-09-27T12:47:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Aaronmsv",
                                           "body":  "@blowdart @anurse Okay thanks, will do it that way then.",
                                           "updatedAt":  "2019-09-27T12:47:59Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUzNjE2MDAyNw==",
                                           "createdAt":  "2019-09-28T06:52:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOA7wq9g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "dejancg",
                                                                               "createdAt":  "2020-02-17T13:11:27Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "leastprivilege",
                                           "body":  "well - maybe it is finally time to once and for all produce that sample. It\u0027s your auth and config system.\r\n\r\nAnd with sample, I mean something that is actually working. ",
                                           "updatedAt":  "2019-09-28T06:52:33Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUzNzUyNDA4MQ==",
                                           "createdAt":  "2019-10-02T14:38:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Aaronmsv",
                                           "body":  "I am trying to implement this now, but I\u0027m stuck at the `GoogleOptions` not being updated. Causing the following exception: `ArgumentException: The \u0027ClientId\u0027 must be provided`.\r\n\r\nAt startup (in the `ConfigureServices`) I added `services.AddTransient\u003cGoogleHandler\u003e();` to register the Google handler.\r\n\r\nThen at runtime, when Google authentication is enabled or modified, I add the scheme:\r\n\r\n```\r\n_schemeProvider.AddScheme(new AuthenticationScheme(name, name, typeof(GoogleHandler)));\r\n\r\n_optionsCache.TryRemove(name);\r\n\r\n_optionsCache.TryAdd(name, new GoogleOptions()\r\n{\r\n\tClientId = clientId,\r\n\tClientSecret = clientSecret\r\n});\r\n```",
                                           "updatedAt":  "2019-10-02T14:38:48Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUzNzkxOTUyOQ==",
                                           "createdAt":  "2019-10-03T12:16:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOAx75Mg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Aaronmsv",
                                                                               "createdAt":  "2019-10-03T15:52:41Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ptrefall",
                                           "body":  "I discovered that some authentication handlers require a post configure options step. With Jwt Bearer, I had to add the following before trying to add to options cache (validate is probably optional):\r\n`options.Validate();\r\npostConfigureOptions.PostConfigure(provider.Schemes, options);\r\noptionsCache.TryAdd(provider.Schemes, options);`\r\n\r\nwhere\r\n`IPostConfigureOptions\u003cJwtBearerOptions\u003e postConfigureOptions`\r\nand\r\n`services.TryAddEnumerable(ServiceDescriptor.Singleton\u003c\r\nIPostConfigureOptions\u003cJwtBearerOptions\u003e,\r\nJwtBearerPostConfigureOptions\u003e());`\r\n\r\nBefore I added this (and just implemented the Dynamic Schemes sample), I was getting the following error message:\r\n\r\n\u003e Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler: Information: Failed to validate the token.\r\n\r\n\u003e Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys:",
                                           "updatedAt":  "2019-10-03T12:19:19Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUzNzk2ODUxMg==",
                                           "createdAt":  "2019-10-03T14:24:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Aaronmsv",
                                           "body":  "Hi, @ptrefall \r\n\r\nThanks for the tip! Unfortunately, I think the Google authentication does not have a post configurator, so it must be something else. (https://github.com/aspnet/AspNetCore/tree/release/2.2/src/Security/Authentication/Google/src)",
                                           "updatedAt":  "2019-10-03T14:24:26Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUzODAxMjM5NA==",
                                           "createdAt":  "2019-10-03T16:07:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOAx_L7g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ptrefall",
                                                                               "createdAt":  "2019-10-04T07:24:07Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "Aaronmsv",
                                           "body":  "Hi @ptrefall,\r\n\r\nIt seems I was too quick to reply. I don\u0027t remember what exactly changed, but I started getting the following exception: \r\n\r\n`NullReferenceException: Object reference not set to an instance of an object.` at `Microsoft.AspNetCore.Authentication.Google.GoogleHandler.BuildChallengeUrl(AuthenticationProperties properties, string redirectUri)`.\r\n\r\nUpon further investigation in the [GoogleHandler:67](https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Security/Authentication/Google/src/GoogleHandler.cs#L67), this line `var state = Options.StateDataFormat.Protect(properties);` was causing the exception because `Options.StateDataFormat` was `null`.\r\n\r\nIt is indeed required that a post configurator needs to run. Since `GoogleHandler` derives from `OAuthHandler`, the following post configurator needs to be registered: `OAuthPostConfigureOptions\u003cGoogleOptions, GoogleHandler\u003e`.\r\n\r\nThis seems to make the Google authentication work :) I will implement more providers and see how it goes.\r\n\r\n",
                                           "updatedAt":  "2019-10-03T16:07:25Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUzODAzMDg3Ng==",
                                           "createdAt":  "2019-10-03T16:53:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOAx_L_A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ptrefall",
                                                                               "createdAt":  "2019-10-04T07:24:25Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "@Aaronmsv thanks for piecing this together. If you share your working sample we can update the DynamicSchemes sample and even add some docs to this effect.",
                                           "updatedAt":  "2019-10-03T16:53:33Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUzODMwNzcxMQ==",
                                           "createdAt":  "2019-10-04T08:43:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOAx_zSA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ptrefall",
                                                                               "createdAt":  "2019-10-04T09:30:23Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "Aaronmsv",
                                           "body":  "@Tratcher Sure, when I get it working with all the providers I need, I\u0027ll try to make a PR to update the sample, with additional docs ;)",
                                           "updatedAt":  "2019-10-04T08:44:08Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5MTE1NjE0OA==",
                                           "createdAt":  "2020-09-11T15:16:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "maulik-modi",
                                           "body":  "I am also into the same boat.\r\n@Aaronmsv and @Tratcher , can you please update PR and additional docs so it can be taken further? \r\n",
                                           "updatedAt":  "2020-09-11T15:16:42Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyNTkwOTMxNA==",
                                           "createdAt":  "2020-11-12T08:01:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thank you for contacting us. Due to a lack of activity on this discussion issue we\u0027re closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn\u0027t been addressed yet, please file a new issue.\n\nThis issue will be locked after 30 more days of inactivity. If you still wish to discuss this subject after then, please create a new issue!",
                                           "updatedAt":  "2020-11-12T08:01:25Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyNTk0MDA1Nw==",
                                           "createdAt":  "2020-11-12T08:58:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "schmitch",
                                           "body":  "please reopen.",
                                           "updatedAt":  "2020-11-12T08:58:11Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyNTk0MjU1MA==",
                                           "createdAt":  "2020-11-12T09:02:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "maulik-modi",
                                           "body":  "@Tratcher  and @blowdart , Please reopen",
                                           "updatedAt":  "2020-11-12T09:05:25Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyNjk1ODMyNQ==",
                                           "createdAt":  "2020-11-13T18:40:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Re-opening to consider for docs. @blowdart ",
                                           "updatedAt":  "2020-11-13T18:40:44Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyNjk4NDk2Nw==",
                                           "createdAt":  "2020-11-13T19:18:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "Well you\u0027d be on point for the docs @tratcher so if you want it, self assign :)",
                                           "updatedAt":  "2020-11-13T19:18:03Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2Nzk0NzEyMA==",
                                           "createdAt":  "2021-06-24T20:58:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2021-06-24T20:58:11Z"
                                       }
                                   ],
                         "totalCount":  17
                     },
        "title":  "Changing authentication providers at runtime",
        "labels":  [
                       "Docs",
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/16648",
        "createdAt":  "2019-10-29T21:27:22Z",
        "number":  16648,
        "author":  "pranavkm",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-03-02T00:21:29Z",
        "body":  "Context: https://github.com/aspnet/AspNetCore/issues/15203, https://github.com/aspnet/AspNetCore/pull/16639#issuecomment-547522901",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOIOaFUg==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU1MTI5MTQ2NA==",
                                           "createdAt":  "2019-11-07T22:15:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "analogrelay",
                                           "body":  "There should already be a runtime check if the endpoint has Auth metadata but the middleware didn\u0027t run, right? What\u0027s the request here?",
                                           "updatedAt":  "2019-11-07T22:15:57Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU1MTcxMzkzMQ==",
                                           "createdAt":  "2019-11-08T12:32:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pranavkm",
                                           "body":  "@anurse we have an analyzer that does a build-time check for this. It works for the most use cases, but chained calls ended up producing false positives. For 3.1, the analyzer no-ops when it thinks it\u0027s seeing chained calls. The suggestion was to fix this in 5.0.\r\n\r\nAFAIK, I\u0027m fairly neutral about this issue. Startup analyzers are meant to work in the most common scenarios and aren\u0027t meant to be a panacea. We additionally have runtime checks that detect this behavior. Unless we get a ton of feedback, I\u0027d consider putting this in backlog \\ closing.",
                                           "updatedAt":  "2019-11-08T12:32:28Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU1MTk3ODMyMg==",
                                           "createdAt":  "2019-11-08T20:27:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "analogrelay",
                                           "body":  "Ah, so fix the analyzer in 5.0? We can consider it for 5.0. I\u0027ll backlog it and label it as a candidate.",
                                           "updatedAt":  "2019-11-08T20:27:42Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Provide correct warning for incorrectly configured Auth middleware in chained method calls",
        "labels":  [
                       "area-auth",
                       "analyzer"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/17475",
        "createdAt":  "2019-11-28T06:28:24Z",
        "number":  17475,
        "author":  "leastprivilege",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2020-10-22T22:05:50Z",
        "body":  "When calling SignInAsync on the login page, the Location header gets set to the value of the returnUrl query string parameter.\r\n\r\nhttps://github.com/aspnet/AspNetCore/blob/master/src/Security/Authentication/Cookies/src/CookieAuthenticationHandler.cs#L334-L335\r\n\r\nBesides I am unclear why this would be ever useful, this is a non-obvious side effect of calling SignIn and interferes with other logic on the login page. You might not always want to do a redirect - but maybe show a view. Calling `return View(...);` will not work because the response has already been modified to be a redirect.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOKprOBw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MjM0NDgwMw==",
                                           "createdAt":  "2019-12-05T22:20:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "analogrelay",
                                           "body":  "This is in order to do a redirect to the `returnUrl`, no? The status code should also be updated to `30x` in order to redirect back to the page that issued the original challenge.\r\n\r\n\u003e Calling `return View(...);` will not work because the response has already been modified to be a redirect.\r\n\r\nAre you not able to reset the status-code and remove the header here? Does that not work?",
                                           "updatedAt":  "2019-12-05T22:20:42Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MjQ0ODUxMQ==",
                                           "createdAt":  "2019-12-06T06:20:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brockallen",
                                           "body":  "The question is why is this implicit? Especially in MVC where a subsequent call to a ViewResult does not take effect.",
                                           "updatedAt":  "2019-12-06T06:20:18Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2Mzg5NDgxNQ==",
                                           "createdAt":  "2019-12-10T07:00:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "This issue has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **4 days**. It will be closed if no further activity occurs **within 3 days of this comment**. If it *is* closed, feel free to comment when you are able to provide the additional information and we will re-investigate.\n\nSee [our Issue Management Policies](https://aka.ms/aspnet/issue-policies) for more information.",
                                           "updatedAt":  "2019-12-10T07:00:06Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2NDQwNTA3NQ==",
                                           "createdAt":  "2019-12-11T06:49:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "leastprivilege",
                                           "body":  "this is certainly one way to deal with the problem ;)",
                                           "updatedAt":  "2019-12-11T06:49:58Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2NDQwNTM0OQ==",
                                           "createdAt":  "2019-12-11T06:51:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "leastprivilege",
                                           "body":  "\u003e Are you not able to reset the status-code and remove the header here? Does that not work?\r\n\r\nThat does work - yes that\u0027s the workaround.",
                                           "updatedAt":  "2019-12-11T06:51:11Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2NDcxMTkxOQ==",
                                           "createdAt":  "2019-12-11T20:09:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "analogrelay",
                                           "body":  "Ok, so this is about having a first-class way to suppress the behavior when you intend to do something different?",
                                           "updatedAt":  "2019-12-11T20:09:56Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2NDcxNjk1Ng==",
                                           "createdAt":  "2019-12-11T20:23:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brockallen",
                                           "body":  "Well, it\u0027s more around is the implicit behavior well understood/used/expected by the general developer and is it something to keep going forward. In my experience, I don\u0027t know the scenarios where the implicit behavior is commonly used.",
                                           "updatedAt":  "2019-12-11T20:23:42Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2NDg3NDQwOQ==",
                                           "createdAt":  "2019-12-12T06:47:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "leastprivilege",
                                           "body":  "yep - single responsibility principle.\r\n\r\nI think I spend quite some time with the authN APIs in ASP.NET - but this behavior was new to me, and I needed to check the source code first to understand it.\r\n\r\nSigning in and deciding what to do afterwards are two distinct steps.\r\n",
                                           "updatedAt":  "2019-12-12T06:47:23Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2NDg3NDg1MA==",
                                           "createdAt":  "2019-12-12T06:49:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "leastprivilege",
                                           "body":  "..and we are explicitly talking about the low-level ASP.NET Core SignIn/SignOut APIs - the MVC SignInResult/SignOutResult can add additional behavior of course.",
                                           "updatedAt":  "2019-12-12T06:49:08Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2NTA4NjU1OQ==",
                                           "createdAt":  "2019-12-12T16:42:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "analogrelay",
                                           "body":  "Thanks for the context, we\u0027ll review this in triage (@blowdart is off for the holidays so there may be some lag, but it\u0027s in our queue 😄).",
                                           "updatedAt":  "2019-12-12T16:42:43Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2NTIxMTA5NA==",
                                           "createdAt":  "2019-12-12T22:14:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "analogrelay",
                                           "body":  "Initial triage notes (with no @blowdart ;)): We certainly can\u0027t just change this behavior, it\u0027s been present since Katana and would significantly break. If we did something here we\u0027d have to do it via a setting to opt-out of the default redirect behavior. We\u0027ll chat again when Barry\u0027s back.",
                                           "updatedAt":  "2019-12-12T22:14:38Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2NTI3MDE2MA==",
                                           "createdAt":  "2019-12-13T02:10:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brockallen",
                                           "body":  "Understood. But perhaps in 5.0 it\u0027s worth considering a diff/new behavior.",
                                           "updatedAt":  "2019-12-13T02:10:24Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU4ODI5MzY3Mg==",
                                           "createdAt":  "2020-02-19T15:59:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brockallen",
                                           "body":  "Yea, I just ran into this for another customer. This breaks the ability to render SSO properly.",
                                           "updatedAt":  "2020-02-19T15:59:37Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcxNDc4ODM1OQ==",
                                           "createdAt":  "2020-10-22T22:05:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Re-triage:\r\nThe check here to only do this if you\u0027re on the configured `LoginPath` is the most confusing magic of all, we get lots of questions asking what this property is for.\r\nhttps://github.com/dotnet/aspnetcore/blob/63199b40afd17586ee25d4ab29a42af5058edac9/src/Security/Authentication/Cookies/src/CookieAuthenticationHandler.cs#L357\r\nNote there\u0027s a separate issue about that: https://github.com/dotnet/aspnetcore/issues/4667\r\n\r\nAs called out in that issue, you can override the query\u0027s redirectUri with one from the AuthenticaitonProperties (if you\u0027re on the LoginPath). However, you can\u0027t outright prevent the redirect without hooking into the RedirectToReturnUrl event.\r\nhttps://github.com/dotnet/aspnetcore/blob/63199b40afd17586ee25d4ab29a42af5058edac9/src/Security/Authentication/Cookies/src/CookieAuthenticationHandler.cs#L413-L421\r\n\r\nSpecifying the redirect always should have been the responsibility of the caller, not implicit behavior of SignInAsync.\r\n\r\nProposal:\r\n- Fix #4667 to honor the AuthenticationProperties.RedirectUri passed to SignInAsync even if you\u0027re not on the LoginPath to address the related scenario in minimally breaking way.\r\n- We\u0027d probably need a new option to suppress the auto redirect for cases when the AuthenticationProperties.RedirectUri was not specified but the returnUrl was. Consider it an obsolete feature and update the identity templates to pass in the expected redirect on sign-in (depends on the #4667 fix). If we always pass in the redirect value then we might not even need to set the new option in the template scenarios.",
                                           "updatedAt":  "2020-10-22T22:05:50Z"
                                       }
                                   ],
                         "totalCount":  14
                     },
        "title":  "SignInAsync sets Location header",
        "labels":  [
                       "enhancement",
                       "area-auth",
                       "affected-few",
                       "severity-minor"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/17615",
        "createdAt":  "2019-12-05T13:06:16Z",
        "number":  17615,
        "author":  "Kahbazi",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-02-23T19:29:51Z",
        "body":  "Now that almost everything (Controller, RazorPage, SignalR Hub, HealthCheck, Grpc) in ASP.NET Core is becoming an Endpoint, I\u0027m curious is there a plan to make [authentication handlers](https://github.com/aspnet/AspNetCore/blob/62351067ff4c1401556725b401478e648b66acdc/src/Security/Authentication/Core/src/AuthenticationMiddleware.cs#L45) into endpoints?",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOIacibw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MjEyNDcwMw==",
                                           "createdAt":  "2019-12-05T13:17:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBGkIeQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "rodrigo-speller",
                                                                               "createdAt":  "2020-06-06T01:24:00Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "khellang",
                                           "body":  "It can\u0027t, as authentication needs to happen *before* the endpoint is executed. Endpoints are... endpoints, not middleware pipelines 😊",
                                           "updatedAt":  "2019-12-05T13:17:22Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MjEyOTQzNw==",
                                           "createdAt":  "2019-12-05T13:31:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Kahbazi",
                                           "body":  "I think I should have explain my point more. I\u0027m not talking about the authentication process itself. I\u0027m talking about the endpoints which I\u0027m redirecting to from Identity Providers like `/signin-microsoft` or `/signin-google` . I believe these are endpoints which can be separated from authentication middleware.",
                                           "updatedAt":  "2019-12-05T13:31:32Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MjEzOTU5Mg==",
                                           "createdAt":  "2019-12-05T13:58:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBGkIgg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "rodrigo-speller",
                                                                               "createdAt":  "2020-06-06T01:24:32Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "blowdart",
                                           "body":  "No there\u0027s not. Those aren\u0027t really endpoints, but ephemeral locations authentication intercepts, which, as Kristian points out needs to happen before normal endpoint code would execute. \r\n\r\nWhat do you think would be gained by making them endpoints?",
                                           "updatedAt":  "2019-12-05T13:58:10Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MjE1Mzg5MQ==",
                                           "createdAt":  "2019-12-05T14:32:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "This is something I\u0027ve briefly discussed with @rynowak. No, you couldn\u0027t convert all of an auth handler to endpoints, but moving some of the callbacks like `/signin-microsoft` to endpoints might be possible. That said, it would involve breaking up the auth handlers into several pieces and it\u0027s not clear what would be gained by doing so.\r\n\r\nThis part might scale better if you had a lot of auth handlers, routing is much more optimized for this scenario. The current code allocates every auth handler on every request (the schemes are singletons but the handlers are scoped).\r\nhttps://github.com/aspnet/AspNetCore/blob/62351067ff4c1401556725b401478e648b66acdc/src/Security/Authentication/Core/src/AuthenticationMiddleware.cs#L42-L49",
                                           "updatedAt":  "2019-12-05T14:43:57Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MjE2MTI3MA==",
                                           "createdAt":  "2019-12-05T14:49:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brockallen",
                                           "body":  "+1 -- we discussed this somewhat already, but auth handlers are middleware for most requests, but endpoints for some specific requests (signouts and challenge callbacks). The signouts and challenge callbacks would benefit from being endpoints, I think -- mainly for the scale issue once you need 100+ OIDC/Ws-Fed/SAML handlers in your pipeline.",
                                           "updatedAt":  "2019-12-05T14:49:07Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MjE3MjQ4OA==",
                                           "createdAt":  "2019-12-05T15:13:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "The transition might even be able to be done in a non-breaking way.\r\n- Add a UseEndpoints option on the auth scheme options.\r\n- The GetHandlerAsync allocation above would be skipped if UseEndpoints was enabled.\r\n- _something_ would give each scheme a chance to register endpoints if UseEndpoints were set.\r\n- Since endpoints are largely stateless, they would probably allocate the handler when selected and call into their existing HandleRequestAsync logic.\r\n- We\u0027d have to ensure the dynamic add and remove scenarios still worked.",
                                           "updatedAt":  "2019-12-05T15:14:14Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MjE3NjA3Ng==",
                                           "createdAt":  "2019-12-05T15:21:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "khellang",
                                           "body":  "This also sounds semi-related to https://github.com/aspnet/AspNetCore/issues/6993?",
                                           "updatedAt":  "2019-12-05T15:21:42Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MjE4ODMyMA==",
                                           "createdAt":  "2019-12-05T15:48:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "@khellang distantly. Once you have endpoints then you can use them for url generation. However, most of the endpoint addresses in auth handlers are self-referential, generating them hasn\u0027t been much of an issue. The cookie auth urls called out in #6993 are more of an exception.",
                                           "updatedAt":  "2019-12-05T15:48:52Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MjE5NDI3OA==",
                                           "createdAt":  "2019-12-05T16:02:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "On a related perf note, this code even allocates handlers that don\u0027t implement IAuthenticationRequestHandler such as JwtBearer. We could probably add a scheme option to suppress that too.\r\nhttps://github.com/aspnet/AspNetCore/blob/62351067ff4c1401556725b401478e648b66acdc/src/Security/Authentication/Core/src/AuthenticationMiddleware.cs#L42-L45",
                                           "updatedAt":  "2019-12-05T16:02:20Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MjE5OTk2MQ==",
                                           "createdAt":  "2019-12-05T16:15:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Kahbazi",
                                           "body":  "\u003e  you couldn\u0027t convert all of an auth handler to endpoints, but moving some of the callbacks like /signin-microsoft to endpoints might be possible.\r\n\r\nYes this was my intention. I should have specify better.\r\nI would like to work on this if possible. Would you accept PR for this?",
                                           "updatedAt":  "2019-12-05T16:15:31Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MjIwODI2MQ==",
                                           "createdAt":  "2019-12-05T16:35:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "\u003e Would you accept PR for this?\r\n\r\nCould you start by outlining a detailed design proposal? This has several moving parts that we need to make sure are accounted for before starting on a PR.",
                                           "updatedAt":  "2019-12-05T16:35:02Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MjM0NTIxNw==",
                                           "createdAt":  "2019-12-05T22:22:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "analogrelay",
                                           "body":  "Triage: Seems reasonable, but definitely needs a bunch of design.",
                                           "updatedAt":  "2019-12-05T22:22:05Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MjU0OTMwNw==",
                                           "createdAt":  "2019-12-06T12:14:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Kahbazi",
                                           "body":  "Here\u0027s what I thought.\r\n\r\nWe can add a `UseEndpoints` option to `AuthenticationOptions` and use it to enable endpoints for all authentication handlers.\r\n\r\n```csharp\r\npublic class AuthenticationOptions\r\n{\r\n    public bool UseEndpoints { get; set; }\r\n}\r\n```\r\n\r\nAdding and removing endpoints could happen in `IAuthenticationSchemeProvider` in `AddSchema(AuthenticationScheme scheme)` and `RemoveScheme(string name)`. And `IAuthenticationSchemeProvider` should expose a `EndpointDataSource` via method or a property\r\n \r\n```csharp\r\npublic interface IAuthenticationSchemeProvider\r\n{\r\n    EndpointDataSource GetEndpointDataSource();\r\n    //OR\r\n    EndpointDataSource EndpointDataSource { get; }\r\n}\r\n```\r\n\r\n I have two thought on how to get endpoints for one scheme\r\n1. We could add a  `IEnumerable\u003cEndpoint\u003e` property to `AuthenticationScheme` and fill it in AuthenticationBuilder extenstion methods. Here we can easily add the Endpoints to the data source, but I don\u0027t like the idea of having endpoints in extension methods. \r\n\r\n```csharp\r\npublic class AuthenticationScheme\r\n{\r\n    public IEnumerable\u003cEndpoint\u003e Endpoints { get; set; }\r\n}\r\n```\r\n\r\n2. Add a ConfigureEndpoints() method to `IAuthenticationRequestHandler` so each handler can register their endpoints and deprecate `HandleRequestAsync`. In this way Endpoints are bind to `IAuthenticationRequestHandler` which is good but we need to do some Reflection or use ActivatorUtility in order to create a `IAuthenticationRequestHandler` from `AuthenticationScheme .HandlerType`.\r\n\r\n```csharp\r\npublic interface IAuthenticationRequestHandler\r\n{\r\n    void ConfigureEndpoints(IEndpointRouteBuilder endpointRouteBuilder);\r\n\r\n    [Obsolete]\r\n    Task\u003cbool\u003e HandleRequestAsync();\r\n}\r\n```\r\n\r\nSince we have to cover adding and removing scheme in runtime a dynamic EndpointDataSource is needed. Well I found one in unit tests and with some change it fits our needs.\r\n\r\n```csharp\r\npublic class DynamicEndpointDataSource : EndpointDataSource\r\n{\r\n    private readonly ConcurrentDictionary\u003cstring, IEnumerable\u003cEndpoint\u003e\u003e _endpoints;\r\n    private CancellationTokenSource _cts;\r\n    private CancellationChangeToken _changeToken;\r\n\r\n    public DynamicEndpointDataSource()\r\n    {\r\n        _endpoints = new ConcurrentDictionary\u003cstring, IEnumerable\u003cEndpoint\u003e\u003e();\r\n\r\n        CreateChangeToken();\r\n    }\r\n\r\n    public override IChangeToken GetChangeToken() =\u003e _changeToken;\r\n\r\n    public override IReadOnlyList\u003cEndpoint\u003e Endpoints =\u003e _endpoints.SelectMany(pair =\u003e pair.Value).ToArray();\r\n\r\n    public void AddEndpoint(string schema, IEnumerable\u003cEndpoint\u003e endpoint)\r\n    {\r\n        _endpoints.TryAdd(schema, endpoint);\r\n\r\n        TriggerChange();\r\n    }\r\n\r\n    public void RemoveEndpoint(string schema)\r\n    {\r\n        _endpoints.TryRemove(schema, out _);\r\n\r\n        TriggerChange();\r\n    }\r\n\r\n    private void TriggerChange()\r\n    {\r\n        // Capture the old tokens so that we can raise the callbacks on them. This is important so that\r\n        // consumers do not register callbacks on an inflight event causing a stackoverflow.\r\n        var oldTokenSource = _cts;\r\n        var oldToken = _changeToken;\r\n\r\n        CreateChangeToken();\r\n\r\n        // Raise consumer callbacks. Any new callback registration would happen on the new token\r\n        // created in earlier step.\r\n        oldTokenSource.Cancel();\r\n    }\r\n\r\n    private void CreateChangeToken()\r\n    {\r\n        _cts = new CancellationTokenSource();\r\n        _changeToken = new CancellationChangeToken(_cts.Token);\r\n    }\r\n}\r\n```\r\nAnd add an extension method for adding the `EndpointDataSource` to `IEndpointRouteBuilder`\r\n```csharp\r\npublic static class EndpointRouteBuilderExtensions\r\n{\r\n    public static void MapAuthenticationEndpoints(this IEndpointRouteBuilder endpoints)\r\n    {\r\n        var authenticationSchemeProvider = endpoints.ServiceProvider.GetService\u003cIAuthenticationSchemeProvider\u003e();\r\n        var endpointDataSource = authenticationSchemeProvider.GetEndpointDataSource();\r\n\r\n        endpoints.DataSources.Add(endpointDataSource);\r\n    }\r\n}\r\n```\r\n\r\n`AuthenticationMiddleware` can check `AuthenticationOptions.UseEndpoints` for handling the request itself.\r\n```csharp\r\npublic class AuthenticationMiddleware\r\n{\r\n    public async Task Invoke(HttpContext context)\r\n    {\r\n        context.Features.Set\u003cIAuthenticationFeature\u003e(new AuthenticationFeature\r\n        {\r\n            ...\r\n\r\n            if (!options.UseEndpoints)\r\n            {\r\n                // Give any IAuthenticationRequestHandler schemes a chance to handle the request\r\n                var handlers = context.RequestServices.GetRequiredService\u003cIAuthenticationHandlerProvider\u003e();\r\n                foreach (var scheme in await Schemes.GetRequestHandlerSchemesAsync())\r\n                {\r\n                    var handler = await handlers.GetHandlerAsync(context, scheme.Name) as IAuthenticationRequestHandler;\r\n                    if (handler != null \u0026\u0026 await handler.HandleRequestAsync())\r\n                    {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n        ...\r\n    }\r\n}\r\n```\r\n\r\nLet me know what do you think? :relaxed:",
                                           "updatedAt":  "2019-12-06T12:14:57Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MjgzOTQ4Nw==",
                                           "createdAt":  "2019-12-07T10:50:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Kahbazi",
                                           "body":  "One breaking behavior in switching to endpoint is that `HandleRequestResult.SkipHandler()` makes no sence for an Endpoint. \r\n\r\nhttps://github.com/aspnet/AspNetCore/blob/d8381656429addead2e5eb22ba1356abfb419d86/src/Security/Authentication/Core/src/RemoteAuthenticationHandler.cs#L65-L68 \r\n\r\nAlso I\u0027m not quite familiar with Negotiate Handler, does it also need to break into an endpoint? I feel like its business should move to `HandleAuthenticateAsync`, but I don\u0027t know if it\u0027s possible or not. :thinking:",
                                           "updatedAt":  "2019-12-07T10:50:54Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2Mjg2MTQ4Mw==",
                                           "createdAt":  "2019-12-07T15:39:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "No, Negotaite, CertAuth, and JwtBearer do not have any dedicated endpoints. NegotiateAuth\u0027s HandleRequestAsync need to stay due to mutli-stage handshakes that could happen on any url path.",
                                           "updatedAt":  "2019-12-07T15:39:08Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2Mjg2MTU5NA==",
                                           "createdAt":  "2019-12-07T15:40:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "\u003e One breaking behavior in switching to endpoint is that `HandleRequestResult.SkipHandler()` makes no sence for an Endpoint.\r\n\r\nTrue, you\u0027d have to opt-out of endpoints if you wanted to use dynamic fallback logic. Most scenarios don\u0027t require this by default.",
                                           "updatedAt":  "2019-12-07T15:40:22Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2Mjg3ODA2MA==",
                                           "createdAt":  "2019-12-07T19:09:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Kahbazi",
                                           "body":  "\u003e NegotiateAuth\u0027s HandleRequestAsync need to stay\r\n\r\nI was thinking of deprecating and eventually removing `HandleRequestAsync`. Is it possible to move all Netotiate process to `HandleAuthenticateAsync`? \r\nBeside aspnet docs, where can I learn more on how negotiate works?\r\n\r\nAlso I would like to know your thoughts on my comment on how to move to Endpoint. Should I add more details? Is there something that I missed?\r\n",
                                           "updatedAt":  "2019-12-07T19:09:38Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2Mjg3OTY1Nw==",
                                           "createdAt":  "2019-12-07T19:31:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "For compat reasons HandleRequestAsync is going to have to stay.  Besides NegotiateAuth, there are also WsFed scenarios that require it. Not all WsFed providers use dedicated endpoints, many of them redirect you back to the site root. Thus you need to be able to have multiple components on a path and sometimes skip one in favor of the other. That scenario\u0027s disabled by default, but still needs to be possible.\r\n\r\nI\u0027m also less concerned about NegotiateAuth because that\u0027s not a component that makes sense to have multiple of (unlike OAuth or OIDC). If we can get the OAuth and OIDC providers moved to endpoints by default then that should be a good start here.",
                                           "updatedAt":  "2019-12-07T19:31:58Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MzA3MDkxMQ==",
                                           "createdAt":  "2019-12-09T05:33:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "cc @rynowak ",
                                           "updatedAt":  "2019-12-09T05:33:08Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MzI0OTQ3NQ==",
                                           "createdAt":  "2019-12-09T13:56:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "\u003e One breaking behavior in switching to endpoint is that HandleRequestResult.SkipHandler() makes no sence for an Endpoint.\r\n\r\nI hope `SkipHandler()` will still be supported in 5.0 as I use it... quite massively 😅 ",
                                           "updatedAt":  "2019-12-09T13:56:39Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MzI2MTY1OA==",
                                           "createdAt":  "2019-12-09T14:24:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "@PinpointTownes where do you use it? The idea is that callback paths like `/sigin-oidc` would use endpoints by default and SkipHandler would no longer work there. You should be able to opt out of using endpoints though, and get the SkipHandler behavior back.",
                                           "updatedAt":  "2019-12-09T14:24:57Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MzI2OTQyMQ==",
                                           "createdAt":  "2019-12-09T14:42:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Kahbazi",
                                           "body":  "\u003e You should be able to opt out of using endpoints \r\n\r\n@Tratcher are you thinking about opting out for all schemes or per scheme?",
                                           "updatedAt":  "2019-12-09T14:42:23Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MzI3MDUyMQ==",
                                           "createdAt":  "2019-12-09T14:44:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "\u003e @PinpointTownes where do you use it?\r\n\r\nIn OpenIddict, pretty much everywhere, as it\u0027s what we use to enable pass-through. Once this mode is enabled, OpenIddict validates requests for you but eventually calls `context.SkipHandler()` so that you can handle the rest of the request outside OpenIddict: in a MVC controller, in a custom middleware, in a Carter module (e.g to render a consent page for the authorization endpoint or to return some JSON profile data from the userinfo endpoint).",
                                           "updatedAt":  "2019-12-09T14:44:48Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MzI3NDQyNQ==",
                                           "createdAt":  "2019-12-09T14:53:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "\u003e @Tratcher are you thinking about opting out for all schemes or per scheme?\r\n\r\nPer scheme. E.g. someone might need to opt out for WsFed but not for OIDC.",
                                           "updatedAt":  "2019-12-09T14:53:24Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MzI3NTM2OA==",
                                           "createdAt":  "2019-12-09T14:55:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "\u003e In OpenIddict, pretty much everywhere, as it\u0027s what we use to enable pass-through. Once this mode is enabled, OpenIddict validates requests for you but eventually calls `context.SkipHandler()` so that you can handle the rest of the request outside OpenIddict: in a MVC controller, in a custom middleware, in a Carter module (e.g to render a consent page for the authorization endpoint or to return some JSON profile data from the userinfo endpoint).\r\n\r\nIs it used on callback paths? Or only on normally pass through components like JWT validation?",
                                           "updatedAt":  "2019-12-09T14:55:22Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MzI3NzEwMQ==",
                                           "createdAt":  "2019-12-09T14:59:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "\u003e Is it used on callback paths?\r\n\r\nIf by \"callback paths\", you mean things handled from `IAuthenticationRequestHandler.HandleRequestAsync()`, then yep, it\u0027s used a lot.",
                                           "updatedAt":  "2019-12-09T14:59:02Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MzI3ODk4NA==",
                                           "createdAt":  "2019-12-09T15:03:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "\u003e If by \"callback paths\", you mean things handled from `IAuthenticationRequestHandler.HandleRequestAsync()`, then yep, it\u0027s used a lot.\r\n\r\nI mean operations that have dedicated urls like `/signin-oidc`. Not all HandleRequestAsync\u0027s are checking for specific paths.",
                                           "updatedAt":  "2019-12-09T15:03:06Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MzI3OTgwMA==",
                                           "createdAt":  "2019-12-09T15:04:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "It does check for specific paths by default for all OpenIddict-managed endpoints, but users are free to add their own logic to override that using the events model.",
                                           "updatedAt":  "2019-12-09T15:04:33Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MzI4MDg4NA==",
                                           "createdAt":  "2019-12-09T15:06:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Ok, so it could use endpoints by default but the user could opt out as needed.",
                                           "updatedAt":  "2019-12-09T15:06:31Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MzI4MzcxOQ==",
                                           "createdAt":  "2019-12-09T15:11:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "It\u0027s not clear to me whether endpoints are flexible enough for that - they don\u0027t seem to be designed with composability in mind - but I don\u0027t mind giving the new design a try 😄 \r\n\r\nWould the opt-out be per-endpoint or per-handler (i.e all the endpoints exposed by a handler)?",
                                           "updatedAt":  "2019-12-09T15:11:46Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MzI5OTkxNQ==",
                                           "createdAt":  "2019-12-09T15:46:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "\u003e Would the opt-out be per-endpoint or per-handler (i.e all the endpoints exposed by a handler)?\r\n\r\nProbably per handler. Really what you\u0027re opting into/out-of is running HandleRequestAsync for that handler on every request. Once you\u0027re running it, the endpoints don\u0027t help you anymore.",
                                           "updatedAt":  "2019-12-09T15:46:31Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MzM1NjcyOA==",
                                           "createdAt":  "2019-12-09T17:58:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Should we consider a new top level abstraction, i.e. `IAuthenticationEndpointHandler` so it can coexist with `IAuthenticationRequestHandler`.  Then we could introduce a new base EndpointAuthenticationHandler that does the right thing and add new handler types (with overloads that allow back compat). Basically instead of a UseEndpoints option, it\u0027d be `AddAuthentication().AddGoogleEndpoints()` where `AddGoogle()` is unchanged.  \r\n\r\n\r\n\r\n",
                                           "updatedAt":  "2019-12-09T17:59:16Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MzM1OTI4NQ==",
                                           "createdAt":  "2019-12-09T18:05:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Kahbazi",
                                           "body":  "Does `AddAuthentication().AddGoogleEndpoints()` would be enough to add the Endpoint to the `IEndpointRouteBuilder`,  or do you think a `MapAuthenticationEndpoints(this IEndpointRouteBuilder endpoints)` is needed?",
                                           "updatedAt":  "2019-12-09T18:05:02Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MzM2MDUxMw==",
                                           "createdAt":  "2019-12-09T18:08:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "I think we should make it smart enough to automatically register any authentication endpoints if any were registered without any additional calls.  The extension methods should do that magic underneath the covers.",
                                           "updatedAt":  "2019-12-09T18:08:08Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MzM2MDU0OQ==",
                                           "createdAt":  "2019-12-09T18:08:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "@HaoK that seems overkill, it forks the ecosystem. Moving people over to endpoints by default should be good for the vast majority of cases. It\u0027s only some corner cases that need to opt-out.",
                                           "updatedAt":  "2019-12-09T18:08:14Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MzM2NTc3NA==",
                                           "createdAt":  "2019-12-09T18:20:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "I don\u0027t know, we\u0027ve already had lots of behavior changes with endpoint routing to auth already.  So I can\u0027t imagine we won\u0027t run into more.  Forking the handlers would better guarantee there\u0027s at least a workaround in case/when we accidentally break something.  Opting into the new endpoint enabled handlers would only require them changing their implementation to derive from the new Endpoint aware base class.  Seems like this is something auth handlers should be aware of and opt into.  We can still make endpoints the default for our auth handlers since we control the extension methods.",
                                           "updatedAt":  "2019-12-09T18:20:58Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MzM2ODAxMQ==",
                                           "createdAt":  "2019-12-09T18:26:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Adding a base class is maximally disruptive since we already have a class hierarchy (AuthenticationHandler, RemoteAuthenticationHandler, OAuthHandler), you\u0027d have to fork the entire hierarchy. Maintaining two copies of every auth handler and base class is not sustainable.\r\n\r\nYes there\u0027s risk with this change, but we should be able to manage that with opt-out options and avoid mass duplication.",
                                           "updatedAt":  "2019-12-09T18:26:14Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MzM3NDAyMQ==",
                                           "createdAt":  "2019-12-09T18:41:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Yeah if there wasn\u0027t an easy way to refactor things to reuse most of the logic in both hierarchies, that would be no good. My main point is the handler implementation code has been mostly unchanged since katana, we know how hard it is to extend/customize, as we\u0027ve never spent the time to make that easy. Seems like this is an opportunity to see if we can finally make things nicer since endpoint support is a big change",
                                           "updatedAt":  "2019-12-09T18:42:04Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MzM3Nzk4MA==",
                                           "createdAt":  "2019-12-09T18:51:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "I guess lets just see how the PR goes, given that there\u0027s already stuff like HandleEndpointPost/GetAsync showing up, seems like we are going to have resolve some of these questions anyways",
                                           "updatedAt":  "2019-12-09T18:51:29Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MzM3ODYzMQ==",
                                           "createdAt":  "2019-12-09T18:53:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOA27dCA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "brockallen",
                                                                               "createdAt":  "2019-12-10T14:02:16Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "blowdart",
                                           "body":  "I\u0027d rather try and think it through design wise rather than go code first. This is a major enough change that we need a consistent approach.\r\n",
                                           "updatedAt":  "2019-12-09T18:53:01Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MzM3OTQ1Nw==",
                                           "createdAt":  "2019-12-09T18:54:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOA22wSg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "khellang",
                                                                               "createdAt":  "2019-12-09T18:56:51Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Yeah I agree, but the prototype PR might be good to flush out some of the design issues we need to discuss.",
                                           "updatedAt":  "2019-12-09T18:54:57Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MzUwNDg1Mg==",
                                           "createdAt":  "2019-12-10T00:35:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "rynowak",
                                           "body":  "\u003e This is something I\u0027ve briefly discussed with @rynowak. No, you couldn\u0027t convert all of an auth handler to endpoints, but moving some of the callbacks like /signin-microsoft to endpoints might be possible. That said, it would involve breaking up the auth handlers into several pieces and it\u0027s not clear **what would be gained by doing so** \r\n\r\nI\u0027m catching up to this discussion a little bit late, but I\u0027m wondering what kinds of concrete answers have cropped out to this question (emphasis mine).\r\n\r\n----\r\n\r\nIn general endpoints are useful because.... \r\n\r\n- The app developer needs to configure cross-cutting concerns (auth/cors)\r\n- Middleware need to collaborate \r\n- You want to make a deferred decision \r\n\r\nAre any of these things true for this case?",
                                           "updatedAt":  "2019-12-10T00:35:01Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MzUxMTQxNw==",
                                           "createdAt":  "2019-12-10T01:01:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "@rynowak the one scenario I\u0027ve identified above is a perf optimization to avoid allocating and looping through every auth handler on every request. This would be covered more by routing than endpoints. https://github.com/aspnet/AspNetCore/issues/17615#issuecomment-562153891",
                                           "updatedAt":  "2019-12-10T01:01:10Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2Mzk1MTc2MQ==",
                                           "createdAt":  "2019-12-10T09:44:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "khellang",
                                           "body":  "Another benefit is simply having the callback endpoints be part of the endpoint collection for other middleware to discover, like OpenAPI can read its metadata and include it in the document. ",
                                           "updatedAt":  "2019-12-10T09:44:56Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2Mzk1Nzk2MQ==",
                                           "createdAt":  "2019-12-10T09:59:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Kahbazi",
                                           "body":  "It also could be useful for throttling or logging callback endpoints.",
                                           "updatedAt":  "2019-12-10T09:59:56Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2NDEzNDE2MA==",
                                           "createdAt":  "2019-12-10T17:09:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "\u003e like OpenAPI can read its metadata and include it in the document.\r\n\r\nNot that anything should be calling these endpoints directly, an initial challenge is required in almost all cases.",
                                           "updatedAt":  "2019-12-10T17:09:01Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2NDE2MTkwMw==",
                                           "createdAt":  "2019-12-10T18:13:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOA29Imw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "kevinchalet",
                                                                               "createdAt":  "2019-12-10T18:14:27Z"
                                                                           },
                                                                           {
                                                                               "content":  "ROCKET",
                                                                               "user":  "kevinchalet",
                                                                               "createdAt":  "2019-12-10T18:14:29Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "kevinchalet",
                                                                               "createdAt":  "2019-12-10T18:14:31Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "I went over this again with @rynowak and came to the conclusion that what we want for these callback paths is routing, not endpoints. We haven\u0027t identified any other concrete scenarios that need endpoints.\r\n\r\nThe theory is that the auth middleware or service would build their own internal route table mapping callback paths to auth schemes \u0026 handlers (not Endpoints). This would re-use existing routing code internally rather than participate in the larger route table. The middleware would then run that handler\u0027s HandleRequestAsync method. Schemes would opt-in/out via options, and be given some way to register and unregister their callbacks. (@PinpointTownes) Skip would still mostly work by allowing you to keep executing after the new routing component and still run the rest of the auth middleware logic (AuthenticateAsync for the default scheme, etc.) and the request pipeline. The loop through schemes to run HandleRequestAsync would still happen if no route was found, but schemes that had registered callbacks would opt out of that part.",
                                           "updatedAt":  "2019-12-10T18:15:41Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2NDE2MjU3Mg==",
                                           "createdAt":  "2019-12-10T18:14:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "@Tratcher perfect, thanks! 👏 ",
                                           "updatedAt":  "2019-12-10T18:14:39Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2NDU4MjExMQ==",
                                           "createdAt":  "2019-12-11T14:55:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Kahbazi",
                                           "body":  "\u003e We haven\u0027t identified any other concrete scenarios that need endpoints.\r\n\r\nI don\u0027t know if these would count as good scenarios:\r\n\r\n- Analysis for endpoints including callback and remote signout endpoints.\r\n\r\n- Eventually `ConcurrencyMiddleware` will be able to have different queue for different `Endpoint`. User could add `ConcurrencyMiddleware` for callbacks or remote signout endpoints.\r\n\r\n- User could add a middleware which has a IP white list or black list for these endpoints.",
                                           "updatedAt":  "2019-12-11T14:55:23Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2NDYwMTQ1NQ==",
                                           "createdAt":  "2019-12-11T15:39:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "@Kahbazi I don\u0027t see why you\u0027d do any of those things specifically for these auth endpoints and not for the reset of your app.",
                                           "updatedAt":  "2019-12-11T15:39:22Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2NDYwNjUyNA==",
                                           "createdAt":  "2019-12-11T15:50:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Kahbazi",
                                           "body":  "I\u0027m thinking all my app has these things but maybe I wan\u0027t different settings for these endpoints. For example I have `ConcurrencyMiddleware` and it will choose a queue based on some attribute in Endpoint Metadata. Now there\u0027s no way for me to have `ConcurrencyMiddleware` for auth callbacks.\r\n\r\nAlso I could write a analysis middleware based on Endpoint which generate report for all endpoints and the callbacks would be included in the report automatically.",
                                           "updatedAt":  "2019-12-11T15:50:31Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2NjY4NjM0Mw==",
                                           "createdAt":  "2019-12-17T18:21:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Kahbazi",
                                           "body":  "\u003e we want for these callback paths is routing, not endpoints\r\n\r\n@Tratcher Is this decision final? I think by having just routing for authentication callbacks, there would be some limitations. I\u0027m just expanding my previous example here.\r\n\r\nLet\u0027s say I have a `ConcurrencyMiddleware` which has different queues for different kind of Endpoints. I can mark my Endpoints with some attribute to assign them to a specific queue. This would be my pipeline.\r\n\r\n```csharp\r\napp.UseRouting();\r\napp.ConcurrencyMiddleware();\r\napp.UseAuthentication();\r\napp.UseAuthorization();\r\napp.UseEndpoints();\r\n```\r\n\r\nNow I can\u0027t assign a specific  queue for callbacks. The only option for them could be a default fallback queue which I might only wanna use it for when there\u0027s no Endpoint found at routing.\r\nI even may want to assign different authentication callbacks to different queue which I can\u0027t with this design.\r\n\r\nI promise this is my last attempt to apply Endpoints for authentication callbacks :sweat_smile:\r\nI would like to know your thoughts.",
                                           "updatedAt":  "2019-12-17T18:21:21Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2NjY4ODI0Ng==",
                                           "createdAt":  "2019-12-17T18:25:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Nothing\u0027s final, but the case for endpoints has not been compelling. The use of endpoints also has tradeoffs with fallback patterns currently supported by several of the auth handlers.\r\n\r\nHow would you add metadata/attributes to the callback endpoints when they\u0027re created and registered by the auth service?",
                                           "updatedAt":  "2019-12-17T18:25:48Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2NjY5MjczOA==",
                                           "createdAt":  "2019-12-17T18:37:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Kahbazi",
                                           "body":  "\u003e The use of endpoints also has tradeoffs with fallback patterns\r\n\r\nAs you said, there could be an opt out option.\r\n\r\n\u003e How would you add metadata/attributes to the callback endpoints\r\n\r\nBy adding a Metadata on `AuthenticationOptions` like `MicrosoftAccountOptions`.\r\nOr even changing `CallBackPath` from `PathString` to a class with `PathString` and Metadata, since some handlers have multiple callback path :thinking:",
                                           "updatedAt":  "2019-12-17T18:37:26Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2NjY5NjM3MA==",
                                           "createdAt":  "2019-12-17T18:47:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "\u003e \u003e How would you add metadata/attributes to the callback endpoints\r\n\u003e \r\n\u003e By adding a Metadata on `AuthenticationOptions` like `MicrosoftAccountOptions`.\r\n\u003e Or even changing `CallBackPath` from `PathString` to a class with `PathString` and Metadata, since some handlers have multiple callback path 🤔\r\n\r\nNeeds some more thought. There\u0027s a strong preference for not having API breaks required for this change, only additions.",
                                           "updatedAt":  "2019-12-17T18:47:11Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2NjcwMDI2Mg==",
                                           "createdAt":  "2019-12-17T18:57:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Kahbazi",
                                           "body":  "We could add the new class (let\u0027s call it `CallBackEndpoint`) and keep the `CallBackPath` (maybe with an ObsoleteAttribute) and if `CallBackEndpoint` has been set, we ignore `CallBackPath` and if `CallBackEndpoint` is null, we could set it from `CallBackPath` with default metadata.\r\nDefault metadata could specify the scheme, handler type, etc",
                                           "updatedAt":  "2019-12-17T18:57:09Z"
                                       }
                                   ],
                         "totalCount":  56
                     },
        "title":  "Authentication Handler as an Endpoint",
        "labels":  [
                       "Needs: Design",
                       "enhancement",
                       "Perf",
                       "area-auth",
                       "severity-minor",
                       "affected-medium"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/18047",
        "createdAt":  "2019-12-27T15:07:39Z",
        "number":  18047,
        "author":  "ptsneves",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOA4C44Q==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "MarcusChamberlain",
                                            "createdAt":  "2019-12-27T21:48:29Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2020-01-08T16:32:53Z",
        "body":  "Due to the dictionary of policies being private there is currently no way to get all the available policies. Getting all the available policies is very useful when building Administration dashboards where you want to control and check what permissions a given user has.\r\n\r\nMultiple users seem to have the same [requirement.](https://stackoverflow.com/questions/45014894/how-to-get-all-authorize-policies-that-i-added-in-the-startup-configureservices)",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOIhpSaw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU3MDM3MzM1Mw==",
                                           "createdAt":  "2020-01-02T22:13:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "analogrelay",
                                           "body":  "What kind of information would you want to get here? We can provide the names and a list of the `IAuthorizationRequirement` instances but those have no descriptive metadata associated with them.\r\n\r\nCan you provide an example of what you\u0027d want to *do* with this information. A code sample would be best, or a description of a specific use case (more detailed that just \"administration dashboards\", for example: what would those dashboards show?)",
                                           "updatedAt":  "2020-01-02T22:13:37Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU3MTUxMjg4MQ==",
                                           "createdAt":  "2020-01-07T09:45:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ptsneves",
                                           "body":  "Hello @anurse \r\n\r\nWhat I want is to take a user and check all the policies that he/she complies with. Imagine I only have a policy called \"IsAdmin\" registered. Also consider that i have 2 users User1 and User2.\r\n\r\nMy dashboard would be\r\n```\r\n| Name  | Complied Policies |\r\n| User1 |     IsAdmin       |\r\n| User2 |                   |\r\n| UserN |       ....        |\r\n```",
                                           "updatedAt":  "2020-01-07T09:47:13Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU3MTgzODYzOA==",
                                           "createdAt":  "2020-01-08T00:40:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "analogrelay",
                                           "body":  "That\u0027s not really something you can do with the Auth system though. @Tratcher and @HaoK can correct me if I\u0027m wrong but in order to evaluate a requirement you have to have an **authenticated user**. You can\u0027t just take a list of users from a database or other source and test policies against them. You need a fully-authenticated `ClaimsPrincipal`.",
                                           "updatedAt":  "2020-01-08T00:40:32Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU3MTkxMTc1OQ==",
                                           "createdAt":  "2020-01-08T06:36:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "AuthZ is pretty decoupled, it should be possible to run specific policies against users enumerated from the database. Enumerating those users in a form that AuthZ would recognize might take a bit of work, but the information is all there in the Identity database. @HaoK would know better how to go about it.",
                                           "updatedAt":  "2020-01-08T06:36:41Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU3MTkxNjYzMA==",
                                           "createdAt":  "2020-01-08T06:55:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "We don\u0027t have any build in way to enumerate all the policies, but that is something you could probably add yourself.  You could use `UserManager.Users` to iterate over all the users and call `IUserClaimsPrincipalFactory.CreateAsync(user)` to get the ClaimsPrincipal and then call `IAuthorizationService.AuthorizeAsync` against every policy.\r\n\r\n\r\n",
                                           "updatedAt":  "2020-01-08T06:55:46Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU3MjA5ODAyMQ==",
                                           "createdAt":  "2020-01-08T14:45:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ptsneves",
                                           "body":  "@HaoK So i still need a way to enumerate/query the list of all available policies. Am i correct in this analysis? If so @anurse does this mean my issue got a bit more legitimate, and the removal of the private or the addition of an accessor seems a viable way.\r\n\r\nGrateful for the support\r\nptsneves",
                                           "updatedAt":  "2020-01-08T15:32:39Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU3MjE1MDM3OQ==",
                                           "createdAt":  "2020-01-08T16:32:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOA4vw4g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ptsneves",
                                                                               "createdAt":  "2020-01-10T09:42:38Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "analogrelay",
                                           "body":  "The request was certainly always legitimate :). Just trying to understand prioritization. Making any API public is costly (as it has a high support burden for the future because we can\u0027t break/change it) so it\u0027s important to understand the specific usefulness of the change so we can use that to evaluate the priority.",
                                           "updatedAt":  "2020-01-08T16:32:53Z"
                                       }
                                   ],
                         "totalCount":  7
                     },
        "title":  "AuthorizationOptions does not allow to query list of available policies",
        "labels":  [
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/18932",
        "createdAt":  "2020-02-10T20:24:58Z",
        "number":  18932,
        "author":  "Tratcher",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOA7sAAA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ryanelian",
                                            "createdAt":  "2020-02-15T22:10:02Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2020-11-10T00:23:28Z",
        "body":  "Code + PKCE is as secure as FormPost and avoids many of the issues with SameSite=None.\r\n\r\nChange the nonce cookie SameSite default to lax? What about the correlation cookie?",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOKEcH3A==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU4NDQxMDg4MQ==",
                                           "createdAt":  "2020-02-10T23:33:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Note this will also require the templates to provision a client secret. That\u0027s going to require tooling work to populate.",
                                           "updatedAt":  "2020-02-10T23:33:44Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYzOTEyOTM5Mg==",
                                           "createdAt":  "2020-06-04T21:29:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "As these templates are getting replaced, this would fall under the new templates, so closing.",
                                           "updatedAt":  "2020-06-04T21:29:13Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYzOTEyOTk5MQ==",
                                           "createdAt":  "2020-06-04T21:30:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "Auth handlers will need to switch too, based on the templates/tooling. Need to coordinate with @jmprieur",
                                           "updatedAt":  "2020-06-04T21:30:30Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2MzIzOTIwNg==",
                                           "createdAt":  "2020-07-23T21:22:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2020-07-23T21:22:27Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2MzIzOTY3NQ==",
                                           "createdAt":  "2020-07-23T21:23:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "@jmprieur in your tooling discussion don\u0027t you need this for IdentityWeb as you were needing a client secret to switch?",
                                           "updatedAt":  "2020-07-23T21:23:45Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2MzI1ODM0NA==",
                                           "createdAt":  "2020-07-23T22:14:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "TODO: Test in chrome incognito mode which has started blocking SameSite cookies. We may have to change the cookie SameSite defaults to Unspecified.",
                                           "updatedAt":  "2020-07-23T22:14:05Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2NDkyOTQ5OQ==",
                                           "createdAt":  "2020-07-28T09:41:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jmprieur",
                                           "body":  "Well @blowdart @Tratcher: MSAL.NET does not support Auth Code PKCE in confidential client apps. So if it\u0027s default, it needs to be disable-able when using AAD.\r\n\r\ncc: @henrik-me FYI (and prioritization discussion)",
                                           "updatedAt":  "2020-07-28T09:41:44Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3NTc0MzI3Ng==",
                                           "createdAt":  "2020-08-18T22:05:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "We met with the Identity.Web team and decided to have them change the default in their library \u0026 templates first. In 6.0 we\u0027ll reconsider changing the default in OIDC. ",
                                           "updatedAt":  "2020-08-18T22:05:03Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3NTc0MzM0NA==",
                                           "createdAt":  "2020-08-18T22:05:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2020-08-18T22:05:14Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3NTc0MzcwOA==",
                                           "createdAt":  "2020-08-18T22:06:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "I was finally able to test chrome by downloading Chromium. I enabled every current and future restriction available and the SameSite=none cookies continued to work. That makes this change safer because we can leave the cookies as is, but it also makes this change less necessary.",
                                           "updatedAt":  "2020-08-18T22:06:23Z"
                                       }
                                   ],
                         "totalCount":  10
                     },
        "title":  "Change OIDC default to Code + PKCE",
        "labels":  [
                       "enhancement",
                       "breaking-change",
                       "area-auth",
                       "severity-minor",
                       "affected-medium"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/19954",
        "createdAt":  "2020-03-18T13:36:55Z",
        "number":  19954,
        "author":  "brockallen",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2020-05-24T19:40:22Z",
        "body":  "This line only allows the use of PKCE with code flow:\r\n\r\nhttps://github.com/dotnet/aspnetcore/blob/master/src/Security/Authentication/OpenIdConnect/src/OpenIdConnectHandler.cs#L369\r\n\r\nBut PKCE can also be used with hybrid flow. Please allow that as well.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOJb8osw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwMDY0MDcxMg==",
                                           "createdAt":  "2020-03-18T14:01:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "By `hybrid`, I suppose you mean `code id_token` only and not `code id_token token` or `code token`?\r\n\r\nSome implementations are known for blocking `code id_token token` or `code token` when using PKCE (it doesn\u0027t make much sense to force apps to use PKCE if an access token is returned straight from the authorization endpoint). Since `UsePkce` is set to `true` by default, it could be potentially breaking.",
                                           "updatedAt":  "2020-03-18T14:01:48Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYzMzI4NDc4Nw==",
                                           "createdAt":  "2020-05-24T19:40:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "scottbrady91",
                                           "body":  "Damn it, Brock: https://github.com/dotnet/aspnetcore/pull/10928#issuecomment-499284407",
                                           "updatedAt":  "2020-05-24T19:40:22Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "OIDC PKCE should be allowed with hybrid flow",
        "labels":  [
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/20066",
        "createdAt":  "2020-03-23T03:00:06Z",
        "number":  20066,
        "author":  "brentschmaltz",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2020-10-22T21:31:53Z",
        "body":  "\u003c!--\r\n\r\nMore information on our issue management policies can be found here: https://aka.ms/aspnet/issue-policies\r\n\r\n--\u003e\r\n\r\n### Is your feature request related to a problem? Please describe.\r\nA clear and concise description of what the problem is.\r\nExample: I am trying to do [...] but [...]\r\n\r\n### Describe the solution you\u0027d like\r\n\r\nAsp.net uses ISecurityTokenValidator.ValidateToken which has an out parameter of type SecurityToken. asp.net assumes a JwtSecurityToken.\r\nIf a user plugs in a different ISecurityTokenValidator that returns a different valid token that represents a JWT, this will fail.\r\n\r\n[Here for OIDC](https://github.com/dotnet/aspnetcore/blob/62351067ff4c1401556725b401478e648b66acdc/src/Security/Authentication/OpenIdConnect/src/OpenIdConnectHandler.cs#L1178)\r\n\r\n[also here (there are others)](https://github.com/dotnet/aspnetcore/blob/62351067ff4c1401556725b401478e648b66acdc/src/Security/Authentication/OpenIdConnect/src/OpenIdConnectHandler.cs#L545)\r\n\r\nasp.net and IdentityModel will need to work together to develop the correct JWT abstractions so new token validators, handlers and tokens can be used.\r\n\r\n\r\nsee: IdentityModel https://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/issues/1349\r\n\r\n### Additional context\r\nAdd any other context or screenshots about the feature request here.\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOKEqekA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwMjg2MTc3Ng==",
                                           "createdAt":  "2020-03-23T21:19:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "@Tratcher for your consideration.\r\n\r\nHowever as we only support JWT (and WSFED) I don\u0027t know if I\u0027m too concerned right now.\r\n\r\n@brentschmaltz What other tokens are you expecting? JWE?",
                                           "updatedAt":  "2020-03-23T21:19:23Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwMjg2NTA1OQ==",
                                           "createdAt":  "2020-03-23T21:26:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brentschmaltz",
                                           "body":  "@blowdart We have invested in JsonWebToken / JsonWebTokenHandler where we have the following improvements.\r\n1. Performance ~10%\r\n2. No mapping of claimtypes\r\n3. No reference to Newtonsoft\r\n\r\nWe are thinking an abstraction for JWT\u0027s, so that a JwtTokenHandler will return an IJwtToken or JwtToken (abstract).\r\nRight now we are linked to a specific implementation that we are not investing in anymore.\r\n\r\nIn addition, CBOR is a variation of JWT\u0027s that are helpful in the IOT environment as the size is minimized.\r\n\r\nHope this helps.",
                                           "updatedAt":  "2020-03-23T21:26:21Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwMjg2NzY1MQ==",
                                           "createdAt":  "2020-03-23T21:31:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "You know we\u0027re adding CBOR to the framework right?",
                                           "updatedAt":  "2020-03-23T21:31:53Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwMjg2ODc3NQ==",
                                           "createdAt":  "2020-03-23T21:34:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brentschmaltz",
                                           "body":  "@blowdart I did not know that, we have started a handler similar to JsonWebTokenHandler.\r\nWhere is this work taking place, we probably don\u0027t need two.",
                                           "updatedAt":  "2020-03-23T21:34:31Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwMjg2ODkzNg==",
                                           "createdAt":  "2020-03-23T21:34:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "Now, @bartonjs is doing it.",
                                           "updatedAt":  "2020-03-23T21:34:49Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwMjg3MDE3MA==",
                                           "createdAt":  "2020-03-23T21:37:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brentschmaltz",
                                           "body":  "@bartonjs @blowdart cbor is essentially an encoded json token.\r\nWhere are you planning on shipping it?",
                                           "updatedAt":  "2020-03-23T21:37:45Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwMjg3NDkxMg==",
                                           "createdAt":  "2020-03-23T21:49:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "In 5. We need it for passwordless/FIDO2 support",
                                           "updatedAt":  "2020-03-23T21:49:21Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwMjg4MDQwMw==",
                                           "createdAt":  "2020-03-23T22:02:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brentschmaltz",
                                           "body":  "@blowdart I guess we will have two then, we need it to seamlessly plug into our authz/authn model.",
                                           "updatedAt":  "2020-03-23T22:02:41Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwMjkwMTkwNg==",
                                           "createdAt":  "2020-03-23T22:57:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bartonjs",
                                           "body":  "@brentschmaltz I\u0027m expecting that we\u0027ll ship it as a netstandard2.0 NuGet package, though there are a few political hurdles (that are easier if you would be a consumer of that package).",
                                           "updatedAt":  "2020-03-23T22:57:23Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwMzA0MjA2Ng==",
                                           "createdAt":  "2020-03-24T06:25:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "leastprivilege",
                                           "body":  "* I have never seen anyone use the OIDC handler with an alternative JWT validator\r\n* If you want to decouple them, then the OIDC handler should own the validation parameters type as well as the interface - the validator would return `ClaimsPrincipal`.\r\n\r\nI never thought this \"abstraction\" with the interface was useful.",
                                           "updatedAt":  "2020-03-24T06:25:57Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwMzI3MDk1OA==",
                                           "createdAt":  "2020-03-24T14:27:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brentschmaltz",
                                           "body":  "@bartonjs for IdentityModel to use any token type it must fit into our model of Token / TokenHandler / ClaimsIdentity trio. We have SecurityToken and TokenHandler are the base class for those.\r\n\r\n@leastprivilege OIDC is special in that the specification defines that a JWT is the token type. I am exactly sure what \"abstraction\" you are referring to, but there are multiple options.\r\n\r\nMoving to a SecurityToken or JToken abstraction will allow us to do things like remove dependency on System.IdentityModel.Tokens.Jwt which has issues of dependency on Newtonsoft, performs claim-type mapping, is slower than JsonWebToken.\r\n\r\nWe need to continue to support numerious runtimes, with out a proper abstraction it is difficult to include improvements such as system.text.json and take advantage the new string features with out cluttering up the code with #if defs and multiple targets.",
                                           "updatedAt":  "2020-03-24T14:27:52Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwMzMxNzIwMA==",
                                           "createdAt":  "2020-03-24T15:43:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bartonjs",
                                           "body":  "\u003e @bartonjs for IdentityModel to use any token type it must fit into our model of Token / TokenHandler / ClaimsIdentity trio\r\n\r\nAll we\u0027re providing is a CBOR reader/writer.  Understanding what a token means is at too high a level for us :smile:.",
                                           "updatedAt":  "2020-03-24T15:43:33Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwMzMyMzQxNA==",
                                           "createdAt":  "2020-03-24T15:52:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "leastprivilege",
                                           "body":  "\u003e I am exactly sure what \"abstraction\" you are referring to\r\n\r\nI am saying - I see no value in the OIDC handler using `ISecurityTokenValidator.ValidateToken`.",
                                           "updatedAt":  "2020-03-24T15:52:41Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwMzMzMzYyNQ==",
                                           "createdAt":  "2020-03-24T16:07:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brentschmaltz",
                                           "body":  "@leastprivilege oh I agree, in fact ISecurityTokenValidator.ValidateToken is broken for asnyc as it has an out param. We want to move away from that model.\r\n\r\nThat\u0027s not what we are thinking. We are thinking more of adding to the current abstractions SecurityToken, SecurityTokenHandler and have asp.net use those instead of a specific implementation such as JwtSecurityToken or JsonWebToken.\r\n\r\n@bartonjs we should talk.",
                                           "updatedAt":  "2020-03-24T16:07:04Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2MzIzODE4OA==",
                                           "createdAt":  "2020-07-23T21:19:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "@brentschmaltz As this is still in \"thinking\" mode from both sides this is going to get bumped to 6.0",
                                           "updatedAt":  "2020-07-23T21:19:55Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2MzIzODI1Ng==",
                                           "createdAt":  "2020-07-23T21:20:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2020-07-23T21:20:06Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3NTk3ODg5Ng==",
                                           "createdAt":  "2020-08-19T08:56:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "IshamMohamed",
                                           "body":  "\u003e You know we\u0027re adding CBOR to the framework right?\r\n\r\nare you? Please share more information on this please?",
                                           "updatedAt":  "2020-08-19T08:56:08Z"
                                       }
                                   ],
                         "totalCount":  17
                     },
        "title":  "Security Authentication handlers should not reference JwtSecurityToken",
        "labels":  [
                       "enhancement",
                       "area-auth",
                       "severity-major",
                       "affected-medium"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/20540",
        "createdAt":  "2020-04-04T18:28:25Z",
        "number":  20540,
        "author":  "Yustos",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2020-11-13T21:11:44Z",
        "body":  "Error in Windows Authentication using Kestrel still reproduce (package  Microsoft.AspNetCore.Authentication.Negotiate, guide https://docs.microsoft.com/ru-ru/aspnet/core/security/authentication/windowsauth?view=aspnetcore-3.1\u0026tabs=visual-studio#kestrel).\r\nSame error in related issue. But i collected logs and prepare example to reproduce bug.\r\n\r\nExample in branch: https://github.com/Yustos/AspNetCoreSubdomain/commits/auth_trouble\r\nReproduce steps:\r\n\r\n- Compile AspNetCoreSubdomain.Samples.csproj\r\n- Place bin folder to remote server (example.com)\r\n- Run on remote server AspNetCoreSubdomain.Samples.exe in console\r\n- On local computer open http://example.com:5000 in chrome browser\r\n\r\nYou can see error 404 in browser and this topic error in log.\r\nOr you can try postman get query with NTLM auth - there will be 401 error and same error in server log.\r\n\r\nIn the fiddler all three negotiate requests exists, bug without success:\r\n№\tResult\tProtocol\tHost\tURL\tBody\tCaching\tContent-Type\tProcess\tComments\tCustom\t\r\n7\t401\tHTTP\texample.com:5000\t/\t0\t\t\tpostman:119596\t\t\t\r\n8\t401\tHTTP\texample.com:5000\t/\t0\t\t\tpostman:119596\t\t\t\r\n9\t401\tHTTP\texample.com:5000\t/\t0\t\t\tpostman:119596\t\r\n\r\nThere is connection log, as you ask:\t\t\r\n[auth_log.txt](https://github.com/dotnet/aspnetcore/files/4432216/auth_log.txt)\r\n\r\nRemark: i replaced server name to ```example.com``` and username from domain to Yustos in attached log.\r\n\r\nAt last, i was tried HTTP.SYS auth (see commented code in example branch https://github.com/Yustos/AspNetCoreSubdomain/commit/d39dd1f729c34d7ea36f4e807303b1c7687c34a2) - it work fine.\r\n\r\nI followed auth example prepare by this guide on windows (client and server): https://docs.microsoft.com/ru-ru/aspnet/core/security/authentication/windowsauth?view=aspnetcore-3.1\u0026tabs=visual-studio#kestrel\r\nExcept setspn command: https://docs.microsoft.com/ru-ru/aspnet/core/security/authentication/windowsauth?view=aspnetcore-3.1\u0026tabs=visual-studio#windows-environment-configuration",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOJUhhqQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwOTEzMTY0MQ==",
                                           "createdAt":  "2020-04-05T02:21:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "The 404 is the exception handler trying to redirect to `/Home/Error` which doesn\u0027t seem to exist in this app.\r\n\r\nThe actual exception reported in the logs is:\r\n```\r\nSystem.InvalidOperationException: An anonymous request was received in between authentication handshake requests.\r\n   at Microsoft.AspNetCore.Authentication.Negotiate.NegotiateHandler.HandleRequestAsync()\r\n   at Microsoft.AspNetCore.Authentication.Negotiate.NegotiateHandler.HandleRequestAsync()\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.\u003cInvoke\u003eg__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)\r\n```\r\nWhich matches https://github.com/dotnet/aspnetcore/issues/20100 (closed as stale). There wasn\u0027t enough information before to debug it, but it looks like we have more now...\r\n\r\nWhen you\u0027re doing this authentication are you using the machine\u0027s fully qualified active directory name? Using an alternate name isn\u0027t going to work unless you\u0027ve set up proper SPNs.\r\n\r\nFrom the logs:\r\nRequest 1) Anonymous, authorization failed, Challenge 401 Negotiate\r\nRequest 2) Authorization: Negotiate (kerberos(?) blob), incomplete handshake, 401 Negotiate (blob)\r\nRequest 3) Authorization: Negotiate (blob), incomplete handshake, 401 Negotiate (blob)\r\nRequest 4) Anonymous, exception as shown above.\r\n\r\nSo the main issue seems to be that the server thinks auth is still in progress but the client has given up. This is likely a misconfiguration related to SPNs or similar. It\u0027s odd that the client would send another anonymous request after three consecutive 401s.\r\n\r\n@blowdart any idea how to get the associated schannel events to get a more specific explanation here?\r\n\r\nNote Http.Sys may have worked because it uses kernel mode authentication which means SPNs are configured on the machine account. With Kestrel it\u0027s using user mode which means the SPNs must be configured on the user account instead.",
                                           "updatedAt":  "2020-04-05T02:21:06Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwOTM2ODM4MA==",
                                           "createdAt":  "2020-04-05T06:53:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Yustos",
                                           "body":  "Hi, Chris!\r\n\"When you\u0027re doing this authentication are you using the machine\u0027s fully qualified active directory name?\" - yes. In client browser i used full server name http://example.com:5000/ and have auth error.\r\nWhen i use browser on server - all urls variants works fine: http://localhost:5000, http://example:5000 and http://example.com:5000.\r\n\r\nFor clear - 404 is strange, but not a root trouble. Problem is authentication.\r\n\r\nPostman failed on auth without any additional potential requests (like js, css, favico and other).\r\n\r\nTo reduce any browser specific network activity i tried powershell:\r\n```powershell\r\nPS C:\\Users\\Yustos\u003e $url = \"http://example.com:5000\"\r\nPS C:\\Users\\Yustos\u003e $wc = New-Object System.Net.WebClient\r\nPS C:\\Users\\Yustos\u003e $wc.UseDefaultCredentials = $true\r\nPS C:\\Users\\Yustos\u003e $response = $wc.DownloadString($url)\r\nException calling \"DownloadString\" with \"1\" argument(s): \"The remote server returned an error: (401) Unauthorized.\"\r\nAt line:1 char:1\r\n+ $response = $wc.DownloadString($url)\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException\r\n    + FullyQualifiedErrorId : WebException\r\n```\r\nAnd here is server log: \r\n[auth_log_by_powershell.txt](https://github.com/dotnet/aspnetcore/files/4433060/auth_log_by_powershell.txt)\r\n\r\nWill fiddler logs help you?\r\nThank you for advice!\r\n\r\nPS: i tried to apply setspn, but failed:\r\n```cmd\r\n\u003esetspn -S HTTP/example.com Yustos\r\nChecking domain DC=---,DC=---\r\n\r\nRegistering ServicePrincipalNames for CN=Yustos,OU=Computers,OU=Clients,DC=---,DC=---\r\n        HTTP/example.com\r\nFailed to assign SPN on account \u0027CN=Yustos,OU=Computers,OU=Clients,DC=---,DC=---\u0027,\r\n error 0x2098/8344 -\u003e Insufficient access rights to perform the operation.\r\n```\r\nI suppose this is not important.",
                                           "updatedAt":  "2020-04-05T06:53:18Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwOTM3NzkzNg==",
                                           "createdAt":  "2020-04-05T08:18:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Yustos",
                                           "body":  "Okay, i am collected fiddler logs for powershell with UseDefaultCredentials calls (HTTP-bodies excluded, tokens shortened).\r\nSuccess with HTTP.SYS: \r\n[success_http_sys.txt](https://github.com/dotnet/aspnetcore/files/4433140/success_http_sys.txt)\r\n\r\nFail with Kestrel negotiate:\r\n[fail_kestrel_negotiate.txt](https://github.com/dotnet/aspnetcore/files/4433143/fail_kestrel_negotiate.txt)\r\n\r\nI am not an Active Directory administrator, so setspn unpermitted. And i believe, that i should not ask administrator to register SPN for every test scenario or dynamically generated urls.\r\nSo my way is HTTP.SYS or other authentication mechanism.\r\n\r\nLast thing is error code. In the attached failure-logs was 400 error after series of handshakes.\r\nBut sometimes returned error 404 without any handshake:\r\n![image](https://user-images.githubusercontent.com/5267762/78469962-4818b080-772e-11ea-91f8-4806c651e3c2.png)\r\nHere details for 404:\r\n```\r\nGET http://example.com:5000/ HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT; Windows NT 10.0; ru-RU) WindowsPowerShell/5.1.18362.628\r\nHost: example.com:5000\r\n\r\nHTTP/1.1 404 Not Found\r\nDate: Sun, 05 Apr 2020 07:29:13 GMT\r\nServer: Kestrel\r\nContent-Length: 0\r\nCache-Control: no-cache\r\nPragma: no-cache\r\nExpires: -1\r\n```\r\nLooks like is one-after-one 400, 404, 400, 404...\r\n\r\nWell, confirm, please, that setspn is the strong requirement for Negotiate and close issue.\r\nThank you!",
                                           "updatedAt":  "2020-04-05T08:19:15Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwOTkxNTYzMw==",
                                           "createdAt":  "2020-04-06T16:59:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Can you share the server logs for the 400 scenario?\r\n\r\nYes, SPNs are a strong requirement for Negotiate/Kerberos. When you run on the same machine it always defaults to NTLM which does not have the same SPN requirements. When it runs with HttpSys from a separate machine it\u0027s using kernel mode auth and the machine account which already has SPNs configured by default. When it\u0027s using Kestrel and user-mode auth from a remote machine it can\u0027t find any SPNs in the user account, tries to fall back to NTLM, but then gives up after a few round trips (not sure why yet).\r\n\r\n@JunTaoLuo this would be a good situation for you to repro with your current setup.",
                                           "updatedAt":  "2020-04-06T16:59:17Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwOTkxNjYxMw==",
                                           "createdAt":  "2020-04-06T17:01:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "The 404 is likely the same redirect to `/home/error` as before. The server logs would show that.",
                                           "updatedAt":  "2020-04-06T17:01:00Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwOTk1NzQ3NQ==",
                                           "createdAt":  "2020-04-06T18:19:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Yustos",
                                           "body":  "I did test again and this was my false - 400/404 problem is valid when i use fiddler as proxy to client-side requests sniffing.\r\nThis command will produce 400/404 errors:\r\n```powershell\r\nInvoke-WebRequest -Uri \"http://example.com:5000\" -UseDefaultCredentials -Proxy http://localhost:8888\r\n````\r\n\r\nBut this is stable 401:\r\n```powershell\r\nInvoke-WebRequest -Uri \"http://example.com:5000\" -UseDefaultCredentials\r\nInvoke-WebRequest : The remote server returned an error: (401) Unauthorized.\r\nAt line:1 char:1\r\n+ Invoke-WebRequest -Uri \"http://example.com:5000\" -UseDefaultCredent ...\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : InvalidOperation: (System.Net.HttpWebRequest:HttpWebRequest) [Invoke-WebRequest], WebExc\r\n   eption\r\n    + FullyQualifiedErrorId : WebCmdletWebResponseException,Microsoft.PowerShell.Commands.InvokeWebRequestCommand\r\n```\r\n\r\nHere is server log for 401 without proxy (single call): \r\n[server.txt](https://github.com/dotnet/aspnetcore/files/4440081/server.txt)\r\n\r\nAnyway, i can not use Kestrel negotiate with SPN\u0027s. I want to use dynamic subdomains and i have no opportunity to dynamically register SPN\u0027s in Active Directory. For my case HTTP.SYS and IIS works fine :(\r\n\r\nChris, thank you for explanation about SPN! I\u0027m sorry for your time.\r\n\r\n\r\n",
                                           "updatedAt":  "2020-04-06T18:19:33Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyMjA5NTY5MA==",
                                           "createdAt":  "2020-04-30T20:35:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "JunTaoLuo",
                                           "body":  "FYI, the 401s we were seeing seem to be caused by the missing SPNs. I am able to reproduce the 401 errors on my local VMs when the SPNs are not configured and I am able to run your repro project successfully when I do have the SPN configured correctly. I think all the questions here have been resolved, please let us know if you have any other issues @Yustos ",
                                           "updatedAt":  "2020-04-30T20:35:10Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyMjA5NzkyNg==",
                                           "createdAt":  "2020-04-30T20:39:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "@JunTaoLuo did you ever see the InvalidOperationException?",
                                           "updatedAt":  "2020-04-30T20:39:19Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyMjExNDEwOA==",
                                           "createdAt":  "2020-04-30T21:10:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "analogrelay",
                                           "body":  "Triage: @JunTaoLuo is going to take a quick look at a few other clients (Legacy Edge/Edgium, etc.) to see if we can repro the InvalidOperationException. We do require an SPN though so I don\u0027t think there\u0027s much we can do about that. Using HttpSys is probably a better option in this scenario.",
                                           "updatedAt":  "2020-04-30T21:10:16Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyNTUwMDU4NQ==",
                                           "createdAt":  "2020-05-07T21:13:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "analogrelay",
                                           "body":  "@JunTaoLuo was able to identify that Edge Chromium does indeed produce this error when SPNs aren\u0027t configured. We\u0027re forwarding the details on to that team for further investigation.",
                                           "updatedAt":  "2020-05-07T21:13:05Z"
                                       }
                                   ],
                         "totalCount":  10
                     },
        "title":  "Windows Authentication Error using Kestrel for .NET Core Web API, when accessed remotely.",
        "labels":  [
                       "External",
                       "task",
                       "blocked",
                       "area-auth",
                       "affected-few",
                       "severity-minor"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/21607",
        "createdAt":  "2020-05-08T02:41:12Z",
        "number":  21607,
        "author":  "ADH-LukeBollam",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC-GOmA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "nickduch",
                                            "createdAt":  "2020-10-22T17:50:08Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "cocowalla",
                                            "createdAt":  "2020-11-18T12:53:16Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Ricardoaraujo00",
                                            "createdAt":  "2020-11-24T09:33:42Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "benjaminsampica",
                                            "createdAt":  "2025-01-13T17:09:33Z"
                                        }
                                    ],
                          "totalCount":  4
                      },
        "updatedAt":  "2020-11-10T23:30:03Z",
        "body":  "### Describe the bug\r\nThe error message provided when Authorization failed due to a Handler not being registered is currently:\r\n`info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[2]\r\n      Authorization failed.\r\ninfo: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[13]\r\n      AuthenticationScheme: Bearer was forbidden.`\r\nThis suggests there is something wrong with the Bearer Token provided, the Authentication scheme, or the default Authorization (ie. not signed in / bearer token is missing). It\u0027s especially confusing when you aren\u0027t using the [Authorize] tag at all.\r\n\r\nThe error message would be far more useful if it at least logged the usual \"Dependency  [HandlerName] could not be resolved\" like other missing dependency errors, though maybe throwing an exception is applicable here too. The current error message is sending programmers down a rabbit hole unrelated to the actual issue.\r\n\r\n### To Reproduce\r\nUse the code from [this sample](https://github.com/dotnet/aspnetcore/blob/v3.1.3/src/Security/samples/CustomPolicyProvider/Startup.cs) and remove:\r\n`services.AddSingleton\u003cIAuthorizationHandler, MinimumAgeAuthorizationHandler\u003e();`\r\nfrom Startup.cs. Try to access methods in the HomeController.\r\n\r\n### Further technical details\r\n- ASP.NET Core version 3.1\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.101\r\n Commit:    b377529961\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.101\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.1\r\n  Commit:  a1388f194c\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.101 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n- Visual Studio 2019 community edition 16.3.2\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOJXwv-w==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyODg5NTczOQ==",
                                           "createdAt":  "2020-05-14T21:27:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "analogrelay",
                                           "body":  "Triage: We could probably do something to improve logging here.",
                                           "updatedAt":  "2020-05-14T21:27:22Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Misleading error message when an Authorization Handler is not registered",
        "labels":  [
                       "enhancement",
                       "area-auth",
                       "affected-few",
                       "severity-minor"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/21949",
        "createdAt":  "2020-05-18T15:59:14Z",
        "number":  21949,
        "author":  "HarryRobertson",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-04-30T17:13:37Z",
        "body":  "### Issue\r\nThe `SlidingExpiration` option when set to `true` only configures the handler to re-issue the cookie if it processes a request more than half way through the expiry window. As a result, in a 1 hour expiry window a request processed at 29 minutes will not reset the window.\r\n\r\nThe `CheckForRefresh` method which handles this is `private`, and therefore this behaviour cannot be modified easily by the calling application.\r\n\r\n### Potential solution\r\nIntroduce another configuration option that allows the developer to set the period elapsed of the timeout window at which the cookie will be re-issued - this should default to 50% of the `ExpireTimeSpan` for backwards compatibility.\r\n\r\nCurrent handler code:\r\n```\r\nprivate void CheckForRefresh(AuthenticationTicket ticket)\r\n        {\r\n            var currentUtc = Clock.UtcNow;\r\n            var issuedUtc = ticket.Properties.IssuedUtc;\r\n            var expiresUtc = ticket.Properties.ExpiresUtc;\r\n            var allowRefresh = ticket.Properties.AllowRefresh ?? true;\r\n            if (issuedUtc != null \u0026\u0026 expiresUtc != null \u0026\u0026 Options.SlidingExpiration \u0026\u0026 allowRefresh)\r\n            {\r\n                var timeElapsed = currentUtc.Subtract(issuedUtc.Value);\r\n                var timeRemaining = expiresUtc.Value.Subtract(currentUtc);\r\n\r\n                if (timeRemaining \u003c timeElapsed)\r\n                {\r\n                    RequestRefresh(ticket);\r\n                }\r\n            }\r\n        }\r\n```\r\n\r\nSuggested handler code:\r\n```\r\nprivate void CheckForRefresh(AuthenticationTicket ticket)\r\n        {\r\n            var currentUtc = Clock.UtcNow;\r\n            var issuedUtc = ticket.Properties.IssuedUtc;\r\n            var refreshUtc = issuedUtc + Options.RefreshPeriod;\r\n            var allowRefresh = ticket.Properties.AllowRefresh ?? true;\r\n            if (issuedUtc != null \u0026\u0026 Options.SlidingExpiration \u0026\u0026 allowRefresh \u0026\u0026 currentUtc \u003e refreshUtc)\r\n            {\r\n                RequestRefresh(ticket);\r\n            }\r\n        }\r\n```\r\n\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOJmuFWg==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYzMjM0OTMzMg==",
                                           "createdAt":  "2020-05-21T21:13:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "This is a reasonably common ask.\r\n\r\nIf we made it configurable what sort of property would you want? We\u0027d probably still go with a percentage, you can adjust. \r\n\r\nIn any case it\u0027d take design, which means it\u0027ll be backlogged for now.",
                                           "updatedAt":  "2020-05-21T21:13:43Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY0NDM0ODQ0NA==",
                                           "createdAt":  "2020-06-15T20:00:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "This issue has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **4 days**. It will be closed if no further activity occurs **within 3 days of this comment**. If it *is* closed, feel free to comment when you are able to provide the additional information and we will re-investigate.\n\nSee [our Issue Management Policies](https://aka.ms/aspnet/issue-policies) for more information.",
                                           "updatedAt":  "2020-06-15T20:00:49Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY0NDU4MDY5OA==",
                                           "createdAt":  "2020-06-16T07:17:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HarryRobertson",
                                           "body":  "A percentage would suit me fine.\r\n\r\nIf it\u0027s going to be backlogged, I assume I can\u0027t expect to see this any time soon?",
                                           "updatedAt":  "2020-06-16T07:17:21Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Make CookieAuthenticationOptions.SlidingExpiration behaviour configurable",
        "labels":  [
                       "enhancement",
                       "area-auth",
                       "affected-few",
                       "severity-minor"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/23749",
        "createdAt":  "2020-07-07T18:24:46Z",
        "number":  23749,
        "author":  "kevinchalet",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOBJpQeQ==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "martincostello",
                                            "createdAt":  "2020-07-07T18:28:02Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "bryantlikes",
                                            "createdAt":  "2020-07-07T20:48:39Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2020-07-11T14:56:41Z",
        "body":  "In some cases, developers want to make sure that the scopes granted by the authorization server/resource owner exactly match the requested scopes. In OAuth 2.0/OIDC, this can be done by determining whether a `scope` property was returned as part of the authorization response (for the implicit flow, but it\u0027s easy to bypass) or the token response, and ensuring it matches the requested scopes.\r\n\r\nUnfortunately, there\u0027s currently no event that would allow implementing that.\r\nAlternatively, if we think it\u0027s a common enough scenario, it should be natively implemented as a `ValidateGrantedScope` option.\r\n\r\nhttps://github.com/aspnet-contrib/AspNet.Security.OAuth.Providers/pull/444#issuecomment-655032756\r\n\r\n/cc @Tratcher @bryantlikes",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOJyovvg==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1NjM1ODYxNw==",
                                           "createdAt":  "2020-07-09T21:24:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "So for OAuth there\u0027d be a change to capture the scopes about here as part of the OAuthTokenResponse:\r\nhttps://github.com/dotnet/aspnetcore/blob/a5901c084aab5aba6162a57b6fe2dc0ec7764e48/src/Security/Authentication/OAuth/src/OAuthHandler.cs#L204\r\n\r\nThen you could check the scopes in the existing CreateTicket event, right?\r\nhttps://github.com/dotnet/aspnetcore/blob/a5901c084aab5aba6162a57b6fe2dc0ec7764e48/src/Security/Authentication/OAuth/src/OAuthHandler.cs#L165\r\n\r\nFor OIDC implicit flow could you do this check in the MessageReceived event?\r\nhttps://github.com/dotnet/aspnetcore/blob/a5901c084aab5aba6162a57b6fe2dc0ec7764e48/src/Security/Authentication/OpenIdConnect/src/OpenIdConnectHandler.cs#L527\r\n\r\nFor the OIDC token endpoint response, it seems like you could check this in the TokenResponseReceived event.\r\nhttps://github.com/dotnet/aspnetcore/blob/a5901c084aab5aba6162a57b6fe2dc0ec7764e48/src/Security/Authentication/OpenIdConnect/src/OpenIdConnectHandler.cs#L658",
                                           "updatedAt":  "2020-07-09T21:24:26Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1NzA3NjE1OA==",
                                           "createdAt":  "2020-07-11T14:56:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "\u003e So for OAuth there\u0027d be a change to capture the scopes about here as part of the OAuthTokenResponse:\r\n\r\nYep. Now the question is: do we want the base OAuth 2.0 handler to do that or do we just want to provide an event to allow folks to implement that themselves?\r\n\r\n\u003e For OIDC implicit flow could you do this check in the MessageReceived event?\r\n\r\nYeah, the OIDC handler has a much better events story and it\u0027s already possible to support that scenario using the existing hooks (that\u0027s why I only mentioned the OAuth 2.0 handler in my OP).",
                                           "updatedAt":  "2020-07-11T14:56:41Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Consider adding an event to the OAuth 2.0 base handler to validate token responses",
        "labels":  [
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/25224",
        "createdAt":  "2020-08-25T02:00:48Z",
        "number":  25224,
        "author":  "hempels",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2020-10-06T15:00:22Z",
        "body":  "### Describe the bug\r\nThe ChunkingCookieManager attempts to break cookies up according to the default or configured ChunkSize. The calculation it performs against the length of the value is based on the raw value. However, the cookie value is encoded (via Uri.EscapeDataString) before being appended to response headers. Depending on the cookie value, that encoding step can significantly inflate the size of each chunk - easily surpassing what some browsers will accept.\r\n\r\nI\u0027m not clear on why we\u0027re aggressively encoding all cookies when that isn\u0027t required by the spec. But in any case, I believe ChunkingCookieManager has a bug. It should be considering the length of the encoded value since that is what browsers will see, not the passed in value.\r\n\r\n### To Reproduce\r\nSet a cookie using:\r\n`new ChunkingCookieManager().AppendResponseCookie(HttpContext, \"Test\", \"{\\\"Key\\\":\\\"Value\\\"}\");`\r\n\r\nTransmitted header is encoded:\r\n`Set-Cookie: Test=%7B%22Key%22%3A%22Value%22%7D; path=/;`\r\n\r\nChunkingCookieManager believes it is dealing with a 15 character value. The actual cookie value is 29 characters.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOKKlbLA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3OTgwMDIzMg==",
                                           "createdAt":  "2020-08-25T06:05:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "A) you\u0027re right, the math is off.\r\nB) the encoding is a bit aggressive, but it is needed in some cases.\r\nC) the spec does restrict what characters can be used in cookie values. For example most JSON would result in invalid cookies, just like the sample you gave.\r\nD) so far the chunking cookie manager has been used with components that only produce valid cookies like cookie auth and mvc temp data.\r\nE) the caller can mitigate this by producing valid cookies or pre-encoding.",
                                           "updatedAt":  "2020-08-25T06:05:02Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3OTgwMjUyMg==",
                                           "createdAt":  "2020-08-25T06:06:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Where were you intending to use ChunkingCookieManager, and why aren\u0027t you producing valid cookies to start with?",
                                           "updatedAt":  "2020-08-25T06:06:29Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3OTgzMjYyMw==",
                                           "createdAt":  "2020-08-25T06:35:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hempels",
                                           "body":  "Fair questions.\r\n\r\n- Where were you intending to use ChunkingCookieManager?\r\n\r\nWe have a custom OAuth handler (for LTI) that allows new users to authenticate with an openid provider (MS, Google, etc) to connect multiple auths to a single account. That requires storing the original JWT in a cookie to be read back later. JWTs can be quite large. We already use ChunkingCookieManager for this by overriding ChunkSize to a much smaller value, but I finally decided to dig into why we\u0027re having to do that.\r\n\r\n- Why aren\u0027t you producing valid cookies to start with?\r\n\r\n1. Not a documented requirement of AppendResponseCookie and is not something we are used to having to do with AppendCookie. They both perform encoding (which cannot be opted out of) presumably so the caller doesn\u0027t have to.\r\n\r\n2. Pre-encoding would result in a double-escaped value and could cause problems trying to read it back. RFC 2396 makes clear that this should be avoided:\r\n\u003e Implementers should be careful not to escape or unescape the same string more than once, since unescaping an already unescaped string might lead to misinterpreting a percent data character as another escaped character, or vice versa in the case of escaping an already escaped string.",
                                           "updatedAt":  "2020-08-25T06:43:21Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3OTgzNjc4Mw==",
                                           "createdAt":  "2020-08-25T06:45:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Note cookie auth has one alternative strategy for dealing with large data. It can save the data in a local store and only send a unique identifier to the client. You may consider something similar.",
                                           "updatedAt":  "2020-08-25T06:45:30Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3OTgzODU5Nw==",
                                           "createdAt":  "2020-08-25T06:49:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hempels",
                                           "body":  "\u003e save the data in a local store and only send a unique identifier to the client\r\n\r\nThis would be a nice optimization, though a good deal more effort than the working solution we already have.\r\n\r\nI just wanted to point out what I believe to be an oversite with ChunkingCookieManager. Admittedly it likely doesn\u0027t impact many developers.",
                                           "updatedAt":  "2020-08-25T06:50:12Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY4MjE4NzU2NA==",
                                           "createdAt":  "2020-08-27T20:59:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2020-08-27T20:59:11Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "ChunkingCookieManager ChunkSize calculation fails to account for Uri Encoding",
        "labels":  [
                       "bug",
                       "area-auth",
                       "affected-few",
                       "severity-minor"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/25335",
        "createdAt":  "2020-08-28T01:16:01Z",
        "number":  25335,
        "author":  "Tratcher",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2020-10-06T14:59:59Z",
        "body":  "Feedback from @mconnew:\r\n\r\nI was looking over your reflected abstraction of the negotiate code ... and noticed a significant performance problem in the code. There is lots of code which looks similar to this:\r\n \r\n        public bool IsCompleted\r\n        {\r\n            get =\u003e (bool)_isCompleted.Invoke(_instance, Array.Empty\u003cobject\u003e());\r\n        }\r\n \r\nThe problem with calling the Invoke method on an MethodInfo is it does a whole bunch of runtime type checking to make sure the number and type of arguments is correct. There’s also a boxing and unboxing as well as a cast type check on the return value. You can use MethodInfo.CreateDelegate to create a delegate you can straight up call. Because it only does the type checking of the delegate type to the method info when you call CreateDelegate, it’s a lot cheaper to call. The generated delegate is strongly typed so the CLR just depends on the strong typing to ensure all the parameters etc are correct.\r\n\r\n---\r\n\r\nIf we get a proper API for this in 6.0 then this code can be removed (https://github.com/dotnet/runtime/issues/29270). If not we may consider making some improvements.\r\n\r\nNote it\u0027s not clear how these costs reflect on RPS. Windows Auth is already a very in-efficient process that often involves multiple request.\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOKeUyzQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5MDczMTIzOQ==",
                                           "createdAt":  "2020-09-10T21:06:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2020-09-10T21:06:03Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcwMjU2NDU5Mg==",
                                           "createdAt":  "2020-10-02T07:03:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "@mconnew is there a wcf scenario we can setup and run?",
                                           "updatedAt":  "2020-10-02T07:03:45Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcwMjg4NjYwNQ==",
                                           "createdAt":  "2020-10-02T18:19:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mconnew",
                                           "body":  "The scenario for this with WCF is no different than any other ASP.NET Core application using Windows auth. I just know from experience that the cost of using Invoke to use a reflected property is significantly higher than using a created delegate. I have no idea how that translates to actual additional cost for authentication in a running service. I opened this issue because it\u0027s a small quick change to do without any refactoring needed and there is some performance gain to it. I have a dev working on CoreWCF who is working on using the same reflection based usage of the Nego abstraction to implement Windows  authentication with Token based message security and I discovered this when I was finding references for them.",
                                           "updatedAt":  "2020-10-02T18:19:52Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Negotiate reflection performance improvements",
        "labels":  [
                       "enhancement",
                       "Perf",
                       "area-auth",
                       "severity-nice-to-have",
                       "affected-very-few"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/27004",
        "createdAt":  "2020-10-17T14:17:21Z",
        "number":  27004,
        "author":  "tbonham",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODKki1g==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "papyr",
                                            "createdAt":  "2020-10-17T16:17:21Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "GuillaumeBONHOMMEAU",
                                            "createdAt":  "2023-02-19T13:40:33Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Aaron-P",
                                            "createdAt":  "2024-03-27T13:25:13Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "fmaeseele",
                                            "createdAt":  "2025-08-09T23:28:29Z"
                                        }
                                    ],
                          "totalCount":  4
                      },
        "updatedAt":  "2020-10-22T21:16:33Z",
        "body":  "\u003c!--\r\n\r\nMore information on our issue management policies can be found here: https://aka.ms/aspnet/issue-policies\r\n\r\n--\u003e\r\n\r\n## Add SAML2.0 and CAS authentication support to native asp core.\r\n\r\nPlease add SAML2 and CAS authentication to the natively supported auth types for ASP core.\r\n\r\nThere are very many old auth systems out there that still require that you use this for logins.\r\n\r\nThank you",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOKpp7SQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcxMTA0MDM3NA==",
                                           "createdAt":  "2020-10-17T16:30:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "What do you mean by CAS?",
                                           "updatedAt":  "2020-10-17T16:30:28Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcxMTA0MjQ0Nw==",
                                           "createdAt":  "2020-10-17T16:39:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tbonham",
                                           "body":  "\u003e What do you mean by CAS?\r\n\r\nCentral Authentication Service (CAS) [https://www.apereo.org/projects/cas](https://www.apereo.org/projects/cas)\r\n\r\nCAS is a SSO technology that is used a lot in the EDU environment.",
                                           "updatedAt":  "2020-10-17T16:39:34Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcxMTA0OTM4NQ==",
                                           "createdAt":  "2020-10-17T17:11:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBT0NRw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "tbonham",
                                                                               "createdAt":  "2020-10-17T18:17:40Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "blowdart",
                                           "body":  "That\u0027s new to me. Given that it\u0027s the first request we\u0027ve had it\u0027s unlikely we\u0027d look at implementing another protocol without much more demand.",
                                           "updatedAt":  "2020-10-17T17:11:05Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcxNDc2NzA0OA==",
                                           "createdAt":  "2020-10-22T21:16:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODCV8cQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "AnastasiaLyutova",
                                                                               "createdAt":  "2023-08-01T06:24:02Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "blowdart",
                                           "body":  "For SAML2 there are multiple 3rd party libraries, as you\u0027ve discovered already. \r\n\r\nThe underlying stuff we use for WS-Fed and SAML come from AAD and as AD/ADFS don\u0027t do SAML2 there\u0027s no real interest there in supporting it.\r\n\r\nI\u0027ll drop this into backlog, but it would need a lot of popularity before SAML2 is considered.",
                                           "updatedAt":  "2020-10-22T21:16:19Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcxNDc2NzE3Nw==",
                                           "createdAt":  "2020-10-22T21:16:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2020-10-22T21:16:33Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "SAML2 and CAS Auth",
        "labels":  [
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/27061",
        "createdAt":  "2020-10-20T14:44:20Z",
        "number":  27061,
        "author":  "voroninp",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODAGMnQ==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ethanresnick",
                                            "createdAt":  "2020-10-30T00:05:05Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "hossameldeen",
                                            "createdAt":  "2023-12-06T02:39:44Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "amyboose",
                                            "createdAt":  "2025-03-14T17:47:39Z"
                                        }
                                    ],
                          "totalCount":  3
                      },
        "updatedAt":  "2025-03-14T20:54:29Z",
        "body":  "`Authorize` attribute allows to specify multiple roles which work with OR-semantics. Unfortunately, there\u0027s only `Policy` property rather than `Policies`.\r\n\r\nPolicy defines requirements with AND-semantics. OR-semantics for single requirement can be implemented with multiple handlers. However, there\u0027s no option to easily combine policies in OR-mode.\r\n\r\nFor example, we want to check that user is Administrator, or resource belongs to the user. I see these checks as two distinct policies having various requirements:\r\n\r\n```CSharp\r\n[Authorize(Policies=\"UserIsAdministrator, UserOwnsTheOrder\"]\r\n[ApiController]\r\nMyController : Controller {}\r\n```\r\n\r\n```CSharp\r\nservices.AddAuthorization(cfg =\u003e {\r\n    cfg.AddPolicy(\r\n        \"UserOwnsTheOrder\",\r\n        policy =\u003e policy.Requirements.Add(new UserOwnsTheOrderRequirement()));\r\n    cfg.AddPolicy(\r\n        \"UserIsAdministrator\",\r\n        policy =\u003e policy.RequireRole(UserAuthorizeRole.Operator));\r\n\r\n});\r\nservices.AddTransient\u003cIAuthorizationHandler, UserOwnsTheOrderAuthorizationHandler\u003e();\r\n```\r\n\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOondR0g==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcxNDc2MzM2MA==",
                                           "createdAt":  "2020-10-22T21:08:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2020-10-22T21:08:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85tyrlr",
                                           "createdAt":  "2023-12-06T02:53:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hossameldeen",
                                           "body":  "I have the exact same need.\r\n\r\nHow are you, or anyone reading this post, implementing this behaviour for now?",
                                           "updatedAt":  "2023-12-06T02:53:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85t0gnd",
                                           "createdAt":  "2023-12-06T09:13:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODOxXqw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "hossameldeen",
                                                                               "createdAt":  "2023-12-07T02:29:29Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "voroninp",
                                           "body":  "@hossameldeen , using [imperative approach](https://learn.microsoft.com/en-us/aspnet/core/security/authorization/resourcebased?view=aspnetcore-8.0#use-imperative-authorization). \r\n\r\nBut yes, declarative would be nicer.",
                                           "updatedAt":  "2023-12-06T09:13:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85t6uWk",
                                           "createdAt":  "2023-12-07T02:29:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hossameldeen",
                                           "body":  "@voroninp I see. Thank you.\r\n\r\nIndeed, declarative would be nicer. My main motivation for declarative also is features like fallback \u0026 default policy that help protect against forgetting authorization logic in an endpoint.\r\n\r\nSeems like I\u0027ll go for creating combination policies (e.g., `UserIsAdministratorOrUserOwnsTheOrder`), especially that the number of policies shouldn\u0027t grow to N^2 since most or all of them would need to be combined with only 1 or 2 policies (e.g., `UserIsAdministrator`).\r\n\r\nAnd might extract bulk of authorization logic into, e.g., `AdministratorUserAuthorizationService` and similar services, so that it can be reused in handlers of policies and their combinations, if anyone is curious.",
                                           "updatedAt":  "2023-12-07T02:29:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85t61gb",
                                           "createdAt":  "2023-12-07T02:53:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hossameldeen",
                                           "body":  "For prioritization considerations, this is a discussed [StackOverflow question](https://stackoverflow.com/q/35609632/6690391) that could be a useful data point.\r\n\r\nThe accepted answer _seems_ to only provide an `OR` of a full set of policies/requirements. But it doesn\u0027t provide the ability to `OR` different subsets of this set.\r\n\r\nE.g., if we have policies/requirements `X`, `Y`, and `Z`, the accepted answer would give us `OR(X, Y, Z)`, but not `X`, `Y`, `Z`, `OR(X, Y)`, .. etc.",
                                           "updatedAt":  "2023-12-07T02:53:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85t9ea2",
                                           "createdAt":  "2023-12-07T07:47:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODOzGwg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "hossameldeen",
                                                                               "createdAt":  "2023-12-07T08:07:27Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "voroninp",
                                           "body":  "As another workaround solution you could create an authorization handler which will  build its configuration from endpoint metadata (applied attributes).\n\n`Authorize` attribute is not sealed, so you can create a descendant which specifies the policy to activate that universal handler.",
                                           "updatedAt":  "2023-12-07T07:47:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86iclL_",
                                           "createdAt":  "2025-03-14T18:00:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "amyboose",
                                           "body":  "I found this topic very important.\n\nI have the same problem as the author. My project required access to many endpoints for all Admins and HRs. In addition to this, there is an additional requirement.\nFor example:\n1) AdminOrHR or Chief (RolesAuthorizationRequirement or ChiefRequirement)\n2) AdminOrHR or Chief (RolesAuthorizationRequirement or SelfEmployeeRequirement)\n3) Admin or ResourceOwner (RolesAuthorizationRequirement or ResourceOwnerRequirement)\nand etc.\n\nThere are infinite number of combinations between 2 and more different requirements which must be processed by the operator `OR`.\n\nThe common is that every requirement has own handler. And it\u0027s tedious to create a handler for each combination. That\u0027s why I created my own `HybridAuthorizationPolicyBuilder`, but I would like to have native support from Microsoft.\n\nThis is an example that shows the problem:\n```C#\nusing Microsoft.AspNetCore.Authentication;\nusing System.Security.Claims;\nusing System.Text.Encodings.Web;\nusing Microsoft.AspNetCore.Authorization;\nusing Microsoft.AspNetCore.Authorization.Infrastructure;\nusing Microsoft.Extensions.Options;\n\nvar builder = WebApplication.CreateBuilder(args);\n\nbuilder.Services.AddControllers();\n\nbuilder.Services\n    .AddAuthentication(\"SimpleAuthenticationScheme\")\n    .AddScheme\u003cSimpleAuthenticationOptions, SimpleAuthenticationHandler\u003e(\"SimpleAuthenticationScheme\", o =\u003e { });\n\nbuilder.Services.AddScoped\u003cIAuthorizationHandler, ChiefHandler\u003e();\n\nbuilder.Services.AddAuthorization(options =\u003e\n{\n    // both not work because every requirement must be met\n    options.AddPolicy(\"AdminOrHrOrChief\", policy =\u003e\n    {\n        policy.Requirements.Add(new RolesAuthorizationRequirement([\"Admin\", \"HR\"]));\n        policy.Requirements.Add(new ChiefRequirement());\n    });\n});\n\nvar app = builder.Build();\n\napp.MapGet(\"/profile/{employeeId}\", async () =\u003e\n{\n    await Task.Yield();\n    var userData = new { Phone = \"12345\" };\n    return Results.Ok(userData);\n})\n.RequireAuthorization(\"AdminOrHrOrChief\"); // check requirements before executing and return 403 when they doesn\u0027t met\n\napp.UseAuthorization();\napp.MapControllers();\napp.Run();\n\npublic class SimpleAuthenticationHandler : AuthenticationHandler\u003cSimpleAuthenticationOptions\u003e\n{\n    public SimpleAuthenticationHandler(IOptionsMonitor\u003cSimpleAuthenticationOptions\u003e options, ILoggerFactory logger, UrlEncoder encoder)\n        : base(options, logger, encoder)\n    {\n    }\n\n    protected override Task\u003cAuthenticateResult\u003e HandleAuthenticateAsync()\n    {\n        var claims = new[] { new Claim(ClaimTypes.Role, \"NotAdmin\") };\n        var identity = new ClaimsIdentity(claims, nameof(SimpleAuthenticationHandler));\n        var ticket = new AuthenticationTicket(new ClaimsPrincipal(identity), this.Scheme.Name);\n        return Task.FromResult(AuthenticateResult.Success(ticket));\n    }\n}\n\npublic class SimpleAuthenticationOptions : AuthenticationSchemeOptions { }\n\npublic class ChiefRequirement : IAuthorizationRequirement { }\n\npublic class ChiefHandler : AuthorizationHandler\u003cChiefRequirement\u003e\n{\n    protected override async Task HandleRequirementAsync(AuthorizationHandlerContext context, ChiefRequirement requirement)\n    {\n        await Task.Yield();\n\n        if (context.Resource is not HttpContext httpContext)\n        {\n            return;\n        }\n\n        // parse employeeId from current url string:\n        int employeeId = 12;\n\n        // parse actorId from claims\n        int actorId = 45;\n\n        // check that actor is chief from Employee\n        bool isChief = true;\n\n        if (isChief)\n        {\n            context.Succeed(requirement);\n            return;\n        }\n    }\n}\n```\n\nI woudl like to have a hybrid policy builder to handle requirements as `OR` operation. This means that the `AuthorizationHandlerContext` successed when any of the requirements are satisfied, not necessarily both together.",
                                           "updatedAt":  "2025-03-14T18:06:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86id1HS",
                                           "createdAt":  "2025-03-14T20:54:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "voroninp",
                                           "body":  "We designed a workaround with a set of custom [I AuthorizationRequirementData](https://learn.microsoft.com/en-us/aspnet/core/security/authorization/iard?view=aspnetcore-9.0): `CanExecuteXyz`\n\nEach `Role` has a set of allowed `Actions`.\n\nWe additionally defined `Features` — named collections of available actions which are assigned to the Tenant.\n\nWhen we receive a request, the sequence is the following:\n- Authenticate the user.\n- Resolve the tenant.\n- Fetch all Features enabled for the tenant.\n-Create a union of all available actions listed in Features.\n- Fetch user roles.\n- Create a union of all the actions allowed for the roles.\n- Intersect the set of available actions with the set of allowed actions. This is an effective set of actions user can execute.\n\nAuthorization:\n- Check action `Xyz` is contained in the set.\n\nOf course it\u0027s still a kind of role-based authorization, and it\u0027s hard to mix it with resource-based authorization not speaking of relationship-based authorization.\n\nBut for us it\u0027s okeish.",
                                           "updatedAt":  "2025-03-14T20:54:28Z"
                                       }
                                   ],
                         "totalCount":  8
                     },
        "title":  "Allow combining authorization policies in Authorize attribute same way how it works with roles.",
        "labels":  [
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/27220",
        "createdAt":  "2020-10-26T20:30:03Z",
        "number":  27220,
        "author":  "sebastienros",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODDRtug==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "gulshan",
                                            "createdAt":  "2020-10-27T06:49:30Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "3k4rD",
                                            "createdAt":  "2020-10-27T09:37:51Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "KrzysztofBranicki",
                                            "createdAt":  "2020-10-28T18:22:22Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "juho-hanhimaki",
                                            "createdAt":  "2020-10-29T06:21:56Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Rookian",
                                            "createdAt":  "2020-12-09T16:17:11Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "SbiCA",
                                            "createdAt":  "2021-02-05T16:10:47Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Zerotask",
                                            "createdAt":  "2021-03-11T20:21:52Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "StasPerekrestov",
                                            "createdAt":  "2021-03-14T22:54:33Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "lofcz",
                                            "createdAt":  "2021-03-16T14:14:00Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "MessyFork",
                                            "createdAt":  "2021-03-17T04:25:54Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "DanielRBowen",
                                            "createdAt":  "2021-04-14T20:17:57Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "rogihee",
                                            "createdAt":  "2021-06-03T22:47:39Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "AslanAmca",
                                            "createdAt":  "2021-08-05T12:11:09Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "koheatel",
                                            "createdAt":  "2021-10-21T10:53:58Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Julien-Marpault",
                                            "createdAt":  "2021-11-16T11:04:33Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Daniel-Svensson",
                                            "createdAt":  "2022-12-08T17:22:57Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "MrSmoke",
                                            "createdAt":  "2023-04-27T11:48:03Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "alxgda",
                                            "createdAt":  "2024-04-01T15:43:08Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Kaayo",
                                            "createdAt":  "2024-11-22T17:10:57Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Trivivium",
                                            "createdAt":  "2024-12-11T20:13:03Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "akeijzer11",
                                            "createdAt":  "2025-06-04T17:40:50Z"
                                        }
                                    ],
                          "totalCount":  21
                      },
        "updatedAt":  "2025-08-22T18:00:45Z",
        "body":  "- [x] Add cert support to http client load client\r\n- [x] Add baseline scenarios for cert/jwt\r\n- [x] Add reporting/charts for cert/jwt\r\n- [x] Add competitive scenarios for cert/jwt for comparison\r\n- [ ] Figure out what the target improvements/goals are\r\n- [ ] Investigate traces and improve performance\r\n- [x] Add scenario using https://github.com/uruk-project/Jwt/ as comparison\r\n- [ ] Add baseline for cookie auth\r\n- [x] Improve JwtSecurityTokenHandler.ValidateToken perf (locking?)\r\n- [ ] Consider adding some form of caching invalid/expired certs\r\n\r\nImprove performance characteristics of authentication middleware.\r\n\r\nAreas of interest:\r\n\r\n- JWT\r\n- Certificate based authentication\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOMGeokA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcxODIzMDM3OQ==",
                                           "createdAt":  "2020-10-28T21:53:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "- Cookie authentication",
                                           "updatedAt":  "2020-10-28T21:53:09Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0MDEwMTUwNw==",
                                           "createdAt":  "2020-12-07T18:36:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "@sebastienros what\u0027s the best way for me to started on this issue, I\u0027m assuming add some baseline scenario tests to get initial numbers and profiles?",
                                           "updatedAt":  "2020-12-07T18:36:26Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0MTI0Njg0Nw==",
                                           "createdAt":  "2020-12-08T23:43:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Adding table for tracking some initial numbers (using existing mvc product crud APIs):\r\n\r\n| Scenario | request/second | % |\r\n| ------------- | ------------- | ------------- |\r\n|Jwt bombadier Baseline (Auth/JwtAuth = false) |97,840| 0% |\r\n|UseAuthN/AuthZ (no app usage) | 93,830 | -4% |\r\n|UseAuthN/AuthZ (with allow anon) | 88,658 | -9.5% |\r\n|UseAuthN/AuthZ (send jwt + default scheme + no valid audience/issuer) | 41,133 | -58% |\r\n|UseAuthN/AuthZ (send jwt + default scheme + valid audience/issuer) | 48,447 | -50.5% |\r\n|UseAuthN/AuthZ (custom jwtwebtoken handler send jwt + default scheme + valid audience/issuer) | 66,035 | -32.5% |\r\n|UseAuthN/AuthZ (with 6.8.0 handler send jwt + default scheme + valid audience/issuer) | 54,189 | -44.6% |\r\n|Cert http client Baseline(Auth/CertAuth = false) |71,668 | 0% |\r\n|UseAuthN/AuthZ (with expired cert, https, ssl required, cert cache miss, cert forwarding) | 13,085 | -81.7% |\r\n|UseAuthN/AuthZ (with expired cert, https, ssl required, cert cache miss, no cert forwarding) | 13,337 | -81.4% |\r\n|UseAuthN/AuthZ (with expired cert, https, ssl required, cert cache hit with removed expiry check, no cert forwarding) | 58,960 | -17.8% |\r\n\r\n\r\n",
                                           "updatedAt":  "2021-02-18T17:12:12Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0MjAzMTY5NA==",
                                           "createdAt":  "2020-12-09T20:33:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Just sending an authorization bearer header with jwtbearer authentication as the default scheme results in a drop to 41,133 requests/second so a -58% hit",
                                           "updatedAt":  "2020-12-09T20:33:20Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc3MTA5Mzc5MA==",
                                           "createdAt":  "2021-02-01T19:17:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBg9XhQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "winzig",
                                                                               "createdAt":  "2021-02-01T19:27:57Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "MessyFork",
                                                                               "createdAt":  "2021-02-22T23:04:16Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "sebastienros",
                                           "body":  "Status: @HaoK has started looking at traces",
                                           "updatedAt":  "2021-02-01T19:17:39Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc3MzY4NTU2MQ==",
                                           "createdAt":  "2021-02-05T00:06:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBfDyRw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "SbiCA",
                                                                               "createdAt":  "2021-02-05T16:10:41Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Next steps following sync up:\r\n\r\nJwt\r\n- Focus on micro benchmark of JwtSecurityToken.ValidateToken\r\n\r\nCert\r\n- Look into why cert caching is not working\r\n- Try ARR-Header to avoid ssl\r\n\r\nCookies\r\n- Add baseline scenario for traces\r\n\r\nAlso remove MVC from the scenarios to reduce clutter",
                                           "updatedAt":  "2021-02-05T00:06:27Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc3NDIwNjQ4MA==",
                                           "createdAt":  "2021-02-05T18:25:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "@brentschmaltz @jmprieur just giving you guys a heads up that I\u0027m going to be playing a bit around and looking at micro benchmarking JwtSecurityToken.ValidateToken since it seems to be a hot path in our current perf benchmarks.  If you\u0027ve done any work in this area already, or if there\u0027s any preferred way you\u0027d like us to collaborate on perf improvements here, please let us know",
                                           "updatedAt":  "2021-02-05T18:25:52Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc3NDM1OTM3OA==",
                                           "createdAt":  "2021-02-06T00:29:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Starting profile using VS of ValidateToken of our current jwt token in a loop 100x\r\n\r\n![image](https://user-images.githubusercontent.com/6537861/107097658-5a3a0400-67c2-11eb-97ca-e42a042dd8e8.png)\r\n\r\nAnd starting BenchmarkDotNumber numbers for ValidateToken\r\n\r\n|   Method |     Mean |    Error |   StdDev |  Gen 0 | Gen 1 | Gen 2 | Allocated |\r\n|--------- |---------:|---------:|---------:|-------:|------:|------:|----------:|\r\n| Validate | 25.54 us | 34.87 us | 1.912 us | 4.5776 |     - |     - |  18.73 KB |\r\n",
                                           "updatedAt":  "2021-02-06T00:29:49Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc4MTUwMTI5NA==",
                                           "createdAt":  "2021-02-18T17:16:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB-nNaA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "MessyFork",
                                                                               "createdAt":  "2021-02-22T22:49:52Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "StasPerekrestov",
                                                                               "createdAt":  "2021-03-14T22:57:35Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "martincostello",
                                                                               "createdAt":  "2021-03-30T20:31:36Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "loic-sharma",
                                                                               "createdAt":  "2021-10-17T17:42:52Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  4
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Updates:\r\n- Jwt: Moving to the 6.8 packages should take Jwt perf from -51%(48k) to -45% by eliminating locking (54k rps)\r\n- Jwt: Using a simple custom auth handler implementation of JsonWebToken 3rd party package for comp (66k rps)\r\n- Cert: Removing the expired cert check in the cache code, shows that cert cache hits go from -81% to -17% compared to baseline (no auth)\r\n",
                                           "updatedAt":  "2021-02-18T17:16:55Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc4Mzc0NDA4Mw==",
                                           "createdAt":  "2021-02-22T23:10:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MessyFork",
                                           "body":  "Is there any chance of using AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet#1365 ? I remember seeing claims of massive speed improvements from moving to the new class. ",
                                           "updatedAt":  "2021-02-23T22:32:58Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgxMjA4OTA5Mg==",
                                           "createdAt":  "2021-04-01T18:24:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Updated perf view removing MVC with the new 6.8 packages:\r\n\r\nJWT\r\n![image](https://user-images.githubusercontent.com/6537861/113337522-b447d900-92dc-11eb-82fe-c0b01b9c03cb.png)\r\n",
                                           "updatedAt":  "2021-04-01T18:24:22Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgxMjA5OTcyOA==",
                                           "createdAt":  "2021-04-01T18:43:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBl9kAg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "StasPerekrestov",
                                                                               "createdAt":  "2021-04-05T12:07:11Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Cert perf with no mvc and a valid cert and validation cache hit, basically don\u0027t see cert auth at all in the profile now\r\n\r\n![image](https://user-images.githubusercontent.com/6537861/113339557-7e582400-92df-11eb-9e31-dcbced80f4ec.png)\r\n",
                                           "updatedAt":  "2021-04-01T18:44:32Z"
                                       }
                                   ],
                         "totalCount":  12
                     },
        "title":  "[Performance] Authentication middleware",
        "labels":  [
                       "Perf",
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/27527",
        "createdAt":  "2020-11-04T19:09:42Z",
        "number":  27527,
        "author":  "mkArtakMSFT",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-11-17T22:42:14Z",
        "body":  "\u003c!--\r\nThis template is useful to build consensus about whether work should be done, and if so, the high-level shape of how it should be approached. Use this before fixating on a particular implementation.\r\n--\u003e\r\n\r\n## Summary\r\n\r\nWe\u0027ve seen some feedback indicating that Kerberos auth is not usable in some E2E scenarios (@Tratcher can you please clarify this as none of the attendees of the meeting have context about this).\r\nThis issue tracks the work to identify all those experiences and later decide which ones we would like to address in 6.0 timeframe.\r\n\r\n@blowdart thinks that this may be related to authentication delegation to SQL.\r\n\r\n### People with more context\r\n@Tratcher, @JunTaoLuo\r\n\r\n## Motivation and goals\r\n\r\nThe initial 3.x Negotiate handler provided only minimal functionality on linux. In 5.0 @JunTaoLuo did work to expand that to include roles. However, none of the partners have been able to validate the new 5.0 features yet, so we\u0027re still expecting feedback that we may need to address.\r\n\r\nWe\u0027re also still waiting for a proper Negotiate API from the runtime. We\u0027ve been using reflection since 3.x. https://github.com/dotnet/runtime/issues/29270\r\n\r\nThere have also been asks about delegating to SQL cross platform.\r\n\r\n## In scope\r\n\r\nA list of major scenarios, perhaps in priority order.\r\n\r\n## Out of scope\r\n\r\nScenarios you explicitly want to exclude.\r\n\r\n## Risks / unknowns\r\n\r\nHow might developers misinterpret/misuse this? How might implementing it restrict us from other enhancements in the future? Also list any perf/security/correctness concerns.\r\n\r\n## Examples\r\n\r\nGive brief examples of possible developer experiences (e.g., code they would write).\r\n\r\nDon\u0027t be deeply concerned with how it would be implemented yet. Your examples could even be from other technology stacks.\r\n\r\n\u003c!--\r\n# Detailed design\r\n\r\nIt\u0027s often best not to fill this out until you get basic consensus about the above. When you do, consider adding an implementation proposal with the following headings:\r\n\r\nDetailed design\r\nDrawbacks\r\nConsidered alternatives\r\nOpen questions\r\nReferences\r\n\r\nIf there\u0027s one clear design you have consensus on, you could do that directly in a PR.\r\n--\u003e\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOTqL24Q==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyMTkxOTU0Mw==",
                                           "createdAt":  "2020-11-04T19:09:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\nWe\u0027re moving this issue to the `Next sprint planning` milestone for future evaluation / consideration. We will evaluate the request when we are planning the work for the next milestone. To learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2020-11-04T19:09:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Oj-D2",
                                           "createdAt":  "2022-11-17T04:29:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCvzUcw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "mkArtakMSFT",
                                                                               "createdAt":  "2022-11-17T22:41:37Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "adityamandaleeka",
                                           "body":  "@blowdart Looks like this hasn\u0027t been addressed for a couple of years. Is this something we want to invest in for 8 or should we just close it?",
                                           "updatedAt":  "2022-11-17T04:29:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85OovZf",
                                           "createdAt":  "2022-11-17T22:41:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2022-11-17T22:41:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Oovbh",
                                           "createdAt":  "2022-11-17T22:41:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mkArtakMSFT",
                                           "body":  "Moving to `Backlog` until the decision is made.",
                                           "updatedAt":  "2022-11-17T22:42:14Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "Improve Kerberos-based auth experience",
        "labels":  [
                       "enhancement",
                       "area-auth",
                       "design-proposal",
                       "Theme: meeting developer expectations"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/27968",
        "createdAt":  "2020-11-18T23:30:16Z",
        "number":  27968,
        "author":  "ramon-garcia",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-12-27T14:24:17Z",
        "body":  "When using LDAP under Linux, so that one can have group membership in negotiate authentication, the connection to the LDAP server (domain controller) fails with error  \"connection reset by peer\".\r\n\r\nThe reason is that the connection to the LDAP server is made when the server application starts up. But if the connection is idle, it is closed. Thus the error when an query is made.\r\n\r\nEither the connection should be retried after receiving ECONNRESET error, or tcp keepalive should be enabled.\r\n\r\nIn addition, the connection is unencrypted, therefore ldap user and password are sent in cleartext. It should be possible to enable TLS in LdapSettings.\r\n\r\nOf course, the right thing to do would be to parse the group membership data from the Kerberos ticket.\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOMh4coQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDczMDQxNTIzMg==",
                                           "createdAt":  "2020-11-19T14:34:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "LDAP being unencrypted under Linux may not be implemented yet\r\n\r\nThe group membership in the ticket may not enough for us to build a complete identity, hence having to run off to the ldap server to get groups, but is should be working. A follow up from the devs will come.",
                                           "updatedAt":  "2020-11-19T15:23:07Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDczMDQ3NjIyOQ==",
                                           "createdAt":  "2020-11-19T16:07:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "\u003e Of course, the right thing to do would be to parse the group membership data from the Kerberos ticket.\r\n\r\nThe APIs we use don\u0027t give us access to the raw kerberos ticket or role data, and the ticket doesn\u0027t always contain the roles. Hence the LDAP lookup.",
                                           "updatedAt":  "2020-11-19T16:07:56Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDczNDY5OTU3Mg==",
                                           "createdAt":  "2020-11-27T07:58:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ramon-garcia",
                                           "body":  "\u003e \u003e Of course, the right thing to do would be to parse the group membership data from the Kerberos ticket.\r\n\u003e \r\n\u003e The APIs we use don\u0027t give us access to the raw kerberos ticket or role data, and the ticket doesn\u0027t always contain the roles. Hence the LDAP lookup.\r\n\r\nYes we can have access to the PAC authorization data, with the function gss_get_name_attribute with attribute name \"urn:mspac:\". For instance, the [Samba code does that](https://git.samba.org/?p=samba.git;a=blob;f=auth/kerberos/gssapi_pac.c).\r\n\r\nThis is the solution with MIT Kerberos. (Heimdal Kerberos is better at many things, and had integrated PAC support earlier, but for now let us stay focused in solving the issue)\r\n\r\n\r\n\r\n",
                                           "updatedAt":  "2020-11-27T07:58:51Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc1MTcyODM4OA==",
                                           "createdAt":  "2020-12-28T14:22:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "As @Tratcher said the APIs available to ASP Net don\u0027t get access to the raw ticket, or the PAC data, so we can\u0027t parse it. So, that is not an option for us.",
                                           "updatedAt":  "2020-12-28T14:22:39Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc1NjQyODU5NQ==",
                                           "createdAt":  "2021-01-07T22:33:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "JunTaoLuo",
                                           "body":  "Need to keep an eye out on https://github.com/dotnet/runtime/issues/43890.",
                                           "updatedAt":  "2021-01-07T22:33:20Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg0MDgzNDIwOQ==",
                                           "createdAt":  "2021-05-13T21:05:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2021-05-13T21:05:56Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "LDAP support in negotiate authentication fails with \"connection reset by peer\"",
        "labels":  [
                       "bug",
                       "blocked",
                       "area-auth",
                       "affected-few",
                       "severity-major"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/28880",
        "createdAt":  "2020-12-28T14:54:18Z",
        "number":  28880,
        "author":  "SebastianStehle",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-02-19T16:52:39Z",
        "body":  "### Describe the bug\r\nWhen using `AddIdentityServerJwt` the IssuerURL seems to be derived from the actual request. The option management hooks into the events and enriches the options with the host name from the request:\r\n\r\nhttps://github.com/dotnet/aspnetcore/blob/b795ac3546eb3e2f47a01a64feb3020794ca33bb/src/Identity/ApiAuthorization.IdentityServer/src/Authentication/IdentityServerJwtBearerOptionsConfiguration.cs#L63\r\n\r\nWhen the first request that comes in is not the public host name, the options is enriched with the wrong host and all subsequent calls to authorize fail because the issuer URL does not match.\r\n\r\nConsider a scenario where you have a health check running. The health service uses the internal IP (e.g. in kubernetes) to call the health endpoint and the issuer URL is configured with the IP address.\r\n\r\n### To Reproduce\r\n1. Create a new SPA sample (dotnet new react -au Individual)\r\n2. Login\r\n3. Restart the server\r\n4. Go to https://127.0.0.1:5001 before you go to any other URL\r\n5. Go to https://localhost:5001 and press fetch data\r\n\r\nThe result in Chrome:\r\n\r\n```\r\nBearer error=\"invalid_token\", error_description=\"The issuer \u0027https://localhost:5001\u0027 is invalid\"\r\n```\r\n\r\n### Further technical details\r\n- ASP.NET Core version 5\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHONvWoSQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc1MTc1OTAyMQ==",
                                           "createdAt":  "2020-12-28T15:49:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBbCA4Q==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "SebastianStehle",
                                                                               "createdAt":  "2020-12-28T16:12:07Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "mkArtakMSFT",
                                           "body":  "Thanks for contacting us, @SebastianStehle.\r\nDue to the holiday season please expect some delays in our responses.\r\n@HaoK can you please investigate this when you\u0027re back? Thanks!",
                                           "updatedAt":  "2020-12-28T15:49:28Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc1MTc1OTE3MA==",
                                           "createdAt":  "2020-12-28T15:49:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\nWe\u0027re moving this issue to the `Next sprint planning` milestone for future evaluation / consideration. We will evaluate the request when we are planning the work for the next milestone. To learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2020-12-28T15:49:46Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc1MTkxNTcxMQ==",
                                           "createdAt":  "2020-12-29T01:34:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "This is by design and matches what identity server itself does.\r\n\r\nIf you have multiple host names you must select an canonical one by setting the Authority on the actual underlying identity server options.\r\n\r\n```c#\r\n            services.AddIdentityServer(options =\u003e options.IssuerUri = \"https://localhost\")\r\n                .AddApiAuthorization\u003cApplicationUser, ApplicationDbContext\u003e();\r\n```\r\n\r\nThe JWT pieces should then use the identity server metadata to resolve the issuer.\r\n\r\nHowever what I\u0027m seeing at that point is that the URL in the template for the metadata is wrong, and doesn\u0027t have the port number. As I\u0027m not a react person, I can\u0027t help further, but it feels more like a template issue that identity itself.",
                                           "updatedAt":  "2020-12-29T01:34:34Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc1MTk5ODI2Mg==",
                                           "createdAt":  "2020-12-29T08:45:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SebastianStehle",
                                           "body":  "Thank your @blowdart for your answer. I also solved the problem with IssuerUri before writing this bug report.\r\n\r\nI think it is a very weird behavior. It first happened to me, when I had no health check at all, so I was not using a second host by purpose. So you actually make your server unusable by accident and it took my days to figure out what the problem is. If you think the behavior is okay there should be at least a warning. e.g. a Middleware that writes all the hosts to a hashset and logs a warning if 2 or more hosts are received.\r\n\r\nI had a similar problem a while ago in another project: https://github.com/squidex/squidex. A java client of a customer was using a library that always added the port number to the host header. So instead of adding `host: cloud.squidex.io` this client has added `host: cloud.squidex.io:443`. Then the customer also got an issuer URL error and I had to integrate a workaround for this customer: https://github.com/Squidex/squidex/blob/master/backend/src/Squidex.Web/Pipeline/CleanupHostMiddleware.cs. In this scenario here one customer could accidentally make the whole application unusable.\r\n\r\nIf I check my logs I see a lot of requests to paths like `/setup.php` or `/install.php` and so on. Websites seem to be under constant attack these days. And with this behavior some attacker could bring your system down (or make it unusable) by pure luck.",
                                           "updatedAt":  "2020-12-29T08:50:41Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc1MjA5Nzk2Mg==",
                                           "createdAt":  "2020-12-29T14:32:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "To be fair this isn\u0027t us, this is Identity Server\u0027s behaviour, we\u0027re just not overriding it. Whilst I can\u0027t speak for Dom \u0026 Brock, when we make decisions like this, it\u0027s because customers want an f5 experience, where you can run a project immediately without having to think about configuration. \r\n\r\nAs for bringing hosts down, I\u0027d say maybe, but again it\u0027s something to take up with the identity server folks. We tend to lean towards saying not to listen on * and not to bind to IP addresses, but rather host names, and once you\u0027re thinking about host names, you tend to start thinking about configuration of everything more. Hopefully :)",
                                           "updatedAt":  "2020-12-29T14:32:19Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc1MjEyMjAzNA==",
                                           "createdAt":  "2020-12-29T15:28:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SebastianStehle",
                                           "body":  "I don\u0027t see that this is a identity server behavior. The problem is the \"caching\" and that the options property is changed. If you would always use the `HttpContext.GetIdentityServerIssuerUri()` for each request, if not specified otherwise, the problem would not exist. I had a look to the source code and I actually do not see that much identity server code at all. You just use identity server to copy over some values like the signing key and the issuer URL, but that\u0027s it.\r\n\r\nYou need to hook into this place: https://github.com/dotnet/aspnetcore/blob/b795ac3546eb3e2f47a01a64feb3020794ca33bb/src/Security/Authentication/JwtBearer/src/JwtBearerHandler.cs#L94 and then just change the cloned parameter.\r\n\r\nI totally agree to the host name thing, but the question is: Who handles that. There are load balancers, requests and stuff like kubernetes wo make requests and manipulate the request and especially if your software is hosted in so many crazy ways you do not have full control over everything.",
                                           "updatedAt":  "2020-12-29T15:38:25Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc2NDk0NTc3Mw==",
                                           "createdAt":  "2021-01-21T21:14:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SebastianStehle",
                                           "body":  "I still don\u0027t understand how a behavior that can bring your system down without any warning can be by design.",
                                           "updatedAt":  "2021-01-21T21:14:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde8429ahJ",
                                           "createdAt":  "2021-09-17T20:40:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Doc/release note issue filed to track this for 6.0 https://github.com/dotnet/aspnetcore/issues/36676",
                                           "updatedAt":  "2021-09-17T20:40:50Z"
                                       }
                                   ],
                         "totalCount":  8
                     },
        "title":  "AddIdentityServerJwt might accidentally use the wrong issuer URL.",
        "labels":  [
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/28948",
        "createdAt":  "2020-12-31T06:34:30Z",
        "number":  28948,
        "author":  "scharnyw",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC9_mJg==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "zhoucm666",
                                            "createdAt":  "2021-10-20T15:19:10Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ShineSmile",
                                            "createdAt":  "2021-12-29T05:44:13Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "rekhaswaminathan",
                                            "createdAt":  "2022-06-28T20:42:44Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "blastrock",
                                            "createdAt":  "2023-03-14T09:25:10Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "sbosor",
                                            "createdAt":  "2024-05-28T06:52:06Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "tamazbagdavadze",
                                            "createdAt":  "2025-01-09T08:54:18Z"
                                        }
                                    ],
                          "totalCount":  6
                      },
        "updatedAt":  "2024-05-27T17:28:44Z",
        "body":  "\u003c!--\r\n\r\nMore information on our issue management policies can be found here: https://aka.ms/aspnet/issue-policies\r\n\r\n--\u003e\r\n\r\n### Is your feature request related to a problem? Please describe.\r\nFollowing a signing key rollover, it appears that `Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler` may incorrectly report an authentication failure (which results in a 401 Unauthorized response) in `HandleAuthenticateAsync` due to a stale local cache of the signing keys.\r\n\r\n`Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler` relies on `Microsoft.IdentityModel.Protocols.IConfigurationManager\u003cOpenIdConnectConfiguration\u003e` as a cache for the signing keys when validating the signature in JWT tokens. In `HandleAuthenticateAsync()`, when authentication fails due to `SecurityTokenSignatureKeyNotFoundException` (which may legitimately occur due to key rollovers), `JwtBearerHandler` simply calls `IConfigurationManager.RequestRefresh()`, which does not refresh the signing keys immediately. Instead, it sets a timestamp which causes the configuration to be refreshed beginning with the next request. The request in question will still fail at the authentication stage. The relevant code here:\r\n\r\nhttps://github.com/dotnet/aspnetcore/blob/41eab27ef39706c5c08183c740eb0d5f3ab32df4/src/Security/Authentication/JwtBearer/src/JwtBearerHandler.cs#L124-L128\r\n\r\n### Describe the solution you\u0027d like\r\nFrom my point of view, upon encountering a `SecurityTokenSignatureKeyNotFoundException`, the signing keys should be refreshed immediately and signature validation should be attempted again with the refreshed keys, all within that same request lifetime. However, I suspect that the reason that this is not done is deliberate - as mentioned in https://github.com/dotnet/aspnetcore/issues/26504#issuecomment-702364883:\r\n\r\n\u003e This is about a request using a consistent configuration for all stages. We wouldn\u0027t want the config to change part way through or you could get inconsistent results.\r\n\r\nBut this actually results in incorrect 401 responses - the user should in fact be authenticated, and the system fails to authenticate the user purely due to some technical constraints that causes the authentication to be based on stale data. In a distributed system, this may result in a spike in 401 responses across the system when key rollover occurs - certainly a less than ideal situation.\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOfzAjhA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc1MzE0ODQ0MA==",
                                           "createdAt":  "2020-12-31T21:00:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "If we tried to refresh whenever a key was not found it would be a denial of service waiting to happen - an attacker could send multiple requests with a new, bogus signing key in each request, and then the web server would block trying to refresh the metadata to see if the key has rolled over. This obviously isn\u0027t acceptable from a security, or indeed a performance point of view.\r\n\r\nBest practice for key rollover is for the issuing server to start serving the new key in the metadata before it rolls over to give systems time to refresh, and to also publish the expired key for a little while after the roll over has happened to enable validation of tokens which have not expired and were signed with the older key. JWKS specifically supports this. ",
                                           "updatedAt":  "2020-12-31T21:00:16Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc1MzQ0NzA0OA==",
                                           "createdAt":  "2021-01-02T08:25:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "scharnyw",
                                           "body":  "@blowdart Thanks a lot for the explanation. While I agree that \r\n\r\n\u003e Best practice for key rollover is for the issuing server to start serving the new key in the metadata before it rolls over to give systems time to refresh\r\n\r\nthis often has problems in practice:\r\n\r\n1. The issuing server is not obliged to do this. It is by no means mandated by the spec and the issuing server is typically outside the control of application developers.\r\n2. It still requires that the duration the issuing server pre-serves the new keys (duration in which the new keys are published in metadata, but no token signed with the new key is issued) should be longer than the `AutomaticRefreshInterval` of `ConfigurationManager`. Only then will it be guaranteed that the new keys can reach the local cache of all applications before tokens signed with the new keys are issued and used. The duration that issuing server pre-serves new keys (and also the rollover frequency) are often neither predictable nor made known to consumers.\r\n\r\nSince `ConfigurationManager` already enforces some minimum time span (default is 30s) that must elapse before configurations can be refreshed, would it be sufficient in most cases to protect against DoS? If so, I imagine the ability to refresh configuration upon key-not-found could be an explicit opt-in that consumers can choose if they understand the risks involved?",
                                           "updatedAt":  "2021-01-02T08:29:38Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc1NDQ3OTgxMw==",
                                           "createdAt":  "2021-01-05T08:14:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODWiljQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "danyltsiv",
                                                                               "createdAt":  "2024-02-13T09:57:27Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "wangyingmm",
                                           "body":  "\u003e If we tried to refresh whenever a key was not found it would be a denial of service waiting to happen - an attacker could send multiple requests with a new, bogus signing key in each request, and then the web server would block trying to refresh the metadata to see if the key has rolled over. This obviously isn\u0027t acceptable from a security, or indeed a performance point of view.\r\n\r\n@blowdart Looking at the code for JwtBearerHandler below, if an attacker sent multiple requests with a new, bogus signing key in each request, Options.ConfigurationManager.RequestRefresh() is called each time anyway. it just doesn\u0027t do validation after refresh. if calling RequestRefresh() could lead to a DoS, it still happens.\r\n\r\n`try\r\n                        {\r\n                            principal = validator.ValidateToken(token, validationParameters, out validatedToken);\r\n                        }\r\n                        catch (Exception ex)\r\n                        {\r\n                            Logger.TokenValidationFailed(ex);\r\n\r\n                            // Refresh the configuration for exceptions that may be caused by key rollovers. The user can also request a refresh in the event.\r\n                            if (Options.RefreshOnIssuerKeyNotFound \u0026\u0026 Options.ConfigurationManager != null\r\n                                \u0026\u0026 ex is SecurityTokenSignatureKeyNotFoundException)\r\n                            {\r\n                                Options.ConfigurationManager.RequestRefresh();\r\n                            }\r\n\r\n                            if (validationFailures == null)\r\n                            {\r\n                                validationFailures = new List\u003cException\u003e(1);\r\n                            }\r\n                            validationFailures.Add(ex);\r\n                            continue;\r\n                        }`",
                                           "updatedAt":  "2021-01-05T08:18:48Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc1NjQxODA4OA==",
                                           "createdAt":  "2021-01-07T22:09:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\nWe\u0027re moving this issue to the `Next sprint planning` milestone for future evaluation / consideration. We will evaluate the request when we are planning the work for the next milestone. To learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2021-01-07T22:09:04Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc1NjQxODY3Mw==",
                                           "createdAt":  "2021-01-07T22:10:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "OK, we\u0027re going to have a think about this. There are interesting edge cases around having two jwt middlewares, and the majority of the metadata pieces are owned by an external team. \r\n\r\nUnfortunately right now there\u0027s no mitigation for you, this will be a redesign of how the JWT middleware works ",
                                           "updatedAt":  "2021-01-07T22:10:34Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc1NjQ5NTUzOA==",
                                           "createdAt":  "2021-01-08T01:49:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "scharnyw",
                                           "body":  "@blowdart  Thanks for the update. For now, we will just set `AutomaticRefreshInterval` to a sufficiently low value to mitigate this issue.",
                                           "updatedAt":  "2021-01-08T01:51:10Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc1NjUwOTc2NA==",
                                           "createdAt":  "2021-01-08T02:40:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "We\u0027ll start brainstorming soon and keep the thread updated.",
                                           "updatedAt":  "2021-01-08T02:40:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde840wfu_",
                                           "createdAt":  "2021-07-22T18:11:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2021-07-22T18:11:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Aa9lD",
                                           "createdAt":  "2022-03-28T15:39:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Xriuk",
                                           "body":  "No updates on this?\r\nI came across this issue too, I have 2 JwtBearers, each with it\u0027s own settings, I use one for regular tokens, and the other one for refresh tokens, if I try to authenticate with the regular token and it\u0027s expired I get a 401, so I try to authenticate with the refresh token and it gives me a 401 too (but the token is not expired), with the error \"The signature key was not found\", which is caused by the exception mentioned here.\r\nSetting the `AutomaticRefreshInterval` configuration to a millisecond or so solves the issue...",
                                           "updatedAt":  "2022-03-28T15:39:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85YEKZ5",
                                           "createdAt":  "2023-03-21T09:07:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "RobinVangampelaere",
                                           "body":  "Any updates on this problem? Still having the same issue and setting the `AutomaticRefreshInterval` configuration to a millisecond is not a healthy solution for our infrastructure.",
                                           "updatedAt":  "2023-03-21T09:07:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85s_KcM",
                                           "createdAt":  "2023-11-27T19:48:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mariogit08",
                                           "body":  "In fact it is refreshing the key after a key rollover happens. It just take longer if the JWKS change more the once in a short amount of time.",
                                           "updatedAt":  "2023-11-27T19:48:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde850scOh",
                                           "createdAt":  "2024-02-21T20:02:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brentschmaltz",
                                           "body":  "IsOptions.RefreshOnIssuerKeyNotFound set to true?",
                                           "updatedAt":  "2024-02-21T20:02:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde850sc95",
                                           "createdAt":  "2024-02-21T20:03:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brentschmaltz",
                                           "body":  "@Xriuk setting refresh interval to a millisec is as @RobinVangampelaere mentioned open you up to a large number of http requests.",
                                           "updatedAt":  "2024-02-21T20:03:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85_MCOE",
                                           "createdAt":  "2024-05-27T17:26:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEBoyGg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "sbosor",
                                                                               "createdAt":  "2024-05-28T06:52:38Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "tamazbagdavadze",
                                                                               "createdAt":  "2025-01-09T08:54:25Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "WisemanIka",
                                                                               "createdAt":  "2025-01-09T09:25:24Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "sevensolutions",
                                           "body":  "Any update here in 2024?\r\nI\u0027am facing the same problem using the OIDC middleware.",
                                           "updatedAt":  "2024-05-27T17:28:44Z"
                                       }
                                   ],
                         "totalCount":  14
                     },
        "title":  "Stale signing key cache results in 401 response during key rollover in JwtBearerHandler",
        "labels":  [
                       "Needs: Design",
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/31959",
        "createdAt":  "2021-04-20T00:20:47Z",
        "number":  31959,
        "author":  "filimonic",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOBpkB5A==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "gozhang2",
                                            "createdAt":  "2021-05-04T18:18:08Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2021-07-14T23:11:18Z",
        "body":  "ActiveDirectory (Windows) specific claims should be added when using Negotiate Kerberos auth under Linux implementation.\r\n```\r\nprimarysid\r\nprimarygroupsid\r\ngroupsid\r\ndenyonlysid\r\n```\r\n\r\nUnder Linux, claims described above are currently received using LDAP. \r\nKerberos has mechanisms to avoid any additional queries to get group SIDs and user SIDs.\r\nHowever, currently under Linux the only claim receivced without using LDAP is `name` claim.\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHONHfW-w==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgyOTU5NzEzMA==",
                                           "createdAt":  "2021-04-29T21:07:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "Linking these two together for Jun to investigate https://github.com/dotnet/aspnetcore/issues/32037",
                                           "updatedAt":  "2021-04-29T21:07:50Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgyOTU5NzI5MA==",
                                           "createdAt":  "2021-04-29T21:08:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `Next sprint planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2021-04-29T21:08:07Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzMjE0OTMyNQ==",
                                           "createdAt":  "2021-05-04T18:23:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBp6lVQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "filimonic",
                                                                               "createdAt":  "2021-05-06T22:36:42Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "gozhang2",
                                           "body":  "+1 on this request, I am using the Negotiate library in a linux setup as well but by default there is only the `name` claim available, we have to make additional LDAP query to get the `primarysid` claim. \r\n\r\nBTW can you please share how the `name` claim is formed? Based on my experiment it is `\u003csAMAccountName\u003e@\u003cdomain\u003e`, is this correct? \r\n\r\nYour help is much appreciated!",
                                           "updatedAt":  "2021-05-04T18:23:58Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzMzkyNjUxNQ==",
                                           "createdAt":  "2021-05-06T22:51:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBp6r_g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "gozhang2",
                                                                               "createdAt":  "2021-05-06T22:57:36Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "JunTaoLuo",
                                           "body":  "Yes that is the format we expect for `name`.",
                                           "updatedAt":  "2021-05-06T22:51:38Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg4MDI2OTA1MQ==",
                                           "createdAt":  "2021-07-14T23:11:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2021-07-14T23:11:11Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "[FR] [Kerberos] [Linux] Add SID Claims under Linux when using kerberos auth.",
        "labels":  [
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/32037",
        "createdAt":  "2021-04-21T21:29:07Z",
        "number":  32037,
        "author":  "filimonic",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-07-14T23:10:06Z",
        "body":  "### Describe the bug\r\nIn internal class `Microsoft.AspNetCore.Authentication.Negotiate.LdapAdapter`, `SearchRequest`s are constructed using `attributeList: null`, which means _query for all available attributes_. \r\n\r\n`LdapAdapter` should query only for attributes it requires (`memberOf` and, possibly, `distinguishedName`).\r\n\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHONHfVAA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgyOTU5NTkxNA==",
                                           "createdAt":  "2021-04-29T21:05:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `Next sprint planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2021-04-29T21:05:51Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg4MDI2ODU0NA==",
                                           "createdAt":  "2021-07-14T23:09:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2021-07-14T23:09:57Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Negotiate\\LdapAdapter.cs should query only for required LDAP attributes instead of all available.",
        "labels":  [
                       "Needs: Design",
                       "enhancement",
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/32734",
        "createdAt":  "2021-05-15T13:02:11Z",
        "number":  32734,
        "author":  "marknadig",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-10-28T14:08:36Z",
        "body":  "Instructions on how to run the samples are very sparse, and after trying a few things I never could. I had cloned the entire aspnetcore repo and tried to run and example from src\\Security\\samples:\r\n`dotnet run --project DynamicSchemes`\r\n\r\nthat build failed due to missing nuget packages. had to\r\n`dotnet restore ..\\..\\eng\\tools\\RepoTasks`\r\n\r\nNow build just fails\r\n`C:\\Program Files\\dotnet\\sdk\\5.0.202\\Microsoft.Common.CurrentVersion.targets(4919,5): error MSB3030: Could not copy the file \"C:\\Development\\aspnetcore\\artifacts\\bin\\InProcessRequestHandler\\Win32\\Debug\\aspnetcorev2_inprocess.dll\" because it was not found. [C:\\Development\\aspnetcore\\src\\Servers\\IIS\\IIS\\src\\Microsoft.AspNetCore.Server.IIS.csproj]\r\n`\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: 82950389-524e-0754-a125-addeccbdb1b3\r\n* Version Independent ID: 80b7f7cf-dc2e-137a-5aa7-fa88da63ac80\r\n* Content: [Authentication samples for ASP.NET Core](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/samples?view=aspnetcore-5.0)\r\n* Content Source: [aspnetcore/security/authentication/samples.md](https://github.com/dotnet/AspNetCore.Docs/blob/main/aspnetcore/security/authentication/samples.md)\r\n* Product: **aspnet-core**\r\n* Technology: **aspnetcore-security**\r\n* GitHub Login: @Rick-Anderson\r\n* Microsoft Alias: **riande**",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOMum8QA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg0NTQzOTAzOA==",
                                           "createdAt":  "2021-05-20T20:02:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "I don\u0027t believe that issue is specific to our samples, rather engineering all up. @Tratcher whose responsibility would this be?",
                                           "updatedAt":  "2021-05-20T20:02:58Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg0NTUyNjc1NQ==",
                                           "createdAt":  "2021-05-20T22:38:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "We have these two:\r\n- https://github.com/dotnet/aspnetcore/blob/main/src/Security/README.md\r\n- https://github.com/dotnet/aspnetcore/blob/main/docs/BuildFromSource.md\r\n\r\nWe could either add another readme to the samples folder, or at least update the base Security readme to include running the samples.\r\n\r\nThat said, the instructions in https://docs.microsoft.com/en-us/aspnet/core/security/authentication/samples are misleading, you can\u0027t just dotnet run projects in our repo. For prior versions it would be easier for people to copy the samples out of the repo and remove the `Reference`\u0027s.\r\nhttps://github.com/dotnet/aspnetcore/blob/e897454413fe2103a5b3fdbaacd40472e1cabfd7/src/Security/samples/Cookies/Cookies.csproj#L8-L13\r\n",
                                           "updatedAt":  "2021-05-20T22:38:56Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1NDE3ODg4MA==",
                                           "createdAt":  "2021-06-03T21:04:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2021-06-03T21:04:49Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Better \"how to run samples\" instructions needed for Authentication samples",
        "labels":  [
                       "area-auth",
                       "help candidate"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/34560",
        "createdAt":  "2021-07-17T09:51:16Z",
        "number":  34560,
        "author":  "davidbuckleyni",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-10-19T21:56:47Z",
        "body":  "Most apis cannot do without this day and age but to add a Bearer token and swagger documentation to the structure of their web api.\r\n\r\nI think an option to be added to the new project screen for webapi. It seems very mundan code having to recreate it each time in a web api project and would create more continuity for the api to be standard.\r\n\r\n***b*File New WIndowb***\r\nProject Type: Web Api\r\n\r\nCheckbox for Swagger Docs\r\nCheckbox for  Bearer  Tokens\r\n\r\nUpon chosen this option the system should be smart enough to add the code to our header calls for httpclient\r\n\r\nIt should add the following code as default to the configure section.\r\n \r\n      services.AddSwaggerGen(c =\u003e {\r\n                c.SwaggerDoc(\"v1\", new OpenApiInfo { Title = \"Cella Crm\", Version = \"v1\" });\r\n                //   c.ResolveConflictingActions(apiDescriptions =\u003e apiDescriptions.First());\r\n                //Expose XML comments in doc.\r\n                c.AddSecurityDefinition(\"Bearer\", new OpenApiSecurityScheme\r\n                {\r\n                    Description =\r\n                        \"JWT Authorization header using the Bearer scheme. \\r\\n\\r\\n Enter \u0027Bearer\u0027 [space] and then your token in the text input below.\\r\\n\\r\\nExample: \\\"Bearer 12345abcdef\\\"\",\r\n                    Name = \"Authorization\",\r\n                    In = ParameterLocation.Header,\r\n                    Type = SecuritySchemeType.ApiKey,\r\n                    Scheme = \"Bearer\"\r\n                });\r\n                c.AddSecurityRequirement(new OpenApiSecurityRequirement\r\n                {\r\n                    {\r\n                        new OpenApiSecurityScheme\r\n                        {\r\n                            Reference = new OpenApiReference\r\n                            {\r\n                                Type = ReferenceType.SecurityScheme,\r\n                                Id = \"Bearer\"\r\n                            },\r\n                            Scheme = \"oauth2\",\r\n                            Name = \"Bearer\",\r\n                            In = ParameterLocation.Header\r\n                        },\r\n                        new List\u003cstring\u003e()\r\n                    }\r\n                });\r\n            });\r\n\r\n            services.AddAuthentication(JwtBearerDefaults.AuthenticationScheme)\r\n           .AddJwtBearer(options =\u003e {\r\n            options.TokenValidationParameters = new TokenValidationParameters\r\n            {\r\n                ValidateIssuerSigningKey = true,\r\n                IssuerSigningKey = new SymmetricSecurityKey(Encoding.ASCII.GetBytes(Configuration.GetSection(Constants.ApiSecretValue).Value)),\r\n                ValidateIssuer = false,\r\n                ValidateAudience = false\r\n            };\r\n        });\r\n\r\nAlso as I am implementing swagger we should configure it as well in the configure section.\r\n\r\n           if (env.IsDevelopment())\r\n            {\r\n                app.UseDeveloperExceptionPage();\r\n                app.UseSwagger();\r\n            }\r\nI understand that Microsoft are re doing web apis at present maybe this could all be replaced with a simple call.\r\n \r\n  webpi-\u003esetupbarrerToken() ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOaZru6Q==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde840wfpo",
                                           "createdAt":  "2021-07-22T18:10:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2021-07-22T18:10:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85pmu7p",
                                           "createdAt":  "2023-10-19T21:56:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidbuckleyni",
                                           "body":  "thus seems to be covered by what @davidfowl did for blazor ",
                                           "updatedAt":  "2023-10-19T21:56:47Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "[Spec] WebApi Project Template Add the ability to generate boiler plate code for authorization and Bearer Token ",
        "labels":  [
                       "area-auth",
                       "Tooling",
                       "feature-templates"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/34636",
        "createdAt":  "2021-07-23T05:38:21Z",
        "number":  34636,
        "author":  "robertmclaws",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOB9fxDw==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Vake93",
                                            "createdAt":  "2021-10-08T05:02:58Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2023-02-19T17:55:22Z",
        "body":  "## Background and Motivation\r\n\r\nOn AspNetCore, when you need to access the `HttpContext` in a \"service\" class, you use an `IHttpContextAccessor` to get the thread-safe instance of the `HttpContext` used by the current thread, thanks to its internal use of `AsyncLocal`.\r\n\r\nHowever, if you need to be able to access the `HttpContext.User`, AND the service class is in another assembly, you can no longer rely on `ClaimsPrincipal.Current` or `Thread.CurrentPrincipal` to get you that information. If you control the external assembly, you\u0027re now dependent on `Microsoft.AspNetCore.Http` in all of your libraries, which is unnecessary.\r\n\r\n## Proposed API\r\n\r\nThe proposal is a stand-alone class that does not affect the behavior or functionality of any existing APIs, which should make it quick to approve and get into the current release, even given the current timeframe for .NET 6\u0027s release.\r\n\r\nThe solution is to implement an identical pattern to `IHttpContextAccessor` for `IPrincipal`. This will require an Interface to be added to `System.Security`, and an `HttpContextPrincipalAccessor` in `Microsoft.AspNetCore.Http`.\r\n\r\n```diff\r\nnamespace Microsoft.AspNetCore.Authentication\r\n{\r\n    public class AuthenticationOptions\r\n    {\r\n+       bool EnableThreadCurrentPrincipal { get; set; }\r\n    }\r\n}\r\n```\r\nBecause the shipped implementation takes an `IHttpContextAccessor` in the constructor, it will pull in the thread\u0027s `HttpContext` to correctly pull the user from.\r\n\r\n## Usage Examples\r\n\r\n``` C#\r\npublic class Startup\r\n{\r\n    public void ConfigureServices(IServiceCollection services)\r\n    {\r\n        services\r\n            .AddAuthentication(options =\u003e \r\n             {\r\n                  options.EnableThreadCurrentPrincipal = true;\r\n                  options.DefaultScheme = \"Cookies\";\r\n             });\r\n    }\r\n}\r\n```\r\n\r\n## Alternative Designs\r\n\r\n- I considered making everything a `ClaimsPrincipal`, as that is the proper way to do things, but I considered that it could be a `WindowsPrincipal` instead, so `IPrincipal` is probably a better approach.\r\n- The implementation would probably do a `TryAddService()` on `IHttpContextAccessor`, just in case the user forgot to add one.\r\n\r\n## Risks\r\n\r\n- AFAIK there are no risks to the added API itself, just the timing.\r\n- The `IPrincipalAccessor` API would need to get in the .NET Core Libraries, which risks the team not wanting to add it at this stage of the game.\r\n- The AspNetCore team may decide not to add the `HttpContextPrincipalAccessor` at this stage of the game, even if the .NET Core team is cool with it.\r\n\r\nI have the requisite pull requests ready to submit if the team is OK with this.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOVZhKvQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde840xlRX",
                                           "createdAt":  "2021-07-23T05:41:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "robertmclaws",
                                           "body":  "@davidfowl @terrajobst think this might be possible to get into .NET 6.0? [We used the pattern on Restier and it worked quite well](https://github.com/OData/RESTier/blob/breakdance-net5/src/Microsoft.Restier.AspNetCore/ClaimsPrincipalAccessor.cs).",
                                           "updatedAt":  "2021-07-23T05:41:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde840xwOx",
                                           "createdAt":  "2021-07-23T07:38:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "A couple of things:\r\n- I don\u0027t think IPrincipalAccessor belongs in ASP.NET Core, there should be an [API proposal in .NET](https://github.com/dotnet/runtime) to add it and I\u0027m not 100% sure it\u0027s something that fits into the BCL.\r\n- Existing alternatives are `Thread.CurrentPrincipal` and `ClaimsPrincipal.ClaimsPrincipalSelector`. \r\n  - Maybe there could be a way to opt-into setting `Thread.CurrentPrincipal` in the auth middleware. This is something we refused to do before but maybe it could be opt in and it would give you an agnostic way to `ClaimsPrincipal.Current`. It would still be someone\u0027s job to wrap it in an interface so it\u0027s mockable I guess but I\u0027m not sure where that should live.\r\n- What other tech would set the current principal besides unit tests? Is this interface solely for testing or do you have other technology that isn\u0027t tied to ASP.NET Core that needs to provide an implementation for the interface?",
                                           "updatedAt":  "2021-07-23T07:38:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde840y_As",
                                           "createdAt":  "2021-07-23T17:11:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "terrajobst",
                                           "body":  "\u003e * I don\u0027t think IPrincipalAccessor belongs in ASP.NET Core, there should be an [API proposal in .NET](https://github.com/dotnet/runtime) to add it and I\u0027m not 100% sure it\u0027s something that fits into the BCL.\r\n\r\nMaybe, maybe not. It\u0027s similar to `ISystemClock` in the sense that it doesn\u0027t really provide any additional capabilities but allows higher-level DI concepts to use them as exchange types. Considering the interface is very simple, I\u0027m not opposed to it, so long we ship a sensible implementation too (and the implementation could reside at a higher layer, such as `Microsoft.Extensions` or ASP.NET Core).\r\n\r\n/cc @bartonjs ",
                                           "updatedAt":  "2021-07-23T17:11:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde840zDfh",
                                           "createdAt":  "2021-07-23T17:45:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bartonjs",
                                           "body":  "My general stance, in Mr. Garrison\u0027s voice, is \"interfaces are bad, mmkay?\", because of their lack of evolvability. (I\u0027m also pretty firmly in the camp that if you can\u0027t come up with a reasonable name ending in \"-able\" (or \"-ible\" for linguistic reasons) then you don\u0027t have an interface, you have an abstract class.)\r\n\r\nLike `ISystemClock`, I don\u0027t think it makes sense for the BCL... things in the BCL that need the current principal (which, ideally, would be 0) are going to use Thread.CurrentPrincipal, because the proposal really only makes sense for a DI environment, and the BCL doesn\u0027t have one.  (My recollection was that our end belief was that something like `ISystemClock` should be defined along with the DI system, so it\u0027d be in Microsoft.Extensions somewhere)\r\n\r\nDespite the name saying \"Thread\", `Thread.CurrentPrincipal` is backed by an async local (https://source.dot.net/#System.Private.CoreLib/Thread.cs,af38dde3f1bd6b93), so my personal preference would be to take @davidfowl\u0027s \"maybe\" approach (\"Maybe there could be a way to opt-into setting Thread.CurrentPrincipal in the auth middleware.\")",
                                           "updatedAt":  "2021-07-23T17:45:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde840zWk1",
                                           "createdAt":  "2021-07-23T19:48:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "robertmclaws",
                                           "body":  "Thanks for weighing in on this everyone! Totally agree with @bartonjs, I\u0027m usually vehemently against interfaces. I\u0027m glad there is some consensus on setting `ThreadPrincipal.Current`, because that\u0027s [exactly what I\u0027m doing in Restier](https://github.com/OData/RESTier/blob/breakdance-net5/src/Microsoft.Restier.AspNetCore/RestierController.cs#L694-L701), and I was worried it was the wrong approach.\r\n\r\nI avoided doing that this proposal because I assumed it was going to be some sort of SecureString-esque third rail for the team, but setting it directly in the Authorization pipeline instead of this pattern would be a *much* better approach.\r\n\r\n@davidfowl to answer your question, we use it for a lot more than just unit tests. Up until now Restier only ran on .NET Framework, and BurnRate\u0027s business logic was in a separate assembly leveraging `ClaimsPrincipal.Current` for filtering data based on claims. When we migrated BurnRate to .NET Core via Restier\u0027s new AspNetCore version, the business logic was failing due to `ClaimsPrincipal.Current` not being set. \r\n\r\nI searched for a solution but didn\u0027t find any, so I came up with this pattern to try to match what you were doing with `HttpContextAccessor`, and maintained compatibility by setting `ClaimsPrincipal.ClaimsPrincipalSelector` in Restier\u0027s pipeline.\r\n\r\n### Alternate Solution\r\nSo would we add a line under [this one in AuthenticationMiddleware.cs](https://github.com/dotnet/aspnetcore/blob/main/src/Security/Authentication/Core/src/AuthenticationMiddleware.cs#L73) that said `ClaimsPrincipal.ClaimsPrincipalSelector = () =\u003e context.User;`?",
                                           "updatedAt":  "2021-07-23T19:53:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde840zXm-",
                                           "createdAt":  "2021-07-23T19:56:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB0o2oQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "robertmclaws",
                                                                               "createdAt":  "2021-07-23T20:02:26Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "lvermeulen",
                                                                               "createdAt":  "2021-08-01T09:32:05Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "poke",
                                                                               "createdAt":  "2021-08-01T11:22:14Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "\u003e So would we add a line under this one in AuthenticationMiddleware.cs that said ClaimsPrincipal.ClaimsPrincipalSelector = () =\u003e context.User;?\r\n\r\nNo, we would set `Thread.CurrentPrincipal` there. ClaimsPrincipalSelector  uses `Thread.CurrentPrincipal` by default. This would be opt in though via a flag somewhere. Probably `AuthentictionOptions`. Another reason for the option would be the performance hit for too many async locals. The performance degrades when there are  more than 3 of them. Today we have:\r\n\r\n- HttpContextAccessor\r\n- Activity.Current\r\n- The request logging scope\r\n- Now the auth middleware\r\n- Culture\r\n\r\nFor prior art here, we set the current culture (and UI culture) in the localization middleware by default without an option (https://github.com/dotnet/aspnetcore/blob/3eb0fa8abe62f9a937a78890762908159174ff91/src/Middleware/Localization/src/RequestLocalizationMiddleware.cs#L136-L140).\r\n\r\ncc @blowdart @Tratcher @HaoK for feedback.\r\n",
                                           "updatedAt":  "2021-07-23T19:58:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde840zavI",
                                           "createdAt":  "2021-07-23T20:21:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "So to summarize the current proposal we add something like\r\n\r\n`authenticationOptions.ShouldSetThreadCurrentPrincipalToo = true` // defaults to false (better name TBD)\r\n\r\nwhich would opt the middleware (and authorization logic whenever HttpContext.User is set) to also update Thread.CurrentPrincipal at the same time.\r\n\r\nSounds reasonable to me!",
                                           "updatedAt":  "2021-07-23T20:21:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde840zbim",
                                           "createdAt":  "2021-07-23T20:28:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "How likely is that Identity instance to leak onto background threads and outlive the request? For WindowsIdentity specifically we dispose it at the end of each request, so if it had leaked to a background thread you\u0027d get ODEs.",
                                           "updatedAt":  "2021-07-23T20:28:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde840zceD",
                                           "createdAt":  "2021-07-23T20:37:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "\u003e * I considered making everything a `ClaimsPrincipal`, as that is the proper way to do things, but I considered that it could be a `WindowsPrincipal` instead, so `IPrincipal` is probably a better approach.\r\n\r\nWindowsPrincipal already derives from ClaimsPrincipal.\r\n\r\nWould Thread.CurrentPrincipal get reverted when the middleware exited?",
                                           "updatedAt":  "2021-07-23T20:37:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde840zeHR",
                                           "createdAt":  "2021-07-23T20:52:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "\u003e authenticationOptions.ShouldSetThreadCurrentPrincipalToo = true // defaults to false (better name TBD)\r\n\r\nBut with a less bad name.\r\n\r\n\u003e How likely is that Identity instance to leak onto background threads and outlive the request? For WindowsIdentity specifically we dispose it at the end of each request, so if it had leaked to a background thread you\u0027d get ODEs.\r\n\r\nYou know the answer to this question 😄.\r\n\r\n\u003e Would Thread.CurrentPrincipal get reverted when the middleware exited?\r\n\r\nIt doesn\u0027t need to, async methods revert the execution context.",
                                           "updatedAt":  "2021-07-23T20:52:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde840zhf-",
                                           "createdAt":  "2021-07-23T21:24:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "I updated the API proposal.",
                                           "updatedAt":  "2021-07-23T21:24:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde840zhsv",
                                           "createdAt":  "2021-07-23T21:26:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "We worked very hard to avoid using Thread.CurrentPrincipal or indeed *.Current* in Core, because of threading and potential async issues, and required library owners to take a principal as a parameter. \r\n\r\nIt seems like a massive step back to return to that way of doing things.",
                                           "updatedAt":  "2021-07-23T21:27:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde840ziCx",
                                           "createdAt":  "2021-07-23T21:30:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCxCpGA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "abdusco",
                                                                               "createdAt":  "2021-07-28T12:57:41Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "BrendanRidenour",
                                                                               "createdAt":  "2021-08-01T06:12:25Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "avparuch",
                                                                               "createdAt":  "2021-08-01T06:48:11Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "DanielTheCoder",
                                                                               "createdAt":  "2021-08-01T09:16:21Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "dennisroche",
                                                                               "createdAt":  "2021-08-01T10:01:07Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "poke",
                                                                               "createdAt":  "2021-08-01T11:25:39Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "justindbaur",
                                                                               "createdAt":  "2021-08-01T13:11:56Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "miloush",
                                                                               "createdAt":  "2022-12-11T04:14:31Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  8
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "\u003e We worked very hard to avoid using Thread.CurrentPrincipal or indeed .Current in Core, because of threading and potential async issues, and required library owners to take a principal as a parameter.\r\n\r\n\u003e It seems like a massive step back to return to that way of doing things.\r\n\r\nThat\u0027s why it\u0027s opt in.\r\n\r\nI should mention, the alternative is for us to do nothing and for customers to set the claims principal selector like so:\r\n\r\n```C#\r\npublic class Program\r\n{\r\n    public static void Main(string[] args)\r\n    {\r\n        // This only works because we use a static async local as the backing field.\r\n        var contextAccessor = new HttpContextAccessor();\r\n        ClaimsPrincipal.ClaimsPrincipalSelector = () =\u003e contextAccessor.HttpContext.User;\r\n\r\n        CreateHostBuilder(args).Build().Run();\r\n    }\r\n\r\n    public static IHostBuilder CreateHostBuilder(string[] args) =\u003e\r\n        Host.CreateDefaultBuilder(args)\r\n            .ConfigureWebHostDefaults(webBuilder =\u003e\r\n            {\r\n                webBuilder.UseStartup\u003cStartup\u003e();\r\n            });\r\n}\r\n\r\n\r\npublic class Startup\r\n{\r\n    public void ConfigureServices(IServiceCollection services)\r\n    {\r\n        services.AddHttpContextAccessor();        \r\n    }\r\n}\r\n```\r\n\r\nThe above approach will avoid another async local and will let users opt into this behavior in a more explicit way. We could document this approach.\r\n\r\nThe other approach is to have users set Thread.CurrentPrincipal in middleware themselves:\r\n\r\n```C#\r\napp.UseAuthentication();\r\n\r\napp.Use(async (context, next) =\u003e \r\n{\r\n    Thread.CurrentPrincipal = context.User;\r\n    await next(context);\r\n});\r\n\r\napp.UseAuthorization();\r\n```\r\n\r\nThis is something you can do today without an added feature.",
                                           "updatedAt":  "2021-07-23T21:38:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde840zi4g",
                                           "createdAt":  "2021-07-23T21:39:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "Yea, if it can be done already I\u0027m rather dead set against backing anything based on .Current_Anything_ into asp.net, or worse corefx. It had reliability issues before and I\u0027m not convinced it\u0027d be problematic again.",
                                           "updatedAt":  "2021-07-23T21:39:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde840zjry",
                                           "createdAt":  "2021-07-23T21:48:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "@robertmclaws Can you try those solutions and let us know if it works out? As @blowdart says, we try really really hard to avoid doing this by default especially in the box.",
                                           "updatedAt":  "2021-07-23T21:48:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde840zjvz",
                                           "createdAt":  "2021-07-23T21:49:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "robertmclaws",
                                           "body":  "I\u0027m all about having a way to do it in the framework vs having to look something up.\r\n\r\nThe challenge @blowdart for situations like Restier (where the class processing the `HttpRequest` is 100% decoupled from *any* concept of HTTP) is that passing the `HttpContext.User` as a parameter up the chain would require every method to take a `ClaimsPrincipal`, even those that don\u0027t use them. \r\n\r\nThat\u0027s why my original approach was basically to be able to pull it out of DI if you need it, the same as an `IHttpContextAccessor`.\r\n\r\nAnother alternative could be to wrap @davidfowl\u0027s first suggestion from his previous post into a clean extension method:\r\n```C#\r\npublic static class HttpServiceCollectionExtensions\r\n{\r\n    public static IServiceCollection AddClaimsPrincipal(this IServiceCollection services)\r\n    {\r\n        services.AddHttpContextAccessor();        \r\n\r\n        // This only works because we use a static async local as the backing field.\r\n        var contextAccessor = new HttpContextAccessor();\r\n        ClaimsPrincipal.ClaimsPrincipalSelector = () =\u003e contextAccessor.HttpContext.User;\r\n    }\r\n}\r\n```\r\n\r\nThe idea is not to \"bake\" it into the pipeline, but to make it available if people need it. \r\n\r\nMy question would then be @blowdart, if `HttpContextAccessor` and `Thread.CurrentPrincipal` BOTH use `AsyncLocal` internally... why is one OK and the other is not?",
                                           "updatedAt":  "2021-07-23T21:49:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde840zkRm",
                                           "createdAt":  "2021-07-23T21:55:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "robertmclaws",
                                           "body":  "@davidfowl The point of the API Proposal was that I already have a solution that works. I can\u0027t be the only person in the same situation that can\u0027t get this any other way. So my original API proposal was NOT to set `Thread.CurrentPrincipal`, but to access the `IPrincipal` from the injected `HttpContextAccessor` instead, and pull out the `IPrincipalAccessor` when you need it. That way, I don\u0027t need a dependency on `Microsoft.AspNetCore.Http` in order to get the `Principal` out of the container.",
                                           "updatedAt":  "2021-07-23T21:59:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde840zkSW",
                                           "createdAt":  "2021-07-23T21:55:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "We had instances of other pieces of code setting the current principal after asp.net had, or doing strange things with it (the old ws-trust stuff) and if memory serves in asp.net core we moved everything to hang off the request because of this. \n\nMoving back I wouldn\u0027t be able to make guarantees around correctness without a lot of work (and it feels like hobbling aspnet and net6/7 with a legacy approach)",
                                           "updatedAt":  "2021-07-23T21:55:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde840zkqj",
                                           "createdAt":  "2021-07-23T22:00:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "robertmclaws",
                                           "body":  "@blowdart fair enough. Do you have any other suggestions on how to get the HttpContext.User into the DI container so that it can be retrieved like any other service?",
                                           "updatedAt":  "2021-07-23T22:00:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde840zleq",
                                           "createdAt":  "2021-07-23T22:09:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "I don\u0027t I\u0027m afraid, I defer that to @davidfowl, We\u0027ve never treated the current request identity as a discreet item at all, it\u0027s always been part of the request.",
                                           "updatedAt":  "2021-07-23T22:09:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde840z31A",
                                           "createdAt":  "2021-07-24T07:23:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "\u003e @davidfowl The point of the API Proposal was that I already have a solution that works. I can\u0027t be the only person in the same situation that can\u0027t get this any other way. So my original API proposal was NOT to set Thread.CurrentPrincipal, but to access the IPrincipal from the injected HttpContextAccessor instead, and pull out the IPrincipalAccessor when you need it. That way, I don\u0027t need a dependency on Microsoft.AspNetCore.Http in order to get the Principal out of the container.\r\n\r\nYes but as the above conversation revealed, we don\u0027t have any plans to offer this interface. Because there are existing well known async locals that can be used instead that are already defined by the framework. Nothing in the framework needs to use an IPrincipalAccessor, this service is convenience for users that want to avoid the ASP.NET Core dependency (which is why it\u0027s strange trying to define it inside of ASP.NET Core). \r\n\r\nThis isn\u0027t about making stuff work per se, you can already add any service you\u0027d like to the DI container and any service can use it. This is about an \"official\" exchange type for doing so. The solution I offered [above](https://github.com/dotnet/aspnetcore/issues/34636#issuecomment-885924017) allow the same exchange types to work.\r\n\r\n\r\n\u003e Thanks for weighing in on this everyone! Totally agree with @bartonjs, I\u0027m usually vehemently against interfaces. I\u0027m glad there is some consensus on setting ThreadPrincipal.Current, because that\u0027s exactly what I\u0027m doing in Restier, and I was worried it was the wrong approach.\r\n\r\nThis solution is really bad because it\u0027s capturing the HttpContext in the static callback, permanently rooting that reference. It also doesn\u0027t work well if there are multiple hosts in the same process that might define their own `ClaimsPrincipalSelector`. That\u0027s why it really belongs in `Program.cs` and why it shouldn\u0027t be an extension method on anything. This is code you wire up once, in the application entry point.\r\n\r\nThe middleware approach is much cleaner as it makes everything work even across hosts in a safer way without touching the ClaimsPrincipalSelector static. Then your `IClaimsPrincipalAccessor` implementation just looks like this:\r\n\r\n```C#\r\npublic interface IClaimsPrincipalAccessor \r\n{\r\n    ClaimsPrincipal ClaimsPrincipal { get; } \r\n}\r\n\r\npublic class ClaimsPrincipalAccessor : IClaimsPrincipalAccessor\r\n{\r\n    public ClaimsPrincipal ClaimsPrincipal =\u003e ClaimsPrincipal.Current;\r\n}\r\n```\r\n",
                                           "updatedAt":  "2021-07-24T07:23:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde8407WNn",
                                           "createdAt":  "2021-07-28T03:04:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "robertmclaws",
                                           "body":  "@davidfowl you are right, with the middleware approach, the ClaimsPrincipalAccessor seems unnecessary.\r\n\r\nHow would you folks feel about shipping the middleware approach as an extension method in the framework?\r\n\r\n```c#\r\n  public static IApplicationBuilder UseThreadPrincipals(this IApplicationBuilder app)\r\n  {\r\n      app.Use(async (context, next) =\u003e\r\n      {\r\n          Thread.CurrentPrincipal = context.User;\r\n          await next();\r\n      });\r\n      return app;\r\n  }\r\n```\r\n\r\n@blowdart I know you\u0027re not a huge fan of baking it in, but honestly if it\u0027s this easy to do anyway, wouldn\u0027t you rather do it a simple and official way, rather having people like me invent sh!ttier and less performant ways to do it?",
                                           "updatedAt":  "2021-07-29T04:32:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde8407Z0x",
                                           "createdAt":  "2021-07-28T03:49:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB0pGUQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "TroyWitthoeft",
                                                                               "createdAt":  "2021-08-01T13:51:14Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "So the options are:\r\n1. Do nothing in the framework and document this showing the 3 different approaches above:\r\n   - The middleware to set `Thread.CurrentPrincipal`\r\n   - Setting the `ClaimsPrincipalSelector` in `Program.Main`.\r\n   - Using a custom interface like `IClaimsPrincipalAccessor` and implementing an `HttpContextClaimsPrincipalAccessor` that uses the `IHttpContextAccessor`.\r\n   - Manually passing around the ClaimsPrincipal.\r\n2. Make it an optional part of the AuthN middleware:\r\n   - We don\u0027t make the performance worse by default by adding another async local into the mix.\r\n   - The `Thread.CurrentPrincipal` needs to be set *after* the AuthN middleware runs.\r\n   - Shared library code that works on the User can work between .NET Framework and .NET Core (I\u0027m dubious of this just working because most web based library code depends on `HttpContext.Current`).\r\n\r\nThe hardest thing about 2 is it feels a little like an endorsement of `Thread.CurrentPrincipal` and `ClaimsPrincipal.Current` when trying to access the current user from assemblies that don\u0027t want to reference ASP.NET Core. At least with the first approach it feels less like strict guidance and more like a smattering of options.",
                                           "updatedAt":  "2021-07-28T04:56:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde841EXl8",
                                           "createdAt":  "2021-07-31T11:59:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Kahbazi",
                                           "body":  "\u003e Make it an optional part of the AuthN middleware:\r\n\r\n@davidfowl and also AuthZ middleware?",
                                           "updatedAt":  "2021-07-31T11:59:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde841Ega4",
                                           "createdAt":  "2021-07-31T16:45:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "Why would it be part of the authz middleware?",
                                           "updatedAt":  "2021-07-31T16:45:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde841Eg2u",
                                           "createdAt":  "2021-07-31T17:02:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Kahbazi",
                                           "body":  "\u003e Why would it be part of the authz middleware?\r\n\r\nIn our application we don\u0027t have a default authN scheme so we don\u0027t even use AuthN middleware. Each endpoint has one or multiple authN scheme which would be authenticated in AuthZ middleware and HttpContext.User would be filled here :\r\n\r\nhttps://github.com/dotnet/aspnetcore/blob/9fa3421e1302bce7dbc50269edbd3072907e7832/src/Security/Authorization/Policy/src/PolicyEvaluator.cs#L58",
                                           "updatedAt":  "2021-07-31T17:02:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde841EhO_",
                                           "createdAt":  "2021-07-31T17:12:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "Tricky, you really want to set this outside of arbitrary components like this. In fact, maybe I\u0027d argue that we shouldn\u0027t be setting the context.User here and instead the middleware should be responsible for doing that.",
                                           "updatedAt":  "2021-07-31T17:12:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde841Ehlm",
                                           "createdAt":  "2021-07-31T17:22:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Kahbazi",
                                           "body":  "\u003e In fact, maybe I\u0027d argue that we shouldn\u0027t be setting the context.User here and instead the middleware should be responsible for doing that.\r\n\r\nWhich middleware? AuthZ?",
                                           "updatedAt":  "2021-07-31T17:22:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde841Ei0d",
                                           "createdAt":  "2021-07-31T18:01:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "\u003e In fact, maybe I\u0027d argue that we shouldn\u0027t be setting the context.User here and instead the middleware should be responsible for doing that.\r\n\r\nYeah this always felt odd to me too, but we did this to keep the same behavior as what `[Authorize]` always did",
                                           "updatedAt":  "2021-07-31T18:01:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde841E1_D",
                                           "createdAt":  "2021-08-01T06:37:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "We should fix it and move the assignment to the callers",
                                           "updatedAt":  "2021-08-01T06:37:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde841FAIx",
                                           "createdAt":  "2021-08-01T11:39:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB0zQFA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Tratcher",
                                                                               "createdAt":  "2021-08-02T21:54:00Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "poke",
                                           "body":  "Remembering how many issues we had in the past with the usage of `IHttpContextAccessor` where users incorrectly used it all over places _because it was there_, I would also agree that we should hesitate to add another thing alike that for the current principal. If `Thread.CurrentPrincipal` is backed by an async local, then this would include that.\r\n\r\nI’m more than fine with adding a dedicated article in the documentation about how one could possibly approach this. Seeing the different ideas in this issue which often just span a few lines to integrate makes it clear IMO that we don’t need to expand ASP.NET Core by default and send the wrong message that it’s okay to do this. Instead, people can just copy over the relevant pieces into their own code, making this behavior and the downsides (which should also be clearly documented) very explicit.\r\n\r\nAs for libraries like Restier that want to rely on this: Usually, these libraries will need some kind of integration package for ASP.NET Core anyway, so they could always add their own capabilities there. If you control the full library, switching to a custom interface to access the principal should be possible too. And if you really need, the library could provide a way to set up `Thread.CurrentPrincipal` or similar.\r\n\r\nAs a framework, ASP.NET Core and .NET (Core) itself should make it clear that the static `.Current`s are meant to be legacy though. So I would agree that we should avoid advertising their usage here by providing quick opt-ins that will be seen as an invitation to enable it by default.",
                                           "updatedAt":  "2021-08-01T11:39:42Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde841FAhG",
                                           "createdAt":  "2021-08-01T11:50:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AmyJeanes",
                                           "body":  "Echoing my reply to @davidfowl\u0027s [Twitter post](https://twitter.com/davidfowl/status/1420228413923631112?s=19), our team uses an authentication workflow (in our case using attributes on controllers) which sets a custom user DTO in a scope-injected helper class which we can then access from within our libraries by injecting the helper and retrieving the user DTO again. The DTO contains things like the username/id, permissions and roles etc that we need in our application.\r\n\r\nThis works really well for us but the two problems I see with our approach however is primarily that it is our own class and wouldn\u0027t work within any public libraries from NuGet for example where adding a more generic class built into [ASP].NET Core might, and there is discovery problems with our approach in the sense of there isn\u0027t any documentation (that I\u0027ve come across at least) that tells you that this is an approach you can take to solve this problem.",
                                           "updatedAt":  "2021-08-01T11:51:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde841FJcx",
                                           "createdAt":  "2021-08-01T15:42:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "robertmclaws",
                                           "body":  "One pattern that I liked quite a bit from David\u0027s Twitter thread was this:\r\n```c#\r\n...\r\n    services.AddHttpContextAccessor();\r\n    services.AddScoped(sp =\u003e sp.GetService\u003cIHttpContextAccessor\u003e().Context.User;\r\n...\r\n```\r\n\r\nImplementing it means that *every* business logic service would have to be scoped so it could accept a `ClaimsPrincipal` as a constructor parameter, but in in the cases where that is possible, it would be pretty clean and not require a direct HTTP dependency.\r\n\r\nFrom the compatibility standpoint of helping people from .NET Framework to .NET Core (which sometimes means having the same code, i.e. business logic, run on both for a while), `Thread.CurrentPrincipal` funneling into `ClaimsPrincipal.Current` is the most consistent solution, and should have a specific and documented way get wired in as easily as possible.. \r\n\r\nMoving away from `Thread.CurrentPrincipal` may have seemed like a good idea at the time, but as David\u0027s Twitter thread showed, leaving people to their own devices just made the problem worse. If mutability and thread-safety were the issue, we now have tools we didn\u0027t back then. A combination of `AsyncLocal` and refactoring `Thread.CurrentPrincipal` to use C# Records *might* a safe and cross-device way of doing things.\r\n\r\nIf too many `AsyncLocals` cause performance issues, then we could flip the script. If you think about it. an `HttpContext` is essentially just a container for information passing down the current thread. Console and Windows apps don\u0027t typically have this problem because they do not usually have concurrent-but-different users executing at the same time. But sometimes batch job Console apps need to get tokens that impersonate users, and run different users on different threads.\r\n\r\nIf you push that concept down into the `GenericHost`, then an `AsyncLocal`-backed `ThreadContext` could create that generic thread storage object, and `HttpContext` could inherit from it to retrieve HTTP-specific things from that object. `HttpContextAccessor` would be adjusted to use the THAT `AsyncLocal` instead, and you get a consistent implementation across all of .NET with no change in performance.",
                                           "updatedAt":  "2021-08-01T15:44:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde841FJ_k",
                                           "createdAt":  "2021-08-01T15:58:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "I\u0027m less worried about the async local performance for any other situation than the default. That\u0027s why it wouldn\u0027t be on by default. This problem exists for http context accessor, culture, windows principal, activity, logging scopes, thread current user. Removing one of those won\u0027t significantly change anything. ",
                                           "updatedAt":  "2021-08-01T15:58:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde841FKJJ",
                                           "createdAt":  "2021-08-01T16:02:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "The other interesting thing about this is that the raw claims principal is usually fine if you\u0027re only reading it in a single place but the moment you need to transform claims, you want to store your own scoped service/async local with the projected data. ",
                                           "updatedAt":  "2021-08-01T16:02:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde841FTmY",
                                           "createdAt":  "2021-08-01T20:40:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "robertmclaws",
                                           "body":  "The architecture we use at BurnRate stores the UserId in Auth0\u0027s user metadata, so it comes over the wire in the signed JWT, and you don\u0027t have to do DB lookups to get it. We transform Claims in the JWT middleware process, so the `ClaimsPrincipal` that comes out the other side of the built-in middleware has everything it needs. That usually just entails splitting a comma-separated list of roles into individual Role claims.",
                                           "updatedAt":  "2021-08-01T20:40:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde841FTzI",
                                           "createdAt":  "2021-08-01T20:48:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "\u003e That usually just entails splitting a comma-separated list of roles into individual Role claims.\r\n\r\nDo you parse then every time you want to consume it? Where do you store the preprocessed claims?",
                                           "updatedAt":  "2021-08-01T20:48:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde841IRQw",
                                           "createdAt":  "2021-08-02T21:56:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "\u003e ```cs\r\n\u003e ...\r\n\u003e     services.AddHttpContextAccessor();\r\n\u003e     services.AddScoped(sp =\u003e sp.GetService\u003cIHttpContextAccessor\u003e().Context.User;\r\n\u003e ...\r\n\u003e ```\r\n\r\nNote this pattern doesn\u0027t account for the fact that the user can and will change during the lifetime of a request (e.g. by the AuthN middleware). If the scoped ClaimsPrincipal service were accessed too soon it would cache the wrong value for the user for the duration of the request.",
                                           "updatedAt":  "2021-08-02T21:58:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde841Kakv",
                                           "createdAt":  "2021-08-03T15:04:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mqudsi",
                                           "body":  "Can I ask a dumb question? Why *should* it be possible to get the user associated with the current http request without a dependency on ASP.NET Core? It feels like an abstraction for the sake of having an abstraction, at least from ASP.NET Core’s perspective. I get that’s what Restier needs, but does that make it right? \r\n\r\nLet’s say there *is* an abstraction that makes sense where there are multiple authenticated request providers and only one of which is ASP.NET Core; shouldn’t this abstraction (and the extension method configuring the .NET Core pipeline to support it) live in whatever library is abstracting over all that, then? \r\n\r\nIf it’s just about migrating legacy projects.. then there are lots of examples of things that were easier to do before and this probably isn’t the most egregious; plus, there’s a reason why all of ASP.NET Core is so compartmentalized as compared to its predecessor, and that’s mostly a good thing (TM), no?",
                                           "updatedAt":  "2021-08-03T15:09:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde841RYzv",
                                           "createdAt":  "2021-08-05T19:50:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2021-08-05T19:50:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85QMjuj",
                                           "createdAt":  "2022-12-11T06:18:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODBZQ3A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "warappa",
                                                                               "createdAt":  "2022-12-11T17:19:13Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "JuergenGutsch",
                                                                               "createdAt":  "2023-07-21T10:14:42Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "I wrote some notes on async locals and why they need to be designed intentionally https://github.com/davidfowl/AspNetCoreDiagnosticScenarios/blob/master/AsyncGuidance.md#asynclocalt\r\n\r\nThis comes from experience with the HttpContextAccessor and the issues we’ve seen customers run into over the years. ",
                                           "updatedAt":  "2022-12-11T06:18:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85RHrgg",
                                           "createdAt":  "2022-12-21T07:51:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "Given the [issues we\u0027ve seen with HttpContextAccessor](https://github.com/dotnet/aspnetcore/issues/42040), I\u0027m feeling sure that using `Thread.CurrentPrincipal` would end up in the same boat:\r\n\r\n- `ClaimsPrincipal` isn\u0027t thread safe\r\n- `WindowsIdentity` is disposable (and disposed in the request pipeline and other pipelines)\r\n\r\nWhen used from arbitrary library code that is ignorant of this, it can be extremely problematic. I\u0027m not sure of a 100% safe way to do this given the current APIs and that makes me not want to have anything built into the pipeline for this. Maybe we can start with documentation here. \r\n\r\nUsing `Thread.CurrentPrincipal` is the most pragmatic approach (with those caveats listed):\r\n1. There must be no concurrent access to `Thread.CurrentPrincipal` (this is very subtle as code you don\u0027t control will capture the execution context and extend the lifetime of it)\r\n2. If the current user is a `WindowsPrincipal` then it must be used within the lifetime of the request (that can\u0027t guarantee statically). This is to avoid the disposal race.\r\n\r\nIf you haven\u0027t yet read the above comment, please do as it details how these could happen and what they might look like.",
                                           "updatedAt":  "2022-12-21T07:51:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85RIRRn",
                                           "createdAt":  "2022-12-21T10:16:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "robertmclaws",
                                           "body":  "\u003e Can I ask a dumb question? Why _should_ it be possible to get the user associated with the current http request without a dependency on ASP.NET Core? It feels like an abstraction for the sake of having an abstraction, at least from ASP.NET Core’s perspective. I get that’s what Restier needs, but does that make it right?\r\n\r\nBecause in a library of business logic that can use LINQ queries to filter down resultsets (whether using Restier or not), an end user needs to be able to get/read/act on the current permission set. The standard for that has been a ClaimsPrincipal (regardless of whether or not ClaimsPrincipal.Current is thread-safe or not, it still contains claims processing logic).\r\n\r\nThis way, if I\u0027m executing on an out-of-band runtime (like a MessageBus), each message on the queue gets a new thread and a new Thread.CurrentPrincipal, and the business logic code still works.\r\n\r\nIronically, @davidfowl I\u0027m seeing the same issue with the Features cache in Restier. Every so often a request fails because a feature is disposed while OData 7.X on APp.NET Core is trying to access it.\r\n\r\nY\u0027all are smarter than me, but happy to help however I can. Maybe we can find a good solution for .NET 8 together.\r\n\r\nThanks so much, and I hope y\u0027all have a very Happy Christmas / Kwanzaa / Hanukkah / Festivus / etc. 🤜🏻",
                                           "updatedAt":  "2022-12-21T10:16:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85RJJze",
                                           "createdAt":  "2022-12-21T14:06:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HamsterExAstris",
                                           "body":  "\u003e * `ClaimsPrincipal` isn\u0027t thread safe\r\n\r\nIs a `ClaimsPrincipal` _instance_ (as opposed to `ClaimsPrincipal.CurrentPrincipal`) really not thread-safe? I thought that passing the user as a method parameter was [considered safe](https://learn.microsoft.com/en-us/aspnet/core/migration/claimsprincipal-current?view=aspnetcore-7.0).\r\n\r\ni.e. could the following controller action run into issues if the services both _read_ the `ClaimsPrincipal` retrieved from `ControllerBase.User` simultaneously? Or is it only an issue if `ThingThatUsesPrincipalAsync` _mutates_ the `ClaimsPrincipal`?\r\n\r\n````csharp\r\n[HttpPost]\r\npublic ActionResult DoThing()\r\n{\r\n    var task1 = _service.ThingThatUsesPrincipalAsync(User);\r\n    var task2 = _service.ThingThatUsesPrincipalAsync(User);\r\n    await Task.WhenAll(task1, task2);\r\n    return Ok();\r\n}\r\n````",
                                           "updatedAt":  "2022-12-21T14:06:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85RKd0T",
                                           "createdAt":  "2022-12-21T17:21:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCxwtyQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "davidfowl",
                                                                               "createdAt":  "2022-12-21T18:41:09Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "HamsterExAstris",
                                                                               "createdAt":  "2022-12-23T20:19:40Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "@HamsterExAstris mutation is certainly not thread safe. Most types don\u0027t guarantee even reading is thread safe, though they are in practice. HttpContext is an example of a type that isn\u0027t thread safe for reads either since it generates many fields lazily.",
                                           "updatedAt":  "2022-12-21T17:21:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85RRxGB",
                                           "createdAt":  "2022-12-23T04:47:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCx3k9w==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "HamsterExAstris",
                                                                               "createdAt":  "2022-12-23T20:19:27Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "miloush",
                                                                               "createdAt":  "2022-12-28T12:19:40Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "Right. So, I just took a quick look at `ClaimsPrincipal` and `WindowsPrincipal`.  `ClaimsPrincipal` is mutable and you can run into trouble if the identities are changed while it\u0027s being read, but it looks pretty safe to be read concurrently. `WindowsPrincipal` does have lazy properties but it is protected by a lock. `WindowsPrincipal` is still disposable so if you do end up trying to use it outside of the context where it was set, there\u0027s an inherent race condition that you cannot protect against. Of course, this doesn\u0027t say anything about types derived from `ClaimsPrincipal`.\r\n\r\nGiven that, I think documenting this:\r\n\r\nSetting `Thread.CurrentPrincipal` in middleware:\r\n\r\n```C#\r\npublic static IApplicationBuilder UseThreadCurrentPrincipal(this IApplicationBuilder app) =\u003e\r\n    app.Use(async (context, next) =\u003e\r\n    {\r\n        Thread.CurrentPrincipal = context.User;\r\n        await next();\r\n    });\r\n```\r\n\r\nWould be a good place to start here.\r\n\r\n",
                                           "updatedAt":  "2022-12-23T04:47:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85VDUhm",
                                           "createdAt":  "2023-02-12T03:33:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericsampson",
                                           "body":  "@davidfowl if I set the `Thread.CurrentPrincipal` in an `AuthenticationHandler \u003e HandleAuthenticateAsync()`, it gets reverted to the default instance of `GenericPrincipal` by the time it arrives in the next middleware.\r\n\r\nI haven\u0027t yet set things up to run the aspnetcore code locally in order to step through in the debugger, but just looking at the code in `AuthenticationMiddleware` and various other things, I cannot figure out why this would be happening.\r\n\r\nAny thoughts? I\u0027m probably missing something obvious :) \r\nThanks!",
                                           "updatedAt":  "2023-02-12T03:33:42Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85VDU5l",
                                           "createdAt":  "2023-02-12T03:48:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "\u003e @davidfowl if I set the Thread.CurrentPrincipal in an AuthenticationHandler \u003e HandleAuthenticateAsync(), it gets reverted to the default instance of GenericPrincipal by the time it arrives in the next middleware.\r\n\r\nYep. That\u0027s the wrong place to set it 😄. Async locals can\u0027t be set from anywhere, you have to understand how the execution context is set and reverted to make sure they \"survive\" long enough that they can be observed. Async methods revert the execution context when they exit, that\u0027s why it needs to be set in a middleware. I can\u0027t think of any other component that doesn\u0027t revert execution context in the framework.\r\n\r\nIs there a reason you\u0027re trying to set it in a custom authentication handler?",
                                           "updatedAt":  "2023-02-12T03:48:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85VDWrC",
                                           "createdAt":  "2023-02-12T04:51:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC15A-A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "davidfowl",
                                                                               "createdAt":  "2023-02-12T05:12:11Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ericsampson",
                                           "body":  "Oh shoot, reading your response immediately made it clear what I was forgetting, and why it works when set in middleware before doing the `await next`, but not where I was setting it--because the execution context only flows downwards, not upwards. I already knew that, but just didn\u0027t put 2 and 2 together for some reason. Thanks!\r\n\r\nThe reason it\u0027s like this is that I\u0027m porting a large (poorly-written) Framework API over to Core, and that\u0027s what the existing code was doing. I\u0027m trying to minimize changes for now and just do a straight port to Core--the current code uses Thread.CurrentPrincipal in a million places.\r\n\r\nSetting it in the next middleware like you showed fixed the issue, I was just trying to figure out what I was misunderstanding :)\r\n\r\nCheers!",
                                           "updatedAt":  "2023-02-12T05:04:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85VmEq9",
                                           "createdAt":  "2023-02-19T17:19:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericsampson",
                                           "body":  "regarding the original issue, I think that adding the snippet that David posted to the docs somewhere would be helpful/sufficient, rather than baking in new functionality to be maintained forever for a situation that is a) not a good pattern to encourage, b) most useful for porting existing old codebases, and c) cleanly solved using a simple 4-line snippet.\nI don\u0027t know if there is existing docs around Framework migration, but if so perhaps it could be put there.",
                                           "updatedAt":  "2023-02-19T17:19:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85VmGkg",
                                           "createdAt":  "2023-02-19T17:55:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mqudsi",
                                           "body":  "AsyncLocal is basically impossible to use correctly without mentally (or on a whiteboard!) desugaring all async/await into a state machine to figure out what the “span” of an AsyncLocal value is. \r\n\r\nI wrote [an entire async locking library](https://www.nuget.org/packages/NeoSmart.AsyncLock) around AsyncLocal and it works great and is used by a lot of people but I am still not comfortable writing greenfield code w/ AsyncLocal, truth be told. \r\n\r\nIs there some way of getting Roslyn to spit out the desugared C# (instead of reversing the IL to C#)? ",
                                           "updatedAt":  "2023-02-19T17:55:22Z"
                                       }
                                   ],
                         "totalCount":  51
                     },
        "title":  "Making HttpContext.User available to 3rd party code without Microsoft.AspNetCore.Http dependency",
        "labels":  [
                       "area-auth",
                       "api-suggestion"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/36175",
        "createdAt":  "2021-09-04T05:25:15Z",
        "number":  36175,
        "author":  "leastprivilege",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC-Vveg==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "evilpilaf",
                                            "createdAt":  "2021-09-04T05:36:43Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "joseftw",
                                            "createdAt":  "2021-09-04T05:46:50Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "abdusco",
                                            "createdAt":  "2021-09-04T05:48:46Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "thohng",
                                            "createdAt":  "2021-09-04T05:59:15Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "SIkebe",
                                            "createdAt":  "2021-09-04T06:18:31Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Hellevar",
                                            "createdAt":  "2021-09-04T06:40:23Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "nil4",
                                            "createdAt":  "2021-09-04T09:12:37Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "wterpstra",
                                            "createdAt":  "2021-09-04T09:21:22Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "khellang",
                                            "createdAt":  "2021-09-04T16:01:54Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ycrumeyrolle",
                                            "createdAt":  "2021-09-04T16:07:25Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "veikkoeeva",
                                            "createdAt":  "2021-09-04T18:34:07Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "oising",
                                            "createdAt":  "2021-09-04T19:50:56Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "poke",
                                            "createdAt":  "2021-09-05T00:45:20Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "TanvirArjel",
                                            "createdAt":  "2021-09-05T19:20:41Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "PureKrome",
                                            "createdAt":  "2021-09-08T08:32:46Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "jglozano",
                                            "createdAt":  "2021-09-08T17:32:55Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "sentai77",
                                            "createdAt":  "2021-10-12T20:51:06Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "MrSmoke",
                                            "createdAt":  "2023-04-27T12:13:44Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Trivivium",
                                            "createdAt":  "2024-12-11T20:13:28Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "jesperkristensen",
                                            "createdAt":  "2025-01-21T20:57:56Z"
                                        }
                                    ],
                          "totalCount":  20
                      },
        "updatedAt":  "2025-08-22T18:00:46Z",
        "body":  "\u003c!--\r\n\r\nMore information on our issue management policies can be found here: https://aka.ms/aspnet/issue-policies\r\n\r\n--\u003e\r\n\r\n### Is your feature request related to a problem? Please describe.\r\nRight now, ASP.NET Core has a direct dependency on the AAD JWT library (token handler, token validation parameters etc). This library is primarily driven by its sponsor - the AAD team.\r\n\r\nThere are more JWT options in .NET - being able to plug in a different JWT implementation would be beneficial for the .NET ecosystem.\r\n\r\n### Describe the solution you\u0027d like\r\nASP.NET Core should own its main JWT validation abstractions and rather ship with an by-default integration with the preferred JWT library. If that is the \"in-house\" one - fine. But it should be possible to plug in different implementations - similar to the DI system.\r\n\r\n### Additional context\r\nhttps://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/pull/1687#issuecomment-912905994\r\n\r\nhttps://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/issues/1574\r\n\r\nhttps://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/issues/1516\r\n\r\nhttps://twitter.com/ycrumeyrolle/status/1431544530357075968\r\n\r\n\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOVX2zBg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde842ahMc",
                                           "createdAt":  "2021-09-04T06:49:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB5h39w==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jglozano",
                                                                               "createdAt":  "2021-09-08T17:33:04Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "@leastprivilege would you like to write up an API proposal for these APIs? That will help kick start the process and also help us better understand the scope of the work.",
                                           "updatedAt":  "2021-09-04T06:49:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842aw4h",
                                           "createdAt":  "2021-09-04T14:44:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "The current auth handlers are very thin wrappers around the IdentityModel libraries and have little additional functionality. What benefit do you get from abstracting the IdentityModel layer vs providing alternative auth handlers? \r\n\r\nI expect you\u0027d want different types in the options which isn\u0027t something that abstracts well.",
                                           "updatedAt":  "2021-09-04T14:44:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842axWO",
                                           "createdAt":  "2021-09-04T14:57:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB5h4AA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jglozano",
                                                                               "createdAt":  "2021-09-08T17:33:08Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "Which is why I think a concrete API proposal would be a great starting point ",
                                           "updatedAt":  "2021-09-04T14:57:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842axbc",
                                           "createdAt":  "2021-09-04T14:59:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCluC3g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "poke",
                                                                               "createdAt":  "2021-09-05T00:47:13Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "wingmans",
                                                                               "createdAt":  "2021-09-08T16:36:20Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "RichiCoder1",
                                                                               "createdAt":  "2021-09-16T17:45:29Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jdaigle",
                                                                               "createdAt":  "2022-07-08T02:55:42Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  4
                                                         },
                                           "author":  "brockallen",
                                           "body":  "\u003e The current auth handlers are very thin wrappers around the IdentityModel libraries and have little additional functionality. What benefit do you get from abstracting the IdentityModel layer vs providing alternative auth handlers?\r\n\r\nI think the concern is that the current JWT library that\u0027s mainly for AAD has a poor track record of quality, consistency, and breaking changes, and it would be nice to be able to not use it.",
                                           "updatedAt":  "2021-09-04T14:59:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842ayRt",
                                           "createdAt":  "2021-09-04T15:24:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC2balQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "poke",
                                                                               "createdAt":  "2021-09-05T00:48:36Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "fMichaleczek",
                                                                               "createdAt":  "2021-09-05T18:37:30Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "TanvirArjel",
                                                                               "createdAt":  "2021-09-05T19:23:08Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "sentai77",
                                                                               "createdAt":  "2021-10-12T20:30:06Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "amccool",
                                                                               "createdAt":  "2023-02-20T23:26:20Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  5
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "As @leastprivilege and @brockallen said, the main problem is that IdentityModel is exclusively driven by AAD\u0027s needs, with close to **zero consideration** for the third-party projects that depend on it (e.g IdentityServer or OpenIddict). Sensitive things like AAD-specific telemetry being added to the metadata retrieval feature or the deprecation of the `Validate*` options in `TokenValidationParameters` are not even discussed with the community.\r\n\r\nThat said, I\u0027m not sure this situation is specific to the IdentityModel project: lately, even the ASP.NET team hasn\u0027t really been interested in gathering feedback from community members/projects prior to introducing new changes. The situation even got worse with the adoption of the \"monorepo\" approach, that makes monitoring topics you\u0027re interested in - and thus sending spontaneous feedback - almost impossible 🤷🏻 ",
                                           "updatedAt":  "2021-09-04T15:24:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842ay0l",
                                           "createdAt":  "2021-09-04T15:39:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB5h4EQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jglozano",
                                                                               "createdAt":  "2021-09-08T17:33:14Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "Thanks for that feedback @kevinchalet, if this issue turns into more than just an API proposal then I\u0027m inclined to move it to the discussions milestone.",
                                           "updatedAt":  "2021-09-04T15:39:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842azRe",
                                           "createdAt":  "2021-09-04T15:52:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "veikkoeeva",
                                           "body":  "I concur. I tried the JWT tokens quickly as a prototype at https://github.com/lumoin/Verifiable and removing soon all the last traces. Mostly also my concerns are recorded here or in the links. Maybe relevant to think if `.NET` should be the owner and not ASP.NET. Noting also that [web safe Base64 encoder](https://docs.microsoft.com/en-us/dotnet/api/microsoft.identitymodel.tokens.base64urlencoder.encode) in .NET could be nice.",
                                           "updatedAt":  "2021-09-04T15:53:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842azYG",
                                           "createdAt":  "2021-09-04T15:55:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB5GBlQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "veikkoeeva",
                                                                               "createdAt":  "2021-09-04T15:59:15Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "fMichaleczek",
                                                                               "createdAt":  "2021-09-05T18:37:27Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "\u003e Maybe relevant to think if .NET should be the owner and not ASP.NET. Noting also that web safe Base64 encoder in .NET could be nice.\r\n\r\nI was thinking the same thing. It\u0027s possible this should just be an API proposal on the dotnet/runtime repo. I\u0027m not sure it needs to be an abstraction then, maybe it should just be a core part of the libraries that implement the spec and use System.Text.Json as the implementation.\r\n\r\n@leastprivilege does that sound like a good idea? If so, can you close this issue and create an issue on dotnet/runtime with the API proposal template?",
                                           "updatedAt":  "2021-09-04T15:55:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842ba41",
                                           "createdAt":  "2021-09-05T13:45:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "I\u0027ve been mulling this since the proposed changes from AAD last week, thinking about it in terms of how we abstracted json away and provided a reference implementation.\r\n\r\nAt its bare minimum what is needed is just JwtValidator/Parser with a single method Validate/Parse, which returns the information needed. But I don\u0027t think that simple an implementation is flexible enough -\r\n\r\n1. We can view a jwt as made up of three things, the header, the payload and the signature, all of which are part of a single string. Whilst in general most folks care about the claims in the payload and nothing more, it would make sense an optiolnal results object to contain all three sections of the token, so we\u0027d end up with JwtValidationResult class which might be returned from a Parse method, which also includes a boolean of IsValid()\r\n2. Users may want to know why a parsed JWT is invalid, so, like X509Validation, a collection of JwtValidationErrors could be useful.\r\n3. ASP.NET takes claims and turns them into a principal which is treated like a User. But JWT can be used to encapsulate more than just a user. one question is would it be up to ASP.NET to transform the validation results into a Principal from the claims collection, or does that belong in the Validator/Parser?\r\n4. Do we want to go further, and allow creation of Jwts from the base classes? That becomes more complicated, because if we allow creation, do we support producing the right type of metadata endpoint contents for key publication etc,.? Personally, I\u0027d say no to this, we\u0027d want to go as simple as possible here, and creation of new tokens is beyond simple.\r\n5. Finally, do we create our own lightweight parser/validation in runtime to sit alongside the rest of the security classes? If so that has risks around getting it right and patching, and down-level support (would we package it as a nuget package for older .NET versions - by which I mean 6.0, rather than, say, Framework). We\u0027d want to consider where its boundaries lie, given that the associated standards around jwt keep growing and branching. I\u0027m not sure we\u0027d want to play catchup. \r\n\r\nConfiguration of the actual parser should be opaque to any parsing functions, so a parser can decide on all those contentious things, like claims mapping, metadata retrieval, refreshing of cached keys etc.  Keeping the actual mechanics opaque would allow for alternative classes to start supporting things the community has wanted for quite a while like encrypted JWTs without consumers having to change code, but should we look at some base events, or callbacks much like Json.Net did or does that fall to a consumer like asp.net to expose?\r\n\r\nAs for @veikkoeeva\u0027s comment on encoding, that\u0027s separate, I\u0027d suggestion that becomes an issue in the runtime repo all its own and linked to the existing encoding classes.\r\n\r\nAnyway, these are random thoughts, dropping from my head over the last week, and gathered on an early Sunday as I drink the first coffee of the day, so they\u0027re by no means anything well designed, or complete, but thoughts for further discussion.",
                                           "updatedAt":  "2021-09-05T13:45:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842bbvr",
                                           "createdAt":  "2021-09-05T14:05:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "veikkoeeva",
                                           "body":  "@blowdart Let I do the same on my evening coffee... I could add one more and that is flexibility of choosing one\u0027s library to sign, validate and encrypt. The AAD one doesn\u0027t make it easy while also not providing much options either (one could say the hierarcy feels fairly rigid). It would be nice to have have a clear way to choose one\u0027s preferred library due to concerns such as:\r\n- BouncyCastle/NSec is approved and mandaged in some organization X. So it needs to be used if not something that\u0027s straight from the official .NET supply-chain.\r\n- Wanting to cross-test or develop other libraries.\r\n- Choosing platform dependent way something, say something that works well in browser and WASM environment.\r\n- Using specialized hardware: TPMs, HSMs, TEEs...\r\n\r\nI have currently a shim ([test showing here](https://github.com/lumoin/Verifiable/blob/main/test/Verifiable.Tests/CryptographicCrossTests.cs#L55), also will be properly named and not just tuples at some point) for NSec, BouncyCastle and at some point for .NET and TPM ones too. And looking how to best do some of this JWT stuff. Maybe I\u0027d like to make a note, partially related to hardware that having a `new byte[]` in somewhere in the guts of a library that has sensitive bytes there may make people, say, in payments, wonder if it\u0027s worth coming up mitigations or do something else (as that code shows, I\u0027m mitigating it with prototyping a sensitive boundary wrapped, so that could consider TPMs, AES encryptinh memory, whatever). Maybe performance related issues too there.\r\n\r\nI concur about that encoding. Goes to show there are many issues within many issues.",
                                           "updatedAt":  "2021-09-05T14:07:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842bcGt",
                                           "createdAt":  "2021-09-05T14:14:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "Oh dear lord let\u0027s not reinvent secure string 😂\n\nJwt creation is interesting. I\u0027m not sure it\u0027s a key scenario for a lot of folks, that tends to be for token servers rather than a mainline scenario for the majority of users. I\u0027d worry that would overcomplicate a parsing abstraction.",
                                           "updatedAt":  "2021-09-05T14:14:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842bcd0",
                                           "createdAt":  "2021-09-05T14:24:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB5kK8A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "veikkoeeva",
                                                                               "createdAt":  "2021-09-05T15:15:54Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "rymeskar",
                                                                               "createdAt":  "2021-09-07T17:14:01Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "holytshirt",
                                                                               "createdAt":  "2021-09-08T22:11:39Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "\u003e As for @veikkoeeva\u0027s comment on encoding, that\u0027s separate, I\u0027d suggestion that becomes an issue in the runtime repo all its own and linked to the existing encoding classes.\r\n\r\n- https://github.com/dotnet/runtime/issues/1658\r\n- https://github.com/dotnet/runtime/issues/31099",
                                           "updatedAt":  "2021-09-05T14:24:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842bet-",
                                           "createdAt":  "2021-09-05T15:15:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "veikkoeeva",
                                           "body":  "@blowdart Maybe I don\u0027t care about `SecureString` that much. I think I have seen those discussion somewhere in GH. :)\r\n\r\n\u003e Jwt creation is interesting. I\u0027m not sure it\u0027s a key scenario for a lot of folks, that tends to be for token servers rather than a mainline scenario for the majority of users. I\u0027d worry that would overcomplicate a parsing abstraction.\r\n\r\nI think I understand. Let I persist a little while still.\r\n\r\nAs this is a hopefully bit more free-wheeling discussion, maybe this is a good place make a note that if someone somewhere is thinking something, a strict class hierarchy that _fixes_ internally everything to .NET platform offering may exclude people building on top abstractions that perhaps could have a bit more breathing room.\r\n\r\nThis is a separate issue from parsing, token creation, validation and those for sure. But this _fixing_ was one of the problems I experienced when I thought that maybe I could reuse the AAD abstractions and plug something else there. Maybe one example still concerning even users of `Microsoft.IdentityModel.Tokens` is how easy is it to plug in Azure HSM (maybe it\u0027s all working nicely these days and I used missed it). Maybe a good abstraction could use them too.\r\n\r\nSpecifically concerning the library I\u0027m building: It seem that AAD owns the MS DID/VC libraries too, while not having a .NET library for that (hence I\u0027m working on one, likely need in the future :)). When someone in MS is considering to write one, maybe it\u0027d be nice if it\u0027d be useable in higher trust/regulated scenarios.\r\n\r\nSome more fringe but useable considerations... Besides, say, using HSMs, someone somewhere may mandate that `mlocked` pages need to be used (on a separate server maybe, but can be a desktop too, as part of some regulated system). We can agree it may not be a splendid idea. Or that using a custom memory pools are too easy to use wrongly. Or maybe using the TPM RNG for some operations (or maybe just something like [here](https://twitter.com/rene_mobile/status/1434053050008756229) `Having separate public and secret RNGs for different purposes (IVs vs. session keys etc) sounds like an excellent defense in depth mitigation.`). But it would be nice too if things like these could be more easily useable.\r\n\r\nI think I don\u0027t have much more to tell here (well, a plead of hands ands minds to https://github.com/microsoft/TSS.MSR :D) and I don\u0027t want to steal the thread. Maybe sufficient to note this is a pain point to other than the OP and the usual well known .NET names in the space. The perspective may be a bit different. There are people who have in passing mentioned building something like https://keylime.dev/ or things related to card payments handling, but are thinking if the .NET environment is too MS centric and fixed to what MS provides and so it\u0027s just too much of an effort to work around issues.\r\n\r\nBesides the already mentioned one, I would like to build maybe something into Orleans grains with the idea of semi-autonomous AI agents but using good abstractions (esp. if [regulated](https://github.com/lumoin/circomy/blob/main/ai/eu-ai-watch.md), and that doesn\u0027t include cybersecurity and digital markets ones coming down too, we probably need to add docs for those later!). Of course this is anedoctal.",
                                           "updatedAt":  "2021-09-05T15:16:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842bfRu",
                                           "createdAt":  "2021-09-05T15:28:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB5dClA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "davidfowl",
                                                                               "createdAt":  "2021-09-05T15:29:19Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "PureKrome",
                                                                               "createdAt":  "2021-09-08T09:34:31Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Some points on logistics:\r\n- The OpenIdConnect and JwtBearer packages have a tight public API coupling to IdentityModel with properties like ConfigurationManager, SecurityTokenValidator, SecurityToken, and TokenValidationParameters. Breaking that API surface, along with the likely behavioral changes of a new implementation, is way beyond our compatibility guidelines.\r\n- This means creating new packages and APIs, either as a fork of the current ones or starting from scratch. The biggest downside I see to that is naming collisions.\r\n- The OpenIdConnect and JwtBearer packages are not part of the shared framework due to the various risks of the external dependency, that makes them easier to replace.\r\n- Nor does anything else in ASP.NET Core depend on these packages except for the templates. Templates can accept breaking changes or provide alternative templates.\r\n- Since we would need new packages and APIs, I recommend starting with some collaborative prototyping in a place like https://github.com/orgs/aspnet-contrib/ where we can all iterate quickly.\r\n\r\nThoughts?",
                                           "updatedAt":  "2021-09-05T15:59:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842bg1c",
                                           "createdAt":  "2021-09-05T16:06:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB6qprw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "lnaie",
                                                                               "createdAt":  "2021-09-05T17:13:06Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "fMichaleczek",
                                                                               "createdAt":  "2021-09-05T18:43:29Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "PureKrome",
                                                                               "createdAt":  "2021-09-08T09:35:34Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "RichiCoder1",
                                                                               "createdAt":  "2021-09-16T17:46:55Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  4
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "\u003e The OpenIdConnect and JwtBearer packages are not part of the shared framework due to the various risks of the external dependency.\r\n\r\nThis says a lot about IdentityModel\u0027s governance when even the ASP.NET team considers IM too risky to have packages that depend on it in the shared framework. Building an abstraction on top of IM would certainly help _advanced_ users opt out of IM, but it wouldn\u0027t solve the root causes we mentioned earlier, as IM would very likely stay the default implementation. At this point, [IM\u0027s governance is still a central point](https://github.com/dotnet/runtime/issues/18945).\r\n\r\nA few concrete proposals that could help improve things:\r\n  - Introducing an \"advisory council\" similar to what was suggested for DI (excellent idea, BTW), where members of the ASP.NET team and external people could help the IM team make the right choices on sensitive design decisions.\r\n  - Transferring the IdentityModel code to the _dotnet/runtime_ repository, where it could be reviewed by members of the .NET team way more easily.\r\n  - Transferring IM\u0027s ownership to the .NET team.\r\n\r\nIt\u0027s definitely something that should be discussed with @jmprieur and @brentschmaltz.",
                                           "updatedAt":  "2021-09-05T16:06:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842bhn3",
                                           "createdAt":  "2021-09-05T16:26:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB51c-g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "lnaie",
                                                                               "createdAt":  "2021-09-05T17:13:51Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "fMichaleczek",
                                                                               "createdAt":  "2021-09-05T18:21:40Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "TanvirArjel",
                                                                               "createdAt":  "2021-09-05T19:31:51Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "karaziox",
                                                                               "createdAt":  "2021-09-06T12:38:24Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "gingters",
                                                                               "createdAt":  "2021-09-08T07:20:31Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "expcat",
                                                                               "createdAt":  "2021-09-10T12:19:41Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  6
                                                         },
                                           "author":  "blowdart",
                                           "body":  "_Introducing an \"advisory council\" similar to what was suggested for DI (excellent idea, BTW), where members of the ASP.NET team and external people could help the IM team make the right choices on sensitive design decisions._\r\n\r\nIf that\u0027s your end goal then **here** is not the place to discuss how other teams should govern themselves.\r\n\r\nGiven that identity model is intimately linked with AAD, it\u0027s not something .NET should own either. We tried that with the WS* stuff before, and it did not work well. And what is up for discussion is _not_ an abstraction over identity model, but something much simpler in terms of abstraction, jwt parsing,\r\n\r\nAs for solving what you see as the root problem, let\u0027s note that it is _advanced users_ that started this discussion and want the opt-out.  I would posit that the vast majority of users don\u0027t care, they just want working ODIC and JWT, and how they get it doesn\u0027t matter.",
                                           "updatedAt":  "2021-09-05T16:28:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842bimq",
                                           "createdAt":  "2021-09-05T16:53:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCHN3_w==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "veikkoeeva",
                                                                               "createdAt":  "2021-09-05T17:11:53Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "lnaie",
                                                                               "createdAt":  "2021-09-05T17:13:22Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "HaraldMuehlhoffCC",
                                                                               "createdAt":  "2021-09-05T17:54:23Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "fMichaleczek",
                                                                               "createdAt":  "2021-09-05T18:21:57Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "abdusco",
                                                                               "createdAt":  "2021-09-05T19:24:26Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "TanvirArjel",
                                                                               "createdAt":  "2021-09-05T19:32:50Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "gingters",
                                                                               "createdAt":  "2021-09-08T07:20:58Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "PureKrome",
                                                                               "createdAt":  "2021-09-08T09:36:51Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "RichiCoder1",
                                                                               "createdAt":  "2021-09-16T17:47:11Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "shumas",
                                                                               "createdAt":  "2021-12-19T15:29:31Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  10
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "\u003e If that\u0027s your end goal then here is not the place to discuss how other teams should govern themselves.\r\n\r\nIt\u0027s more about discussing how such a critical library could stop being exclusively driven by AAD\u0027s needs with no consideration for the impact on external projects. If it\u0027s not here, what\u0027s the right place to discuss that?\r\n\r\n\u003e Given that identity model is intimately linked with AAD, it\u0027s not something .NET should own either.\r\n\r\nThat\u0027s the problem: JWT and OIDC are open standards and it\u0027s regrettable their implementation in .NET is tied to Azure. IdentityModel - that was originally part of the .NET Framework BTW, in case you don\u0027t remember - fills a **critical** role in .NET and it\u0027s not clear to me why the JWT/JWS/JWE implementation couldn\u0027t be owned by .NET.\r\n\r\n\u003e And what is up for discussion is not an abstraction over identity model, but something much simpler in terms of abstraction, jwt parsing,\r\n\r\nIt\u0027s so much more than just \"parsing\", it\u0027s the whole validation stuff you\u0027ll need to abstract and make extensible enough to be as usable as the current implementation.",
                                           "updatedAt":  "2021-09-05T16:53:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842blqC",
                                           "createdAt":  "2021-09-05T18:18:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "You\u0027re conflating two issues. AAD having their own JWT library that\u0027s driven by AAD\u0027s needs (external and internal), and the desire to swap it with something else that isn\u0027t driven by AAD\u0027s needs.\r\n\r\nWe don\u0027t need to abstract validation away if parsing includes validation, it can be an opaque process, controlled by configuration of the implementation class, where its config is set at startup, or though the options patterns. \r\n\r\nConfiguration and validation parameters don\u0027t need to be exposed to the end call site, after all your criticism of the Identity Model doesn\u0027t call for that. That feels quite leaky.\r\n\r\nIf you wanted to add validation external to parsing you might end up with TryParse, TryValidate and that\u0027s it, the internal mechanisms don\u0027t matter to the caller, only the failures that result from failed validation or parsing. \r\n",
                                           "updatedAt":  "2021-09-05T18:18:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842bmON",
                                           "createdAt":  "2021-09-05T18:36:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "\u003e You\u0027re conflating two issues. AAD having their own JWT library that\u0027s driven by AAD\u0027s needs (external and internal), and the desire to swap it with something else that isn\u0027t driven by AAD\u0027s needs.\r\n\r\nI\u0027m not. It\u0027s just that the two are closely related: if IdentityModel didn\u0027t have this governance issue, I doubt anyone would complain. It\u0027s because of that that @leastprivilege suggested we should be able to switch to a different - vendor-neutral - implementation. There\u0027s clearly a cause and effect relationship here.\r\n\r\n\u003e Configuration and validation parameters don\u0027t need to be exposed to the end call site, after all your criticism of the Identity Model doesn\u0027t call for that. That feels quite leaky.\r\n\r\nUnless you design your new stack to only support OIDC configuration discovery and don\u0027t allow tweaking the validation logic (what\u0027s the issuer that is considered valid? do we check the not before/expiration dates? what audiences are allowed, etc.), you\u0027ll need to make basic things configurable via an options-like class, potentially with delegates if more control is needed.\r\n\r\nEven essential things like registering signing or encryption keys will require designing new types if you don\u0027t want to expose IdentityModel\u0027s `EncryptingCredentials`/`SigningCredentials`/`SecurityKey` types.",
                                           "updatedAt":  "2021-09-05T18:41:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842bm23",
                                           "createdAt":  "2021-09-05T18:57:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "_Even essential things like registering signing or encryption keys will require designing new types_\r\n\r\nIf rely on DI to pass it around in ASP.NET (yes, I realise that you may end up wanting it in everything from WinForms to Blazer), you don\u0027t need the types, it\u0027s still just config and/or delegates that can be unique to the actual implementation rather than abstracted away.\r\n\r\nIf we go back to JSON like approach, \r\n\r\n```\r\n    services.AddContosoJwtParser(options =\u003e\r\n        options =\u003e options.SigningCredentials = ....)\r\n```\r\n\r\nbut is that not just sugar really? Just something prettier than adding an IJwtParser into DI for everything to resolve? The System.Text.Json.JsonSerializerOptions is specific to the built in Json classes, just like the SerializerSettings in json.net are specific to json.net - the actual options.SerializerSettings is, in MVC just an object, but it sort of looks like it isn\u0027t during config.\r\n\r\nAnd going back to what most people use JWTs for, it\u0027s parsing/validation still, that\u0027s the main use. Very few people run off manually to refresh keys or credentials, that\u0027s set at startup, and that\u0027s still specific to the actual parser. If the parser wants to run off and grab things from /wellknown, great, internal implementation detail, if it wants to read all the keys from Hashicorp Vault, again, internal implemtation detail. Parsing/Validation from a caller perspective should not need to care.",
                                           "updatedAt":  "2021-09-05T18:57:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842boe7",
                                           "createdAt":  "2021-09-05T19:24:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC89lsA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "brentschmaltz",
                                                                               "createdAt":  "2023-06-01T19:31:18Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "\u003e If rely on DI to pass it around in ASP.NET (yes, I realise that you may end up wanting it in everything from WinForms to Blazer), you don\u0027t need the types, it\u0027s still just config and/or delegates that can be unique to the actual implementation rather than abstracted away.\r\n\r\nUsing DI would be problematic if you wanted to support multiple authentication handlers with different \"parsers\"/\"validators\" (MS\u0027 DI container doesn\u0027t natively support named services). You\u0027d probably want services-as-options here.\r\n\r\n\u003e If we go back to JSON like approach,\r\n\r\nAt this point, if everything is implementation-specific instead of being abstracted and absolutely nothing can be configured without being coupled to a specific \"JWT validator\" implementation, what\u0027s the difference with just rolling your own authentication handler? Genuine question.\r\n\r\nBTW, you say \"JWT parser/validator\", but it\u0027s more than that: the OIDC handler also uses IdentityModel to validate critical parts of the OIDC flow via its `OpenIdConnectProtocolValidator`. If it was something up to the \"JWT implementation\" to do, how would that be better than just creating your own ASP.NET Core authentication handler?\r\n\r\n(since you mentioned MVC, it\u0027s interesting to note that while MVC uses an `object` property, the read/write JSON `HttpContext` extensions introduced more recently are tied to System.Text.Json and don\u0027t use `object`).\r\n\r\nEventually, I find very sad the fact we\u0027re debating about potential designs when the original issue could have been solved by being just a little bit more reasonable... 🤷🏻 ",
                                           "updatedAt":  "2021-09-05T19:24:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842brrv",
                                           "createdAt":  "2021-09-05T20:59:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brentschmaltz",
                                           "body":  "@kevinchalet thanks for including the IdentityModel team on this thread.\r\nThere seems to be an overstatement that the IM is simply servicing AAD and as a secondary function providing 3p support.\r\nIt is actually the reverse. The project (post WCF) was first shipped with Katana and then was a part of the .NET release cycle.\r\nAfter a couple of releases, we thought that we could move faster by decoupling IM from .NET release.\r\nThere are times when AAD specific features need to be added to IM, but we endeavor to make them off by default as we have internal wrappers that set the functionality needed.\r\nWe take feedback,  we are dropping the obsolete PR on TokenValidationParameters.\r\n\r\nThat said it appears there is some disconnect as the comments on this thread make that apparent.\r\nThe IM team is committed to supporting 3p\u0027s and are staffed to do so.\r\n\r\nWe are missing some key abstractions and have somewhat of an uncoordinated options setting structure where for example, JwtBearerOptions has some validation settings that need to be set by reaching down to IM and some on the options.\r\nThat is confusing.\r\n\r\nWe are working on currently working on abstractions that allow for plugging in handling of different protocols and tokens (auth is not just JwtBearer or JwtTokens).\r\nI would love to see some proposals for what the community wants.\r\n\r\n",
                                           "updatedAt":  "2021-09-05T20:59:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842by43",
                                           "createdAt":  "2021-09-06T00:25:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCHN4lQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "shumas",
                                                                               "createdAt":  "2021-12-19T15:35:22Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "\u003e We take feedback, we are dropping the obsolete PR on TokenValidationParameters.\r\n\r\nDo you mean the `Validate*` switches deprecation? If so, that\u0027s great to hear! Such changes should always come with an impact study to ensure they are justified and affect 3rd party projects reasonably (which was not the case, AFAICT).\r\n\r\n\u003e There are times when AAD specific features need to be added to IM, but we endeavor to make them off by default as we have internal wrappers that set the functionality needed.\r\n\r\nIMHO, AAD-specific features should never be implemented in IdentityModel (that must remain as vendor-neutral as possible): they should be implemented higher in the \"Microsoft Identity Web\" stack using the extensibility hooks offered by IdentityModel.\r\n\r\nAs for making these AAD-specific features opt-in, sadly I don\u0027t think it\u0027s true:\r\n  - In 2016, [your team - not you specifically - pushed *very hard* to introduce telemetry in one of IdentityModel\u0027s core types](https://github.com/aspnet/Security/issues/1035). After a lengthy debate, [an opt-out flag had to be introduced in ASP.NET Core to disable telemetry](https://github.com/aspnet/Security/pull/1140).\r\n  - Last month, [additional telemetry was added in the metadata retrieval feature](https://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/pull/1678) without even discussing it publicly. When @brockallen asked for more details, his message was simply ignored. The flag we introduced in 2016 isn\u0027t honored by this new telemetry feature and I didn\u0027t see any ticket/PR in dotnet/aspnet that may indicate you plan to fix that.\r\n\r\nThese changes - made in IdentityModel\u0027s core - were exclusively designed for AAD (no other implementation supports the custom parameters/headers you use), they are not opt-in and they were not announced/discussed prior to being implemented. If @brockallen, @leastprivilege or I didn\u0027t keep an eye on the IdentityModel repo, we wouldn\u0027t even notice them: I\u0027m afraid, it\u0027s just unacceptable.\r\n\r\n\u003e The IM team is committed to supporting 3p\u0027s and are staffed to do so.\r\n\r\nI already said it elsewhere: the situation largely improved since 2015: back then, the IM team was clearly underfunded and didn\u0027t have the HR needed to maintain such a critical stack and I\u0027m glad to see it\u0027s no longer true. I\u0027m also very happy you merged the PRs I sent last year and took my feedback into consideration, it\u0027s clearly very positive.\r\n\r\nStill, the main problem remains and every time an AAD-specific thing lands in IdentityModel, the confidence 3rd-party developers have in IM is impacted... to the point where major projects would like to get rid of it. This needs to change.\r\n\r\n(BTW, this thread focuses on IM, but the \"push AAD stuff everywhere\" movement is certainly not specific to IM: even the SQL client has a hard dependency on MSAL, which is unacceptable too: https://twitter.com/kevin_chalet/status/1434565739898449927)",
                                           "updatedAt":  "2021-09-06T00:25:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842b1V1",
                                           "createdAt":  "2021-09-06T01:04:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brentschmaltz",
                                           "body":  "@kevinchalet thanks for the feedback.\r\nYes, the Validate* deprecation PR will not go through as a result of feedback from you, brock and leastpriviledge and others.\r\n\r\nI agree with you that our design strategy should be to make only the necessary changes to enable AAD required features possible and leave them off. The 2016 fix with telemetry was a case we don\u0027t want to repeat. \r\nThis time we  worked with @Tratcher to make sure we had the control in place.,\r\n\r\nYou are correct that we have much better funding now.\r\n\r\n\u003e Still, the main problem remains and every time an AAD-specific thing lands in IdentityModel, the confidence 3rd-party developers have in IM is impacted... to the point where major projects would like to get rid of it. This needs to change.\r\n\r\nWe have developed an internal layer on top of IM that has multiple features for AAD and plan on keeping AAD specific features for 1p\u0027s in that area.\r\nIt also plugs into the asp.net as the authentication layer.\r\nIt solves a number of interesting problems, we are factoring out the 1p\u0027s specific features and will be introducing the model this year.\r\n\r\nWhat is the best way to move forward so that we get the right product for everyone?\r\n",
                                           "updatedAt":  "2021-09-06T01:05:39Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842d3WQ",
                                           "createdAt":  "2021-09-06T18:12:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCHN44w==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "PureKrome",
                                                                               "createdAt":  "2021-09-08T09:44:51Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "PureKrome",
                                                                               "createdAt":  "2021-09-08T09:44:53Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "poke",
                                                                               "createdAt":  "2021-09-14T21:34:05Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "sentai77",
                                                                               "createdAt":  "2021-10-12T20:49:40Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "shumas",
                                                                               "createdAt":  "2021-12-19T15:38:09Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  5
                                                         },
                                           "author":  "leastprivilege",
                                           "body":  "Unfortunately this thread went into too many different directions - let me try to consolidate...\r\n\r\nMy initial reason for opening this issue was\r\n\r\n* I have an ongoing frustration with the *Wilson* set of libraries for the reasons mentioned in the OP. If I could replace it, I would (but honestly not sure with what).\r\n* there are other JWT libraries out there - but replacing the AAD JWT lib is not possible because of the tight coupling in ASP.NET Core (I do not agree with @Tratcher that e.g. the OIDC handler is just a thin wrapper over the underlying JWT / protocol libraries. This might be more true for JwtBearer - but the OIDC one is pretty involved)\r\n\r\nTbh - the biggest problems we had upgrading our code over the last ASP.NET Core versions was always Wilson. Again and again.\r\n\r\nBut once I thought about it a bit more - the issue is much more complicated. In a nutshell, it was a mistake from day 1 that the ASP.NET Core team did not invest in their own OIDC client plumbing.\r\n\r\nThere is no way to make all this pluggable in ASP.NET Core (at least in a feasible time frame) - OIDC discovery document parsing, OIDC protocol message creation and parsing, JWT parsing etc... it\u0027s all outsourced (and tightly coupled)\r\n\r\nSo yes - it crossed my mind if JWT should be part of the BCL. I think it should. It should be a compact and concise implementation of the spec - no opinions. After all JWT is \"just\" a signature/encryption wrapper for JSON objects. But there is a lot of other complexities as well - JWS, JWE, JWK etc. These things don\u0027t exist isolated and must be somehow interoperable with the other OIDC plumbing.\r\n\r\nThis is a multi-year effort and we in particular have \"advanced\" use-cases which will not be the 80/20 target of the next versions of .NET.\r\n\r\nNow looking at other JWT implementations - I am bit scared when I see the \"hand rolled\" crypto. I was very tempted to create my own JWT handler on top of the Wilson crypto primitives. But I do not have the time for that.\r\n\r\nSo to conclude - I just wish Wilson would stop changing their APIs and keep the package more stable and reliable - and at the same time remove all that AAD specific stuff like e.g. telemetry (I mean the ridiculousness of claim mapping defaults is another good example). All efforts should go into their new JsonWebTokenHandler - and ASP.NET Core should switch to their new plumbing (again - this is not possible today).\r\n\r\nAt the same time the BCL needs a JWT implementation going forward - one that is going through the high standards of security testing that I would expect from Microsoft. If that base library is done right - opinionated semantics could be added at the app level.\r\n\r\n...and no - I don\u0027t think I will do an initial API proposal - but I am happy to be involved (in some capacity) in this effort ;) @davidfowl \r\n\r\n\r\n\r\n\r\n",
                                           "updatedAt":  "2021-09-06T18:16:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842d4wZ",
                                           "createdAt":  "2021-09-06T18:29:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "The issue/API needs a champion and it needs to be filed in the right place. Otherwise this will just be a discussion issue. ",
                                           "updatedAt":  "2021-09-06T18:30:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842d7hC",
                                           "createdAt":  "2021-09-06T19:06:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "leastprivilege",
                                           "body":  "\u003e The issue/API needs a champion and it needs to be filed in the right place. Otherwise this will just be a discussion issue.\r\n\r\nok - then feel free to close it.",
                                           "updatedAt":  "2021-09-06T19:06:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842fny5",
                                           "createdAt":  "2021-09-07T12:24:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "@davidfowl The right place is a discussion all to itself, given there are two things in one issue here, JWT and ODIC. The only place that uses them right now is ASP.NET, but, in much the same way we have a JSON parser, an actual implementation of a JWT is probably best outside of ASP.NET because no-one wants to bring in the weight of that into, say, a Winforms project. OIDC on the other hand may well be best off inside ASP.NET, until you think about mobile apps, but they way they handle logins is often through an embedded browser.\r\n\r\nI can certainly champion the issue, but it needs careful design, and that\u0027s a heavy weight for the community to do, both in terms of time, and money. A good start for asp.net may be moving the middleware to use the new abstractions that frankly I didn\u0027t even know existed, but that still leaves the abstractions in assemblies that move at a different pace to the framework. It could be worth investigation moving the abstrations out into asp.net and pivoting the middleware to use them as a starting point. If we have the abstractions nestled into asp.net they\u0027ll move at the same pace, and breaking changes would be reduced and come under a more semanticly versioned and governed space.",
                                           "updatedAt":  "2021-09-07T12:24:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842gPvf",
                                           "createdAt":  "2021-09-07T15:49:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brentschmaltz",
                                           "body":  "\u003e (I mean the ridiculousness of claim mapping defaults is another good example). All efforts should go into their new JsonWebTokenHandler -\r\n\r\n@leastprivilege it\u0027s time to put the claim mapping to bed, beating that dead horse doesn\u0027t help. That was a different time and place, we acknowledge that decision caused issues and have workarounds. The new JsonWebTokenHandler did not follow that pattern\r\n\r\n\u003e JWT and ODIC. The only place that uses them right now is ASP.NET,\r\n\r\nThere is wider use of IM then just ASP.NET\r\n\r\n\u003eit was a mistake from day 1 that the ASP.NET Core team did not invest in their own OIDC client plumbing.\r\n\r\nThe OIDC middleware for asp.net was developed with the asp.net team.\r\n\r\n\u003e  I just wish Wilson would stop changing their APIs and keep the package more stable and reliable\r\n\r\nWe do have strong api back-compat, but there are runtime concerns. A while back i suggested that we are open to the idea of users adding scenario tests that if broken would block the release until the scenario owner signs off. We didn\u0027t go very far with that, this may be a beneficial investment.\r\n\r\nI see frustration focusing on out of scope features such as telemetry and such items was internalizing Newtonsoft, which caught everyone by surprise.\r\n\r\nWe need better communication and an IM release model that ensures external scenarios are not broken.  \r\n\r\n\r\n\r\n\r\n\r\n\r\n",
                                           "updatedAt":  "2021-09-07T15:49:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842iOe-",
                                           "createdAt":  "2021-09-08T06:00:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB6Va0A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "rymeskar",
                                                                               "createdAt":  "2021-09-08T09:47:18Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "PureKrome",
                                                                               "createdAt":  "2021-09-08T09:48:54Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "luber",
                                                                               "createdAt":  "2021-09-08T10:31:12Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "brockallen",
                                                                               "createdAt":  "2021-09-08T12:50:28Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "khalidabuhakmeh",
                                                                               "createdAt":  "2021-09-09T16:41:57Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "expcat",
                                                                               "createdAt":  "2021-09-10T12:23:26Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "PureKrome",
                                                                               "createdAt":  "2021-09-11T00:13:57Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "poke",
                                                                               "createdAt":  "2021-09-14T21:45:10Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  8
                                                         },
                                           "author":  "leastprivilege",
                                           "body":  "I think sometimes discussions are better than inventing new APIs. Especially if they bring all the parties to the table.\r\n\r\nIt sounds like everybody here on this thread wants to do the right thing. While JWT handling is very important, implementing it is a multi-year effort. The Wilson team has already 10 years of investment in that space. At the same time .NET and ASP.NET in particular needs a good and modern JWT/OIDC implementation that is not riddled by internal Microsoft management challenges.\r\n\r\nSo let me summarize what I think is necessary going forward:\r\n\r\nThe Wilson team\r\n\r\n* will respect SemVer and not introduce breaking changes in minor and patch releases anymore – both from an API surface and functional perspective\r\n* remove all AAD specific features from the core library, e.g. remove all telemetry\r\n* be spec compliant (e.g. implement the resource parameters according to the spec and not according to how AAD is using it)\r\n* Maybe even moving the core libs and abstractions to MS OpenTech/DNF could be considered\r\n* prioritize fixing the JSON problems and move to the modern JSON APIs\r\n* establish a better communication with its users beyond the AAD team\r\n    * e.g. discuss if we should start over with the TokenValidationParameters plumbing for JsonWebTokenHandler\r\n* JsonWebToken/Handler does not need to be backwards compat with .NET Framework - remove all the netfx/nestandard complexity and focus on the latest and greatest in crypto, JSON, logging etc.\r\n\r\nThe ASP.NET team will\r\n\r\n* switch to JsonWebToken/JsonWebTokenHandler since this is the new stack where all the innovation goes to\r\n    * this would also put pressure on the Wilson team to focus on the new plumbing and make above mentioned quality guarantees\r\n\r\n\r\n\u003e A while back i suggested that we are open to the idea of users adding scenario tests that if broken would block the release until the scenario owner signs off. We didn\u0027t go very far with that, this may be a beneficial investment.\r\n\r\nWe did exactly this in IdentityServer because of the quality issues. We have several tests that just make sure the JSON still looks like what we expect...so yes, this is a good idea. You should start with writing JSON/JWT round-tripping tests, if they would exist, some of the problems could have been caught before release.\r\n\r\nDoes this sound like a foundation for a new discussion? @brentschmaltz @blowdart @Tratcher @davidfowl \r\n",
                                           "updatedAt":  "2021-09-08T07:18:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842qG_A",
                                           "createdAt":  "2021-09-10T15:46:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brentschmaltz",
                                           "body":  "@leastprivilege in general i agree with you, we need this conversation.\r\nIn general, the IM team wants our work to be tied to standards. Our early work was influenced by Ws* and we have had an interesting transition moving away from Ws* designs while still maintaining some support for SAML tokens, dsig and WsFed.\r\n\r\n\u003e You should start with writing JSON/JWT round-tripping tests, if they would exist, some of the problems could have been caught before release.\r\n\r\nWe have developed a system using a home grown IdentityComparer that helps us ensure the round-trip is as expected see:  \r\n[Tests](https://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/blob/5a77aab7b2074782bc097c58ffaf220ee564595b/test/Microsoft.IdentityModel.JsonWebTokens.Tests/JsonWebTokenHandlerTests.cs#L1741)\r\n\r\nWhat i was encouraging is that users can add some important tests for their scenarios that we add to our release process.\r\n\r\n\u003eswitch to JsonWebToken/JsonWebTokenHandler \r\n\r\nThis needs to be the long term goal.  The IM team has identified some blockers that need to be implemented first. Some implementations leaked during our early development. Our performance runs are showing up to a 50% improvement. \r\n\r\n \u003eremove all AAD specific features from the core library, e.g. remove all telemetry\r\n\r\nThe only item i am aware of is the telemetry. While we can\u0027t remove this, we can make sure that it is opt-in. We have internal layers that can turn it on for our 1p hosts. Asp.net can ensure it is off by default.\r\n\r\nBrent",
                                           "updatedAt":  "2021-09-10T15:46:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842rX2G",
                                           "createdAt":  "2021-09-11T04:46:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "PureKrome",
                                           "body":  "\u003e While we can\u0027t remove this, we can make sure that it is opt-in.\r\n\r\n**Can\u0027t** or **Don\u0027t want to** ? I think people would really appreciate the clarification/confirmation.\r\n\r\nEDIT: Also, I\u0027m not trolling - It\u0027s an honest question.",
                                           "updatedAt":  "2021-09-11T04:46:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842sp88",
                                           "createdAt":  "2021-09-12T17:19:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB5-ggA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "PureKrome",
                                                                               "createdAt":  "2021-09-12T22:46:54Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "brentschmaltz",
                                           "body":  "@PureKrome We would like to if possible. I haven\u0027t studied the call graph yet to see if it is possible. It\u0027s actually very valuable when a an important improvement arises to know the exact version of a library being used.\r\nBy reviewing the telemetry and mapping to the application id, one can inform application owners. It\u0027s not always simple to know what version of libraries applications are using. ",
                                           "updatedAt":  "2021-09-12T17:19:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842tWtn",
                                           "createdAt":  "2021-09-13T05:42:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "leastprivilege",
                                           "body":  "\u003e By reviewing the telemetry and mapping to the application id, one can inform application owners. It\u0027s not always simple to know what version of libraries applications are using.\r\n\r\nSure - but this is not part of the RFC/spec - this is an AAD-specific product feature. Make it an extensibility point.",
                                           "updatedAt":  "2021-09-13T05:42:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842y-Gc",
                                           "createdAt":  "2021-09-14T16:49:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brentschmaltz",
                                           "body":  "@leastprivilege I always push back against any work that is not per spec (unless we all agree, lax on receive for example). There are other voices that have influence, currently i do have some influence and will try and hold the line. If there is a need for some odd behavior, we will need to mark the \u0027issue\u0027 and \u0027pr\u0027 in such a way that interested parties can chime in so there are no surprises.  Currently i do not see any items on the docket, but we all have work to do and smoothing this out will benefit us all.\r\n\r\nHow can we get folks involved in big issues? \r\nFor example, the change to JsonClaimSet using System.Json.Text is a big change, we want to make sure the dev community has opportunity to help us get it right. First step is for us to publish a design with intent, i suppose.  ",
                                           "updatedAt":  "2021-09-14T16:49:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842387E",
                                           "createdAt":  "2021-09-16T07:10:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "leastprivilege",
                                           "body":  "\u003e I always push back against any work that is not per spec (unless we all agree, lax on receive for example)\r\n\r\nThat this is even needed is part of the problem. What is \"lax on receive\"?\r\n\r\n\u003e There are other voices that have influence, currently i do have some influence and will try and hold the line.\r\n\r\nIf you cannot get \"management buy-in\" that the standards parts and AAD must be separate. We are back to square 1.\r\n\r\n\u003e We have developed a system using a home grown IdentityComparer\r\n\r\nThat seems to test at the claims level - thats good - but first of all you need to test at the JSON text level.\r\n\r\n\u003e How can we get folks involved in big issues? First step is for us to publish a design with intent, i suppose.\r\n\r\nYes. Open an issue. Write a proposal. Document the change and API usage. Then we can discuss. Feel free to tag me.",
                                           "updatedAt":  "2021-09-16T07:10:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde843ZX18",
                                           "createdAt":  "2021-09-28T16:43:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brentschmaltz",
                                           "body":  "@leastprivilege (been on vacation :-)\r\n\"lax on receive\" can be simply we accept \"BEArer\", \"beaRer\" for the protocol name. Or more complicated, if a SAML id is not a UUID but still matches the reference id, we will use it.\r\n\r\n\"management but-in\" management is bought into respecting standards.\r\nWe cannot remove features, such as what we have in telemetry. When we need special feature such as when we added this for some internal needs,  https://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/commit/be1c621755848b38ca3222f52d01465fef9b3189 we did it in such a way that is is opt-in.\r\nI also what to note, internal 1ps will have to write some unnatural code to make it work.\r\n\r\n\"proposal\" - yes that is needed and will help us create a better product.",
                                           "updatedAt":  "2021-09-28T16:43:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde844Ay3L",
                                           "createdAt":  "2021-10-11T06:46:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB9uyaA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "PureKrome",
                                                                               "createdAt":  "2021-10-11T08:37:22Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "leastprivilege",
                                           "body":  "Any progress on this?",
                                           "updatedAt":  "2021-10-11T06:46:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde844PIoM",
                                           "createdAt":  "2021-10-14T15:55:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCBQe_g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "PureKrome",
                                                                               "createdAt":  "2021-10-14T23:47:42Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "RichiCoder1",
                                                                               "createdAt":  "2021-11-04T20:15:48Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "brentschmaltz",
                                           "body":  "@leastprivilege i believe we are on the same page. Current management want us to be spec compliant and put any AAD specific features as opt-in or in separate internal libraries.\r\n\r\nWe are completing a proposal along with a proof-of-concept for improving the JsonWebToken so that it depends on System.Text.Json and working on providing a solution for asp.net developers to move off of JwtSecurityToken.\r\n\r\n\r\nI will tag @leastprivilege , @kevinchalet\r\nAnyone else that wants to be tagged, please add a comment here.",
                                           "updatedAt":  "2021-10-14T15:55:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde846_GUU",
                                           "createdAt":  "2021-12-09T08:23:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "leastprivilege",
                                           "body":  "Are we making any progress on the criticism in this thread? \r\n\r\n* JSON handling is still broken\r\n* things like the standard resource parameter are still not implemented\r\n\r\n\u003e \"lax on receive\" can be simply we accept \"BEArer\", \"beaRer\" for the protocol name.\r\n\r\nAre you serious?\r\n\r\nTbh - maybe there should be an issue in the JWT handler repo to continue the discussion.",
                                           "updatedAt":  "2021-12-09T08:23:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde848VuBt",
                                           "createdAt":  "2022-01-13T16:59:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brentschmaltz",
                                           "body":  "@leastprivilege \r\n\r\n\u003e \"lax on receive\" ...\r\nYeah, serious about this, i don\u0027t think it\u0027s an interesting conversation.\r\n\r\nWe have made progress on using System.Text.Json and we are investing in separating AAD requirements into its own layer.\r\n  \r\n\r\n ",
                                           "updatedAt":  "2022-01-13T16:59:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85NVKAL",
                                           "createdAt":  "2022-10-31T17:00:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `.NET 8 Planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2022-10-31T17:00:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85VfbMG",
                                           "createdAt":  "2023-02-17T08:37:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "leastprivilege",
                                           "body":  "Just stumbled over this - over one year later. \r\n\r\nMaybe I am wrong - but it seems the situation has not improved in any way...",
                                           "updatedAt":  "2023-02-17T08:37:54Z"
                                       }
                                   ],
                         "totalCount":  43
                     },
        "title":  "ASP.NET Core OIDC/JWT Handlers should not have a direct dependency on the AAD JWT Library",
        "labels":  [
                       "Needs: Design",
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/36645",
        "createdAt":  "2021-09-17T08:18:01Z",
        "number":  36645,
        "author":  "rubber-duck",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-09-17T20:06:03Z",
        "body":  "## Background and Motivation\r\n\r\nIn the official documentation [example](\r\nhttps://docs.microsoft.com/en-us/aspnet/core/security/authorization/customizingauthorizationmiddlewareresponse?view=aspnetcore-5.0) on how to handle special cases in AuthorizationMiddleware have this code to extended the default `IAuthorizationMiddlewareResultHandler` : \r\n\r\n```c#\r\npublic class MyAuthorizationMiddlewareResultHandler : IAuthorizationMiddlewareResultHandler\r\n{\r\n    private readonly AuthorizationMiddlewareResultHandler DefaultHandler = new AuthorizationMiddlewareResultHandler();\r\n    \r\n    public async Task HandleAsync(\r\n        RequestDelegate requestDelegate,\r\n        HttpContext httpContext,\r\n        AuthorizationPolicy authorizationPolicy,\r\n        PolicyAuthorizationResult policyAuthorizationResult)\r\n    { \r\n        ...\r\n        // Fallback to the default implementation.\r\n        await DefaultHandler.HandleAsync(requestDelegate, httpContext, authorizationPolicy, \r\n                               policyAuthorizationResult);\r\n    }\r\n}\r\n```\r\n\r\n## Proposed API\r\n\r\n```C#\r\nnamespace Microsoft.AspNetCore.Authorization.Policy\r\n{\r\n    public class AuthorizationMiddlewareResultHandler : IAuthorizationMiddlewareResultHandler\r\n    {\r\n        /// \u003cinheritdoc /\u003e\r\n        public virtual async Task HandleAsync(RequestDelegate next, HttpContext context, AuthorizationPolicy policy, PolicyAuthorizationResult authorizeResult)\r\n        {\r\n            ...\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n## Usage Examples\r\n\r\n``` C#\r\npublic class MyAuthorizationMiddlewareResultHandler : AuthorizationMiddlewareResultHandler\r\n{\r\n    public override async Task HandleAsync(\r\n        RequestDelegate requestDelegate,\r\n        HttpContext httpContext,\r\n        AuthorizationPolicy authorizationPolicy,\r\n        PolicyAuthorizationResult policyAuthorizationResult)\r\n    { \r\n        ...\r\n        // Fallback to the default implementation.\r\n        await base.HandleAsync(requestDelegate, httpContext, authorizationPolicy, \r\n                               policyAuthorizationResult);\r\n    }\r\n}\r\n```\r\n\r\n## Risks\r\n\r\nI can\u0027t see any, maybe some performance regression if JIT can devirtualize the first scenario but not the second ?",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHONvVg0A==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde8429WBK",
                                           "createdAt":  "2021-09-17T20:05:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "adityamandaleeka",
                                           "body":  "Triage: moving this to backlog. We may consider this if we get more feedback requesting it.",
                                           "updatedAt":  "2021-09-17T20:05:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde8429WDQ",
                                           "createdAt":  "2021-09-17T20:06:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2021-09-17T20:06:03Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Make AuthorizationMiddlewareResultHandler.HandleAsync virtual",
        "labels":  [
                       "area-auth",
                       "api-suggestion"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/38467",
        "createdAt":  "2021-11-17T08:38:09Z",
        "number":  38467,
        "author":  "karun-verghese",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC2bJoA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "QuentinJones",
                                            "createdAt":  "2022-10-24T21:48:20Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "jawand",
                                            "createdAt":  "2023-01-15T09:07:38Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "salimchemes",
                                            "createdAt":  "2023-02-15T16:36:00Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "cdschneider",
                                            "createdAt":  "2023-03-06T15:35:23Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "zdenek-jelinek",
                                            "createdAt":  "2024-03-10T13:49:47Z"
                                        }
                                    ],
                          "totalCount":  5
                      },
        "updatedAt":  "2025-08-22T18:00:47Z",
        "body":  "Dear all,\r\n\r\nWe have a .NET Core Web API service which makes use of the Authentication middleware readily available with .NET 5.0. In our service we have registered 4 different jwt bearer authentication schemes on startup of the service, (why? - that\u0027s because we are in the process of migrating from two older identity providers to two newer ones. For example, we are migrating from Azure AD V1 auth endpoints to the Microsoft Identity Platform (V2)). \r\n\r\nIn a number of our deployments we see TaskCanceled exceptions with the below stack trace, when certain api\u0027s are called. The api\u0027s are all protected by an [Authorize] attribute which makes use of the aforementioned auth schemes that are registered at startup\r\n\r\nDetails of the service:\r\nSDK version: .NET 5.0.401\r\nBase docker image: mcr.microsoft.com/dotnet/aspnet:5.0.10\r\n\r\n We always seem to have 2 of these exceptions thrown simultaeneously:\r\n\r\n```\r\nSystem.Threading.Tasks.TaskCanceledException:\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1+\u003cGetConfigurationAsync\u003ed__24.MoveNext (Microsoft.IdentityModel.Protocols, Version=6.7.1.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler+\u003cHandleAuthenticateAsync\u003ed__6.MoveNext (Microsoft.AspNetCore.Authentication.JwtBearer, Version=5.0.10.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler+\u003cHandleAuthenticateAsync\u003ed__6.MoveNext (Microsoft.AspNetCore.Authentication.JwtBearer, Version=5.0.10.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1+\u003cAuthenticateAsync\u003ed__48.MoveNext (Microsoft.AspNetCore.Authentication, Version=5.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationService+\u003cAuthenticateAsync\u003ed__14.MoveNext (Microsoft.AspNetCore.Authentication.Core, Version=5.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Authorization.Policy.PolicyEvaluator+\u003cAuthenticateAsync\u003ed__2.MoveNext (Microsoft.AspNetCore.Authorization.Policy, Version=5.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware+\u003cInvoke\u003ed__6.MoveNext (Microsoft.AspNetCore.Authorization.Policy, Version=5.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware+\u003cInvoke\u003ed__6.MoveNext (Microsoft.AspNetCore.Authentication, Version=5.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Startup+\u003c\u003ec+\u003c\u003cConfigure\u003eb__9_0\u003ed.MoveNext\r\n   ```\r\n   \r\n   And the second exception stack trace:\r\n   \r\n```\r\n  System.Threading.Tasks.TaskCanceledException:\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1+\u003cGetConfigurationAsync\u003ed__24.MoveNext (Microsoft.IdentityModel.Protocols, Version=6.7.1.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler+\u003cHandleAuthenticateAsync\u003ed__6.MoveNext (Microsoft.AspNetCore.Authentication.JwtBearer, Version=5.0.10.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n```\r\n   \r\n   The troublesome thing is that I can\u0027t seem to reproduce this error intentionally. We set up suitable load tests to test the affected api\u0027s, but we don\u0027t seem to be able to reproduce the failures as part of the load tests, but the errors keep happening in the same environments. As far as I can tell we have configured the middleware correctly as for the majority of our calls we are able to authenticate and authorize correctly (we have automated tests testing various scenarios).\r\n   \r\n   But in certain sporadic cases, we get these exceptions.  ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOiCAomQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde84567l6",
                                           "createdAt":  "2021-11-17T16:32:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Those look like they\u0027re coming from this line:\r\nhttps://github.com/dotnet/aspnetcore/blob/c6a270f7ddcc45e4ba6884ef72ffc28a54d76e51/src/Security/Authentication/JwtBearer/src/JwtBearerHandler.cs#L95\r\n\r\nThe CancellationToken passed in is HttpContext.RequestAborted which fires if the client disconnects mid operation. If you enable debug level server logs you should see other disconnect related logs around this. Do you have clients that are prone to disconnecting?",
                                           "updatedAt":  "2021-11-17T16:32:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde8459vBG",
                                           "createdAt":  "2021-11-18T03:24:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "karun-verghese",
                                           "body":  "@Tratcher thanks for the reply, I am still trying to determine this at the time of typing this message. Thanks for the tip on the debug logs, I will come back if I can find anything. Do you know if there\u0027s a way I can simulate a client that disconnects in the middle of the api call?",
                                           "updatedAt":  "2021-11-18T03:24:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde845-BjT",
                                           "createdAt":  "2021-11-18T05:53:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC5AVCQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "abdulmoizlogiciel",
                                                                               "createdAt":  "2023-03-31T20:19:57Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "You can make the API call with a client like HttpClient or Curl and then cancel it.",
                                           "updatedAt":  "2021-11-18T05:53:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde845-B6r",
                                           "createdAt":  "2021-11-18T05:57:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "karun-verghese",
                                           "body":  "@Tratcher thanks, I did something similar, but I had to adjust the response timeout on my client to 20ms to cancel it and see this error. I am now able to reproduce the error. So am I right in understanding that this is expected behaviour right? The cancellation token is being invoked as the client has cancelled the request? \r\n\r\nCan you point me to any articles/resources on how to better handle this scenario? Maybe I need to configure a custom delegate for the OnAuthenticationFailed event while registering my authentication scheme?",
                                           "updatedAt":  "2021-11-18T05:57:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde845-CkL",
                                           "createdAt":  "2021-11-18T06:03:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "This is expected behavior, and the exception is mainly noise in the app since the client has already disconnected. I\u0027ll talk to @blowdart and we\u0027ll see what we can do to avoid that.",
                                           "updatedAt":  "2021-11-18T06:03:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde846FUYl",
                                           "createdAt":  "2021-11-19T21:06:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "Less noise is good",
                                           "updatedAt":  "2021-11-19T21:06:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde846FUZ4",
                                           "createdAt":  "2021-11-19T21:07:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `.NET 7 Planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2021-11-19T21:07:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde846Kpj3",
                                           "createdAt":  "2021-11-22T19:59:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Options:\r\nA) Don\u0027t pass the RequestAborted CT to GetConfigurationAsync. Config is cached so even if the client disconnects, completing this operation will still have value. We should make sure there\u0027s another timeout though.\r\nB) IdentityModel has some changes in flight to fall back to a last-known-good configuration so validation could proceed even if this call failed.",
                                           "updatedAt":  "2021-11-22T19:59:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85KDu6h",
                                           "createdAt":  "2022-09-09T21:24:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `.NET 8 Planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2022-09-09T21:24:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85V9foC",
                                           "createdAt":  "2023-02-23T17:44:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "chungvodim",
                                           "body":  "This piece of code is not locked properly:\r\n```\r\npublic override void RequestRefresh()\r\n        {\r\n            DateTimeOffset now = DateTimeOffset.UtcNow;\r\n            if (_isFirstRefreshRequest)\r\n            {\r\n                _syncAfter = now;\r\n                _isFirstRefreshRequest = false;\r\n            }\r\n            else if (now \u003e= DateTimeUtil.Add(_lastRefresh.UtcDateTime, RefreshInterval))\r\n            {\r\n                _syncAfter = now;\r\n            }\r\n        }\r\n```\r\nSo if the condition `(now \u003e= DateTimeUtil.Add(_lastRefresh.UtcDateTime, RefreshInterval))` is satisfied =\u003e  `_syncAfter = now`\r\nThis reset will allow awaiting threads that are trying to invoke the function `GetConfigurationAsync` to call `await _configRetriever.GetConfigurationAsync`.",
                                           "updatedAt":  "2023-02-23T18:14:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85V9gz3",
                                           "createdAt":  "2023-02-23T17:48:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "chungvodim",
                                           "body":  "- RequestRefresh: https://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/blob/9e6f90a9a8032107af6f5c851e9d257f4c6c8fdc/src/Microsoft.IdentityModel.Protocols/Configuration/ConfigurationManager.cs#L187-L199\r\n- GetConfigurationAsync : https://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/blob/9e6f90a9a8032107af6f5c851e9d257f4c6c8fdc/src/Microsoft.IdentityModel.Protocols/Configuration/ConfigurationManager.cs#L125-L166",
                                           "updatedAt":  "2023-02-23T17:48:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85V9iqv",
                                           "createdAt":  "2023-02-23T17:54:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "@chungvodim that doesn\u0027t seem related to this issue? Please open a new issue in AzureAd.\r\n\r\nI think I see how this could cause duplicate refreshes, but does that break anything?",
                                           "updatedAt":  "2023-02-23T17:54:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85V9m-6",
                                           "createdAt":  "2023-02-23T18:07:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "chungvodim",
                                           "body":  "Hi @Tratcher , we\u0027re facing this issue\r\n```System.OperationCanceledException: The operation was canceled.\r\n   at System.Threading.CancellationToken.ThrowOperationCanceledException()\r\n   at System.Threading.SemaphoreSlim.WaitUntilCountOrTimeoutAsync(TaskNode asyncWaiter, Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)\r\n   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()\r\n```\r\nand\r\n```\r\nSystem.OperationCanceledException: The operation was canceled.\r\n   at void System.Threading.CancellationToken.ThrowOperationCanceledException()\r\n   at async Task\u003cbool\u003e System.Threading.SemaphoreSlim.WaitUntilCountOrTimeoutAsync(TaskNode asyncWaiter, int millisecondsTimeout, CancellationToken cancellationToken)\r\n   at async Task\u003cT\u003e Microsoft.IdentityModel.Protocols.ConfigurationManager\u003cT\u003e.GetConfigurationAsync(CancellationToken cancel)\r\n   at async Task\u003cAuthenticateResult\u003e Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync() x 2\r\n   at async Task\u003cAuthenticateResult\u003e Microsoft.AspNetCore.Authentication.AuthenticationHandler\u003cTOptions\u003e.AuthenticateAsync()\r\n   at async Task\u003cAuthenticateResult\u003e Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, string scheme)\r\n   at async Task Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at async Task Microsoft.AspNetCore.ResponseCompression.ResponseCompressionMiddleware.Invoke(HttpContext context)\r\n```",
                                           "updatedAt":  "2023-02-23T18:17:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85V9qjX",
                                           "createdAt":  "2023-02-23T18:20:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "So you\u0027re experiencing the original issue which is normally caused by a canceled client request, but how does the thread safety affect that? Worst case you\u0027d get multiple refreshes happening in parallel, they\u0027d all still be subject to the cancellation issue.",
                                           "updatedAt":  "2023-02-23T18:20:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85V9vrH",
                                           "createdAt":  "2023-02-23T18:35:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "chungvodim",
                                           "body":  "If there are too many awaiting requests due to the lock `await _refreshLock.WaitAsync(cancel).ConfigureAwait(false);` of the function [GetConfigurationAsync](https://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/blob/9e6f90a9a8032107af6f5c851e9d257f4c6c8fdc/src/Microsoft.IdentityModel.Protocols/Configuration/ConfigurationManager.cs#L125-L166) =\u003e System.Threading.SemaphoreSlim.WaitUntilCountOrTimeoutAsync will throw OperationCanceledException. \r\nIf the `_syncAfter` variable is not reset to `now` by the function [RequestRefresh](https://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/blob/9e6f90a9a8032107af6f5c851e9d257f4c6c8fdc/src/Microsoft.IdentityModel.Protocols/Configuration/ConfigurationManager.cs#L187-L199) so it doesn\u0027t matter at all. But if _syncAfter is continuously reset to `now` (due to failed authorized requests) =\u003e Every threads that accesses the `_refreshLock` will invoke `await _configRetriever.GetConfigurationAsync`. \r\nAssuming each external call takes 1 second =\u003e the 60th thread must wait 60 seconds.",
                                           "updatedAt":  "2023-02-23T18:48:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85V-IdC",
                                           "createdAt":  "2023-02-23T19:54:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC2p61g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "chungvodim",
                                                                               "createdAt":  "2023-02-23T20:30:39Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "RequestRefresh is supposed to update _syncAfter. Any request after that gets queued waiting for new config. That\u0027s by design, though there\u0027s some plans to allow requests to continue with the last known good config.\r\n\r\nOne place I see that could be improved is here:\r\nhttps://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/blob/9e6f90a9a8032107af6f5c851e9d257f4c6c8fdc/src/Microsoft.IdentityModel.Protocols/Configuration/ConfigurationManager.cs#L136-L143\r\nRight now it assumes the _refreshLock is acquired quickly and `now` still current. However, if the refresh takes too long and/or there\u0027s lock contention, then `now` could be outdated. `now should be updated inside the lock (line 136), and again after the refresh finishes (line 143). Once the refresh completes that should help all other requests waiting on the lock to quickly exit.\r\n\r\nThe only other thing that could be changed is to protect RequestRefresh with _refreshLock, but that risks blocking threads that don\u0027t really need to wait for the refresh to happen.",
                                           "updatedAt":  "2023-02-23T19:54:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85V-Si3",
                                           "createdAt":  "2023-02-23T20:31:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "chungvodim",
                                           "body":  "- `now should be updated inside the lock (line 136)` \u003c= I absolutely agree with this great idea.\r\n- `The only other thing that could be changed is to protect RequestRefresh with _refreshLock, but that risks blocking threads that don\u0027t really need to wait for the refresh to happen` \u003c= Thanks for your call out",
                                           "updatedAt":  "2023-02-23T20:32:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85V-djd",
                                           "createdAt":  "2023-02-23T21:10:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC2qK0A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "chungvodim",
                                                                               "createdAt":  "2023-02-23T21:41:43Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Can you open an issue in https://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/?",
                                           "updatedAt":  "2023-02-23T21:10:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85V-lEp",
                                           "createdAt":  "2023-02-23T21:41:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "chungvodim",
                                           "body":  "\u003e Can you open an issue in https://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/?\r\n\r\nSure.",
                                           "updatedAt":  "2023-02-23T21:41:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85XJP_s",
                                           "createdAt":  "2023-03-09T13:11:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "GKersten",
                                           "body":  "We are facing the same issue as mentioned here. Having multiple endpoints that get called simultaneously, not able yet to get an intentional reproduction. However from deployed environment able to get these logs\r\n\r\n````\r\nEROR   :    Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler   \r\n         Exception occurred while processing message.   \r\n            System.OperationCanceledException: The operation was canceled.\r\n         at System.Threading.CancellationToken.ThrowOperationCanceledException()\r\n         at System.Threading.SemaphoreSlim.WaitUntilCountOrTimeoutAsync(TaskNode asyncWaiter, Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n         at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)\r\n         at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()   \r\n   EROR   :    Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler   \r\n         Exception occurred while processing message.   \r\n            System.OperationCanceledException: The operation was canceled.\r\n         at System.Threading.CancellationToken.ThrowOperationCanceledException()\r\n         at System.Threading.SemaphoreSlim.WaitUntilCountOrTimeoutAsync(TaskNode asyncWaiter, Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n         at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)\r\n         at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()   \r\n   EROR   :    Microsoft.AspNetCore.Server.Kestrel   \r\n         Connection id \"0HMOHKGT911S1\", Request id \"0HMOHKGT911S1:00000004\": An unhandled exception was thrown by the application.   \r\n            System.OperationCanceledException: The operation was canceled.\r\n         at System.Threading.CancellationToken.ThrowOperationCanceledException()\r\n         at System.Threading.SemaphoreSlim.WaitUntilCountOrTimeoutAsync(TaskNode asyncWaiter, Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n         at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)\r\n         at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()\r\n         at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()\r\n         at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync()\r\n         at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)\r\n         at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n         at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)   \r\n   EROR   :    Microsoft.AspNetCore.Server.Kestrel   \r\n         Connection id \"0HMOHKGT911SH\", Request id \"0HMOHKGT911SH:00000001\": An unhandled exception was thrown by the application.   \r\n            System.OperationCanceledException: The operation was canceled.\r\n         at System.Threading.CancellationToken.ThrowOperationCanceledException()\r\n         at System.Threading.SemaphoreSlim.WaitUntilCountOrTimeoutAsync(TaskNode asyncWaiter, Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n         at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)\r\n         at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()\r\n         at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()\r\n         at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync()\r\n         at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)\r\n         at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n         at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)   \r\n   EROR   :    Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler   \r\n         Exception occurred while processing message.   \r\n            System.OperationCanceledException: The operation was canceled.\r\n         at System.Threading.CancellationToken.ThrowOperationCanceledException()\r\n         at System.Threading.SemaphoreSlim.WaitUntilCountOrTimeoutAsync(TaskNode asyncWaiter, Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n         at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)\r\n         at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()   \r\n   EROR   :    Microsoft.AspNetCore.Server.Kestrel   \r\n         Connection id \"0HMOHKGT911SI\", Request id \"0HMOHKGT911SI:00000001\": An unhandled exception was thrown by the application.   \r\n            System.OperationCanceledException: The operation was canceled.\r\n         at System.Threading.CancellationToken.ThrowOperationCanceledException()\r\n         at System.Threading.SemaphoreSlim.WaitUntilCountOrTimeoutAsync(TaskNode asyncWaiter, Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n         at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)\r\n         at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()\r\n         at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()\r\n         at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync()\r\n         at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)\r\n         at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n         at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)\r\n````\r\n\r\nAs far as I understand from above thread, this seems to be noise (so can be ignored).\r\n\r\nIs there a suggested way of catching these exceptions or filtering them out? As a work-around until this issue is gone, we would like to keep our logs clean of this noise where possible.\r\n",
                                           "updatedAt":  "2023-03-09T13:11:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85djQck",
                                           "createdAt":  "2023-05-31T05:34:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dzendras",
                                           "body":  "We also seem to be affected by this.\r\n```\r\nSystem.Threading.Tasks.TaskCanceledException:\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable+ConfiguredTaskAwaiter.GetResult (System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1+\u003cGetConfigurationAsync\u003ed__14.MoveNext (Microsoft.IdentityModel.Protocols, Version=6.25.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler+\u003cHandleAuthenticateAsync\u003ed__6.MoveNext (Microsoft.AspNetCore.Authentication.JwtBearer, Version=5.0.12.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler+\u003cHandleAuthenticateAsync\u003ed__6.MoveNext (Microsoft.AspNetCore.Authentication.JwtBearer, Version=5.0.12.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult (System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1+\u003cAuthenticateAsync\u003ed__48.MoveNext (Microsoft.AspNetCore.Authentication, Version=6.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n```\r\n\r\nI understand that it\u0027s only noise, but it triggers an http server errors alert for us in Azure. The linked issue is closed and I am not sure why. Has the issue been mitigated or is there any known workaround?",
                                           "updatedAt":  "2023-05-31T05:34:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85h2Rnt",
                                           "createdAt":  "2023-07-19T08:04:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "gregolsky",
                                           "body":  "In another issue (https://github.com/dotnet/aspnetcore/issues/43220) @Tratcher mentioned mitigation is to pre-init the configuration at startup. Can you explain how do you do that please?",
                                           "updatedAt":  "2023-07-19T08:30:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85jD-Pr",
                                           "createdAt":  "2023-08-02T10:48:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "gregolsky",
                                           "body":  "I mean the comment here: https://github.com/dotnet/aspnetcore/issues/43220#issuecomment-1218553342\r\n\r\n\u003e The mitigation is to pre-init and load the ConfigurationManager during startup.\r\n\r\n@Tratcher could you help us please?\r\n",
                                           "updatedAt":  "2023-08-02T10:59:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85jFTrM",
                                           "createdAt":  "2023-08-02T14:39:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "chungvodim",
                                           "body":  "\u003e I mean the comment here: [#43220 (comment)](https://github.com/dotnet/aspnetcore/issues/43220#issuecomment-1218553342)\r\n\u003e \r\n\u003e \u003e The mitigation is to pre-init and load the ConfigurationManager during startup.\r\n\u003e \r\n\u003e @Tratcher could you help us please?\r\n\r\nCould you share your configuration?",
                                           "updatedAt":  "2023-08-02T14:39:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85jKhFB",
                                           "createdAt":  "2023-08-03T10:03:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "gregolsky",
                                           "body":  "We just use the defaults in `Startup.cs`:\r\n```\r\nservices.AddJwtBearerDefaultAuthentication(settings.IdentityServerAudience, Environment);\r\n```\r\n\r\nIn the settings it has 3 things passed: \"ValidAudience\", \"TokenIssuer\" and \"IdentityServerBaseUrl\".\r\n\r\nIs that what you were looking for @chungvodim ?",
                                           "updatedAt":  "2023-08-03T10:03:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85jMpsj",
                                           "createdAt":  "2023-08-03T16:10:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "chungvodim",
                                           "body":  "\u003e AddJwtBearerDefaultAuthentication\r\n\r\nSomething likes this \r\n![image](https://github.com/dotnet/aspnetcore/assets/2534578/786b8caa-3f86-47a8-96ba-edebaa2cdc26)\r\n",
                                           "updatedAt":  "2023-08-03T16:10:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85jRF6K",
                                           "createdAt":  "2023-08-04T10:58:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "gregolsky",
                                           "body":  "@chungvodim Ah, gotcha, that was an extension method we have there, nevermind. \r\n\r\nFound the config part:\r\n```\r\noptions.Authority = settings.IdentityServerBaseUrl;\r\noptions.RequireHttpsMetadata = environment.IsProduction();\r\noptions.TokenValidationParameters = new TokenValidationParameters\r\n{\r\n    ValidateAudience = true,\r\n    ValidAudience = settings.ValidAudience,\r\n    ValidateIssuer = true,\r\n    ValidIssuer = settings.TokenIssuer,\r\n    RequireSignedTokens = true,\r\n    ClockSkew = TimeSpan.FromMinutes(1),\r\n    ValidateLifetime = true,\r\n    ValidateIssuerSigningKey = true\r\n};\r\n```\r\n\r\nI think we use the defaults mostly for this particular app. What should we do?\r\nShould we initialize `ConfigurationManager` in a way you have in your screenshot?",
                                           "updatedAt":  "2023-08-04T10:58:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85jSdw5",
                                           "createdAt":  "2023-08-04T15:25:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "chungvodim",
                                           "body":  "\u003e GetConfigurationAsync\r\n\r\nIf not provided, then one will be created using the MetadataAddress and Backchannel properties. So you should explicitly initialize `ConfigurationManager` .\r\nBasically, this issue could not be fixed thoroughly, you can only mitigate it by increasing `RefreshInterval` and `AutomaticRefreshInterval` to an appropriate number (I\u0027m setting 5 minutes and 12 minutes accordingly).",
                                           "updatedAt":  "2023-08-04T15:25:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85jcqZ1",
                                           "createdAt":  "2023-08-07T19:28:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Creating the ConfigurationManager at startup only helps with the cancellation issue unless you actually call it while starting the server. That way it\u0027s pulling from the local cache per-request until a refresh is needed.\r\n\r\n```c#\r\nvar configManager = new ConfigurationManager....;\r\nawait configManager.GetConfigurationAsync(); // Wait for the first config download\r\noptions.ConfigurationManager = configManager;\r\n```\r\n",
                                           "updatedAt":  "2023-08-07T19:28:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86HhuXQ",
                                           "createdAt":  "2024-08-07T15:37:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DinantvanHarmelen-Bryder",
                                           "body":  "We are experiencing this issue in production (Azure) as well on at least 2 different Dot Net 6.0 Web API\u0027s, but its not noise. \r\n3th party developers are now contacting us, because our API\u0027s can now take up to 60 seconds to respond.\r\nI have clear evidence (profiler trace from Application Insights) pointing towards this issue but it is not on startup but randomly happens when running. We have multiple API\u0027s running and this issue is now affecting us and 3th party users of our API\u0027s. \r\n\r\n- When can we expect this issue to be resolved (it now has been open for 3 years) \r\n- Is the workaround mentioned by @Tratcher enough to prevent this from happening or do we need to \r\nset the `RefreshInterval` and `AutomaticRefreshInterval` mentioned by @chungvodim aswell?\r\n\r\n![image](https://github.com/user-attachments/assets/3a0e778a-1132-490e-bd55-59be284bd0ac)",
                                           "updatedAt":  "2024-08-08T09:42:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86Hmrk_",
                                           "createdAt":  "2024-08-08T06:40:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOD8zDkQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "rctay",
                                                                               "createdAt":  "2024-11-28T02:08:45Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "dzendras",
                                           "body":  "Here\u0027s a workaround I use and the issue has practically been resolved.\r\nPlace it **before** app.UseAuthentication(); in your Program file and no exception is going to bother you anymore :) \r\n\r\n```\r\nclass ExpectedOperationCanceledExceptionSupressionMiddleware\r\n{\r\n    private readonly RequestDelegate next;\r\n    private readonly ILogger\u003cExpectedOperationCanceledExceptionSupressionMiddleware\u003e logger;\r\n\r\n    public ExpectedOperationCanceledExceptionSupressionMiddleware(RequestDelegate next, ILogger\u003cExpectedOperationCanceledExceptionSupressionMiddleware\u003e logger)\r\n    {\r\n        this.next = next;\r\n        this.logger = logger;\r\n    }\r\n\r\n    public async Task Invoke(HttpContext context)\r\n    {\r\n        try\r\n        {\r\n            await this.next(context);\r\n        }\r\n        catch (OperationCanceledException e) when (IsExpectedDueToAnUnresolvedBugInIdentityModel(e, context))\r\n        {\r\n            this.logger.LogWarning(\r\n                \"Compensating for a bug in IdentityModel. Request to \u0027{RequestPath}\u0027 has already been aborted, so nothing to worry about.\",\r\n                context.Request.Path);\r\n        }\r\n    }\r\n\r\n    /// \u003csummary\u003e\r\n    /// https://github.com/dotnet/aspnetcore/issues/38467\r\n    /// \u003c/summary\u003e\r\n    private static bool IsExpectedDueToAnUnresolvedBugInIdentityModel(OperationCanceledException e, HttpContext context) =\u003e\r\n        e.CancellationToken == context.RequestAborted \u0026\u0026\r\n        e.StackTrace != null \u0026\u0026\r\n        e.StackTrace.Contains(\"GetConfigurationAsync\");\r\n}\r\n```",
                                           "updatedAt":  "2024-08-08T06:40:39Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86IICiZ",
                                           "createdAt":  "2024-08-12T12:13:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DinantvanHarmelen-Bryder",
                                           "body":  "\u003e Here\u0027s a workaround I use and the issue has practically been resolved. Place it **before** app.UseAuthentication(); in your Program file and no exception is going to bother you anymore :)\r\n\u003e \r\n\u003e ```\r\n\u003e class ExpectedOperationCanceledExceptionSupressionMiddleware\r\n\u003e {\r\n\u003e     private readonly RequestDelegate next;\r\n\u003e     private readonly ILogger\u003cExpectedOperationCanceledExceptionSupressionMiddleware\u003e logger;\r\n\u003e \r\n\u003e     public ExpectedOperationCanceledExceptionSupressionMiddleware(RequestDelegate next, ILogger\u003cExpectedOperationCanceledExceptionSupressionMiddleware\u003e logger)\r\n\u003e     {\r\n\u003e         this.next = next;\r\n\u003e         this.logger = logger;\r\n\u003e     }\r\n\u003e \r\n\u003e     public async Task Invoke(HttpContext context)\r\n\u003e     {\r\n\u003e         try\r\n\u003e         {\r\n\u003e             await this.next(context);\r\n\u003e         }\r\n\u003e         catch (OperationCanceledException e) when (IsExpectedDueToAnUnresolvedBugInIdentityModel(e, context))\r\n\u003e         {\r\n\u003e             this.logger.LogWarning(\r\n\u003e                 \"Compensating for a bug in IdentityModel. Request to \u0027{RequestPath}\u0027 has already been aborted, so nothing to worry about.\",\r\n\u003e                 context.Request.Path);\r\n\u003e         }\r\n\u003e     }\r\n\u003e \r\n\u003e     /// \u003csummary\u003e\r\n\u003e     /// https://github.com/dotnet/aspnetcore/issues/38467\r\n\u003e     /// \u003c/summary\u003e\r\n\u003e     private static bool IsExpectedDueToAnUnresolvedBugInIdentityModel(OperationCanceledException e, HttpContext context) =\u003e\r\n\u003e         e.CancellationToken == context.RequestAborted \u0026\u0026\r\n\u003e         e.StackTrace != null \u0026\u0026\r\n\u003e         e.StackTrace.Contains(\"GetConfigurationAsync\");\r\n\u003e }\r\n\u003e ```\r\n\r\nThx for sharing this, but we actually had the delays in our code execution. It is not just delayed ghost logs, but an actual issue.\r\n",
                                           "updatedAt":  "2024-08-12T12:13:26Z"
                                       }
                                   ],
                         "totalCount":  32
                     },
        "title":  "TaskCanceled Exception thrown from  Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler class",
        "labels":  [
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/39503",
        "createdAt":  "2022-01-13T21:33:51Z",
        "number":  39503,
        "author":  null,
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC3au4w==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Ponant",
                                            "createdAt":  "2022-01-17T08:46:45Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "adrian-mustelier",
                                            "createdAt":  "2022-12-03T11:46:43Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "cleftheris",
                                            "createdAt":  "2024-04-12T15:39:11Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "SaifAqqad",
                                            "createdAt":  "2024-04-23T12:30:55Z"
                                        }
                                    ],
                          "totalCount":  4
                      },
        "updatedAt":  "2025-08-22T18:01:52Z",
        "body":  "## Background and Motivation\r\n\r\nCurrently to set the `acr_values` and `ui_locales` parameters in the authorization request (https://openid.net/specs/openid-connect-core-1_0.html section 3.1.2.1. Authentication Request), we need to use the `OnRedirectToIdentityProvider` event like:\r\n\r\n```cs\r\nvar builder = WebApplication.CreateBuilder(args);\r\nbuilder.Services.AddAuthentication().AddOpenIdConnect(options =\u003e\r\n{\r\n   options.Events.OnRedirectToIdentityProvider = context =\u003e\r\n   {\r\n       context.ProtocolMessage.AcrValues = \"tenant:abc\";\r\n       context.ProtocolMessage.UiLocales = \"en-us\"\r\n       return Task.CompletedTask;\r\n   };\r\n});\r\n```\r\n\r\nIt would be interesting to add these two properties directly in `OpenIdConnectOptions`. \r\n\r\nThe mapping should be easy (here https://github.com/dotnet/aspnetcore/blob/main/src/Security/Authentication/OpenIdConnect/src/OpenIdConnectHandler.cs#L382) as these two properties already exist in the OpenIdConnectMessage (https://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/blob/dev/src/Microsoft.IdentityModel.Protocols.OpenIdConnect/OpenIdConnectMessage.cs)\r\n\r\n## Proposed API\r\n\r\n```diff\r\nnamespace Microsoft.AspNetCore.Authentication.OpenIdConnect;\r\n\r\npublic class OpenIdConnectOptions : RemoteAuthenticationOptions\r\n{\r\n+    public string? AcrValues { get; set; }\r\n+    public string? UiLocales { get; set; }\r\n}\r\n\r\n```\r\n\r\n## Usage Examples\r\n\r\n```cs\r\nvar builder = WebApplication.CreateBuilder(args);\r\nbuilder.Services.AddAuthentication().AddOpenIdConnect(options =\u003e\r\n{\r\n    options.AcrValues = \"tenant:abc\";\r\n    options.UiLocales = \"en-us\";\r\n});\r\n```\r\n\r\n## Alternative Designs\r\n\r\nWe can maybe rely on the new `AdditionalAuthorizationParameters` proposed in https://github.com/dotnet/aspnetcore/issues/39243 to set these two parameters but should we reserve this property only for non standard OAuth/OpenID parameters?\r\n\r\n## Risks\r\n\r\nNothing I can think of now.\r\n\r\ncc @Tratcher @martincostello ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOi2A24g==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde848YPxx",
                                           "createdAt":  "2022-01-14T10:18:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "martincostello",
                                           "body":  "We have something similar to `AdditionalAuthorizationParameters` in the `AspNet.Security.OpenId.Providers` package:\r\n\r\nhttps://github.com/aspnet-contrib/AspNet.Security.OpenId.Providers/blob/1a826454dea02d73712a550532b14b4c9cc07180/src/AspNet.Security.OpenId/OpenIdAuthenticationHandler.cs#L328-L337\r\n\r\nSomething similar to that is probably best, rather than trying to introduce strongly-typed parameters for ACR and UI, as then it can be a bit of a slippery slope of _\"oh, can we add `Foo` too?\"_.\r\n\r\nUltimately those properties are just backed by a dictionary anyway ([`AuthenticationProtocolMessage.Parameters`](https://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/blob/824d58cb554ee37defb1ff09c23fffdb91d7f6ec/src/Microsoft.IdentityModel.Protocols/AuthenticationProtocolMessage.cs#L161-L167)) when they\u0027re accessed via [`SetParameter(string, string)`](https://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/blob/824d58cb554ee37defb1ff09c23fffdb91d7f6ec/src/Microsoft.IdentityModel.Protocols/AuthenticationProtocolMessage.cs#L210).\r\n\r\nA more generic solution would be something like `AdditionalAuthorizationParameters` that could loop through an `IDictionary\u003cstring, string\u003e` and add them to the message before the redirect. You\u0027d just need to know the property names for configuring them (e.g. [`OpenIdConnectParameterNames.AcrValues`](https://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/blob/824d58cb554ee37defb1ff09c23fffdb91d7f6ec/src/Microsoft.IdentityModel.Protocols.OpenIdConnect/OpenIdConnectParameterNames.cs#L37)) on `OpenIdConnectOptions`.\r\n",
                                           "updatedAt":  "2022-01-14T13:35:42Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde848aGcK",
                                           "createdAt":  "2022-01-14T21:09:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `.NET 7 Planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2022-01-14T21:09:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde848aGsM",
                                           "createdAt":  "2022-01-14T21:11:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "adityamandaleeka",
                                           "body":  "\u003e We can maybe rely on the new AdditionalAuthorizationParameters proposed in #39243 to set these two parameters\r\n\r\nThis is the approach we should probably go with, so this is consistent with how we specify the other properties.",
                                           "updatedAt":  "2022-01-14T21:11:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde848dJdg",
                                           "createdAt":  "2022-01-17T08:48:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Ponant",
                                           "body":  "Hello,\r\nI faced a similar issue, and found out that also redirection back should/could be addressed, when users cancel the oidc flow. See https://github.com/AzureAD/microsoft-identity-web/issues/1596",
                                           "updatedAt":  "2022-01-17T08:53:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85KRGVF",
                                           "createdAt":  "2022-09-13T22:02:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `.NET 8 Planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2022-09-13T22:02:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86LYDbi",
                                           "createdAt":  "2024-09-09T14:50:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Eagle3386",
                                           "body":  "@mkArtakMSFT \u0026 @javiercn\r\nSince the workaround suggested in #45832 can\u0027t be done anymore (there\u0027s no `options.Events` anymore), how am I supposed to add `ui_locales` to my MSAL setup in my Blazor WASM standalone app that connects to our Azure B2C tenant?",
                                           "updatedAt":  "2024-09-09T14:50:13Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "Allow acr_values and ui_locales to be specified in OpenIdConnectOptions",
        "labels":  [
                       "area-auth",
                       "api-suggestion"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/39669",
        "createdAt":  "2022-01-21T01:53:41Z",
        "number":  39669,
        "author":  "HaoK",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-02-23T19:27:34Z",
        "body":  "VerifyValidClientCertWithTrustedChainAuthenticates\r\nVerifyValidClientCertWithAdditionalCertificatesAuthenticates\r\n\r\nare failing because the test client cert: https://github.com/dotnet/aspnetcore/blob/c85baf8db0c72ae8e68643029d514b2e737c9fae/src/Shared/test/Certificates/validSignedClientCertificate.cer expired on 1/20/22\r\n\r\nneed to update the cert/extend the expiration and reenable these tests",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOQEbscQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde848unDr",
                                           "createdAt":  "2022-01-21T20:53:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BrennanConroy",
                                           "body":  "Needs to be backported to 6.0 and probably 5.0 as well.",
                                           "updatedAt":  "2022-01-21T20:53:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde848un2A",
                                           "createdAt":  "2022-01-21T20:58:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "/backport to release/6.0",
                                           "updatedAt":  "2022-01-21T20:58:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde848un3c",
                                           "createdAt":  "2022-01-21T20:58:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "/backport to release/5.0",
                                           "updatedAt":  "2022-01-21T20:58:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde848un7H",
                                           "createdAt":  "2022-01-21T20:59:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Rip not a PR ",
                                           "updatedAt":  "2022-01-21T20:59:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde848uzsl",
                                           "createdAt":  "2022-01-21T22:14:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Luckily these tests aren\u0027t in 5.0, they were added in 6.0 https://github.com/dotnet/aspnetcore/commit/ae6e9c834c86348da34431790d082c91a822d27f#diff-0ca82662fe7488251aa5453edd2bb21a0844e259d1cae0f3b35c1e7520cec1a7",
                                           "updatedAt":  "2022-01-21T22:14:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde848uz5u",
                                           "createdAt":  "2022-01-21T22:16:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BrennanConroy",
                                           "body":  "This looks like it\u0027s in 5.0 https://github.com/dotnet/aspnetcore/blob/release/5.0/src/Security/Authentication/test/CertificateTests.cs#L310",
                                           "updatedAt":  "2022-01-21T22:16:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde848u1FG",
                                           "createdAt":  "2022-01-21T22:25:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Doh, okay guess I have to manually do 5.0",
                                           "updatedAt":  "2022-01-21T22:25:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85ARuxx",
                                           "createdAt":  "2022-03-24T21:26:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Note: these tests currently are still skipped because the logic to generate certs does not handle generating chained client certs",
                                           "updatedAt":  "2022-03-24T21:26:23Z"
                                       }
                                   ],
                         "totalCount":  8
                     },
        "title":  "ClientCertificate expired causing test failures",
        "labels":  [
                       "test-failure",
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/39941",
        "createdAt":  "2022-02-02T20:27:12Z",
        "number":  39941,
        "author":  "ernstscheithauer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCM47zw==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "fschmied",
                                            "createdAt":  "2022-02-03T10:26:19Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2022-02-03T19:00:07Z",
        "body":  "According to https://developer.chrome.com/en/blog/progress-in-the-privacy-sandbox-2021-12/ there are going to be changes in the handling of cookies with SameSite=None. \r\n\r\nWhen using the OpenID Connect authentication the base classes are used that issue and validate a correlation cookie with SameSite=None, so this cookie is affected by the change.\r\n\r\nSee\r\n\r\n- https://github.com/dotnet/aspnetcore/blob/b89eba6c3cda331ee98063e3c4a04267ec540315/src/Security/Authentication/OAuth/src/OAuthHandler.cs\r\n\r\n- https://github.com/dotnet/aspnetcore/blob/b89eba6c3cda331ee98063e3c4a04267ec540315/src/Security/Authentication/Core/src/RemoteAuthenticationHandler.cs\r\n\r\n\r\nCould you please share the plans how to deal with this issue? Is this going to be fixed in aspnetcore?",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOPVnszw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde849TCvs",
                                           "createdAt":  "2022-02-02T22:05:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "As it\u0027s just a proposal right now, we can\u0027t react, as it may not happen (floc is a great example of this). \r\n\r\nUntil there\u0027s something more concrete and actual dates for implementation we can\u0027t plan for it.",
                                           "updatedAt":  "2022-02-02T22:05:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde849TCxq",
                                           "createdAt":  "2022-02-02T22:05:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2022-02-02T22:05:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde849UuC2",
                                           "createdAt":  "2022-02-03T10:28:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fschmied",
                                           "body":  "Note that the \"nonce\" OpenID Connect cookie will also be affected if SameSite=None stops working.",
                                           "updatedAt":  "2022-02-03T10:28:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde849WezP",
                                           "createdAt":  "2022-02-03T19:00:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "However @ernstscheithauer  thinking on it last night we could improve things so you don\u0027t have to wait for us to implement new properties.\r\n\r\nSee https://github.com/dotnet/aspnetcore/issues/39968 as a general proposal",
                                           "updatedAt":  "2022-02-03T19:00:07Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "OpenID Connect correlation cookie and changes to SameSite=None Cookie-Handling",
        "labels":  [
                       "area-auth",
                       "feature-oidc"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/40820",
        "createdAt":  "2022-03-22T14:15:55Z",
        "number":  40820,
        "author":  "Exagram",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODEu2sw==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "dgioulakis",
                                            "createdAt":  "2022-09-27T10:24:49Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "JS-X-Visual",
                                            "createdAt":  "2024-06-18T11:59:54Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "saithis",
                                            "createdAt":  "2025-06-25T12:06:01Z"
                                        }
                                    ],
                          "totalCount":  3
                      },
        "updatedAt":  "2025-08-22T18:00:47Z",
        "body":  "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Describe the bug\r\n\r\nI have a React SPA and a Mobile App that calls a Web API protected by Azure AD OIDC.\r\n- The React SPA uses the default **JWT authentication scheme** provided by the `AddMicrosoftIdentityWebApi()` extension\r\n- The Mobile App uses a custom HTTP Header-based authentication scheme\r\n\r\nGoal: If AT LEAST one of the schemes succeeds then the user should be authenticated. Unfortunately the two schemes are mutually exclusive:\r\n- If I set `AddAuthenticationSchemes(JwtBearerDefaults.AuthenticationScheme)` then the React SPA authenticates the user but the Mobile App returns 401\r\n- If I set `AddAuthenticationSchemes(MobileAuthenticationDefaults.AuthenticationScheme)` then the Mobile App authenticates the user but the React SPA returns 401\r\n\r\n### Expected Behavior\r\n\r\nBoth React SPA and Mobile App should be able to authenticate using their separate authentication schemes.\r\n\r\n\r\n### Steps To Reproduce\r\n\r\nstartup.cs example with JWT default:\r\n```c#\r\nservices.AddAuthentication(JwtBearerDefaults.AuthenticationScheme)\r\n                .AddScheme\u003cMobileAuthenticationSchemeOptions, MobileAuthenticationHandler\u003e(MobileAuthenticationDefaults.AuthenticationScheme, null)\r\n                .AddMicrosoftIdentityWebApi(Configuration.GetSection(\"AzureAD:LycheeWebAPI\"));\r\nservices.AddAuthorization(options =\u003e\r\n            {\r\n                options.DefaultPolicy = new AuthorizationPolicyBuilder(\r\n                    JwtBearerDefaults.AuthenticationScheme,\r\n                    MobileAuthenticationDefaults.AuthenticationScheme)\r\n                    .RequireAuthenticatedUser()\r\n                    .Build();\r\n            });\r\nservices.AddScoped\u003cIAuthenticationHandler, MobileAuthenticationHandler\u003e();\r\n...\r\nvar policy = new AuthorizationPolicyBuilder()\r\n                .AddAuthenticationSchemes(JwtBearerDefaults.AuthenticationScheme, MobileAuthenticationDefaults.AuthenticationScheme)\r\n                .RequireAuthenticatedUser()\r\n                .Build();\r\nmvcOptions.Filters.Add(new AuthorizeFilter(policy));\r\n...\r\napp.UseStaticFiles();\r\napp.UseRouting();\r\napp.UseAuthentication();\r\napp.UseAuthorization();\r\napp.UseEndpoints(endpoints =\u003e\r\n            {\r\n                endpoints.MapControllerRoute(\r\n                    name: \"default\",\r\n                    pattern: \"{controller=Home}/{action=Index}/{id?}\");\r\n            });\r\n```\r\n\r\nMobileAuthenticationHandler:\r\n```c#\r\npublic class MobileAuthenticationHandler : AuthenticationHandler\u003cMobileAuthenticationSchemeOptions\u003e\r\n{\r\nprotected override Task\u003cAuthenticateResult\u003e HandleAuthenticateAsync()\r\n        {\r\n            // validation comes in here\r\n            if (!Request.Headers.ContainsKey(ApiConstants.MobileApiHttpHeader))\r\n            {\r\n                return Task.FromResult(AuthenticateResult.NoResult());\r\n            }\r\n            ...\r\n            var claimsIdentity = new ClaimsIdentity(claims, nameof(MobileAuthenticationHandler));\r\n            var ticket = new AuthenticationTicket(\r\n                new ClaimsPrincipal(claimsIdentity), this.Scheme.Name);\r\n            return Task.FromResult(AuthenticateResult.Success(ticket));\r\n}\r\n```\r\n\r\nMobileAuthenticationOptions.cs:\r\n```c#\r\npublic class MobileAuthenticationSchemeOptions : AuthenticationSchemeOptions\r\n{\r\n}\r\n```\r\n\r\nMobileAuthenticationDefaults.cs:\r\n```c#\r\npublic static class MobileAuthenticationDefaults\r\n{\r\n    public const string AuthenticationScheme = \"MobileAuthenticationScheme\";\r\n}\r\n```\r\n\r\n### Exceptions (if any)\r\n\r\nN/A\r\n\r\n### .NET Version\r\n\r\n6.0.101\r\n\r\n### Anything else?\r\n\r\n- ASP.NET Core 5\r\n- VS 2022 Community\r\n\r\n```\r\n.NET SDK (reflecting any global.json):\r\n Version:   6.0.101\r\n Commit:    ef49f6213a\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.19043\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.101\\\r\n\r\nHost (useful for support):\r\n  Version: 6.0.3\r\n  Commit:  c24d9a9c91\r\n\r\n.NET SDKs installed:\r\n  6.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 5.0.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 5.0.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 5.0.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOdficAA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85AF68x",
                                           "createdAt":  "2022-03-22T15:02:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEM6h_A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "UniMichael",
                                                                               "createdAt":  "2024-09-12T15:15:12Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "alx-ppv",
                                                                               "createdAt":  "2025-04-04T11:39:44Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "They can\u0027t both be active so that\u0027s not the right approach. I think you have 2 options. Add a policy scheme that selects the right scheme based on the incoming request. See https://docs.microsoft.com/en-us/aspnet/core/security/authentication/policyschemes?view=aspnetcore-6.0\r\n\r\ncc @HaoK Do we have this in the box (pass N schemes to an uber scheme and it\u0027ll pick the first one that succeeds).",
                                           "updatedAt":  "2022-03-22T15:02:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85AGBV4",
                                           "createdAt":  "2022-03-22T15:23:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "No we don\u0027t have any additional logic in our policy (uber) schemes, the only sugar we have is the set of ForwardXyz properties on the default auth options for schemes (Authenticate/Challenge/Forbid) that will make it easy to forward to another scheme.  You have to implement your own handler today to try N schemes and stop on the first one.",
                                           "updatedAt":  "2022-03-22T15:24:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85AGB5A",
                                           "createdAt":  "2022-03-22T15:25:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Certainly easy to add some built in policy schemes that do some common scenarios though, but it seems like people haven\u0027t had too much trouble rolling there own",
                                           "updatedAt":  "2022-03-22T15:25:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85AGCde",
                                           "createdAt":  "2022-03-22T15:27:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC1covg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "dgioulakis",
                                                                               "createdAt":  "2022-09-27T11:47:31Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "MichalSznajder",
                                                                               "createdAt":  "2023-02-04T19:45:32Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Or maybe we should just add a ne example of this pick first scheme that succeeds Authenticate to the policyschemes docs",
                                           "updatedAt":  "2022-03-22T15:27:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85AGC4g",
                                           "createdAt":  "2022-03-22T15:29:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "The ForwardDefaultSelector is an implementation detail of our auth handlers, there\u0027s no concept of this in the authentication/authorization stacks themselves.  So its not exposed at the AddAuthentication level because not all auth schemes will support that concept",
                                           "updatedAt":  "2022-03-22T15:32:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85AGiXE",
                                           "createdAt":  "2022-03-22T18:02:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCUIJ-Q==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "DamianEdwards",
                                                                               "createdAt":  "2022-03-22T18:09:20Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "Let’s update the docs for this scenario ",
                                           "updatedAt":  "2022-03-22T18:02:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85AGjwd",
                                           "createdAt":  "2022-03-22T18:07:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Is it good enough to document the common case of having the default scheme fallback to another scheme if it doesn\u0027t succeed?  I don\u0027t think the N scheme case is really that common, its usually just between 2 schemes right?",
                                           "updatedAt":  "2022-03-22T18:07:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85AGm_V",
                                           "createdAt":  "2022-03-22T18:21:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "Is 2 -\u003e 3 much harder?  ",
                                           "updatedAt":  "2022-03-22T18:21:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85AGpie",
                                           "createdAt":  "2022-03-22T18:30:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC7wEnA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "dgioulakis",
                                                                               "createdAt":  "2023-05-15T18:59:19Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Depends on exactly what we want to illustrate, something like logic in the ForwardDefaultSelector doesn\u0027t really care as that\u0027s just a big switch.  Are we looking to document that pattern?  Alternatively I could just show something generic like a FallbackPolicyScheme, which you could then chain up like a linked list, i.e.\r\n\r\n```\r\n  services.AddAuthentication(\"Primary\")\r\n    .AddScheme\u003cFallbackPolicyScheme\u003e(\"Primary\", o =\u003e o.FallbackScheme(\"Secondary\"); o.ForwardAuthenticate(\"Cookies\"))\r\n    .AddScheme\u003cFallbackPolicyScheme\u003e(\"Secondary\", o =\u003e o.FallbackScheme(\"Third\"); o.ForwardAuthenticate(\"Bearer\"));\r\n    .AddScheme\u003cFallbackPolicyScheme\u003e(\"Third\", o =\u003e o.FallbackScheme(\"Fourth\"; o.ForwardAuthenticate(\"Cookie2\"))\r\n    .AddCookie(\"Fourth\")\r\n```\r\n\r\nAnd show how to implement the FallbackPolicyScheme to do this kind of chaining",
                                           "updatedAt":  "2022-03-22T18:31:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85AGqtW",
                                           "createdAt":  "2022-03-22T18:35:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCs4HhQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "dgioulakis",
                                                                               "createdAt":  "2022-09-27T11:49:33Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "HaoK",
                                           "body":  "I guess if we wanted to make this in the box, we could also just add the concept of `FallbackAuthenticateScheme` to our default implementation so this kind of thing just works for authenticate (check yourself for authentication, if you don\u0027t have anything, then fallback to the FallbackAuthenticateScheme), its basically a second Foward, but instead of always forwarding, you only fallback",
                                           "updatedAt":  "2022-03-22T18:36:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85ALpOC",
                                           "createdAt":  "2022-03-23T20:35:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `.NET 7 Planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2022-03-23T20:35:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85HCJHK",
                                           "createdAt":  "2022-07-21T17:18:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "gjmoyer",
                                           "body":  "I have to support 3 schemes (ADFS2012, ADFS2016, and Azure AD). Azure AD is new I am adding. When I added Azure AD as teh 3rd scheme via AddMicrosoftIdentityWebApi where my .NET6 WebAPI is deployed to Azure App Service. The Trace log started filling up with IDX10503, IDX10223, IDX10516, IDX10205 errors. Not sure why these classified as errors and then go to Trace and not Exceptions. I removed AddMicrosoftIdentityWebApi  and used AddJwtBearer instead to remove the errors. \r\n\r\nCan someone please make it more clear how to implement the forward selector? In my case I wish to authorize all 3 to every controller. I currently have the following which always tries all 3.\r\n\r\n`builder.Services\r\n    .AddAuthorization(options =\u003e\r\n    {\r\n        options.DefaultPolicy = new AuthorizationPolicyBuilder()\r\n            .RequireAuthenticatedUser()\r\n            .AddAuthenticationSchemes(AzureAd, Adfs2012, Adfs2016)\r\n            .RequireRole(User_Roles)\r\n            .Build();\r\n    });`",
                                           "updatedAt":  "2022-07-21T17:23:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85HDfpt",
                                           "createdAt":  "2022-07-22T01:51:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "maxandriani",
                                           "body":  "\u003e Depends on exactly what we want to illustrate, something like logic in the ForwardDefaultSelector doesn\u0027t really care as that\u0027s just a big switch. Are we looking to document that pattern? Alternatively I could just show something generic like a FallbackPolicyScheme, which you could then chain up like a linked list, i.e.\r\n\u003e \r\n\u003e ```\r\n\u003e   services.AddAuthentication(\"Primary\")\r\n\u003e     .AddScheme\u003cFallbackPolicyScheme\u003e(\"Primary\", o =\u003e o.FallbackScheme(\"Secondary\"); o.ForwardAuthenticate(\"Cookies\"))\r\n\u003e     .AddScheme\u003cFallbackPolicyScheme\u003e(\"Secondary\", o =\u003e o.FallbackScheme(\"Third\"); o.ForwardAuthenticate(\"Bearer\"));\r\n\u003e     .AddScheme\u003cFallbackPolicyScheme\u003e(\"Third\", o =\u003e o.FallbackScheme(\"Fourth\"; o.ForwardAuthenticate(\"Cookie2\"))\r\n\u003e     .AddCookie(\"Fourth\")\r\n\u003e ```\r\n\u003e \r\n\u003e And show how to implement the FallbackPolicyScheme to do this kind of chaining\r\n\r\n@HaoK That is interesting. I\u0027m strugling w/ one use case I have on my company, and I hope this ForwardAuthenticate pattern will help me to provide an elegant solution.\r\n\r\nWe actually solve the use case described by @exagran by delegate the responsibility to handle multiple ISP providers to a SSO Gateway. This gateway generates authorization tokens to all my applications. But my aplications has a very diverse authorization strategies. Some of then use rbac, some use permission/claims, and other a mix of rbac at high level and permissions at application level. In short, I have a JWT Bearer as Authentication Scheme with provides the user identity and some enterprise (SSO) level rbac. But I also have a custom scheme that loads application level claims and join those to the ClaimsPrincipal.\r\n\r\nInitially, we wrote an Middleware to grant the local claims to the authenticated identity. Then we migrate this code to authorization scheme level because it seems the right place to put this code. So we have now the AppSchemeHandler that uses JwtBearerHandler as dependency by composition that validates the JWT and create the Principal, then AppScheme attach additional claims and officially return AuthenticateResult.Success.\r\n\r\nSo, my question is, can this proposal pattern of ForwardAuthentication fit my use case instead of build an AuthorizationSchema w/ dependencies by composition, and chain then as an Authorization workflow?\r\n\r\nOr i\u0027m messing up the authorization schema purpose?",
                                           "updatedAt":  "2022-07-22T01:51:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85HGqAm",
                                           "createdAt":  "2022-07-22T20:53:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Hey @maxandriani let me see if I understand your scenario properly before trying to answer anything:\r\n\r\nIt sounds like you have a jwt bearer scheme which has your basic user / roles claims.  And then you want to also have additional application level claims that you want included in the ClaimsPrincipal.\r\n\r\nThere are indeed lots of different ways you can do this:\r\n1. Using an AuthorizationPolicy that specifies both your JwtBearer + AppSchemes as AuthenticationSchemes, this will merge them and give you a combined ClaimsPrincipal\r\n2. Implement a JwtAppScheme that takes care of the combining inside of its authenticate, it could do something simple like check for the jwt, if it had that, then get the app schemes and return the unified claims principle.  If no jwt, respond with a challenge to the jwt scheme.\r\n3. ForwardAuthenticate would be helpful if you wanted to explicitly handle the delegation of the authentication in schemes instead, i.e. where you mention having an assortment of ISP providers, RBAC or claims etc, you could implement logic that returns the right scheme via a Selector on a single authentication scheme(i.e. AppSchemeForwarder), and then register an actual authentication scheme for each of your ISPs that hopefully would give you exactly what you want, in terms of a ClaimsPrincipal, and the AppSchemeForwarder is just forwarding to the appropriate ISP (each of which could also have similar logic if needed to continue forwarding/combining)\r\n\r\n",
                                           "updatedAt":  "2022-07-22T20:53:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85HHZHi",
                                           "createdAt":  "2022-07-23T12:48:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "maxandriani",
                                           "body":  "Thanks to clarify @HaoK ! We choose the option 2 strategy. It worked like a charm.",
                                           "updatedAt":  "2022-07-23T12:48:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Kfjyx",
                                           "createdAt":  "2022-09-16T20:33:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `.NET 8 Planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2022-09-16T20:33:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Kmchc",
                                           "createdAt":  "2022-09-19T21:41:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "devich2",
                                           "body":  "Hi, also met the same issue, RequireAuthenticated() method forces all authentication schemes to be tried.\r\nIf i properly understood, that was designed to collect as much information about user as possible.\r\nBut in our case we have different api clients, that are supposed to authenticate via different schemas, and it\u0027s a bit annoying to see a lot of error logs, when in fact user pas authentication. ",
                                           "updatedAt":  "2022-09-19T21:41:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85KpWhX",
                                           "createdAt":  "2022-09-20T13:27:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "maxandriani",
                                           "body":  "@devich2 Hi! As far as I understood the thread and your use case, I think you should write you own proxy scheme and properly evaluate wich  schema to challenge based some information about the origin of the request (client id registration table, …). ",
                                           "updatedAt":  "2022-09-20T13:27:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde851-JwA",
                                           "createdAt":  "2024-03-05T16:59:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "muj-beg",
                                           "body":  "We\u0027re using multiple Azure AD and Azure AD B2C schemes in various applications.  What we would like to do is create a generic policy scheme selector based on issuer matching.  Ideally, instead of using a static list of issuers, we want to match the HTTP request\u0027s token issuer  to a configured `jwtOptions.ClaimsIssuer` or  `jwtOptions.Configuration.Issuer`. However, MSAL retrieves issuer information using a `ConfigurationManager`, and the configuration hasn\u0027t been loaded by the time `ForwardDefaultSelector()` method is called.  We can try to manually load the configuration using `jwtOptions.ConfigurationManager.GetConfigurationAsync()` in order to retrieve the issuer value.  However, that requires a blocking wait, since  that\u0027s an async method, but `ForwardDefaultSelector()` isn\u0027t!\r\n\r\nThe other (minor) downside to the above approach is that the token had to be decoded twice -- once by the policy scheme handler, and then again by the real scheme handler.",
                                           "updatedAt":  "2024-03-05T17:03:44Z"
                                       }
                                   ],
                         "totalCount":  19
                     },
        "title":  "Multiple Authentication Schemes are mutually exclusive",
        "labels":  [
                       "Docs",
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/41176",
        "createdAt":  "2022-04-13T19:12:13Z",
        "number":  41176,
        "author":  "pago93",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODHsJVg==",
                          "nodes":  [
                                        {
                                            "content":  "HEART",
                                            "user":  "vancodocton",
                                            "createdAt":  "2022-09-14T15:41:00Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "jokk-itu",
                                            "createdAt":  "2023-09-03T19:01:02Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "1249993110",
                                            "createdAt":  "2025-07-20T07:23:55Z"
                                        }
                                    ],
                          "totalCount":  3
                      },
        "updatedAt":  "2025-08-22T20:10:39Z",
        "body":  "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nThe Resource-property set in the OpenIdConnectOptions does not flow through the whole process.\r\n\r\nWhen configuring OpenIdConnect authentication with a resource indication, the resource value is only added to the initial authorization request but not to the subsequent access token request.\n\n### Expected Behavior\n\nWhen setting the Resource-property the value should be set in subsequent requests and no additional configuration should be needed.\r\nAs per [RFC 8707 Section 2.2](https://datatracker.ietf.org/doc/html/rfc8707#section-2.2) the access token request in the \u0027authorization_code\u0027 grant type should also contain the resource indicator.\n\n### Steps To Reproduce\n\nExample configuration:\r\n```c#\r\nbuilder.Services.AddAuthentication()\r\n    .AddOpenIdConnect(options =\u003e\r\n    {\r\n        options.Authority = \"https://localhost:5001/\";\r\n        options.Resource = \"urn:test\";\r\n\r\n        options.Scope.Add(\"profile\");\r\n\r\n        options.ClientId = \"testclient\";\r\n        options.ClientSecret = \"secret\";\r\n        options.ResponseType = \"code\";\r\n\r\n        // workaround:\r\n        options.Events = new OpenIdConnectEvents\r\n        {\r\n            OnAuthorizationCodeReceived = context =\u003e\r\n            {\r\n                // the resource property here is null but should be set\r\n                context.TokenEndpointRequest.Resource = \"urn:test\";\r\n\r\n                return Task.FromResult(0);\r\n            }\r\n        }\r\n    };\r\n```\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n6.0.201\n\n### Anything else?\n\nA fix may be applied somewhere around [this line](https://github.com/dotnet/aspnetcore/blob/c85baf8db0c72ae8e68643029d514b2e737c9fae/src/Security/Authentication/OpenIdConnect/src/OpenIdConnectHandler.cs#L1110).\r\n\r\nSomething simple like this may already be enough:\r\n```c#\r\nif (Options.Resource != null)\r\n{\r\n    tokenEndpointRequest.Resource = Options.Resource;\r\n}\r\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOuZ57bg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85BfL0m",
                                           "createdAt":  "2022-04-14T04:18:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brockallen",
                                           "body":  "Just for context, the `Resource` setting in the current OIDC plumbing was added pre-RFC8707 and was for an AAD-specific feature, IIRC.",
                                           "updatedAt":  "2022-04-14T04:18:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85BljXw",
                                           "createdAt":  "2022-04-15T20:06:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "@jennyf19 Is the Resource supposed to be used in the access token request?",
                                           "updatedAt":  "2022-04-15T20:06:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Bl00T",
                                           "createdAt":  "2022-04-15T22:02:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jennyf19",
                                           "body":  "@Tratcher No, on the Azure AD v2 endpoint scopes are used, not resource. Resource was an AAD v1 concept which was not standard compliant.",
                                           "updatedAt":  "2022-04-15T22:02:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85BmFOZ",
                                           "createdAt":  "2022-04-16T01:41:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brockallen",
                                           "body":  "And in RFC8707 referenced above, multiple resource params are possible (and expected) on the authorize endpoint. And not a single param with multiple values mind you, but multiple instances of the same param each with one value. IIRC the current OIDC plumbing can\u0027t handle this as specified by the RFC.",
                                           "updatedAt":  "2022-04-16T01:41:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85B-Pde",
                                           "createdAt":  "2022-04-22T20:29:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "adityamandaleeka",
                                           "body":  "@blowdart Should we pursue this?",
                                           "updatedAt":  "2022-04-22T20:29:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85B-kvc",
                                           "createdAt":  "2022-04-22T22:01:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "Yes, but the question is do we reuse the existing parameter, or pull it out, and then replace it with a Resources one. Would that break existing users who never moved to Identity Web for aad?\r\n\r\nNeeds a dev to explore approaches.",
                                           "updatedAt":  "2022-04-22T22:01:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85CwXrP",
                                           "createdAt":  "2022-05-06T20:12:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "@jennyf19 @brentschmaltz Now that there\u0027s a real spec that clashes with AAD\u0027s custom use of resources IdentityModel needs correcting to match RFC8707. Brent have you looked into this? If not, can you?",
                                           "updatedAt":  "2022-05-06T20:12:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85CyTAC",
                                           "createdAt":  "2022-05-08T20:19:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brentschmaltz",
                                           "body":  "@blowdart just read the spec, interesting that this is similar to [SignedHttpRequest](https://datatracker.ietf.org/doc/html/[draft-ietf-oauth-signed-http-request-03]) - draft, \u0027u\u0027 parameter.\r\n\r\nThis does map nicely to some work we are completing where inbound policy has an \u0027address\u0027 that could be used to identify policies that are applicable to a token.\r\n\r\nWhat type of changes are you suggesting?",
                                           "updatedAt":  "2022-05-08T20:19:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85C1x4f",
                                           "createdAt":  "2022-05-09T17:45:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "Is the AAD feature still called Resource? It\u0027d need to get changed first, and then bring Wilson in line with the spec\u0027s idea of resource",
                                           "updatedAt":  "2022-05-09T17:45:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85EtNV3",
                                           "createdAt":  "2022-06-10T20:10:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "adityamandaleeka",
                                           "body":  "@brentschmaltz Any further comment on this one?",
                                           "updatedAt":  "2022-06-10T20:10:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85HGjYf",
                                           "createdAt":  "2022-07-22T20:09:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "@jmprieur As Brent isn\u0027t answering, could you take a look here?",
                                           "updatedAt":  "2022-07-22T20:09:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85HHkxF",
                                           "createdAt":  "2022-07-23T18:22:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jmprieur",
                                           "body":  "@blowdart : will discuss this with @brentschmaltz at the beginning of next week (beginning of August)\r\ncc: @jennyf19",
                                           "updatedAt":  "2022-07-23T18:22:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85KDa-a",
                                           "createdAt":  "2022-09-09T20:05:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `.NET 8 Planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2022-09-09T20:05:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde858NPG7",
                                           "createdAt":  "2024-04-29T23:18:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jpda",
                                           "body":  "Any movement on this? We are designing our oauth2 systems and determining if we follow 8707 or mimic AAD\u0027s resource/scope parsing. A lot of our customers are dotnet shops and requiring a workaround if we adopt 8707 wouldn\u0027t be ideal.",
                                           "updatedAt":  "2024-04-29T23:18:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde8640m0W",
                                           "createdAt":  "2025-07-22T04:03:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "1249993110",
                                           "body":  "+1",
                                           "updatedAt":  "2025-07-22T04:03:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde865nntu",
                                           "createdAt":  "2025-07-24T16:52:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brentschmaltz",
                                           "body":  "@jpda where does the fix live?",
                                           "updatedAt":  "2025-07-24T16:52:04Z"
                                       }
                                   ],
                         "totalCount":  16
                     },
        "title":  "Resource indicators are missing in access token request",
        "labels":  [
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/41252",
        "createdAt":  "2022-04-19T00:58:14Z",
        "number":  41252,
        "author":  "JamesNK",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCrkATA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "KLuuKer",
                                            "createdAt":  "2022-11-22T11:24:34Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2024-09-25T16:15:26Z",
        "body":  "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Is your feature request related to a problem? Please describe the problem.\r\n\r\nWe\u0027re annotating ASP.NET Core for trimming in .NET 7. In theory, the linker and trim warnings should ensure frameworks, libraries and apps work.\r\n\r\nWe should double-check that ASP.NET Core continues to run in some trimmed, published apps.\r\n\r\n### Describe the solution you\u0027d like\r\n\r\nWith trimming it\u0027s difficult to test trimmed features in isolation, e.g. an app uses features A and B. Did A and B only work because they were both used, etc. Building and running an app to test each feature in isolation isn\u0027t realistic.\r\n\r\nWe should do some basic smoke testing of core scenarios.\r\n\r\ne.g.\r\nMVC\r\nMinimal API\r\nSignalR\r\nAuthN/AuthZ\r\nKestrel/IIS/HttpSys\r\nData protection/security/identity\r\n\r\n### Additional context\r\n\r\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOjYgn5A==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85BtU6k",
                                           "createdAt":  "2022-04-19T09:42:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "javiercn",
                                           "body":  "@JamesNK you can take inspiration on how we test trimming in Blazor Webassembly apps. We trim the projects on the CI only based on the Release configuration.",
                                           "updatedAt":  "2022-04-19T09:42:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85BvEmX",
                                           "createdAt":  "2022-04-19T16:35:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mkArtakMSFT",
                                           "body":  "@JamesNK how do you want all of us to track this? Do you want to put out a PR to which everyone will contribute or file separate issues?",
                                           "updatedAt":  "2022-04-19T16:35:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Bwdhm",
                                           "createdAt":  "2022-04-19T22:18:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `.NET 7 Planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2022-04-19T22:18:42Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Gx48t",
                                           "createdAt":  "2022-07-18T13:50:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hez2010",
                                           "body":  "Seems that Blazor doesn\u0027t support `/p:TrimMode=full` (with .NET 7 nightly sdk). If I use `/p:TrimMode=full` while publishing, even a hello world blazor wasm website will fail to load because of trimming.",
                                           "updatedAt":  "2022-07-18T13:50:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85M8agy",
                                           "createdAt":  "2022-10-25T17:34:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mkArtakMSFT",
                                           "body":  "\u003e Seems that Blazor doesn\u0027t support `/p:TrimMode=full` (with .NET 7 nightly sdk). If I use `/p:TrimMode=full` while publishing, even a hello world blazor wasm website will fail to load because of trimming.\r\n\r\n@hez2010 can you please file a separate issue for this? Thanks!",
                                           "updatedAt":  "2022-10-25T17:34:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85O2A_F",
                                           "createdAt":  "2022-11-21T23:14:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `.NET 8 Planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2022-11-21T23:14:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85xp6do",
                                           "createdAt":  "2024-01-23T19:48:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "amcasey",
                                           "body":  "@JamesNK I feel like we have a much more sophisticated understanding of our trimming needs now.  Is this issue still relevant?",
                                           "updatedAt":  "2024-01-23T19:48:42Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85xqwoW",
                                           "createdAt":  "2024-01-23T22:34:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "JamesNK",
                                           "body":  "Tests are still important. Does trimming have enough tests? If yes, then close this.",
                                           "updatedAt":  "2024-01-23T22:34:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86LnLbR",
                                           "createdAt":  "2024-09-10T22:56:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "captainsafia",
                                           "body":  "Assuming the coverage we want here is via the `Trimming.Tests` and `NativeAoT.Tests` infrastructure that is documented [in this doc](https://github.com/dotnet/aspnetcore/blob/951b6ead6510409a7847481f818963e696686ca9/docs/Trimming.md#adding-a-new-test-project), we have coverage for SignalR, OpenAPI, DataProtection, and WebApplicationBuilder so far. We also have source generator tests for minimal APIs that validate compile-time and runtime behavior.\r\n\r\nI think the authentication-related APIs are where we currently have a testing gap. @halter73 confirm if I am wrong.",
                                           "updatedAt":  "2024-09-10T22:56:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86MpsAE",
                                           "createdAt":  "2024-09-19T01:35:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "halter73",
                                           "body":  "We definitely have a gap for a lot of auth-related stuff. There are other areas we don\u0027t appear to test trimmed output including MVC/Razor Pages, gRPC, Blazor Server/Web, IIS/HttpSys, static files/assets, and various other middleware. I\u0027m pretty sure we don\u0027t have any plans to support trimming MVC. I\u0027m not sure about the other stuff.",
                                           "updatedAt":  "2024-09-19T01:35:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86NiCfk",
                                           "createdAt":  "2024-09-25T16:05:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mkArtakMSFT",
                                           "body":  "@halter73 can you please file a separate issue for our part of this work, so that we can park it in .NET 10 planning and go from there.",
                                           "updatedAt":  "2024-09-25T16:05:50Z"
                                       }
                                   ],
                         "totalCount":  11
                     },
        "title":  "Testing ASP.NET Core with trimming",
        "labels":  [
                       "task",
                       "area-dataprotection",
                       "area-mvc",
                       "area-auth",
                       "area-signalr",
                       "linker-friendliness",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/41589",
        "createdAt":  "2022-05-09T17:19:27Z",
        "number":  41589,
        "author":  "amoszheng",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-22T18:00:48Z",
        "body":  "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nWhen using the package Microsoft.AspNetCore.Authentication.OpenIdConnect in an ASP.NET Core application to add external login providers supporting OpenId Connect protocol, setting the `ClaimsIssuer` property in `OpenIdConnectOptions` has no effect; the principal claims still get generated with the issuer that comes from the external identity provider. \r\n\r\nThis behavior is in contrast with other social media login providers (Microsoft Account, Facebook, Google, etc.) where specifying this property in the configuration options would cause the principal claims to be issued with the specified claims issuer. \r\n\r\nIs is possible to fix that so the `ClaimsIssuer` option in the OpenId Connect client works the same way it does in other social login provider packages? That way we can use it for any external identity provider that supports the OpenId Connect protocol but does not have a specific package built for it.\n\n### Expected Behavior\n\nOnce the `ClaimsIssuer` property of the `OpenIdConnectOptions` is set, the principal claims should be issued with the specified claims issuer.\n\n### Steps To Reproduce\n\n1. Configure the OpenIdConnect client with any identity provider that supports OpenId Connect;\r\n2. Set the `ClaimsIssuer` property to something different (e.g. \"MyCustomIssuer\") in `.AddOpenIdConnect()` configuration;\r\n3. Verify that the actual issuer of the principal claims is unchanged.\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n_No response_\n\n### Anything else?\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOT0BMHQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85DBBog",
                                           "createdAt":  "2022-05-11T22:12:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "adityamandaleeka",
                                           "body":  "Let\u0027s investigate and see whether this is an IdentityModel limitation or we just need to pass something through.",
                                           "updatedAt":  "2022-05-11T22:12:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85DBBqU",
                                           "createdAt":  "2022-05-11T22:12:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\nWe\u0027re moving this issue to the `.NET 7 Planning` milestone for future evaluation / consideration. Because it\u0027s not immediately obvious that this is a bug in our framework, we would like to keep this around to collect more feedback, which can later help us determine the impact of it. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2022-05-11T22:12:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85KDpfu",
                                           "createdAt":  "2022-09-09T21:05:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\nWe\u0027re moving this issue to the `.NET 8 Planning` milestone for future evaluation / consideration. Because it\u0027s not immediately obvious that this is a bug in our framework, we would like to keep this around to collect more feedback, which can later help us determine the impact of it. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2022-09-09T21:05:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85PBftE",
                                           "createdAt":  "2022-11-24T00:14:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "ClaimsIssuer is used by implementations that create Claims from sources that don\u0027t provide that information. E.g. \r\nhttps://github.com/dotnet/aspnetcore/blob/f96dce6889fe67aaed33f0c2b147b8b537358f1e/src/Security/Authentication/Certificate/src/CertificateAuthenticationHandler.cs#L243\r\n\r\nOpenIdConnect actually has an issuer concept built in, that\u0027s what\u0027s used to validate the token and create the Claims.\r\nhttps://github.com/dotnet/aspnetcore/blob/971df4cbdc045c879f288b8cdfd726fd4212f882/src/Security/Authentication/OpenIdConnect/src/OpenIdConnectHandler.cs#L1239-L1248\r\n\r\nSince the validation and claims creation steps are linked together within IdentityModel, that\u0027s not something we can change. The closest we could manage is to re-write the identity after it\u0027s created.\r\n\r\nWhy do you need to change the issuer?",
                                           "updatedAt":  "2022-11-24T00:14:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85PBfvf",
                                           "createdAt":  "2022-11-24T00:15:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Hi @amoszheng. We have added the \"Needs: Author Feedback\" label to this issue, which indicates that we have an open question for you before we can take further action. This issue will be closed automatically in 7 days if we do not hear back from you by then - please feel free to re-open it if you come back to this issue after that time.",
                                           "updatedAt":  "2022-11-24T00:15:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85PLbob",
                                           "createdAt":  "2022-11-28T01:00:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "This issue has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **4 days**. It will be closed if no further activity occurs **within 3 days of this comment**. If it *is* closed, feel free to comment when you are able to provide the additional information and we will re-investigate.\n\nSee [our Issue Management Policies](https://aka.ms/aspnet/issue-policies) for more information.",
                                           "updatedAt":  "2022-11-28T01:00:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85POAml",
                                           "createdAt":  "2022-11-28T13:14:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "amoszheng",
                                           "body":  "@Tratcher we wanted to use the OpenIdConnect client to implement external login integration for an identity provider that is not yet supported neither by Microsoft out of the box nor [aspnet-contrib](https://github.com/aspnet-contrib/AspNet.Security.OAuth.Providers). Since every supported provider changes the issuer of the claims to the name of the external provider (e.g. \"Google\", \"Facebook\", \"LinkedIn\"), we thought we would do the same with the OpenIdConnect client and have our external identity provider integrate seamlessly into the existing pipeline.\r\n\r\nHaving the OpenIdConnect client support changing the issuer of the claims would allow integration with any identity provider that supports OpenId Connect without having to write a custom provider. That provides a lot of flexibility to integrate new login providers to our applications, now that OpenId connect is pretty much the norm everywhere for this kind of stuff.",
                                           "updatedAt":  "2022-11-28T13:14:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85PPHDb",
                                           "createdAt":  "2022-11-28T16:11:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "The claims issuer is still set to a unique provider ID like \"https://myprovider.com\", right? Is your concern about the format?",
                                           "updatedAt":  "2022-11-28T16:11:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85PPmmK",
                                           "createdAt":  "2022-11-28T17:41:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "amoszheng",
                                           "body":  "@Tratcher yes, we tried to set it to \"MyProvider\" but could not do it like it is for the other login providers.",
                                           "updatedAt":  "2022-11-28T17:41:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85PPv9I",
                                           "createdAt":  "2022-11-28T18:08:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Can you clarify why you _need_ it to be formatted as \"MyProvider\" instead of the current value \"https://myprovider.com/\"?",
                                           "updatedAt":  "2022-11-28T18:08:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85PPyfF",
                                           "createdAt":  "2022-11-28T18:16:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brockallen",
                                           "body":  "\u003e Can you clarify why you need it to be formatted as \"MyProvider\"\r\n\r\nI\u0027m guessing because it matches the scheme name, not the issuer. I was always confused by the discrepancy between the social providers and how the OIDC one is done.",
                                           "updatedAt":  "2022-11-28T18:16:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85PPz1u",
                                           "createdAt":  "2022-11-28T18:21:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "amoszheng",
                                           "body":  "@brockallen you are right, for all other social login providers the issuer matches the scheme name, e.g. for Google the issuer of the claims is \"Google\", for Facebook it is \"Facebook\", for LinkedIn it is \"LinkedIn\", and so forth.",
                                           "updatedAt":  "2022-11-28T18:21:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85PP0Q5",
                                           "createdAt":  "2022-11-28T18:22:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "@brockallen mainly because IdentityModel doesn\u0027t provide an API to set the claims issuer independently, and this is the first request I\u0027m aware of to do so. We can file an issue over there to add such an API.",
                                           "updatedAt":  "2022-11-28T18:22:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85PP2k1",
                                           "createdAt":  "2022-11-28T18:30:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCwjgOQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "amoszheng",
                                                                               "createdAt":  "2022-11-28T18:46:02Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "halter73",
                                                                               "createdAt":  "2022-12-02T03:00:34Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Filed https://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/issues/1972.",
                                           "updatedAt":  "2022-11-28T18:30:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85PQAAA",
                                           "createdAt":  "2022-11-28T18:58:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODVIGSw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "ROCKET",
                                                                               "user":  "halter73",
                                                                               "createdAt":  "2022-12-02T03:00:36Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "t00",
                                                                               "createdAt":  "2023-06-09T13:58:41Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jozseffenyes",
                                                                               "createdAt":  "2024-02-02T07:59:58Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Workaround:\r\n```\r\n    private class IssuerFixupAction : ClaimAction\r\n    {\r\n        public IssuerFixupAction() : base(ClaimTypes.NameIdentifier, string.Empty) { }\r\n\r\n        public override void Run(JsonElement userData, ClaimsIdentity identity, string issuer)\r\n        {\r\n            var oldClaims = identity.Claims.ToList();\r\n            foreach (var claim in oldClaims)\r\n            {\r\n                identity.RemoveClaim(claim);\r\n                identity.AddClaim(new Claim(claim.Type, claim.Value, claim.ValueType, issuer, claim.OriginalIssuer, claim.Subject));\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n        services.AddAuthentication(...).AddCookie().AddOpenIdConnect(o =\u003e\r\n        {\r\n           // ...\r\n            o.ClaimsIssuer = \"MyCustomIssuer\";\r\n            o.ClaimActions.Add(new IssuerFixupAction());\r\n```",
                                           "updatedAt":  "2022-11-28T18:58:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85PQEwd",
                                           "createdAt":  "2022-11-28T19:11:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "amoszheng",
                                           "body":  "\u003e Workaround:\r\n\u003e \r\n\u003e ```\r\n\u003e     private class IssuerFixupAction : ClaimAction\r\n\u003e     {\r\n\u003e         public IssuerFixupAction() : base(ClaimTypes.NameIdentifier, string.Empty) { }\r\n\u003e \r\n\u003e         public override void Run(JsonElement userData, ClaimsIdentity identity, string issuer)\r\n\u003e         {\r\n\u003e             var oldClaims = identity.Claims.ToList();\r\n\u003e             foreach (var claim in oldClaims)\r\n\u003e             {\r\n\u003e                 identity.RemoveClaim(claim);\r\n\u003e                 identity.AddClaim(new Claim(claim.Type, claim.Value, claim.ValueType, issuer, claim.OriginalIssuer, claim.Subject));\r\n\u003e             }\r\n\u003e         }\r\n\u003e     }\r\n\u003e \r\n\u003e \r\n\u003e         services.AddAuthentication(...).AddCookie().AddOpenIdConnect(o =\u003e\r\n\u003e         {\r\n\u003e            // ...\r\n\u003e             o.ClaimsIssuer = \"MyCustomIssuer\";\r\n\u003e             o.ClaimActions.Add(new IssuerFixupAction());\r\n\u003e ```\r\n\r\nThanks for the workaround! Will try it while we wait for the permanent fix. Keep up the awesome work you guys do in the .NET team!",
                                           "updatedAt":  "2022-11-28T19:11:29Z"
                                       }
                                   ],
                         "totalCount":  16
                     },
        "title":  "OpenIdConnect: setting the ClaimsIssuer property in configuration options has no effect",
        "labels":  [
                       "blocked",
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/41872",
        "createdAt":  "2022-05-26T15:03:26Z",
        "number":  41872,
        "author":  "DamianEdwards",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCuB3tA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "martincostello",
                                            "createdAt":  "2022-05-26T16:30:52Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "the-vampiire",
                                            "createdAt":  "2023-01-04T11:56:11Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "glen-84",
                                            "createdAt":  "2023-01-23T15:00:53Z"
                                        }
                                    ],
                          "totalCount":  3
                      },
        "updatedAt":  "2025-08-22T18:01:22Z",
        "body":  "It would be useful to be able to configure the defaults used by `dotnet user-jwts` so that they\u0027re used for further created JWTs until the defaults are changed again or reset.\r\n\r\nIntroduce a new `defaults` sub-command that allows the setting of the default values for options:\r\n\r\n```\r\n$ dotnet user-jwts defaults\r\nJWT defaults for project MyApp.csproj:\r\n  Option        Value\r\n  ------------  ----------------------\r\n  --name        [Environment.UserName]\r\n  --not-before  [DateTime.UtcNow]\r\n  --valid-for   28d\r\n  --scheme      Bearer\r\n  --issuer      dotnet-user-jwts\r\n  --audience   [ApplicationUrl]\r\n$ dotnet user-jwts defaults --valid-for 7d\r\nDefault value of --valid-for was set to 7d\r\n$ dotnet user-jwts defaults --name TestUser\r\nDefault value of --name was set to TestUser\r\n$ dotnet user-jwts defaults --name --reset\r\nDefault value of --name was set to [Environment.UserName]\r\n$ dotnet user-jwts defaults --reset\r\nDefault values for all JWT options were reset\r\n$ \r\n```\r\n\r\n## Dynamic default values\r\n\r\nOptions that have default values that are set dynamically will be represented with a square-brace surrounded pseudo-value that represents where the default value comes from. Note that dynamic default values cannot be set via the CLI, this is just about how they\u0027re displayed to indicate their default value is currently set from a dynamic source:\r\n\r\n```\r\n--name        [Environment.UserName]\r\n--not-before  [DateTime.UtcNow]\r\n--audience    [ApplicationUrl]\r\n```\r\n\r\n## Multi-value options defaults\r\n\r\nSome options support specifying multiple values at JWT creation time, e.g. `--claim`, `--scope`, `--role`, `--audience`. These options can have multiple defaults configured with those defaults being applied to all JWTs created. A single default value can be removed for such options by using the `--remove` option:\r\n\r\n```\r\n$ dotnet user-jwts defaults --scope myapps:user --scope myapps:read\r\nDefault value of myapps:user for --scope added \r\nDefault value of myapps:read for --scope added \r\n$ dotnet user-jwts defaults --scope myapps:read --remove\r\nDefault value of myapps:read for --scope removed\r\n$\r\n```\r\n\r\n## Global vs. project defaults\r\n\r\n\u003e❓ Do we think this is worthwhile, or should we just make all defaults apply globally?\r\n\r\nJWT defaults can be set either at the project level or global level. By default, the JWT defaults command sets defaults at the project level, defaulting to the project in the current directory. A specific project can be specified via the `--project` option (note you cannot set a default value for `--project`, it is used to indicate which project to set the defaults for). Global default values can be set via the `--global` option (`-g` for short).\r\n\r\n```\r\n$ dotnet user-jwts defaults --global\r\nGlobal JWT defaults:\r\n  Option        Value\r\n  ------------  ----------------------\r\n  --name        [Environment.UserName]\r\n  --not-before  [DateTime.UtcNow]\r\n  --valid-for   28d\r\n  --scheme      Bearer\r\n  --issuer      dotnet-user-jwts\r\n  --audience   [ApplicationUrl]\r\n$ dotnet user-jwts defaults --valid-for 7d --global\r\nDefault value of --valid-for was set to 7d\r\n$ dotnet user-jwts defaults --name --reset --global\r\nDefault value of --name was set to [Environment.UserName]\r\n$ dotnet user-jwts defaults --reset --global\r\nDefault values for all JWT options were reset\r\n$ \r\n```\r\n\r\n## Resetting default values\r\n\r\nDefault values can be reset to their in-box defaults via the `--reset` option. Each option that should be reset can be supplied via their respective option. If no other options are supplied then all values are reset.\r\n\r\n```\r\n$ dotnet user-jwts defaults --name --reset\r\nDefault value of --name was reset to [Environment.UserName]\r\n$ dotnet user-jwts defaults --valid-for --not-before --reset\r\nDefault value of --valid-for was reset to 28d\r\nDefault value of --not-before was reset to [DateTime.UtcNow]\r\n$ dotnet user-jwts defaults --reset\r\nDefault values for all JWT options were reset\r\n$ \r\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "Support configuring the defaults for JWTs created using the user-jwts tool",
        "labels":  [
                       "enhancement",
                       "area-auth",
                       "area-commandlinetools",
                       "feature-userjwts"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/41974",
        "createdAt":  "2022-06-01T16:48:04Z",
        "number":  41974,
        "author":  "srivastava-prashant",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-22T18:00:48Z",
        "body":  "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Is your feature request related to a problem? Please describe the problem.\r\n\r\nThis is in context to response received from  \"ZhiLv-MSFT\"  for https://docs.microsoft.com/en-us/answers/questions/870212/issue-in-implementing-windows-authentication-and-l.html\r\n\r\nBackground:-\r\nWe have a intranet web api hosted in Windows box (on prem) which is consumed by our Angular UI and we need to implement Integration Windows Authentication in the API side. I was looking into the MS docs (see below url) and noticed that there is \"AddNegotiate\" method which can help us authentication / authorize user.\r\n\r\n I see there is a method by the name \"EnableLDAP\". But, when to try to pass LDAP GlobalCatalog then it throws error to us. However, If write simple LDAP code logic using \"DirectoryEntry\" with GlobalCatalog then it works.\r\n\r\nCan we have a feature in AddNegotiate to use LDAP GlobalCatalog to pull user claims. \r\n\r\n### Describe the solution you\u0027d like\r\n\r\nCan we have a feature in AddNegotiate to use LDAP GlobalCatalog to pull user claims. \r\n\r\n### Additional context\r\n\r\nSo far I do not have any question expect that- Can this be provided as a feature ?",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHORRfzZg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85EQSI1",
                                           "createdAt":  "2022-06-02T17:28:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "The LDAP support is there for Kerberos auth, rather than Windows auth. You\u0027re hosting on Windows so the expectation is you use Windows/Integrated auth.\r\n\r\nWindows auth is somewhat special, groups appear as roles, and they\u0027re kind of there in the background, but you can\u0027t enumerate, you are forced to use IsInRole to validate membership, and that\u0027s only server side, not on the client. \r\n\r\nThe most \"blessed\" way to do this, assuming you want full enumeration would be to treat it all like oauth, and have adfs running within your domain, then configure ADFS to deliver the claims you want in the token, and do an oauth login (if configured correctly adfs will do this silently in your intranet). There\u0027s an added bonus here that if you eventually move cloudwards you can use the same code, just point it at azure ad or whatever cloud auth provider you use.\r\n\r\nIs ADFS an option for you here?",
                                           "updatedAt":  "2022-06-02T17:28:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85EQd5N",
                                           "createdAt":  "2022-06-02T18:12:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "srivastava-prashant",
                                           "body":  "\u003e The LDAP support is there for Kerberos auth, rather than Windows auth. You\u0027re hosting on Windows so the expectation is you use Windows/Integrated auth.\r\n\u003e \r\n\u003e Windows auth is somewhat special, groups appear as roles, and they\u0027re kind of there in the background, but you can\u0027t enumerate, you are forced to use IsInRole to validate membership, and that\u0027s only server side, not on the client.\r\n\u003e \r\n\u003e The most \"blessed\" way to do this, assuming you want full enumeration would be to treat it all like oauth, and have adfs running within your domain, then configure ADFS to deliver the claims you want in the token, and do an oauth login (if configured correctly adfs will do this silently in your intranet). There\u0027s an added bonus here that if you eventually move cloudwards you can use the same code, just point it at azure ad or whatever cloud auth provider you use.\r\n\u003e \r\n\u003e Is ADFS an option for you here?\r\n\r\n@blowdart - Currently, our department application server in my organization does not have ADFS configured due to manufacturing domain restriction ( majorly, data classification being confidential).  So, ADFS won\u0027t be an option here at the moment. We initially planned for Azure SSO but that too was not further approved to implement due to mentioned restriction. \r\n\r\n**For point:-** \"The LDAP support is there for Kerberos auth, rather than Windows auth. You\u0027re hosting on Windows so the expectation is you use Windows/Integrated auth.\"\r\n\r\n**Question #  1:-** Application hosted on Windows IIS with Integrated Windows Authentication approach can\u0027t connect to LDAP ?\r\n\r\nI mean I was under the impression that since .NET / Windows are both Microsoft product and LDAP is pretty common to be used in most of the organization. So, application hosted on Windows IIS would have some ability to connect to LDAP server.\r\n\r\nCurrently we are able to authenticate the user using Negotiate scheme and in ClaimsTransformation we pull the user claim from LDAP passing GlobalCatalog in .NET\u0027s DirectoryEntry class as a parameter then further add those claims to users Identity. But, problem with this approach is this ClaimsTransformation is called on every request. And, this in turn hits LDAP and recreate user claim/ Identity (which is not the right practice to follow).  And, this thing work on application hosted on Windows IIS.\r\n\r\n**Question #  2:-** Could you please shed some light on a way in Windows/Integrated auth where we can hit LDAP to pull user roles just once when they login and then later use them in some token for subsequent request ?\r\n\r\nThanks,\r\nPrashant \r\n\r\n\r\n",
                                           "updatedAt":  "2022-06-02T18:12:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85EQgma",
                                           "createdAt":  "2022-06-02T18:24:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "_Application hosted on Windows IIS with Integrated Windows Authentication approach can\u0027t connect to LDAP ?_\r\n\r\nThey can, it\u0027s just you need to write code to do it. \r\n\r\nIntegrated auth is special. Integrated auth is done by the browser and the server before the app sees anything, your app cannot influence it.\r\n\r\n_Could you please shed some light on a way in Windows/Integrated auth where we can hit LDAP to pull user roles just once when they login and then later use them in some token for subsequent request ?_\r\n\r\nWhat you could do is use a [claims transformation service](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/claims?view=aspnetcore-6.0#extend-or-add-custom-claims-using-iclaimstransformation). That would run when an identity is created, which is _probably_ on every request even with integrated auth. So there are scalability issues here, you\u0027d have to concern caching the groups you retrieve from the LDAP querty. ",
                                           "updatedAt":  "2022-06-02T18:24:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85EQi6S",
                                           "createdAt":  "2022-06-02T18:35:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "srivastava-prashant",
                                           "body":  "\u003e _Application hosted on Windows IIS with Integrated Windows Authentication approach can\u0027t connect to LDAP ?_\r\n\u003e \r\n\u003e They can, it\u0027s just you need to write code to do it.\r\n\u003e \r\n\u003e Integrated auth is special. Integrated auth is done by the browser and the server before the app sees anything, your app cannot influence it.\r\n\u003e \r\n\u003e _Could you please shed some light on a way in Windows/Integrated auth where we can hit LDAP to pull user roles just once when they login and then later use them in some token for subsequent request ?_\r\n\u003e \r\n\u003e What you could do is use a [claims transformation service](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/claims?view=aspnetcore-6.0#extend-or-add-custom-claims-using-iclaimstransformation). That would run when an identity is created, which is _probably_ on every request even with integrated auth. So there are scalability issues here, you\u0027d have to concern caching the groups you retrieve from the LDAP querty.\r\n\r\n@blowdart Thanks for your prompt response. I appreciate it !\r\nI see there is NegotiateHandler class too https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.authentication.negotiate.negotiatehandler?view=aspnetcore-6.0\r\nCan we by chance use this in a AddScheme rather than having AddNegotiate and then whatever code we wrote in ClaimsTransformation we can move that to this handler (with assumption this handler would not be called on each request) \r\n\r\nThis way may be we will not hit LDAP again and again to pull user role and recreate Identity. Assuming this NegotiateHandler will be called only once. Until and unless user logs out.\r\n\r\nAm I going in the right direction ? \r\n\r\nYour suggestion here would be much appreciated. \r\n\r\nThanks,\r\nPrashant ",
                                           "updatedAt":  "2022-06-02T18:35:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85EQjT3",
                                           "createdAt":  "2022-06-02T18:36:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "@Tratcher for thoughts here, I\u0027m honestly not sure how it would work. Negotiating is basically calling integrated auth manually AFAIK.",
                                           "updatedAt":  "2022-06-02T18:36:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85ERBj7",
                                           "createdAt":  "2022-06-02T20:32:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "The NegotiateHandler is also invoked per request. You\u0027re better off using ClaimsTransformation or NegotiateEvents.OnAuthenticated and adding some of your own caching.",
                                           "updatedAt":  "2022-06-02T20:32:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85ERIjN",
                                           "createdAt":  "2022-06-02T21:07:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "srivastava-prashant",
                                           "body":  "\u003e The NegotiateHandler is also invoked per request. You\u0027re better off using ClaimsTransformation or NegotiateEvents.OnAuthenticated and adding some of your own caching.\r\n\r\n@Tratcher -\r\nDoes that means - we would have to re- populate the user claims from Cache on each and every request and then further in our authorization Policy handler check whether user is part of individual role ?\r\n\r\nIf yes, then it would be an overhead for application process it X number of times (where X is number of API calls we have on any individual page).\r\n\r\nIs my understanding correct here ?\r\n\r\nRegards,\r\nPrashant Srivastava",
                                           "updatedAt":  "2022-06-02T21:07:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85ERJqT",
                                           "createdAt":  "2022-06-02T21:13:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "That\u0027s correct.\r\n\r\nIs there a reason your Authorization Policy can\u0027t call the built in IsInRole API?",
                                           "updatedAt":  "2022-06-02T21:13:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85ERMTy",
                                           "createdAt":  "2022-06-02T21:26:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "srivastava-prashant",
                                           "body":  "\u003e That\u0027s correct.\r\n\u003e \r\n\u003e Is there a reason your Authorization Policy can\u0027t call the built in IsInRole API?\r\n\r\n@Tratcher Nope, We can certainly do that. The thing we were concerned about here was majorly the \"re- populating of user claims from Cache on each and every request\". \r\n\r\nI might be asking too much. Not sure whether it would be feasible or not.\r\nBut, can / do we have a plan for having a feature of having avoid caching in ClaimTransformation for populating user claims in MS future releases?\r\n\r\nRegards,\r\nPrashant Srivastava",
                                           "updatedAt":  "2022-06-02T21:26:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85ER-uk",
                                           "createdAt":  "2022-06-03T04:04:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "This sounds like a reasonable request to me. I was asking recently about the usage of the negotiate API we\u0027re going to make public in .NET 7 and it seems like what we do right now is very inefficient. Seems like we should look in to caching if possible here.\r\n\r\nPS: This reminds me about what we did for certificate auth. There might be a similar solution here.",
                                           "updatedAt":  "2022-06-03T04:04:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85ESB9b",
                                           "createdAt":  "2022-06-03T04:38:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "srivastava-prashant",
                                           "body":  "\u003e This sounds like a reasonable request to me. I was asking recently about the usage of the negotiate API we\u0027re going to make public in .NET 7 and it seems like what we do right now is very inefficient. Seems like we should look in to caching if possible here.\r\n\u003e \r\n\u003e PS: This reminds me about what we did for certificate auth. There might be a similar solution here.\r\n\r\n@davidfowl So, Is this request which I was asking above to @Tratcher is going to be part of .NET 7 release ?\r\n\r\n**For Point:** \"PS: This reminds me about what we did for certificate auth. There might be a similar solution here.\"\r\nUnfortunately, the guideline from our department in our company  is to use IWA due to certain restriction (being a confidential application).  So, we cannot just rely on certificate.\r\n\r\nRegards,\r\nPrashant Srivastava",
                                           "updatedAt":  "2022-06-03T04:38:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85FF_Nm",
                                           "createdAt":  "2022-06-17T20:12:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "adityamandaleeka",
                                           "body":  "\u003e So, Is this request which I was asking above to @Tratcher is going to be part of .NET 7 release ?\r\n\r\nThis won\u0027t make it into .NET 7. We can consider this for inclusion in .NET 8.",
                                           "updatedAt":  "2022-06-17T20:12:27Z"
                                       }
                                   ],
                         "totalCount":  12
                     },
        "title":  "user LDAP GlobalCatalog to get user groups and add them to ClaimPrincipal.",
        "labels":  [
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/42047",
        "createdAt":  "2022-06-06T01:12:16Z",
        "number":  42047,
        "author":  "captainsafia",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-15T15:23:04Z",
        "body":  "## Background and Motivation\r\n\r\nTo provide an abstraction of registering both authentication and authorization-related middlewares/services in an app with fewer lines of code and build on the foundation of automatically registering middlewares/services that we started in preview5, we would like to add extension methods for registering both authentication and authorization-related middlewares/services via one overload.\r\n\r\n## Proposed API\r\n\r\n```csharp\r\nnamespace Microsoft.Extensions.DependencyInjection;\r\n\r\npublic static class AuthServiceCollectionExtensions \r\n{\r\n  public static IServiceCollection AddAuthenticationAndAuthorization(this IServiceCollection services);\r\n  public static IServiceCollection AddAuthenticationAndAuthorization(\r\n    this IServiceCollection services,\r\n    Action\u003cAuthorizationOptions\u003e configureAuthorizationOptions);\r\n  public static IServiceCollection AddAuthenticationAndAuthorization(\r\n    this IServiceCollection services,\r\n    Action\u003cAuthenticationOptions\u003e configureAuthenticationOptions);\r\n  public static IServiceCollection AddAuthenticationAndAuthorization(\r\n    this IServiceCollection services,\r\n    Action\u003cAuthenticationOptions\u003e configureAuthenticationOptions,\r\n    Action\u003cAuthorizationOptions\u003e configureAuthorizationOptions);\r\n}\r\n```\r\n\r\n```csharp\r\nnamespace Microsoft.AspNetCore.Builder;\r\n\r\npublic static class AuthAppBuilderExtensions\r\n{\r\n  public static IApplicationBuilder UseAuthenticationAndAuthorization(this IApplicationBuilder app)\r\n}\r\n```\r\n\r\n## Usage Examples\r\n\r\n**Before**\r\n```csharp\r\nvar builder = WebApplication.CreateBuilder(args);\r\nbuilder.Services.AddAuthentication();\r\nbuilder.Services.AddAuthorization();\r\nvar app = builder.Build();\r\napp.UseAuthentication();\r\napp.UseAuthorization();\r\n```\r\n\r\n**After**\r\n```csharp\r\nvar builder = WebApplication.CreateBuilder(args);\r\nbuilder.Services.AddAuthenticationAndAuthorization();\r\nvar app = builder.Build();\r\napp.UseAuthenticationAndAuthorization();\r\n```\r\n\r\n**After with Options**\r\n```csharp\r\nvar builder = WebApplication.CreateBuilder(args);\r\nbuilder.Services.AddAuthenticationAndAuthorization(options =\u003e {\r\n  options.DefaultScheme = \"foobar\";\r\n});\r\nvar app = builder.Build();\r\napp.UseAuthenticationAndAuthorization();\r\n```\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHORNtRFA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85EXNKj",
                                           "createdAt":  "2022-06-06T01:12:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thank you for submitting this for API review. This will be reviewed by @dotnet/aspnet-api-review at the next meeting of the ASP.NET Core API Review group. Please ensure you take a look at [the API review process documentation](https://github.com/dotnet/aspnetcore/blob/main/docs/APIReviewProcess.md) and ensure that:\n\n* The PR contains changes to the reference-assembly that describe the API change. **Or**, you have included a snippet of reference-assembly-style code that illustrates the API change.\n* The PR describes the impact to users, both positive (useful new APIs) and negative (breaking changes).\n* Someone is assigned to \"champion\" this change in the meeting, and they understand the impact and design of the change.",
                                           "updatedAt":  "2022-06-06T01:12:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85EXODK",
                                           "createdAt":  "2022-06-06T01:20:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "Not sure about the adds as both need to be configured. The API sample should show a before and after with options.",
                                           "updatedAt":  "2022-06-06T01:20:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85EzAZx",
                                           "createdAt":  "2022-06-13T18:04:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "halter73",
                                           "body":  "API Review Notes:\r\n- Do we need `AddAuthenticationAndAuthorization` given you can call `AddAuthentication` and `AddAuthorization` in either order? And that there are two different options objects to configure?\r\n  - No\r\n- What about `UseAuthenticationAndAuthorization`? Do we need it?\r\n  - Yes. It doesn\u0027t make sense to use authz without authn.\r\n- Can we come up with a better name?\r\n  - UseAuthNAndAuthZ\r\n  - UseAuth\r\n  - UseAuthStar 😆 \r\n  - UseAuths\r\n- `UseAuth` wins. We think it implies both authn and authz.\r\n- What assembly should `UseAuth` live in?\r\n  - We can\u0027t find a good one\r\n\r\nAPI would be approved if we can find a good assembly for it. Until then, it needs work.\r\n\r\n```diff\r\nnamespace Microsoft.AspNetCore.Builder;\r\n\r\npublic static class AuthAppBuilderExtensions\r\n{\r\n+  public static IApplicationBuilder UseAuth(this IApplicationBuilder app);\r\n}\r\n```\r\n",
                                           "updatedAt":  "2022-06-13T18:15:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85EzFul",
                                           "createdAt":  "2022-06-13T18:28:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2022-06-13T18:28:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85E2LXu",
                                           "createdAt":  "2022-06-14T11:22:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Kahbazi",
                                           "body":  "\u003e It doesn\u0027t make sense to use authz without authn.\r\n\r\n@halter73 Just FYI I don\u0027t use authn middleware in the applications that are just APIs. I don\u0027t have a default authn scheme and I also don\u0027t need any remote authentication handler. Also all endpoints are marked with Authorize attribute with different scheme.",
                                           "updatedAt":  "2022-06-14T11:22:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85E21EU",
                                           "createdAt":  "2022-06-14T13:58:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "halter73",
                                           "body":  "Thanks for pointing that out it\u0027s possible to use authz middleware without authn middleware. It\u0027s not a scenario I considered. Fortunately, we are not planning on removing any existing auth APIs, so you should be able to continue using just the authz middleware by itself.",
                                           "updatedAt":  "2022-06-14T13:58:03Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "Add methods for registering both authentication and authorization middlewares/services",
        "labels":  [
                       "area-auth",
                       "api-needs-work"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/42048",
        "createdAt":  "2022-06-06T03:34:45Z",
        "number":  42048,
        "author":  "DamianEdwards",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC-Vu0A==",
                          "nodes":  [
                                        {
                                            "content":  "EYES",
                                            "user":  "veikkoeeva",
                                            "createdAt":  "2022-06-15T06:48:00Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "glatzert",
                                            "createdAt":  "2022-12-05T10:44:09Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "codymullins",
                                            "createdAt":  "2024-02-09T18:52:16Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "jesperkristensen",
                                            "createdAt":  "2025-01-21T20:52:11Z"
                                        }
                                    ],
                          "totalCount":  4
                      },
        "updatedAt":  "2025-08-22T18:00:49Z",
        "body":  "From https://github.com/dotnet/aspnetcore/issues/39857#issuecomment-1107473315\r\n\r\n\u003e \u003e Make it easier to discover how to enforce auth: builder.Authentication.RequireAuthentication() or similar, which could just hide the call to add the AuthorizeAttribute filter.\r\n\r\n\u003e I like this idea. I\u0027ve personally struggled with finding the right settings to \"just require auth for the whole app\" (FallbackPolicy et al). We\u0027ll consider this scenario.\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHORRfviQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85Ea6uJ",
                                           "createdAt":  "2022-06-06T20:44:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCwrOjA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Dean-NC",
                                                                               "createdAt":  "2022-07-07T14:07:41Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "glatzert",
                                                                               "createdAt":  "2022-12-05T10:44:34Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "FYI @HaoK @blowdart @Tratcher @captainsafia @jcjiang @CamiloTerevint\r\n\r\nInterested in folks\u0027 thoughts on this one. The idea is to make it much easier to require authentication for the whole app. Today this is done something like the following which isn\u0027t terribly intuitive:\r\n\r\n```csharp\r\nbuilder.Services.AddAuthorization(c =\u003e\r\n{\r\n    c.FallbackPolicy = c.DefaultPolicy;\r\n});\r\n```\r\n\r\nI think the thought was that we could enable something like this that would essentially do the above in a way that can\u0027t be overridden by other `IConfigureOptions\u003cAuthorizationOptions\u003e`:\r\n\r\n```csharp\r\nbuilder.Authentication.RequireAuthentication();\r\n```\r\n\r\nAlternatively perhaps it could be inverted:\r\n\r\n```csharp\r\nbuilder.Authentication.AllowAnonymousUsers = false;\r\n```",
                                           "updatedAt":  "2022-06-06T21:00:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Ea8d-",
                                           "createdAt":  "2022-06-06T20:51:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "\u003e I think the thought was that we could enable something like this that would essentially do the above in a way that can\u0027t be overridden by other `IConfigureOptions\u003cAuthorizationOptions\u003e`:\r\n\r\nWhy are you concerned about it being overridden? Do you think it would be common for people to have conflicting authz setups?\r\n\r\n\u003e ```cs\r\n\u003e builder.Authentication.RequireAuthentication();\r\n\u003e ```\r\n\r\nThis is fine.",
                                           "updatedAt":  "2022-06-06T20:51:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Ea-LI",
                                           "createdAt":  "2022-06-06T20:57:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "So `builder.Authentication.RequireAuthentication();` =\u003ewould be the same as today\u0027s behavior of requiring the default authZ policy (any isAuthenticated = true clams identity)?  Or is this going to be slightly different than just setting the fallback policy, I believe the fallback policy only kicks in if NO policy is specified, so the fallback policy doesn\u0027t technically require authentication either.",
                                           "updatedAt":  "2022-06-06T20:57:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Ea-Ou",
                                           "createdAt":  "2022-06-06T20:57:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "\u003e Why are you concerned about it being overridden? Do you think it would be common for people to have conflicting authz setups?\r\n\r\nI\u0027m concerned about scenarios where it\u0027s unclear that something else has loosened the auth requirements.",
                                           "updatedAt":  "2022-06-06T20:57:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Ea-ay",
                                           "createdAt":  "2022-06-06T20:58:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOD40qfg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "DamianEdwards",
                                                                               "createdAt":  "2022-06-06T20:58:55Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "florin-cumpanasu",
                                                                               "createdAt":  "2024-10-31T01:25:34Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "blowdart",
                                           "body":  "Definitely prefer require over AllowAnonymous=false, but allowanonymous on endpoints still needs to override",
                                           "updatedAt":  "2022-06-06T20:58:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Ea-qd",
                                           "createdAt":  "2022-06-06T20:58:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "\u003e So `builder.Authentication.RequireAuthentication();` =\u003ewould be the same as today\u0027s behavior of requiring the default authZ policy (any isAuthenticated = true clams identity)? Or is this going to be slightly different than just setting the fallback policy, I believe the fallback policy only kicks in if NO policy is specified, so the fallback policy doesn\u0027t technically require authentication either.\r\n\r\nYeah that\u0027s a great point. The idea is this should \"do whatever it takes\" to force all users of the app to be authenticated, with exceptions for resources that are explicitly marked as anonymous allowed.",
                                           "updatedAt":  "2022-06-06T20:58:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Ea-tk",
                                           "createdAt":  "2022-06-06T20:58:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOChXkNQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "DamianEdwards",
                                                                               "createdAt":  "2022-06-06T20:59:09Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "lvmajor",
                                                                               "createdAt":  "2022-06-11T20:31:26Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "HaoK",
                                           "body":  "\u003e I\u0027m concerned about scenarios where it\u0027s unclear that something else has loosened the auth requirements.\r\n\r\nRight this is a valid concern, as if we don\u0027t change what RequireAuthentication does, it does not really require authentication as implemented only via fallback policy.  You would easily bypass this by either changing the default policy, or specifying a policy that doesn\u0027t add the DenyAnonymous requirement.",
                                           "updatedAt":  "2022-06-06T20:58:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Ea--8",
                                           "createdAt":  "2022-06-06T20:59:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "With those points clarified, what would the implementation of this look like? Does it need a new concept?",
                                           "updatedAt":  "2022-06-06T20:59:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Ea_AV",
                                           "createdAt":  "2022-06-06T20:59:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Right so I\u0027m fine with the name, but it needs to be implemented differently (in addition to using the fallback policy)",
                                           "updatedAt":  "2022-06-06T20:59:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Ea_MI",
                                           "createdAt":  "2022-06-06T21:00:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "It doesn\u0027t need a new concept, it just needs to fully do what we want it to do which is probably additional logic in Combine or the actual AuthZ service to be aware of this flag",
                                           "updatedAt":  "2022-06-06T21:00:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Ea_hc",
                                           "createdAt":  "2022-06-06T21:01:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "We have an Authorization requirement doing exactly what we want already, we would just need to force that requirement for all of Authorization perhaps when this turned on.",
                                           "updatedAt":  "2022-06-06T21:01:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Ea_nf",
                                           "createdAt":  "2022-06-06T21:01:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "Right, kind of like a \"global requirement\".",
                                           "updatedAt":  "2022-06-06T21:01:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Ea_9N",
                                           "createdAt":  "2022-06-06T21:03:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Yeah we are getting a bit fragmented as we\u0027d have Default Policy which is subtly different from fallback policy, and now global requirements, I guess we can introduce it that way and implement it like that",
                                           "updatedAt":  "2022-06-06T21:03:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85EbAHq",
                                           "createdAt":  "2022-06-06T21:04:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "A new IEnumerable on AuthorizationProperties (GlobalRequirements), RequireAuthentication would just add DenyAnonymous to the global requirements, we always add all global requirements to all Authorization requests.",
                                           "updatedAt":  "2022-06-06T21:04:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85EbATi",
                                           "createdAt":  "2022-06-06T21:04:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "Where is `AuthorizationProperties`? i.e. what types would actually change here?",
                                           "updatedAt":  "2022-06-06T21:04:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85EbAW0",
                                           "createdAt":  "2022-06-06T21:05:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCgc7Hg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "DamianEdwards",
                                                                               "createdAt":  "2022-06-06T21:05:18Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Oops AuthorizationOptions",
                                           "updatedAt":  "2022-06-06T21:05:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85EbAdr",
                                           "createdAt":  "2022-06-06T21:05:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "Ah got it. That seems fairly straightforward then. Something would have to explicitly remove it then to \"undo\" what the proposed method does.",
                                           "updatedAt":  "2022-06-06T21:05:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85EbAzd",
                                           "createdAt":  "2022-06-06T21:07:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "We could have the global requirements as a mutable `List\u003cIAuthorizationRequirement\u003e` or something so they can just `Configure\u003cAuthorizationOptions\u003e` remove DenyAuthorizationRequirement themselves",
                                           "updatedAt":  "2022-06-06T21:07:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85EbBOa",
                                           "createdAt":  "2022-06-06T21:09:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "There is a bit of a danger here though as lifetime of these requirements becomes very tricky, as options are singleton lifetime, and for some requirements you may want to pull things from DI/request, so there\u0027s some complications here which we need to be careful about.",
                                           "updatedAt":  "2022-06-06T21:09:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85EbBqZ",
                                           "createdAt":  "2022-06-06T21:11:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "So we\u0027d probably need some kind of IGlobalAuthZRequirementProvider that enables requirements are more complicated in terms of construction",
                                           "updatedAt":  "2022-06-06T21:11:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85EbCyU",
                                           "createdAt":  "2022-06-06T21:16:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "So we have a method today `policyBuilder.RequireAuthenticatedUser` which does the same thing for a specific policy, so maybe for naming `builder.Authentication.AlwaysRequireAuthenticatedUser` if we want to be clear what this would be doing",
                                           "updatedAt":  "2022-06-06T21:17:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85EbDjt",
                                           "createdAt":  "2022-06-06T21:20:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "\u003e So we have a method today policyBuilder.RequireAuthenticatedUser which does the same thing for a specific policy, so maybe for naming builder.Authentication.AlwaysRequireAuthenticatedUser if we want to be clear what this would be doing\r\n\r\nThat\u0027s... verbose 😄 How about `RequireAuthenticatedUsers()`? Also need to decide if the method/property is on `AuthenticationBuilder` or just `WebApplicationAuthenticationBuilder` (meaning it would have to be public now) or something else.",
                                           "updatedAt":  "2022-06-06T21:20:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85EbEWd",
                                           "createdAt":  "2022-06-06T21:23:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Is there a reason we shouldn\u0027t build this as a full fledged security feature for all to use via AuthenticationBuilder?",
                                           "updatedAt":  "2022-06-06T21:24:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85EbKpG",
                                           "createdAt":  "2022-06-06T21:55:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "\u003e Is there a reason we shouldn\u0027t build this as a full fledged security feature for all to use via AuthenticationBuilder?\r\n\r\nIt requires authorization services to be present right? `WebApplicationAuthenticationBuilder` already adds both sets of services (AuthN and AuthZ) but to make this work via `builder.Services.AddAuthentiation().RequireAuthenticatedUsers()` it would need to add the authorization services too, yes?",
                                           "updatedAt":  "2022-06-06T21:55:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85EbLdb",
                                           "createdAt":  "2022-06-06T21:59:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Sure, but is there no way for us to support the automatic adding of these services/middleware (only when needed) in a way that everyone could take advantage?\r\n\r\n- New apps would work via the new auto add behavior.\r\n- So existing apps (would be unaffected since they already contain Add/UseAuthN/Z calls).\r\nBut old apps could also remove their UseAuthN/Z calls to take advantage of the new behavior without any changes (they could delete their default/fallback policies and switch to using RequireAuthenticatedUsers())",
                                           "updatedAt":  "2022-06-06T21:59:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85EbT3Y",
                                           "createdAt":  "2022-06-06T22:51:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "captainsafia",
                                           "body":  "\u003e That\u0027s... verbose 😄 How about RequireAuthenticatedUsers()? Also need to decide if the method/property is on AuthenticationBuilder or just WebApplicationAuthenticationBuilder (meaning it would have to be public now) or something else.\r\n\r\nI\u0027m leaning towards `AlwaysRequireAuthentication` because I think it\u0027s more important to empathize the fact that the behavior is enabled globally.\r\n\r\n\u003e but is there no way for us to support the automatic adding of these services/middleware (only when needed) in a way that everyone could take advantage?\r\n\r\nWe could integrate this logic in the base `AuthenticationBuilder` with some additional glue but I think we were conservative about only supporting this in `WebApplication`-supporting apps only.\r\n\r\n",
                                           "updatedAt":  "2022-06-06T22:51:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85EbneO",
                                           "createdAt":  "2022-06-07T01:16:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "\u003e We could integrate this logic in the base AuthenticationBuilder with some additional glue but I think we were conservative about only supporting this in WebApplication-supporting apps only.\r\n\r\nHow would we do this without `WebApplication` though? We don\u0027t even control where routing gets added in those scenarios.",
                                           "updatedAt":  "2022-06-07T01:16:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Eb2cE",
                                           "createdAt":  "2022-06-07T03:23:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "I haven\u0027t looked at the host builder code since probably before the 1.0 timeframe so maybe I\u0027m super far off base here, but couldn\u0027t we do something like this?\r\n\r\n- After building the service provider, similar how IStartupFilter can add middleware\r\n- For authentication, if default scheme has been set, we need `UseAuthorization()`\r\n- For authorization, if any policies have been registered, we need `UseAuthorization()`\r\n- If either are required, inspect the app, make sure they haven\u0027t been added already, and only then add these calls after the routing middleware",
                                           "updatedAt":  "2022-06-07T03:24:42Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Eb3RU",
                                           "createdAt":  "2022-06-07T03:30:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "Yeah I think we should keep this kind of behavior to `WebApplicationBuilder` only as it is able to reason about the application pipeline before it decides to add (or not add) automatic middleware, an `IStartupFilter` can\u0027t do that and I don\u0027t think we want to update the old host with these new automatic behaviors.",
                                           "updatedAt":  "2022-06-07T03:30:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Eb3sR",
                                           "createdAt":  "2022-06-07T03:34:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCgowhw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "DamianEdwards",
                                                                               "createdAt":  "2022-06-07T16:43:44Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "HaoK",
                                           "body":  "So irrespective of which host does the Use part of this, I think it makes sense for the AuthenticationBuilder to have the service side for this API, in the old host, if they aren\u0027t using Authorization it would just do nothing (no different than today, where you can set fallback policies which do nothing if you don\u0027t have UseAuthorization), basically the services are setup exactly the same, just you don\u0027t get the automatic middleware added for old hosts.  But as soon as they actually use Authorization, the global requirement would kick in",
                                           "updatedAt":  "2022-06-07T03:34:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Ee2JC",
                                           "createdAt":  "2022-06-07T17:04:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "@HaoK Yeah that sounds okay.\r\n\r\n@captainsafia I know naming is the hardest thing but none of these names are hitting the sweet spot for me yet. I guess it\u0027s time to start a poll 😄 \r\n\r\n1. `builder.Authentication.RequireAuthentication()`\r\n1. `builder.Authentication.RequireAuthentication = true;`\r\n1. `builder.Authentication.RequireAuthenticatedUsers()`\r\n1. `builder.Authentication.RequireAuthenticatedUsers = true;`\r\n1. `builder.Authentication.AlwaysRequireAuthentication()`\r\n1. `builder.Authentication.AlwaysRequireAuthentication = true;`\r\n1. `builder.Authentication.AuthenticationRequired()`\r\n1. `builder.Authentication.AuthenticationRequired= true;`\r\n1. something else?",
                                           "updatedAt":  "2022-06-07T17:04:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85EfKu6",
                                           "createdAt":  "2022-06-07T18:25:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOChXkgA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "lvmajor",
                                                                               "createdAt":  "2022-06-11T20:33:42Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "\u003e The idea is to make it much easier to require authentication for the whole app.\r\n\r\nCan you clarify what you mean by \"the whole app\"? Do you mean all the requests reaching MVC actions or minimal endpoints or really *all* requests, no matter how they are handled?\r\n\r\nI\u0027m asking that because IMHO, it rarely makes sense to block *all* unauthenticated requests (you should at least be able to serve things like `favicon.ico` without any restriction). It\u0027s also not clear how things like CORS preflight requests or endpoints served by built-in handlers like OAuth 2.0 or OIDC or third-party libs like OpenIddict or IdSrv will be handled with your proposal.",
                                           "updatedAt":  "2022-06-07T18:34:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85EfM9l",
                                           "createdAt":  "2022-06-07T18:36:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "@kevinchalet great question and very good points. I admit it\u0027s not super clear. On one hand we could imagine something like the old \"Windows Authentication\" in IIS, where when enabled on a site it\u0027s literally for the whole site by default, and then allowing anonymous access to certain resources requires configuring file/dir ACLs along with the site config. On the other hand it could be based on routing, endpoints, and metadata, such that it means all endpoints require AuthN unless they explicitly opt to allow anonymous access.\r\n\r\nI agree with you that something like the latter is what makes sense here, i.e. turning this on effectively defaults all endpoints into requiring authorization, as if they\u0027d added the requisite AuthZ metdata to them.",
                                           "updatedAt":  "2022-06-07T18:36:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85EfO8D",
                                           "createdAt":  "2022-06-07T18:44:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "\u003e On one hand we could imagine something like the old \"Windows Authentication\" in IIS, where when enabled on a site it\u0027s literally for the whole site by default, and then allowing anonymous access to certain resources requires configuring file/dir ACLs along with the site config.\r\n\r\nPlease no, that was absolutely horrible (that and automatic 401 responses hijacking a-la-`FormsAuthenticationModule`!) 😭 \r\n\r\n\u003e I agree with you that something like the latter is what makes sense here, i.e. turning this on effectively defaults all endpoints into requiring authorization, as if they\u0027d added the requisite AuthZ metdata to them.\r\n\r\nWell, in both cases, it\u0027s going to be a massive breaking change as all the libraries that don\u0027t currently use endpoints will need to use them to opt in a \"no-op authorization policy\" to be compatible with this flag: not just third-party libs, but also all the middleware and authentication handlers that ship as part of ASP.NET Core itself, including all the social/OIDC providers (e.g their callback actions can\u0027t require authorization or they\u0027ll just stop working completely 😄)",
                                           "updatedAt":  "2022-06-07T18:48:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Efh8A",
                                           "createdAt":  "2022-06-07T20:09:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "@kevinchalet I\u0027ll point back to the original motivation then: make it easier to require auth for \"the app\". Today, that usually involves setting both the `DefaultPolicy` and `FallbackPolicy`, which then results in everything **after** the AuthN/AuthZ middleware be protected by default. So it\u0027s less about endpoints, and more about where the middleware is in the pipeline (of course endpoints and their metadata are still part of that operation).",
                                           "updatedAt":  "2022-06-07T20:09:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85EfzZ7",
                                           "createdAt":  "2022-06-07T21:29:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "\u003e Today, that usually involves setting both the `DefaultPolicy` and `FallbackPolicy`, which then results in everything **after** the AuthN/AuthZ middleware be protected by default.\r\n\r\nCorrect me if I\u0027m wrong, but in another issue, you mentioned that you planned to update `WebApplicationBuilder` to register both the authentication and authorization middleware automatically. De facto, this means that all the middleware registered by the users when configuring the pipeline will always appear after the authentication/authorization middleware and thus be affected by `FallbackPolicy` in .NET 7.0 (I\u0027m ignoring `DefaultPolicy` because it only applies to endpoints that are explicitly decorated with `[Authorize]`, so it\u0027s much less impacting).\r\n\r\nAs reminded in your OP, `FallbackPolicy` is a quite advanced option so it\u0027s not massively used yet. But if it becomes an easy-to-use thing, you can be sure we\u0027ll all get reports asking why things break when folks will start using that new innocent-looking `builder.Authentication.RequireAuthentication()` API. I\u0027m convinced most people won\u0027t realize that this method will not only affect their own APIs/endpoints but also everything present in the ASP.NET Core pipeline, including tons of middleware that need to handle unauthenticated requests (e.g ACME challenges for Let\u0027s Encrypt).\r\n\r\n\u003e So it\u0027s less about endpoints, and more about where the middleware is in the pipeline (of course endpoints and their metadata are still part of that operation).\r\n\r\nOnce its use is generalized, library writers will have basically two options to make their middleware work with `FallbackPolicy`/`builder.Authentication.RequireAuthentication()`:\r\n\r\n  - Force their users to explicitly register the authorization middleware (or the authentication middleware, if the `builder.Authentication.RequireAuthentication()` logic is performed by the authentication middleware) and put it after their own middleware. It\u0027s quite horrible and a very-hard-to-discover requirement for most users.\r\n\r\n  - Make their middleware endpoint-aware and use the `IAllowAnonymous` metadata interface, which is pretty much the only option given by the authorization middleware to opt out the \"fallback policy\".\r\n\r\nGiven that option 1) is rather impractical - as a library author, you can\u0027t be sure the user will re-register the authorization middleware - option 2) will be the de facto choice and that\u0027s why I mentioned endpoints. Moving to a world where all middleware declare their endpoints in the routing mechanism might not be a bad thing, but it\u0027s clearly a paradigm change and potentially very impactful.",
                                           "updatedAt":  "2022-06-07T22:13:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85EgCF_",
                                           "createdAt":  "2022-06-07T22:50:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "We indeed have introduced the feature that configuring AuthN via the `WebApplicationBuilder.Authentication` property results in the AuthN/AuthZ middleware being added by default, if the app hasn\u0027t already added it in its pipeline. For scenarios where the middleware needs to explicitly run before AuthN/AuthZ middleware, the user will be required to manually place them in the pipeline, just like today, i.e. the experience isn\u0027t different from today.\r\n\r\nI\u0027m not sure I share your concern regarding the interplay between this new (opt-in) behavior, `FallbackPolicy`, and manually ordered middleware. Folks can continue to control the order of middleware as they do today. Also we use `FallbackPolicy` to enable this behavior in [templates](https://github.com/dotnet/aspnetcore/blob/37c0ce91fd1d3a9d7641a5c31322c69cfddeddfe/src/ProjectTemplates/Web.ProjectTemplates/content/RazorPagesWeb-CSharp/Program.Main.cs#L94) already [today](https://github.com/dotnet/aspnetcore/blob/main/src/ProjectTemplates/Web.ProjectTemplates/content/BlazorServerWeb-CSharp/Program.Main.cs#L111).\r\n\r\nIf we are to limit this to endpoints only, we\u0027d need to name it accordingly, but even then my concern is that it\u0027s very difficult to make clear exactly which resources will be protected and which won\u0027t, as whether a middleware/framework integrates via routing/endpoints is fairly opaque.",
                                           "updatedAt":  "2022-06-07T22:50:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85EgHUo",
                                           "createdAt":  "2022-06-07T23:25:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCwcq8g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "boukenka",
                                                                               "createdAt":  "2022-06-08T14:59:21Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "CHR-LeeOlsen",
                                                                               "createdAt":  "2022-11-30T15:47:38Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "\u003e For scenarios where the middleware needs to explicitly run before AuthN/AuthZ middleware, the user will be required to manually place them in the pipeline, just like today, i.e. the experience isn\u0027t different from today.\r\n\r\nI disagree, the experience is completely different: currently, the model is _explicit_: `app.UseAuthentication()` and `app.UseAuthorization()` appear very clearly in the pipeline so users have a chance to at least see that things are registered in a certain order and that it potentially matters.\r\n\r\nBy hiding all these things in your `WebApplicationBuilder` helpers, you\u0027re just making them more obscure than they are currently: as soon as a user will hit one of the pain points we discussed, it will be an absolute nightmare to at least understand that authentication/authorization middleware are at play and that they should re-register them manually in a different order.\r\n\r\nSo sure, it makes templates super minimalist, but it doesn\u0027t help folks understand how components are linked together and I don\u0027t think it\u0027s a good thing. Sometimes, less is not better.\r\n\r\n(IMHO, `FallbackPolicy` is basically like those global static switches: it shouldn\u0027t have existed in the first place)",
                                           "updatedAt":  "2022-06-07T23:25:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Ei_UB",
                                           "createdAt":  "2022-06-08T14:49:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "Can you help me understand what you would like to see instead of `FallbackPolicy` to facilitate the \"just require auth for this whole app please\" scenario?\r\n\r\nI would far prefer that configuring AuthN/AuthnZ leads to issues due to **more** protection than desired than less. That said, I\u0027m keen to find ways we can make identifying and correcting AuthN configuration issues easier, e.g. via logging, analyzers, API design, etc. ",
                                           "updatedAt":  "2022-06-08T14:49:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85EjCrL",
                                           "createdAt":  "2022-06-08T15:00:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "\u003e Can you help me understand what you would like to see instead of `FallbackPolicy` to facilitate the \"just require auth for this whole app please\" scenario?\r\n\r\nIn my experience (and you mentioned System.Web ACLs earlier), most people are actually interested in securing whole \"sections\" of their apps, not really the entire app without any distinction at all, so something URL-based would have - IMHO - made more sense that a unique `FallbackPolicy`. This would also be more flexible, as you could use `Bearer` for `/api` and `Cookies` for `/static-assets`.\r\n\r\n\u003e I would far prefer that configuring AuthN/AuthnZ leads to issues due to more protection than desired than less. That said, I\u0027m keen to find ways we can make identifying and correcting AuthN configuration issues easier, e.g. via logging, analyzers, API design, etc.\r\n\r\nOh great to hear that, then PTAL at https://github.com/dotnet/aspnetcore/issues/4656#issuecomment-446947390 😄 ",
                                           "updatedAt":  "2022-06-08T15:00:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85EjM3m",
                                           "createdAt":  "2022-06-08T15:35:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Making `DenyAnonymousAuthorizationRequirement` always required is already part of the plan for whatever the new `[Always]RequireAuthenticatedUsers` method is called, we\u0027ll probably introduce the concept of global requirements which automatically get added to all policies, which this method would add `DenyAnonymousAuthorizationRequirement` to as part of its implementation.  ",
                                           "updatedAt":  "2022-06-08T16:29:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85EjOJ6",
                                           "createdAt":  "2022-06-08T15:39:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "\u003e we\u0027ll probably introduce the concept of global requirements which automatically get added to all policies\r\n\r\nWasn\u0027t the original plan supposed to simplify things? :trollface: ",
                                           "updatedAt":  "2022-06-08T15:39:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85EjSGG",
                                           "createdAt":  "2022-06-08T15:54:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "For background, FallbackPolicy was added for NegotiateAuth to emulate the IIS Windows Auth behavior of requiring all requests to authenticate. The middleware ordering still let you make exceptions for things like static files, but it\u0027s intentionally not more granular than that.",
                                           "updatedAt":  "2022-06-08T15:54:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85EjU7o",
                                           "createdAt":  "2022-06-08T16:04:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "\u003e For background, FallbackPolicy was added for NegotiateAuth to emulate the IIS Windows Auth behavior of requiring all requests to authenticate.\r\n\r\nWhich is super bad from a security perspective, as IWA is - like cookies or basic - an automatic authentication method. By making IWA easy to enforce globally, you\u0027re just encouraging them to shoot themselves in the foot without realizing it: as soon as they\u0027ll innocently add an API endpoint, they\u0027ll end up with a CSRF vulnerability.\r\n\r\nI know all these automatic/default features are very appealing, but security is all about making the right choice and hiding everything behind defaults that can\u0027t work for all scenarios is, IMHO, a bad move.",
                                           "updatedAt":  "2022-06-08T16:04:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85EjdVU",
                                           "createdAt":  "2022-06-08T16:38:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "\u003e In my experience (and you mentioned System.Web ACLs earlier), most people are actually interested in securing whole \"sections\" of their apps, not really the entire app without any distinction at all, so something URL-based would have - IMHO - made more sense that a unique FallbackPolicy. This would also be more flexible, as you could use Bearer for /api and Cookies for /static-assets.\r\n\r\nI agree that it\u0027s often logical to think about configuring AuthN/AuthZ in a URL-based manner, similar to the old `\u003cLocation\u003e` element in *web.config*. It would be interesting to explore this idea further. But I still think that defaulting to \"everything requires AuthZ\" and then explicitly marking up exceptions is the safer approach, combined with the ability to control middleware ordering and policies such that middleware can be placed before the AuthN/AuthZ stage to completely opt it out (in cases where it doesn\u0027t project endpoints).\r\n\r\nWhile it\u0027s likely beyond the scope of what we can achieve now in .NET 7, given your extensive experience and interest in the area, I\u0027ll ask you, if you could make any changes to AuthN/AuthZ in ASP.NET Core, factoring in our limitations RE breaking changes, legacy, etc., what would you do?",
                                           "updatedAt":  "2022-06-08T16:38:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85EjkY9",
                                           "createdAt":  "2022-06-08T17:06:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "\u003e While it\u0027s likely beyond the scope of what we can achieve now in .NET 7, given your extensive experience and interest in the area, I\u0027ll ask you, if you could make any changes to AuthN/AuthZ in ASP.NET Core, factoring in our limitations RE breaking changes, legacy, etc., what would you do?\r\n\r\nRegarding https://github.com/dotnet/aspnetcore/issues/4656, I would:\r\n  - Update `AuthorizationPolicy` to always add `DenyAnonymousAuthorizationRequirement` by default (if backcompat\u0027 is a concern, an `AppContext` switch can be used to revert to the old behavior).\r\n  - Obsolete `AuthorizationPolicyBuilder.RequireAuthenticatedUser()` and replace it by `AuthorizationPolicyBuilder.AllowAnonymousUser()` (authorization policies that work on unauthenticated identities are fairly uncommon in practice but it\u0027s important to not break this scenario).\r\n\r\nThe current opt-in-for-authenticated-users approach is **bad** and leads to subtle security issues that could be easily mitigated by inverting the logic as I mentioned in 2018. The option suggested by @HaoK - depending on the global \"require authenticated user\" to add `DenyAnonymousAuthorizationRequirement` in the individual authorization policies - seems too complex to me.\r\n\r\nRegarding the API suggested in this thread, if it\u0027s really the approach you want to promote, I would avoid introducing a new layer if it ends up being as limited as `FallbackPolicy`, so probably just a set of helpers...\r\n\r\n```csharp\r\npublic static void RequireAuthentication(this AuthorizationOptions options)\r\n    =\u003e options.FallbackPolicy = options.DefaultPolicy = new AuthorizationPolicyBuilder()\r\n        .RequireAuthenticatedUser()\r\n        .Build();\r\n\r\npublic static void RequireAuthentication(this AuthorizationOptions options, params string[] schemes)\r\n    =\u003e options.FallbackPolicy = options.DefaultPolicy = new AuthorizationPolicyBuilder()\r\n        .AddAuthenticationSchemes(schemes)\r\n        .RequireAuthenticatedUser()\r\n        .Build();\r\n```\r\n\r\n... with extensive XML documentation indicating that it could break existing scenarios, as explained in this thread. Since it will stay at the authorization middleware level, authentication handlers like the OAuth 2.0/OIDC/Negotiate or the aspnet-contrib/OpenIddict projects shouldn\u0027t be impacted as their endpoints are handled by `AuthenticationMiddleware`.\r\n\r\nThat said, as I had mentioned in the other thread, OpenIddict will be impacted by the integration of `app.UseAuthentication()` or `app.UseAuthorization()` into `WebApplicationBuilder` as its \"API endpoints\" won\u0027t be covered by CORS policies since the CORS middleware is registered by the user after the middleware registered by the host. If you wanted to avoid this, I\u0027d recommend updating the `WebApplicationBuilder` to also register the CORS middleware before the authentication middleware.",
                                           "updatedAt":  "2022-06-08T17:11:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Ejqta",
                                           "createdAt":  "2022-06-08T17:32:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "\u003e Update AuthorizationPolicy to always add DenyAnonymousAuthorizationRequirement by default \r\n\u003e depending on the global \"require authenticated user\" to add DenyAnonymousAuthorizationRequirement in the individual authorization policies - seems too complex to me.\r\n\r\nIts complex because the primary concern was with layering, and we don\u0027t want authZ to require authN always, which is why there needs to be an explicit gesture (aka the new RequireAuthentication() method).  That said, effectively all AuthorizationPolicies will have the behavior of always adding DenyAnonymousAuthorizationRequirement but only when RequireAuthentication is called\r\n",
                                           "updatedAt":  "2022-06-08T17:35:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85EjrAS",
                                           "createdAt":  "2022-06-08T17:33:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "Thanks for your input.\r\n\r\nTo be clear, the proposal in this thread was not to make the new method enforce any AuthN requirement earlier than when `AuthorizationMiddleware` runs (at least as far as I understood it). It would still be that middleware that enforces the requirement. The API appearing on `builder.Authentication` is more about discoverability but of course is open to discussion.\r\n\r\n\u003e If you wanted to avoid this, I\u0027d recommend updating the WebApplicationBuilder to also register the CORS middleware before the authentication middleware.\r\n\r\nThis has been suggested internally (hi there @halter73) and definitely seems worth exploring. Do we think it\u0027s as straightforward as always adding the CORS middleware before the authentication/authorization in the case where they\u0027ll be added (i.e. schemes are added via `builder.Authentication`), or is something more nuanced possible/appropriate?",
                                           "updatedAt":  "2022-06-08T17:33:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Ejsor",
                                           "createdAt":  "2022-06-08T17:40:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "\u003e Its complex because the primary concern was with layering\r\n\r\nWhat do you mean exactly by \"layering\" here?\r\n\r\n\u003e and we don\u0027t want authZ to require authN always, which is why there needs to be an explicit gesture (aka the new RequireAuthentication() method).\r\n\r\nThat\u0027s exactly why I suggested adding an `AuthorizationPolicyBuilder.AllowAnonymousUser()` API to cover the (very) rare cases where an authorization policy would need to work on unauthenticated identity.\r\n\r\nI\u0027d suggest re-reading https://github.com/dotnet/aspnetcore/issues/4656 so you can appreciate the number of people who\u0027ve been trapped by this design problem. Making it more complex is likely not going to help 😄 ",
                                           "updatedAt":  "2022-06-08T17:40:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85FF--J",
                                           "createdAt":  "2022-06-17T20:10:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "adityamandaleeka",
                                           "body":  "@DamianEdwards can you put this in a milestone?",
                                           "updatedAt":  "2022-06-17T20:10:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85FGQFW",
                                           "createdAt":  "2022-06-17T22:10:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `.NET 7 Planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2022-06-17T22:10:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85FcUdn",
                                           "createdAt":  "2022-06-24T00:50:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC_GAoA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "kevinchalet",
                                                                               "createdAt":  "2022-06-24T10:56:40Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Marcel0024",
                                                                               "createdAt":  "2023-06-26T19:07:34Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "Moving to .NET 8.\r\n\r\nI implemented two approaches to enabling this via path-based authorization over at https://github.com/DamianEdwards/AspNetCorePathAuthorization\r\n\r\n@kevinchalet you might find this matches the kind of idea you proposed.\r\n\r\nOne approach uses a custom middleware which effectively has to do its own route matching via a custom trie, etc. (eww) and another approach actually integrates with routing by attaching metadata to any endpoint based on route pattern, even if there isn\u0027t an endpoint already registered there! That means you can make endpoint-aware middleware \"activate\" even for requests with no endpoints, e.g. authorization can run on and protect requests for static files.",
                                           "updatedAt":  "2022-06-24T00:50:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Fd3oA",
                                           "createdAt":  "2022-06-24T10:56:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "@DamianEdwards looks nice and flexible 👍🏻 ",
                                           "updatedAt":  "2022-06-24T10:56:32Z"
                                       }
                                   ],
                         "totalCount":  53
                     },
        "title":  "Make it easier to discover how to enforce/require auth in an application",
        "labels":  [
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/42105",
        "createdAt":  "2022-06-09T08:43:22Z",
        "number":  42105,
        "author":  "damienbod",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC27I4w==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "hajekj",
                                            "createdAt":  "2022-06-09T09:09:46Z"
                                        },
                                        {
                                            "content":  "EYES",
                                            "user":  "Vlaaaaaaad",
                                            "createdAt":  "2022-06-09T10:16:42Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "JuergenGutsch",
                                            "createdAt":  "2022-06-09T12:08:24Z"
                                        },
                                        {
                                            "content":  "EYES",
                                            "user":  "JuergenGutsch",
                                            "createdAt":  "2022-06-09T12:08:26Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "AslanAmca",
                                            "createdAt":  "2023-01-23T16:49:22Z"
                                        },
                                        {
                                            "content":  "EYES",
                                            "user":  "AslanAmca",
                                            "createdAt":  "2023-01-23T16:49:24Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "solkh",
                                            "createdAt":  "2023-02-03T12:44:55Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Kaayo",
                                            "createdAt":  "2023-03-17T00:47:47Z"
                                        },
                                        {
                                            "content":  "EYES",
                                            "user":  "Kaayo",
                                            "createdAt":  "2023-03-17T00:47:48Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "Kaayo",
                                            "createdAt":  "2023-03-17T00:47:53Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "MarioGruda",
                                            "createdAt":  "2023-04-27T11:45:09Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "Ponant",
                                            "createdAt":  "2023-06-09T08:53:48Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "alxgda",
                                            "createdAt":  "2024-04-01T15:40:29Z"
                                        }
                                    ],
                          "totalCount":  13
                      },
        "updatedAt":  "2025-02-19T16:51:57Z",
        "body":  "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Is your feature request related to a problem? Please describe the problem.\r\n\r\nhttps://twitter.com/davidfowl/status/1534756765597720578\r\n\r\n### Describe the solution you\u0027d like\r\n\r\nI see 4 authentication grouped needs in ASP.NET Core\r\n\r\n1-\tEasy to implement standard client authn (OpenID Connect)\r\n2-\tStandalone with cookies and ASP.NET Core Identity (IDP solutions as well)\r\n3-\tCertificate auth \r\n4-\tAzureAD and Azure B2C client authn\r\n\r\nI believe Microsoft  should provide templates for just the client authn and docs + links to products about how to use or implement the second and third type. The Azure AD and Azure B2C client templates are already good.\r\n\r\nIf you have simple authn templates for OIDC clients for an ASP.NET Core API, Razor page, MVC, Blazor (WASM, BFF ASP.NET Core hosted, Server) which are easy to adapt after, then we have a good solution. As part of the solution then, docs about using with different IDPs would help as all IDPs have small differences.\r\n\r\nHTTPS should be used with all these templates per default.\r\n\r\n\r\n### Additional context\r\n\r\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOaGDJYA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85Emzmj",
                                           "createdAt":  "2022-06-09T11:49:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `.NET 7 Planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2022-06-09T11:49:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85E9sHJ",
                                           "createdAt":  "2022-06-15T22:45:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Lonli-Lokli",
                                           "body":  "My scenario is not about Auth but about Auth integration testing with Minimal api.\r\n\r\nOne of the cases of my project is to be sure that all routes, including minimal, are protected with either Authorize or AllowAnonymous attributes.\r\n\r\nPreviously it was possible to loaf all types and search for ControllerBase inheritors and checking their metadata\r\n\r\nIsn\u0027t it better to convert it to discussion?",
                                           "updatedAt":  "2022-06-15T22:46:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85OJdJY",
                                           "createdAt":  "2022-11-11T01:07:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danroth27",
                                           "body":  "\u003e Easy to implement standard client authn (OpenID Connect)\r\n\r\n@damienbod Can share a bit more about what you believe is missing for this? Are you looking for a generic OIDC client setup that would work with most OIDC providers, similar to what we have for [Blazor WebAssembly](https://learn.microsoft.com/aspnet/core/blazor/security/webassembly/standalone-with-authentication-library)? Are there particular OIDC providers that you\u0027d want to ensure this works with?",
                                           "updatedAt":  "2022-11-11T01:07:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85OM0A0",
                                           "createdAt":  "2022-11-11T17:38:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC9joWQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Ponant",
                                                                               "createdAt":  "2023-06-09T08:55:03Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "damienbod",
                                           "body":  "Hi @danroth27  thanks for asking. These are the projects we create for different clients which I think Microsoft could provide and would help the community developing secure applications. None of the templates are available per default.\r\n\r\nIndividual Accounts\r\n-\tnone\r\n\r\nExternal authentication\r\n\r\n-\tOpenID Connect client with Razor Pages\r\n-\tOpenID Connect client with Controller API\r\n-\tOpenID Connect Blazor WASM hosted in ASP.NET Core (BFF with cookies)\r\n-\tAAD Blazor WASM hosted in ASP.NET Core (BFF with cookies)\r\n-\tAAD B2C Blazor WASM hosted in ASP.NET Core (BFF with cookies)\r\n\r\nI created three Blazor templates to fill this gap but believe Microsoft could do this for the community. The basic template of a Razor Page using an external OIDC server is missing. This would be really simple to support as all the auth middleware is already available. A user would only need to change the OIDC configuration for each different server requirement. A generic OIDC client setup would be great.\r\n\r\nHere are the Blazor templates I created. These have no auth in the frontend and are simple to extend. The templates have also no third party dependencies either apart from the security headers package.\r\n\r\nhttps://github.com/damienbod/Blazor.BFF.OpenIDConnect.Template\r\n\r\nhttps://github.com/damienbod/Blazor.BFF.AzureAD.Template\r\n\r\nhttps://github.com/damienbod/Blazor.BFF.AzureB2C.Template\r\n\r\nIf I need to implement my own identity provider, I use either **IdentityServer** or **OpenIddict** with ASP.NET Core Identity using their templates (which are very good) and have no need for any of the Microsoft templates using these packages. So apart from the **Microsoft.Identity.Web** templates for Razor Pages and APIs, Microsoft provide none of the templates which would be useful to me and probably to others as well. \r\n\r\nThis might be useful for some project as well:\r\n\r\nIndividual Accounts \r\n-\tRazor Page with Cookies and ASP.NET Core Identity\r\n-\tBlazor WASM hosted and ASP.NET Core Identity (BFF Cookies)\r\n\r\nGreetings Damien\r\n",
                                           "updatedAt":  "2022-11-11T17:41:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85ebVAE",
                                           "createdAt":  "2023-06-09T08:59:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Ponant",
                                           "body":  "https://learn.microsoft.com/en-us/aspnet/core/blazor/security/webassembly/?view=aspnetcore-8.0\r\n\"The authentication support in Blazor WebAssembly is built on top of the OIDC Client Library (oidc-client.js), which is used to handle the underlying authentication protocol details.\"\r\n\r\nI think with this it should not be that trivial for BFF on blazor wasm apps.",
                                           "updatedAt":  "2023-06-09T08:59:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85ebXvz",
                                           "createdAt":  "2023-06-09T09:07:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Lonli-Lokli",
                                           "body":  "Especially with the fact that https://github.com/IdentityModel/oidc-client-js is no longer maintained",
                                           "updatedAt":  "2023-06-09T09:08:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85oYMlg",
                                           "createdAt":  "2023-10-06T17:39:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `.NET 9 Planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2023-10-06T17:39:12Z"
                                       }
                                   ],
                         "totalCount":  7
                     },
        "title":  "Authentication needs in ASP.NET Core going forward",
        "labels":  [
                       "enhancement",
                       "area-auth",
                       "Pillar: Complete Blazor Web"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/42170",
        "createdAt":  "2022-06-13T15:43:15Z",
        "number":  42170,
        "author":  "captainsafia",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-22T20:10:55Z",
        "body":  "Following up on the work done in #41520, we want to include support for config-based authentication options for all the authentication options that we currently support.\r\n\r\n- [x] JwtBearer\r\n- [x] OIDC\r\n- [ ] Cookie\r\n- [ ] Certificate\r\n- [ ] PolicyScheme\r\n- [ ] Negotiate\r\n- [ ] Social\r\n\r\n~~We\u0027ll also want to make sure that these implementations support `IOptionsMonitor` for listening to changes in config.~~ We\u0027re moving this work to .NET 8.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHORtVfKg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85Fsu5H",
                                           "createdAt":  "2022-06-28T22:31:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCkRvTA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "martincostello",
                                                                               "createdAt":  "2022-06-29T06:31:49Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "cc @martincostello for https://github.com/aspnet-contrib ",
                                           "updatedAt":  "2022-06-28T22:31:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85G1V8q",
                                           "createdAt":  "2022-07-18T22:31:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "captainsafia",
                                           "body":  "Support for loading OIDC options has been merged into preview7. Moving this into .NET 8 Planning as we consider addressing the other authentication types then.",
                                           "updatedAt":  "2022-07-18T22:31:01Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Support config-based options for different authentication schemes",
        "labels":  [
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/42172",
        "createdAt":  "2022-06-13T18:19:09Z",
        "number":  42172,
        "author":  "DamianEdwards",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-06-02T00:52:25Z",
        "body":  "Spin-off of #39855 focusing on addition of top-level authorization configuration API.\r\n\r\nExample matching `Authorization` changes to consider, allowing sharing of policies, etc.:\r\n\r\n```csharp\r\nvar builder = WebApplication.CreateBuilder(args);\r\n\r\nbuilder.Authentication.AddJwtBearer();\r\nbuilder.Authorization.AddPolicy(\"HasProtectedAccess\", policy =\u003e\r\n    policy.RequireClaim(\"scope\", \"myapi:protected-access\"));\r\n\r\nvar app = builder.Build();\r\n\r\napp.MapGet(\"/hello\", () =\u003e \"Hello!\");\r\n\r\napp.MapGet(\"/hello-protected\", () =\u003e \"Hello, you are authorized to see this!\")\r\n    .RequireAuthorization(\"HasProtectedAccess\");\r\n\r\napp.MapGet(\"/hello-also-protected\", () =\u003e \"Hello, you authorized to see this to!\")\r\n    .RequireAuthorization(\"HasProtectedAccess\");\r\n\r\napp.Run();\r\n```\r\n\r\nThe `WebApplicationBuilder.Authorization` property is typed as `AuthorizationOptions` allowing simple creation of policies and configuration of the default and fallback policies:\r\n\r\n```csharp\r\nbuilder.Authorization.AddPolicy(\"HasProtectedAccess\", policy =\u003e policy.RequireClaim(\"scope\", \"myapi:protected-access\"));\r\nbuilder.Authorization.DefaultPolicy = builder.Authorization.GetPolicy(\"HasProtectedAccess\");\r\n\r\n// Consider new methods to enable easily setting default/fallback policies by name\r\nbuilder.Authorization.SetDefaultPolicy(\"HasProtectedAccess\");\r\nbuilder.Authorization.SetFallbackPolicy(\"HasProtectedAccess\");\r\n``` \r\n\r\nThe `WebApplicationBuilder` would register an `IConfigureOptions\u003cAuthorizationOptions\u003e` in the services collection with a delegate that applies the settings.\r\n\r\nNote this suggestion has a fundamental issue in that the `AuthorizationOptions` isn\u0027t designed to be mutated in this way, rather it should be configured via a callback registered in DI so that it runs at the appropriate time during app startup and composes with other code that wishes to configure it.\r\n\r\nPerhaps instead the `Authentication` property should also read from configuration for authorization settings, and the `Authorization` property would be a new type that simply provides easy access to adding a configuration delegate, e.g.:\r\n\r\n```jsonc\r\n{\r\n  \"Authorization\": {\r\n    \"DefaultPolicy\": \"HasProtectedAccess\",\r\n    \"FallbackPolicy\": \"\",\r\n    \"InvokeHandlersAfterFailure\": true,\r\n    \"Policies\": {\r\n      \"HasProtectedAccess\": {\r\n        \"Claims\": [\r\n          { \"scope\" : \"myapi:protected-access\" }\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n```csharp\r\nbuilder.Authentication.AddJwtBearer();\r\nbuilder.Authorization.Configure(authz =\u003e\r\n{\r\n    // Following is the code-based equivalent of config above\r\n    authz.AddPolicy(\"HasProtectedAccess\", policy =\u003e policy.RequireClaim(\"scope\", \"myapi:protected-access\"));\r\n    authz.DefaultPolicy = authz.GetPolicy(\"HasProtectedAccess\");\r\n});\r\n```\r\n\r\nSome other potential example policies as defined via configuration:\r\n\r\n```jsonc\r\n{\r\n  \"Authorization\": {\r\n    \"DefaultPolicy\": \"HasProtectedAccess\",\r\n    \"Policies\": {\r\n      \"AuthenticatedUsers\": {\r\n        \"AuthenticationRequired\": true\r\n      },\r\n      \"Employees\": {\r\n        \"AuthenticationRequired\": true,\r\n        \"Roles\": [ \"Employees\" ]\r\n      },\r\n      \"OnlyHomers\": {\r\n        \"AuthenticationRequired\": true,\r\n        \"UserName\": \"Homer\"\r\n      },\r\n      \"ApiClients\": {\r\n        \"AuthenticationRequired\": true,\r\n        // Any unrecognized properties are auto-mapped as claims perhaps?\r\n        \"scope\": [ \"myapi:read\", \"myapi:protected-access\" ]\r\n      }\r\n    }\r\n  }\r\n}\r\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOU8edYQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85Ez80Z",
                                           "createdAt":  "2022-06-13T21:44:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "FYI @HaoK @Tratcher @davidfowl @captainsafia @jcjiang @blowdart ",
                                           "updatedAt":  "2022-06-13T22:20:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Ez817",
                                           "createdAt":  "2022-06-13T21:44:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `.NET 7 Planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2022-06-13T21:44:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Ez_Bb",
                                           "createdAt":  "2022-06-13T21:55:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOChmqKg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "DamianEdwards",
                                                                               "createdAt":  "2022-06-13T22:19:23Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "captainsafia",
                                           "body":  "\u003e Perhaps instead the Authentication property should also read from configuration for authorization settings, and the Authorization property would be a new type that simply provides easy access to adding a configuration delegate, e.g.:\r\n\r\nI\u0027m a fan of this approach:\r\n\r\n- It\u0027s consistent with what we do for `Authentication` and makes it easier for users to reason about the mental model here.\r\n- It provides us with a way to examine the authorization config for an application globally, which will help with some of the details in https://github.com/dotnet/aspnetcore/issues/39761 as I\u0027ve been discovering.\r\n\r\nI\u0027m not aware of any implementation complexities that make the options-from-config approach not viable for authorization but @HaoK might be able to add some color here.",
                                           "updatedAt":  "2022-06-13T22:38:39Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85E0B_c",
                                           "createdAt":  "2022-06-13T22:09:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Yeah config binding seems the cleanest for the properties (everything that\u0027s not a policy).  Directly configuring an instance of AuthorizationOptions off of the builder seems more trouble than what\u0027s it worth.  If you really want something like that, maybe just have an alternate dictionary of named policies, and settings, which you use in a regular options configuration of AuthorizationOptions, basically an AuthorizationOptionsBuilder property would be the analogy here.\r\n\r\nIn regards to authZ policies in config.  Personally I would rather define that in code rather than muck around with json but seems ok as long as we don\u0027t go too insane with what requirements we support.  We can certainly start with seeing what config definition of some simple policies look like, requiring the presence of a specific claim/role seems reasonably easy.  \r\n",
                                           "updatedAt":  "2022-06-13T22:09:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85E0dgN",
                                           "createdAt":  "2022-06-14T01:08:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "Ok so the feature would be `IServiceCollection.AddAuthorization()` will now also register an `IConfigureOptions\u003cAuthorizationOptions\u003e` that enables the configuration of `AuthorizationOptions` including defining policies from configuration.\r\n\r\n~A new property, `WebApplicationBuilder.Authorization` will be added that enables registering custom `Action\u003cAuthorizationOptions\u003e` configuration delegates that run in addition to the one added by `WebApplicationBuilder.Authentication`, essentially an alias for `builder.Services.Configure(Action\u003cAuthorizationOptions\u003e configure)`.~\r\n\r\nRegarding the AuthZ policy configuration binding support, here\u0027s a strawman:\r\n- `DenyAnonymousAuthorizationRequirement`\r\n    Configuration property name `RequireAuthenticatedUsers`. Supports a single boolean value.\r\n    ```json\r\n    \"PolicyName\": {\r\n        \"RequireAuthenticatedUsers\": true\r\n    },\r\n    ```\r\n- `RolesAuthorizationRequirement`\r\n    Configuration property name `Roles`. Supports a single string value **OR** an array of string values (i.e. it looks for configuration keys like `Authorization.PolicyName.Roles.0`, `Authorization.PolicyName.Roles.1`, etc.).\r\n    ```json\r\n    \"PolicyName1\": {\r\n        \"Roles\": [ \"RoleName1\", \"RoleName2\" ]\r\n    },\r\n    \"PolicyName2\": {\r\n        \"Roles\": \"SingleRole\"\r\n    },\r\n    ```\r\n- `ClaimsAuthorizationRequirement`\r\n    Configuration property name `Claims`. Supports an object where property names are claim types mapped to `ClaimsAuthorizationRequirement.ClaimType` and property values are a single string value **OR** an array of string values which are mapped to `ClaimsAuthorizationRequirement.AllowedValues`.\r\n    ```json\r\n    \"PolicyName1\": {\r\n        \"Claims\": {\r\n            \"scope\": [ \"scope1\", \"scope2\", \"scope3\" ],\r\n            \"otherClaim\": \"claim value\",\r\n        }\r\n    },\r\n    ```\r\n- `NameAuthorizationRequirement`\r\n    Configuration property name `RequiredName`. Supports a single string value\r\n    ```json\r\n    \"PolicyName\": {\r\n        \"RequiredName\": \"SuperAdminUser\"\r\n    },\r\n    ```",
                                           "updatedAt":  "2022-06-14T18:57:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85E0nY5",
                                           "createdAt":  "2022-06-14T02:35:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "Does this really add much over the call to AddAuthorization call?",
                                           "updatedAt":  "2022-06-14T02:35:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85E0p0e",
                                           "createdAt":  "2022-06-14T02:55:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "\u003e Does this really add much over the call to AddAuthorization call?\r\n\r\nThe top-level `WebApplicationBuilder.Authorization` property doesn\u0027t no, we could not do that and just focus on the configuration binding aspect instead.",
                                           "updatedAt":  "2022-06-14T02:55:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85E0_gO",
                                           "createdAt":  "2022-06-14T05:45:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "+1 on just focusing on the configuration binding ",
                                           "updatedAt":  "2022-06-14T05:45:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85E20Qb",
                                           "createdAt":  "2022-06-14T13:55:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "Removed the proposed API addition.",
                                           "updatedAt":  "2022-06-14T13:55:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85E3BM4",
                                           "createdAt":  "2022-06-14T14:30:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "captainsafia",
                                           "body":  "Assuming it\u0027s just config work, the only public API that we might need is an `IAuthorizationConfigProvider` interface for implementing getters for the `Authorization` config and a `GetPolicyByName` extension method for resolving individual policies from the config. The options implementations can likely remain internal.\r\n\r\n```csharp\r\nnamespace Microsoft.AspNetCore.Authorization;\r\n\r\ninterface IAuthorizationConfigurationProvider\r\n{\r\n  IConfiguration AuthorizationConfiguration { get; }\r\n}\r\n\r\npublic static class AuthorizationConfigurationProviderExtensions\r\n{\r\n  public static IConfiguration GetAuthorizationPolicyByName(\r\n    this IAuthorizationConfigurationProvider provider,\r\n    string policyName)\r\n}\r\n```\r\n\r\nEDIT: actually no extension method needed. The following should suffice:\r\n\r\n```csharp\r\nnamespace Microsoft.AspNetCore.Authorization;\r\n\r\ninterface IAuthorizationConfigurationProvider\r\n{\r\n  IConfiguration AuthorizationConfiguration { get; }\r\n}\r\n```",
                                           "updatedAt":  "2022-06-14T17:16:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85E4Ruw",
                                           "createdAt":  "2022-06-14T18:56:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "@HaoK any thoughts on the [strawman binding rules](https://github.com/dotnet/aspnetcore/issues/42172#issuecomment-1154603021)?",
                                           "updatedAt":  "2022-06-14T18:56:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85E4fwA",
                                           "createdAt":  "2022-06-14T20:05:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "What do we think about doing something spicier to make this extensible.  I was thinking about how we\u0027d implement this, and that lead me to something like the following schema instead, with a similar pluggable pattern we could use for authN as well for schemes.\r\n\r\n```c#\r\n{ \"Policies\": // Master list of named polices\r\n   { \"\u003cpolicyName\u003e\" : // policyName : [list of requirements] all instances must be met for a success\r\n      [  \r\n          // General schema for a requirement, its identifier (for dispatching to the right factory, and its config data)\r\n          \"\u003crequirementIdentifier\u003e\" : {\r\n                // Arbitrary config data that gets passed to the requirement to initialize itself\r\n          },\r\n          // Examples of instances of our built in requirements\r\n          \"RequireAuthenticatedUsers\" : { }, // DenyAnonymous takes no data\r\n          \"Roles\" : {\r\n              \"AllowedRoles\" : [ \"\u003crole1\u003e\" , \"\u003crole2\u003e\"] // Maps directly to AllowedRoles property on requirement \r\n           }\r\n          \"Claim\" : {\r\n               \"ClaimType\": \"\u003crequiredClaimType\u003e\",\r\n               \"AllowedValues\": [ \"\u003cvalue1\u003e\", \"\u003cvalue2\u003e\" ] // must match one of these if present.\r\n          }\r\n      ]\r\n   }\r\n}\r\n\r\n// We register our build in requirements and have them implement the factory to parse the config into instances\r\npublic interface IConfigurationRequirementRegistry {\r\n     // Hopefully we can let the factory use things in DI to create the requirements?\r\n     public void Register\u003cIConfigurationAuthorizationRequirementFactory\u003e(string requirementIdentifier) \r\n}\r\n\r\npublic interface IConfigurationAuthorizationRequirementFactory {\r\n       public IAuthorizationRequirement Create(IConfiguration configData); // Given the config data for a requirement, knows how create an instance\r\n}\r\n\r\n// Analog on the authN side could be IConfigurationAuthenticationSchemeRegistry / IConfigurationAuthenticationSchemeFactory or something which also would be passed something like:\r\n\r\n\"\u003cschemeName\u003e\" : {\r\n    \"\u003cschemeIdentifer\u003e\" : // i.e. \"Jwt | Cookie | Certificate\", Extensible string -\u003e factory registration\r\n       {\r\n        // \u003cscheme configuration data\r\n       }\r\n}\r\n\r\n```\r\n\r\n\r\n\r\n",
                                           "updatedAt":  "2022-06-14T21:48:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85E4sM0",
                                           "createdAt":  "2022-06-14T21:04:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "@HaoK my first thought is: wow, that\u0027s a lot. But I certainly appreciate that this kind of configuration extensibility is not uncommon at all, although I wonder if we can reduce by a couple of levels?\r\n\r\n- Why do the policies have to be an array rather than named objects (aka a dictionary)? You can\u0027t add two policies with the same name anyway so structuring it as dictionary would remove a layer of nesting.\r\n- It would need to support multiple claims in the list of requirements right? Your proposal seems as though it\u0027s limited to a single claim in the requirements list.\r\n- What was the reasoning to having a single nested object property called \"Requirements\" instead of just having the policy itself be an array? Schema extensibility?\r\n- Similar question but for Roles/AllowedRoles. Are you allowing space for more options under Roles?",
                                           "updatedAt":  "2022-06-14T21:04:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85E4wvs",
                                           "createdAt":  "2022-06-14T21:30:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCh2WUA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "DamianEdwards",
                                                                               "createdAt":  "2022-06-14T22:00:26Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "HaoK",
                                           "body":  "I was mostly thinking about the extensibility model, so I didn\u0027t put too much thought into the exact shape of the schema.\r\n\r\n\u003e Why do the policies have to be an array rather than named objects (aka a dictionary)? You can\u0027t add two policies with the same name anyway so structuring it as dictionary would remove a layer of nesting.\r\n\r\nGood point, the names are required to be unique so we can get rid of that outer array, i\u0027ll edit that above to remove\r\n\r\n\u003e It would need to support multiple claims in the list of requirements right? Your proposal seems as though it\u0027s limited to a single claim in the requirements list.\r\n\u003e What was the reasoning to having a single nested object property called \"Requirements\" instead of just having the policy itself be an array? Schema extensibility?\r\n\r\nI was just demonstrating examples of what some requirement would look like, you can have duplicate requirements of the same instance.  The requirements can be dropped, with the downside of not leaving space if we ever want to add new metadata to `AuthorizationPolicy` instances (although we could just add logic that branched on if the value was an array or a subobject in the future, so seems fine)\r\n\r\n```\r\n     // \u003cPolicyName\u003e : \u003cList of requirements\u003e, all instances must be satisfied to succeed a policy\r\n     { \"exampleAdminPolicy\" : \r\n          [ \r\n            \"RequireAuthenticatedUsers\" : { }, // DenyAnonymous takes no data\r\n            \"Roles\" : {\r\n                \"AllowedRoles\" : [ \"Admin\" ] // Maps directly to AllowedRoles property on requirement \r\n             },\r\n            \"Claim\" : {\r\n                 \"ClaimType\": \"someOrgClaim\",\r\n                 \"AllowedValues\": [ \"aspnet\", \"devdiv\" ] // must match one of these if present.\r\n            },\r\n            \"Claim\" : {\r\n                 \"ClaimType\": \"empId\" // Must be an employee\r\n            },\r\n            \"CustomAdminRequirement\": // Some custom requirement they register\r\n            {\r\n                  \"authenticatorRequired\" : \"true\",\r\n                  \"lastTfaVerifiedDate\" : \"5/14/2022\"\r\n                  \"passwordComplexityCheck\" : \"true\"\r\n           }\r\n        ]\r\n     }\r\n```\r\n\r\nBasically this lets each policy have space to store all of the custom data that any requirements would ever need, as they get passed the section underneath the requirement Identifier\r\n\r\n```\r\n                    \"\u003crequirementIdentifier\u003e\" : {\r\n                          // Arbitrary config data that gets passed to the requirement to initialize itself\r\n                    },\r\n```\r\n\r\nWe can certainly make our built in requirements have shorter/more concise config, I was just doing this mechanically to match the types at this point (basically viewing our requirements no differently than a 3rd party requirement that attempted to use the config binder even), our requirements could be implemented basically be `configSection.Get\u003cTRequirement\u003e()` with this schema since we only have very simple requirements with strings",
                                           "updatedAt":  "2022-06-14T21:53:42Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85E42Q_",
                                           "createdAt":  "2022-06-14T22:01:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "@HaoK yep that makes sense and your updated example looks reasonable.",
                                           "updatedAt":  "2022-06-14T22:01:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85E5MSN",
                                           "createdAt":  "2022-06-15T00:30:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "@HaoK actually your example is invalid JSON now I think, as you have an array that contains object notation under the \"exampleAdminPolicy\". I think we\u0027d likely support defining schemes for policies too yes?\r\n\r\nSo revised to this?\r\n\r\n```jsonc\r\n{\r\n  \"Authorization\": {\r\n    \"DefaultPolicy\": \"HasProtectedAccess\",\r\n    \"Policies\": {\r\n      // Each property on the Policies object is a named policy comprised of an array of requirement objects\r\n      \"AuthenticatedUsers\": [\r\n        { \"RequireAuthenticatedUsers\" : {} } // DenyAnonymous takes no data, could \u0027null\u0027 too\r\n      ],\r\n      \"Employees\": [\r\n        { \"Schemes\" : { \"AllowedSchemes\": [ \"Bearer\" ] } },\r\n        { \"RequireAuthenticatedUsers\" : {} },\r\n        { \"Roles\": { \"AllowedRoles\": [ \"Employees\" ] } }\r\n      ],\r\n      \"OnlyHomers\": [\r\n        { \"RequireAuthenticatedUsers\" : {} },\r\n        { \"RequiresUserName\" : { \"UserName\": \"Homer\" } }\r\n      ],\r\n      \"ApiClients\": [\r\n        { \"RequireAuthenticatedUsers\" : {} },\r\n        { \"Claim\": { \"ClaimType\": \"scope\", \"AllowedValues\": [ \"myapi:read\", \"myapi:protected-access\" ] } }\r\n      ],\r\n      \"exampleAdminPolicy\": [\r\n        { \"RequireAuthenticatedUsers\" : {} },\r\n        { \"Roles\": { \"AllowedRoles\": [ \"Admin\" ] } }, // Maps directly to AllowedRoles property on requirement \r\n        { \"Claim\": { \"ClaimType\": \"someOrgClaim\", \"AllowedValues\": [ \"aspnet\", \"devdiv\" ] } }, // Must match one of these if present\r\n        { \"Claim\": { \"ClaimType\": \"empId\" } }, // Must be an employee\r\n        { \"CustomAdminRequirement\":  // Some custom requirement they register\r\n            {\r\n                \"authenticatorRequired\" : \"true\",\r\n                \"lastTfaVerifiedDate\" : \"5/14/2022\",\r\n                \"passwordComplexityCheck\" : \"true\"\r\n           }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n```",
                                           "updatedAt":  "2022-06-15T00:30:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85E5YJr",
                                           "createdAt":  "2022-06-15T02:01:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCh4G-A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "DamianEdwards",
                                                                               "createdAt":  "2022-06-15T02:31:14Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Wait, you can\u0027t have an array of json objects?  Really?\r\n\r\nWell as soon as we are setting Schemes on Policies, then I\u0027d argue we want it to be like I had before with Requirements/Schemes being top level: so for that employees policy\r\n\r\n```\r\n      \"Employees\": {\r\n        \"AuthenticationSchemes\" : [ \"Bearer\" ],\r\n        \"Requirements\" : [\r\n           { \"RequireAuthenticatedUsers\" : {} },\r\n           { \"Roles\": { \"AllowedRoles\": [ \"Employees\" ] } }\r\n         ],\r\n     }\r\n```\r\n",
                                           "updatedAt":  "2022-06-15T02:01:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85E5asd",
                                           "createdAt":  "2022-06-15T02:17:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCsHraw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "russia",
                                                                               "createdAt":  "2022-09-13T09:42:11Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "HaoK",
                                           "body":  "But it feels a bit icky to mix authenticationSchemes in with the policies definitions, because now if you want to have a slightly different Employee Cookie policy, you have to duplicate everything and just say \"Cookies\" for the scheme.  \r\n\r\n`[Authorize(AuthenticationSchemes = \"Bearer\", Policy = \"Employees\")]`\r\n`[Authorize(AuthenticationSchemes = \"Cookie\", Policy = \"Employees\")]`\r\n\r\nvs\r\n\r\n`[Authorize(\"Cookie-Employees\")]`\r\n`[Authorize(\"Bearer-Employees\")]`\r\n\r\nBut that\u0027s already an issue today ",
                                           "updatedAt":  "2022-06-15T02:17:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85E8xet",
                                           "createdAt":  "2022-06-15T18:12:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "A (fundamental?) issue that\u0027s been raised about this approach is that you can\u0027t define a policy in configuration that itself relies on values from configuration, as configuration is strictly statically defined name/value pairs with no ability to statically reference values from elsewhere.\r\n\r\nE.g. if one wanted to create a policy with a claim requirement for \"iss\" (Issuer) that matches the configuration of the JWT scheme\u0027s issuer, which is also declared in configuration you\u0027d be forced to duplicate values in configuration:\r\n\r\n```jsonc\r\n{\r\n  \"Authentication\": {\r\n    \"Schemes\": {\r\n      \"Bearer\": {\r\n        \"Issuer\": \"SuperDuperIdP\" // \u003c-- Specified here\r\n      }\r\n    }\r\n  },\r\n  \"Authorization\": {\r\n    \"DefaultPolicy\": \"AuthenticatedUsers\",\r\n    \"Policies\": {\r\n      \"AuthenticatedUsers\": [\r\n        // DenyAnonymousAuthorizationRequirement\r\n        \"RequireAuthenticatedUsers\",\r\n        // ClaimsAuthorizationRequirement\r\n        {\r\n          \"Claims\": {\r\n            \"ClaimType\": \"iss\",\r\n            \"AllowedValues\": [ \"SuperDuperIdP\" ] // \u003c-- Specified *again* here\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n```",
                                           "updatedAt":  "2022-06-15T18:12:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85FA2Qb",
                                           "createdAt":  "2022-06-16T16:06:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "This proposal obviously has some issues that make it unpragmatic to include in .NET 7, so I\u0027ve spun-off #42235 to revisit the idea of a more top-level API (`builder.Authorization`) for setting up app-wide AuthZ options without needing to resort to `builder.Services.AddAuthorization()` or `builder.Services.Configure\u003cAuthorizationOptions\u003e()`.",
                                           "updatedAt":  "2022-06-16T16:06:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85FA2Xc",
                                           "createdAt":  "2022-06-16T16:06:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCiROzg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "DamianEdwards",
                                                                               "createdAt":  "2022-06-16T16:58:29Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "HaoK",
                                           "body":  "RE the duplication of values, this seems more like a general issue for configuration.  We can certainly address that by introducing our own abstraction/layer to support configuration variables or something if this is really a blocker we need to solve.\r\n\r\nAdd some kind of notion of config variables in some special section:\r\n\r\n```\r\n{ \"variables\" : \r\n {\r\n     \"$idp$\" = \"superDuperIdP\"\r\n     \"#var#\" = \"whatever\"\r\n }\r\n}\r\n```\r\n\r\nHave our authorization config parsing system wrap IConfiguration to replace the final Get string calls to replace any variables using this section which allows folks to define this.  But this seems like a feature for config to add to me",
                                           "updatedAt":  "2022-06-16T16:06:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85TxZge",
                                           "createdAt":  "2023-01-26T18:56:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "Think we should just close or move this to backlog at this point.",
                                           "updatedAt":  "2023-01-26T18:56:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Tx51h",
                                           "createdAt":  "2023-01-26T20:10:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2023-01-26T20:10:20Z"
                                       }
                                   ],
                         "totalCount":  23
                     },
        "title":  "Introduce support for defining Authorization policies via Configuration",
        "labels":  [
                       "area-auth",
                       "feature-minimal-hosting",
                       "area-minimal"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/42192",
        "createdAt":  "2022-06-14T18:29:30Z",
        "number":  42192,
        "author":  "bradygaster",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCu66cQ==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "codeaphex",
                                            "createdAt":  "2022-06-15T20:20:59Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Kaayo",
                                            "createdAt":  "2023-03-17T00:52:24Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2025-08-22T18:00:50Z",
        "body":  "[This item was copied from the planning repo]\r\n\r\nThrough Cu, work with partners in AAD and internally within ASP.NET to collaborate on user research and experience measurement to find ways we can ease the burden of configuring popular auth providers like Microsoft Identity Platform or and 2 popular 3rd party providers. \r\n\r\nSpecifically concentrate on easing the friction and effort (keystrokes, clicks, and internet searches required) for one or all of the following scenarios:\r\n\r\n- [ ] Given a Swashbuckle-enabled Web or Minimal API project, add support for authenticating the user on the Swagger UI page. \r\n- [ ] Adding authz to an existing ASP.NET Core API so that it can be called only from an authenticated client.\r\n- [ ] Assessing if we need to add support for the OAuth2 endpoints for Twitter (our docs specifically call out that a 3rd party NuGet package can be used for this, but that package fails to work with ASP.NET Core identity, so customers who want to support Twitter auth are in a broken state; they lack support for the OAuth2 features with our provider but can\u0027t authenticate customers with the OSS provider. \r\n- [ ] Asses how many of the authz-related docs specific to social or 3rd-party auth providers in our ASP.NET Core Identity docs section can be completed by PMs on the team according to the docs in [this TOC node](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/social/?view=aspnetcore-6.0\u0026tabs=visual-studio) and establish a content plan, if needed, for resolving hurdles in the experience. \r\n\r\nAs we improve the scenario with product work, we should accompany that product work with documentation for our testing team so the experience of configuring auth for these key scenarios can be tested repeatedly and so we know when service or API changes result in our needing to update the docs or the experience. ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHORTHUAw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85E4XtM",
                                           "createdAt":  "2022-06-14T19:26:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "\u003e Assessing if we need to add support for the OAuth2 endpoints for Twitter (our docs specifically call out that a 3rd party NuGet package can be used for this, but that package fails to work with ASP.NET Core identity, so customers who want to support Twitter auth are in a broken state; they lack support for the OAuth2 features with our provider but can\u0027t authenticate customers with the OSS provider.\r\n\r\nAssuming you\u0027re referring to the `AspNet.Security.OAuth.Twitter` package @martincostello and I maintain as part of the `aspnet-contrib` initiative, it\u0027s based on the ASP.NET Core OAuth 2.0 base handler and thus should work with ASP.NET Core Identity like any other provider.\r\n\r\nShould that package not work with ASP.NET Core Identity, this would be a major issue that would deserve a quick fix so I\u0027m very surprised you didn\u0027t open a ticket to inform us about that 😕 \r\n\r\nI\u0027d like to kindly remind you that [this provider was requested by the ASP.NET team](https://github.com/dotnet/aspnetcore/issues/39664#issuecomment-1018800346): the least you can do in return is to inform us ASAP when you think something is wrong with it.\r\n\r\n/cc @Tratcher ",
                                           "updatedAt":  "2022-06-14T19:26:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85E87-q",
                                           "createdAt":  "2022-06-15T19:05:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "I just tested locally and I haven\u0027t encountered any issue with ASP.NET Core Identity.\r\n\r\n@martincostello do you mind giving it a try to confirm it works fine for you too?",
                                           "updatedAt":  "2022-06-15T19:05:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85E892E",
                                           "createdAt":  "2022-06-15T19:14:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bradygaster",
                                           "body":  "Oh i apologize - just saw this. :) In fact I tried with both the one we ship and the one from your side, in an experiment with Blazor  WebAssembly auth. I hadn\u0027t filed an issue against your repo because I hadn\u0027t validated it wasn\u0027t my own code doing something awry. I\u0027d love to sync up with you and show you what I ran into when I tried your libs. ",
                                           "updatedAt":  "2022-06-15T19:14:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85E8_bq",
                                           "createdAt":  "2022-06-15T19:22:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCiDj7A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "bradygaster",
                                                                               "createdAt":  "2022-06-15T19:25:32Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "martincostello",
                                           "body":  "Blazor is an untested scenario on our side, mainly through lack of experience. We often get questions about it though for our OAuth providers in general (not specifically Twitter).\r\n\r\nIf it’s a scenario that _should_ work with Blazor and it’s fairly trivial to fix whatever’s wrong, then I think we’d be happy to work with you and the team to light it up. ",
                                           "updatedAt":  "2022-06-15T19:22:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85E9Aeg",
                                           "createdAt":  "2022-06-15T19:27:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCiDoGA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "kevinchalet",
                                                                               "createdAt":  "2022-06-15T19:32:12Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "bradygaster",
                                           "body":  "Absolutely appreciate that @martincostello and @kevinchalet - I\u0027ve used a few of your other providers for projects over the years so I was eager when the docs pointed me in your direction. Once you see my code/attempt-at-code, if we find something I can tweak, I\u0027d be eager to update the doc with something more tangible than a link showing folks who want to use the oauth2 approaches you provide that we don\u0027t, so I\u0027d be stoked to work on a deeper article highlighting some of what\u0027s possible with it once we figure out what else I\u0027ve done wrong in the sample. ",
                                           "updatedAt":  "2022-06-15T19:27:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85E9C_u",
                                           "createdAt":  "2022-06-15T19:40:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCiFiRw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "bradygaster",
                                                                               "createdAt":  "2022-06-15T22:07:09Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "martincostello",
                                           "body":  "I can\u0027t speak for Kévin\u0027s availability, but I\u0027d be happy to do a call with you any time between 1600-1800 BST (0800-1000 PDT?) any weekday to try and work through what you have and do some troubleshooting.\n\nYou can get some [contact details](https://github.com/martincostello#contact) off my GH profile.",
                                           "updatedAt":  "2022-06-15T19:40:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85E9d7Y",
                                           "createdAt":  "2022-06-15T21:29:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "@bradygaster sent me a repro: it\u0027s a classical Blazor WASM+Identity Server app with a custom `ExternalLogin.cshtml` that uses the popular Tweetinvi library to retrieve the profile image and the email address (in this case, the Twitter authentication part is purely handled server-side and the Blazor WASM client gets local tokens from IdSrv after a transparent authorization dance).\r\n\r\nThere are 2 distinct issues:\r\n  - The Tweetinvi API used to achieve that - `Users.GetAuthenticatedUserAsync()` - targets the v1 API endpoints. Yet, these endpoints don\u0027t work with the Twitter OAuth 2.0 integration, that requires using the v2 endpoints. Once you use the `UsersV2.GetUserByNameAsync(\"me\")` API to get the profile image (AFAIK, you can\u0027t retrieve the email address using the v2 user endpoints), things work fine.\r\n\r\n  - From time to time, too much data is stored in the `AuthenticationProperties` and the handler ends up generating a `state` bag that is too large for Twitter. Empirically, I was able to determine that states longer than 500 chars cause a generic error. I\u0027m fairly sure this potential issue was discussed during the review. Fixing that won\u0027t be exactly trivial as it will require storing the state elsewhere (e.g in a distributed cache or in a database, as the OpenIddict client does)",
                                           "updatedAt":  "2022-06-15T21:29:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85E9eni",
                                           "createdAt":  "2022-06-15T21:33:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "martincostello",
                                           "body":  "Ah cool, glad one of them was a fairly easy fix.\r\n\r\nThe second issue sounds like the problem I had with the first implementation that _seemed_ to fix itself: https://github.com/dotnet/aspnetcore/issues/39664#issuecomment-1018598236",
                                           "updatedAt":  "2022-06-15T21:33:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85E9etV",
                                           "createdAt":  "2022-06-15T21:33:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bradygaster",
                                           "body":  "Oh that\u0027s very interesting - adding @ReubenBond as you said \"distributed caching\" - an idea he and the Orleans team and I are discussing. ",
                                           "updatedAt":  "2022-06-15T21:33:39Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85E9fDK",
                                           "createdAt":  "2022-06-15T21:35:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bradygaster",
                                           "body":  "@kevinchalet - to be clear, I only used the Tweetinvi client because I couldn\u0027t figure out how to use the claims to get all the properties directly from Twitter. If I could make that work, I\u0027d probably have no use for that client package. ",
                                           "updatedAt":  "2022-06-15T21:35:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85E9gI3",
                                           "createdAt":  "2022-06-15T21:39:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "martincostello",
                                           "body":  "I\u0027m not at a computer right now to try it myself by running the code, but maybe there\u0027s addition fields you can request in the user payload, and then map those to claims?\n\nhttps://github.com/aspnet-contrib/AspNet.Security.OAuth.Providers/blob/dev/docs/twitter.md",
                                           "updatedAt":  "2022-06-15T21:39:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85E9gde",
                                           "createdAt":  "2022-06-15T21:41:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCiFdZQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "bradygaster",
                                                                               "createdAt":  "2022-06-15T22:05:13Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "@bradygaster by default, the v2 user API returns very few data: the ID,  the username and the name, nothing more: https://oauth-playground.glitch.me/?id=findMyUser.\r\n\r\nIf you need additional data, you need to use a special parameter called `fields` (many providers do that). You can configure that via `TwitterOptions.UserFields` and add a claim action to map the profile image field to a specific claim.",
                                           "updatedAt":  "2022-06-15T21:42:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85E9gie",
                                           "createdAt":  "2022-06-15T21:41:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCiFMSQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "LAUGH",
                                                                               "user":  "martincostello",
                                                                               "createdAt":  "2022-06-15T21:42:54Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "_Crap, @martincostello is too fast for me_ 🤣 ",
                                           "updatedAt":  "2022-06-15T21:41:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85E9mbR",
                                           "createdAt":  "2022-06-15T22:06:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bradygaster",
                                           "body":  "\u003e I\u0027m not at a computer right now to try it myself by running the code, but maybe there\u0027s addition fields you can request in the user payload, and then map those to claims?\r\n\u003e \r\n\u003e https://github.com/aspnet-contrib/AspNet.Security.OAuth.Providers/blob/dev/docs/twitter.md\r\n\r\nI think I tried that and the authentication part began to fail after switching over but I can surely try again. ",
                                           "updatedAt":  "2022-06-15T22:06:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85E_FzD",
                                           "createdAt":  "2022-06-16T08:36:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "martincostello",
                                           "body":  "I haven\u0027t looked at getting the email yet, but adding these [two lines of configuration](https://github.com/martincostello/AspNet.Security.OAuth.Providers/commit/bc1069cd9120fb46785710d818569fdc86aadcee) for the provider using [our repo\u0027s sample app](https://github.com/aspnet-contrib/AspNet.Security.OAuth.Providers/tree/dev/samples/Mvc.Client) gets me a claim containing the profile image\u0027s URL.\r\n\r\n```csharp\r\n.AddTwitter(options =\u003e\r\n{\r\n    options.ClientId = Configuration[\"Twitter:ClientId\"];\r\n    options.ClientSecret = Configuration[\"Twitter:ClientSecret\"];\r\n    options.UserFields.Add(\"profile_image_url\");\r\n    options.ClaimActions.MapJsonSubKey(\"urn:twitter:avatar\", \"data\", \"profile_image_url\");\r\n})\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/1439341/174029172-1e0eb2bb-2033-4a79-8aa0-15f0ca52bc64.png)\r\n\r\nThe available fields are documented [here](https://developer.twitter.com/en/docs/twitter-api/data-dictionary/object-model/user).",
                                           "updatedAt":  "2022-06-16T08:37:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85E_Hjv",
                                           "createdAt":  "2022-06-16T08:43:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCiSKhg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "CONFUSED",
                                                                               "user":  "bradygaster",
                                                                               "createdAt":  "2022-06-16T18:23:11Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "martincostello",
                                           "body":  "It appears that it isn\u0027t possible to get the user\u0027s email address using the v2 Twitter API: [twittercommunity.com](https://twittercommunity.com/t/how-to-get-user-details-by-email-address-is-there-any-api-exists/143073)",
                                           "updatedAt":  "2022-06-16T08:43:39Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85E_LPI",
                                           "createdAt":  "2022-06-16T08:59:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "martincostello",
                                           "body":  "I haven\u0027t run into the _\"state too long\"_ problem at all locally with our sample - probably because we don\u0027t do anything additional with the `AuthenticationProperties`.\r\n\r\nI\u0027ll have a think about how we could provide a way to work around that that isn\u0027t tied to much to a specific solution and/or is extensible.\r\n",
                                           "updatedAt":  "2022-06-16T08:59:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85FBa7m",
                                           "createdAt":  "2022-06-16T18:23:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bradygaster",
                                           "body":  "\u003e It appears that it isn\u0027t possible to get the user\u0027s email address using the v2 Twitter API: [twittercommunity.com](https://twittercommunity.com/t/how-to-get-user-details-by-email-address-is-there-any-api-exists/143073)\r\n\r\nGiven ASP.NET identity requires email, this seems bad. Any workarounds you\u0027d advise?",
                                           "updatedAt":  "2022-06-16T18:23:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85FBcgb",
                                           "createdAt":  "2022-06-16T18:31:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "@martincostello that twittercommunity thread was about looking up users _by_ e-mail, not retrieving their e-mail address.\r\n\r\nDoes the old approach work with the new OAuth2 flow?\r\nhttps://github.com/dotnet/aspnetcore/blob/4ea0f60dfbaf576e6ced5a107bc876b0784423d4/src/Security/Authentication/Twitter/src/TwitterHandler.cs#L313",
                                           "updatedAt":  "2022-06-16T18:31:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85FBdPo",
                                           "createdAt":  "2022-06-16T18:35:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "martincostello",
                                           "body":  "I’ll give it a try tomorrow, but I _assumed_ not as it’s part of the 1.1 API.",
                                           "updatedAt":  "2022-06-16T18:35:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85FD-jK",
                                           "createdAt":  "2022-06-17T09:11:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCieZNg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "bradygaster",
                                                                               "createdAt":  "2022-06-17T16:07:10Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "martincostello",
                                           "body":  "Nope, that doesn\u0027t work. Using the access token as-is gets you an HTTP 403 error.\r\n\r\nI looked at the code for `ExecuteRequestAsync()`, but that needs a token secret to generate the relevant signature to call the API which you don\u0027t have in the OAuth 2 flow.\r\n\r\nAssuming I\u0027ve understood it all correctly, you can only get the email by using the ASP.NET Core provider that uses the 1.1 API. Otherwise you have to mix and match the two API versions to use the different capabilities.\r\n\r\nThe snippet I added to test the above was this:\r\n\r\n```csharp\r\noptions.Events.OnCreatingTicket = async context =\u003e\r\n{\r\n    context.Backchannel.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\r\n        \"Bearer\",\r\n        context.AccessToken);\r\n\r\n    using var response = await context.Backchannel.GetAsync(\r\n        \"https://api.twitter.com/1.1/account/verify_credentials.json?include_email=true\",\r\n        context.HttpContext.RequestAborted);\r\n\r\n    response.EnsureSuccessStatusCode();\r\n\r\n    using var content = await response.Content.ReadAsStreamAsync();\r\n    using var document = await JsonDocument.ParseAsync(content);\r\n\r\n    if (document.RootElement is { } root)\r\n    {\r\n        // Do stuff\r\n    }\r\n};\r\n```\r\n\r\nAccording to the [Twitter documentation](https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/manage-account-settings/api-reference/get-account-verify_credentials) for the endpoint there\u0027s no guarantee an email would be returned so even with the ASP.NET Core Twitter provider an application using ASP.NET Core Identity would need to handle the case of their being no email address when the user logs in:\r\n\r\n\u003e If the user does not have an email address on their account, or if the email address is not verified, null will be returned.\r\n",
                                           "updatedAt":  "2022-06-17T09:11:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85FFVPl",
                                           "createdAt":  "2022-06-17T16:08:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bradygaster",
                                           "body":  "\u003e Assuming I\u0027ve understood it all correctly, you can only get the email by using the ASP.NET Core provider that uses the 1.1 API. Otherwise you have to mix and match the two API versions to use the different capabilities.\r\n\r\nThis was my presumption at first glance. Eesh. Kinda sub-optimal. Really appreciate the diligence looking through and debugging it. \r\n",
                                           "updatedAt":  "2022-06-17T16:09:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85FFmbF",
                                           "createdAt":  "2022-06-17T17:31:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCig4-Q==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "bradygaster",
                                                                               "createdAt":  "2022-06-17T21:09:38Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "@bradygaster not sure if it works for you, but you always can ask the users for their email address using a good old form 😃 (it\u0027s what the default Identity UI does).",
                                           "updatedAt":  "2022-06-17T17:31:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85FMdQD",
                                           "createdAt":  "2022-06-20T22:18:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCj5a7g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "bradygaster",
                                                                               "createdAt":  "2022-06-27T14:50:53Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "adityamandaleeka",
                                           "body":  "@bradygaster Can you put this issue into a milestone please?",
                                           "updatedAt":  "2022-06-20T22:18:19Z"
                                       }
                                   ],
                         "totalCount":  24
                     },
        "title":  "Find ways to minimize the effort required to configure authz in an HTTP API by 30%",
        "labels":  [
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/42325",
        "createdAt":  "2022-06-21T15:30:47Z",
        "number":  42325,
        "author":  "Kahbazi",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCjkn1A==",
                          "nodes":  [
                                        {
                                            "content":  "HEART",
                                            "user":  "davidfowl",
                                            "createdAt":  "2022-06-24T12:17:17Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2022-06-22T22:17:44Z",
        "body":  "There are multiple events in `CookieAuthenticationHandler` and each has its own context type which some of them are created _per request_ even when there\u0027s no event has been set. \r\n\r\nThe similar approach that used in [this PR](https://github.com/dotnet/aspnetcore/pull/36193) could be used to only allocate the context types if the event has been set.\r\n\r\nThis code:\r\nhttps://github.com/dotnet/aspnetcore/blob/9ac541b23b22882aebffcdc931c3575d33edcec8/src/Security/Authentication/Cookies/src/CookieAuthenticationHandler.cs#L200\r\n\r\nwould change to this: \r\n```c#\r\nif (Events.GetType() == typeof(CookieAuthenticationEvents) \r\n    \u0026\u0026 Events.OnValidatePrincipal == CookieAuthenticationEvents._defaultOnValidatePrincipal)\r\n{\r\n    await Events.ValidatePrincipal(context);\r\n}\r\n```\r\n\r\nThis would also apply to other authentication handlers.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHORVwfng==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85FXB6P",
                                           "createdAt":  "2022-06-22T22:17:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "adityamandaleeka",
                                           "body":  "Triage: we\u0027d need to see benchmarks showing the impact of this on performance to decide whether to take it.",
                                           "updatedAt":  "2022-06-22T22:17:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85FXB-e",
                                           "createdAt":  "2022-06-22T22:17:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2022-06-22T22:17:44Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Avoid creating Context classes when Events have not been set",
        "labels":  [
                       "Perf",
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/42828",
        "createdAt":  "2022-07-20T00:16:53Z",
        "number":  42828,
        "author":  "captainsafia",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCoNU8w==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "poke",
                                            "createdAt":  "2022-07-20T13:34:47Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "jmcgoldrick",
                                            "createdAt":  "2022-07-24T21:14:21Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2022-07-20T13:36:49Z",
        "body":  "Starting in .NET 7 Preview 7, we introduced new behavior in the authentication area in ASP.NET Core to reduce boilerplate and help build sensible defaults into ASP.NET Core.\r\n\r\nPreviously, users were always required to set the default authentication scheme that would be used by authentication and authorization handlers, like so:\r\n\r\n```csharp\r\nbuilder.Services.AddAuthentication(\"MyDefaultScheme\");\r\n```\r\n\r\nMoving forward, when (and only when) a single authentication scheme is registered, that scheme will be treated as the default scheme. For example, \"foobar\" will be treated as the default scheme in the code below.\r\n\r\n```chsarp\r\nbuilder.Services.AddAuthentication().AddOAuth(\"foobar\");\r\n```\r\n\r\nThis change might expose unintended behavior changes in applications, such as authentication options being validated earlier than expected.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHORvKBww==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85G6aiH",
                                           "createdAt":  "2022-07-20T01:55:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "WeihanLi",
                                           "body":  "What if we had multi auth schema but no default schema registered, would it use the first or the last as the default schema?\r\n\r\nFor example:\r\n\r\n``` c#\r\nservices.AddAuthentication()\r\n    .AddBasic()\r\n    .AddJwtBearer()\r\n    .AddCookie();\r\n```\r\n",
                                           "updatedAt":  "2022-07-20T01:56:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85G6ePK",
                                           "createdAt":  "2022-07-20T02:21:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCnihCw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "manigandham",
                                                                               "createdAt":  "2022-07-20T03:29:58Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "fowl2",
                                           "body":  "I\u0027m assuming this is part of the overall effort to reduce boilerplate?\n\nEven if it\u0027s \"obvious\" I think it\u0027s worth including an explicit motivation in announcements like this, so we know \u0027why\u0027 we\u0027re potentially breaking someone :)\n",
                                           "updatedAt":  "2022-07-20T02:21:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85G6nSo",
                                           "createdAt":  "2022-07-20T03:23:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "captainsafia",
                                           "body":  "\u003e What if we had multi auth schema but no default schema registered, would it use the first or the last as the default schema?\r\n\r\nIn this case, no default schema is set. This rule only applies when a single schema is registered.\r\n\r\n\u003e I\u0027m assuming this is part of the overall effort to reduce boilerplate?\r\n\r\nYep.\r\n\r\n\u003e Even if it\u0027s \"obvious\" I think it\u0027s worth including an explicit motivation in announcements like this, so we know \u0027why\u0027 we\u0027re potentially breaking someone :)\r\n\r\nGood feedback!",
                                           "updatedAt":  "2022-07-20T03:23:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85G8oHD",
                                           "createdAt":  "2022-07-20T13:36:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCnw4Cw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "captainsafia",
                                                                               "createdAt":  "2022-07-21T03:57:05Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "poke",
                                           "body":  "I think this is a good change which should help to reduce some of the confusion which occurs from “magic defaults”. Thanks! 😊",
                                           "updatedAt":  "2022-07-20T13:36:49Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "[Discussion] Single authentication scheme is treated as default scheme",
        "labels":  [
                       "area-auth",
                       "announcement"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/42922",
        "createdAt":  "2022-07-26T15:51:00Z",
        "number":  42922,
        "author":  "mkArtakMSFT",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-12-13T23:41:37Z",
        "body":  "There are still places in our codebase where we use Bower for npm package management.\r\nBower is now in maintenance mode, so we need to move to a better alternative.\r\n\u003cimg width=\"826\" alt=\"image\" src=\"https://user-images.githubusercontent.com/34246760/181051875-99752288-bf73-43a8-b92c-926a5877d4f5.png\"\u003e\r\n\r\n## Areas of consideration\r\n- [ ] Templates\r\n- [ ] Test projects\r\n- [ ] Scaffolded content\r\n\r\n\u003cimg width=\"555\" alt=\"image\" src=\"https://user-images.githubusercontent.com/34246760/181052312-e8a64920-4bd8-4650-9db2-2c2a0195fa87.png\"\u003e\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOUHhp8A==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85M8WNa",
                                           "createdAt":  "2022-10-25T17:17:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mkArtakMSFT",
                                           "body":  "@adityamandaleeka will you be able to handle the changes in the security areas ? We\u0027ll handle the remaining ones.",
                                           "updatedAt":  "2022-10-25T17:17:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85M_vDp",
                                           "createdAt":  "2022-10-26T09:45:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "javiercn",
                                           "body":  "@mkArtakMSFT @surayya-MS will tackle the MVC ones.",
                                           "updatedAt":  "2022-10-26T09:45:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85QDirp",
                                           "createdAt":  "2022-12-08T18:07:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCw8zCw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "mkArtakMSFT",
                                                                               "createdAt":  "2022-12-08T20:07:33Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "surayya-MS",
                                           "body":  "I\u0027ve resolved all the MVC ones as part of [Deleted bower from Mvc](https://github.com/dotnet/aspnetcore/pull/44779) PR. Removing the `area-mvc` as the remaining work is in the security area only.",
                                           "updatedAt":  "2022-12-08T18:07:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85QElLm",
                                           "createdAt":  "2022-12-08T21:24:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "adityamandaleeka",
                                           "body":  "Un-milestoning so this shows up in web frameworks triage.\r\n\r\ncc: @captainsafia ",
                                           "updatedAt":  "2022-12-08T21:24:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85QeGZ7",
                                           "createdAt":  "2022-12-13T23:41:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "captainsafia",
                                           "body":  "Triage: the usage is currently only in sample and doesn\u0027t appear in templates so we\u0027ll prioritize this as infrastructure work.",
                                           "updatedAt":  "2022-12-13T23:41:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85QeGnw",
                                           "createdAt":  "2022-12-13T23:41:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2022-12-13T23:41:37Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "Move away from bower as a package manager",
        "labels":  [
                       "task",
                       "area-auth",
                       "feature-templates"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/43661",
        "createdAt":  "2022-08-31T16:34:16Z",
        "number":  43661,
        "author":  "mk185147",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC8lW-Q==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Tyrrx",
                                            "createdAt":  "2024-11-12T12:27:14Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2025-08-22T18:01:53Z",
        "body":  "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nWhen you configure Kestler to use certificate authentication and a client sends certificate including an intermediate certificate to a server then server will fail the chain validation if it has the root CA in certificate store but doesn\u0027t have the intermediate certificate in the certificate store on Windows.\n\n### Expected Behavior\n\nThe chain validation should succeed, it should read the intermediate certificates from the TLS connection to build the chain.\r\n\r\nToday the implementation is against RFC 5246, the RFC states about client certificate message: \"This message conveys the client\u0027s certificate chain to the server; the server will use it when verifying the CertificateVerify message...\" also it describes the structure \"This is a sequence (chain) of certificates. The sender\u0027s certificate MUST come first in the list. Each following certificate MUST directly certify the one preceding it. Because certificate validation requires that root keys be distributed independently, the self-signed certificate that specifies the root certificate authority MAY be omitted from the chain, under the assumption that the remote end must already possess it in order to validate it in any case.\" I feel it clearly expects the server to do the validation using the chain that is sent (with the exception of root).\n\n### Steps To Reproduce\n\nCreate CA, intermediate and child certificates (e.g. like described https://docs.microsoft.com/en-us/aspnet/core/security/authentication/certauth?view=aspnetcore-6.0#create-certificates-in-powershell)\r\n\r\nYou can use a simple web server with certificate authentication, e.g.:\r\n```CSharp\r\nusing Microsoft.AspNetCore.Authentication.Certificate;\r\nusing Microsoft.AspNetCore.Server.Kestrel.Core;\r\nusing Microsoft.AspNetCore.Server.Kestrel.Https;\r\n\r\nvar builder = WebApplication.CreateBuilder(args);\r\n\r\nbuilder.Services.AddAuthentication(\r\n        CertificateAuthenticationDefaults.AuthenticationScheme)\r\n    .AddCertificate();\r\nbuilder.Services.Configure\u003cKestrelServerOptions\u003e(options =\u003e\r\n{\r\n    options.ConfigureHttpsDefaults(options =\u003e\r\n        options.ClientCertificateMode = ClientCertificateMode.AllowCertificate);\r\n});\r\n\r\nvar app = builder.Build();\r\n\r\napp.UseAuthentication();\r\napp.UseHttpsRedirection();\r\n\r\napp.MapGet(\"/\", () =\u003e \"Hello World!\");\r\n\r\napp.Run();\r\n```\r\nPut the CA into windows store where you have the server.\r\n\r\nThen put on a different computer all 3 certificates into certificate stores and call the service from that computer. The service will ask you for a certificate, choose the child certificate.\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n6.0.400\n\n### Anything else?\n\nThis was first risen as a ticket https://github.com/dotnet/aspnetcore/issues/42010 but the ticket was closed based on improvement to my other request \"how to work around the issue\" which was made more possible using making a connection context available (https://github.com/dotnet/aspnetcore/pull/33953). Nevertheless, the asp .net default code is still not following the TLS specification for client authentication (and it is hard to customize it to follow it).",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOkz-ejQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85Jg6Pk",
                                           "createdAt":  "2022-08-31T20:00:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "Not follow it the TLS specification? I think it’s fair to say you’d prefer it if there was an easier way to get the full cert chain without writing code but this doesn’t have anything to do with “the specification” AFAIK (happy yo be proven wrong).\r\n\r\nDownloading the chain per request is a performance concern (and security concern) that’s why we don’t want to do it by default.",
                                           "updatedAt":  "2022-08-31T20:00:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Jk3ha",
                                           "createdAt":  "2022-09-01T14:59:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "_Downloading the chain per request is a performance concern (and security concern) that’s why we don’t want to do it by default._\r\n\r\nThis isn\u0027t downloading the chain though; the client sends the leaf cert _*and optionally*_ any intermediate CAs (but not the root CA that everything chains off).\r\n\r\nI wonder what http.sys does in this regard. It\u0027d be a bit of a rearchitecting, assuming we can get the leaf and intermediate chain. It\u0027d probably be a performance drag, because if we implement a custom chain store, it [replaces the default](https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.x509certificates.x509chainpolicy.customtruststore) one, not supplements it, so there would be a lot of copying there, or caching with concurrency problems when you see a new intermediate.",
                                           "updatedAt":  "2022-09-01T14:59:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85KoFy8",
                                           "createdAt":  "2022-09-20T08:35:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mk185147",
                                           "body":  "\u003e Not follow it the TLS specification? I think it’s fair to say you’d prefer it if there was an easier way to get the full cert chain without writing code but this doesn’t have anything to do with “the specification” AFAIK (happy yo be proven wrong).\r\n\r\nSee https://www.rfc-editor.org/rfc/rfc5246 , sections 7.4.6. and 7.4.2.\r\n",
                                           "updatedAt":  "2022-09-20T08:35:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Rxnkl",
                                           "createdAt":  "2023-01-05T09:14:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOD6fXYg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Tyrrx",
                                                                               "createdAt":  "2024-11-12T12:35:34Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "MageFroh",
                                           "body":  "Looking at the code behind `AddCertificate`, it looks like it only has access to the leaf certificate to perform chain validation.\r\nSo maybe #2708 is needed to fix this issue?",
                                           "updatedAt":  "2023-01-05T09:14:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86TP56N",
                                           "createdAt":  "2024-11-12T12:35:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tyrrx",
                                           "body":  "@davidfowl There is no security issue using the intermediate certificates provided by the client. I mean you can create one by treating the intermediate certificates as trusted during the chain building but as long as you don\u0027t do that there is noting wrong about using them.",
                                           "updatedAt":  "2024-11-12T12:35:52Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  " Certificate authentication fails validation when intermediate certificate isn\u0027t in store against TLS specification",
        "labels":  [
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/44100",
        "createdAt":  "2022-09-20T22:57:33Z",
        "number":  44100,
        "author":  "AlexandreBossard",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODAzWsA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "blastrock",
                                            "createdAt":  "2022-09-21T07:51:11Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "victorsebrito",
                                            "createdAt":  "2023-02-23T20:00:09Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "JoffreyFerreira",
                                            "createdAt":  "2023-05-26T14:08:10Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "maxstue",
                                            "createdAt":  "2023-07-10T17:51:00Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "gimlichael",
                                            "createdAt":  "2024-02-03T17:15:23Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "lvde0",
                                            "createdAt":  "2024-06-20T15:00:38Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "GusBedasi",
                                            "createdAt":  "2024-08-08T17:53:40Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "dltruongdev",
                                            "createdAt":  "2025-04-03T08:06:14Z"
                                        }
                                    ],
                          "totalCount":  8
                      },
        "updatedAt":  "2025-08-22T20:11:10Z",
        "body":  "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Is your feature request related to a problem? Please describe the problem.\r\n\r\nI have written my Authentication Handler (loosely based on JwtBearHandler). Obviously, I have some `AuthenticateResult.fail(ex)`. All that is good. But,  I would like to extract info from these errors and translate them to the Response body aside from the expected 401.\r\n\r\nOutside the authentication / authentication framework, I\u0027ve written an exception handler that does exactly that for controllers.\r\n\r\nUnfortunately, I\u0027ve failed to find a way to retrieve the `AuthenticateResult` produced by the authentication Handler. `IAuthorizationMiddlewareResultHandler` do expose the `AuthenticateResult` but not when the authentication fails, only when it succeed, through `HttpContext.Features.Get\u003cIAuthenticateResultFeature\u003e()`.\r\n\r\n### Describe the solution you\u0027d like\r\n\r\nI would like some ways to get the `AuthenticationResult` and generate a response body from it. I suppose I could do that from the `IAuthorizationMiddlewareResultHandler` assuming I had access to the result, regardless of the authentication state. I would throw from the resultHandler which would be translated by the exception handler.\r\n\r\nOr am I missing something here ? Any Documentation to point me to ?\r\n\r\n### Additional context\r\n\r\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOpXBtJw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85K5wrj",
                                           "createdAt":  "2022-09-23T20:44:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Have you looked at this part of the JwtBearer handler?\r\nhttps://github.com/dotnet/aspnetcore/blob/e13e3facfb26643fe580be56f2d3f466cd5ee009/src/Security/Authentication/JwtBearer/src/JwtBearerHandler.cs#L214\r\n\r\nWhen a user isn\u0027t authorized then Challenge will get invoked and the controller won\u0027t be executed. Challenge is responsible for generating the response. This example sets the status code and headers, but writing to the body is possible. Note we don\u0027t always recommend writing to the body from auth handlers, there are cases where that won\u0027t work such as if you have multiple auth handlers enabled/challenged.",
                                           "updatedAt":  "2022-09-23T20:44:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85K7YJ0",
                                           "createdAt":  "2022-09-24T23:02:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODfUNEQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "gimlichael",
                                                                               "createdAt":  "2024-02-16T21:22:25Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Dverybest",
                                                                               "createdAt":  "2024-04-24T01:48:15Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "AlexandreBossard",
                                           "body":  "Yes, I\u0027m actually using it, but not to write a response. Let me explain my setup and why I think using the events to write a response is not good enough.\r\nWe use exceptions to report errors through our service, Those errors are all handled by the exception handler and transformed in a JSON body which can be understand by our client. This work reasonably well and have the advantages to enforce a known and limited set of errors which are transformed in only one place. \r\n\r\nWe have authentication setup with JWT with multiple tenants. We want to report 2 different types of error that could happened during authentication (token is invalid and token has expired). The `IAuthorizationMiddlewareResultHandler` does not expose the `AuthenticateResult` when the authentication fails either through one `HttpContext` features (however it does when succeed) or the `PolicyAuthorizationResult`. So the authentication process result is lost to us, the exception(s) raised by the security token validation are not reported. This prevent us to analyze the cause of the authentication failure to report a richer error than a simple 401.\r\n\r\nThe only workaround I have found is to use `JWTBearerEvents.OnChallenged` to set a custom feature on the HTTPContext, like the one when authentication succeed, that could check in the middleware Result Handler.\r\n\r\nWhile this works, I think it\u0027s rather convoluted, to have to set events and all registered scheme and to insert a custom feature to get access to the authentication exceptions.\r\n\r\nBut again, I may have missed something, this framework is big. \r\n",
                                           "updatedAt":  "2022-09-25T22:45:39Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85LMSkV",
                                           "createdAt":  "2022-09-28T22:07:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "adityamandaleeka",
                                           "body":  "cc: @blowdart ",
                                           "updatedAt":  "2022-09-28T22:07:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85LMXsV",
                                           "createdAt":  "2022-09-28T22:38:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "Feels like a feature request to me, but yea, it\u0027s an odd thing, the body doesn\u0027t really come into play for pretty much every auth type, it\u0027s a status code thing. Even failing with cookie auth ends up with a redirect, not something that renders. Interestingly AAD failures do end up in a failed page, with details, if you\u0027re in the msft domain. But then that\u0027s at the login failed level, during the HTML flow to trigger the auth in the first place.\r\n\r\nWe can look for 8, but I don\u0027t know how clean it would be, or worse, how it\u0027d be misunderstood and misused.",
                                           "updatedAt":  "2022-09-28T22:38:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85LMXuH",
                                           "createdAt":  "2022-09-28T22:38:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `.NET 8 Planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2022-09-28T22:38:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85LMj9z",
                                           "createdAt":  "2022-09-29T00:01:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brockallen",
                                           "body":  "\u003e Feels like a feature request to me, but yea, it\u0027s an odd thing, the body doesn\u0027t really come into play for pretty much every auth type, it\u0027s a status code thing. Even failing with cookie auth ends up with a redirect, not something that renders. Interestingly AAD failures do end up in a failed pa\r\n\r\nIt\u0027s common for bearer token 401/403 responses to need to add to the response headers.\r\n\r\nhttps://www.rfc-editor.org/rfc/rfc6750#section-3\r\n\r\nIIRC this was difficult from authorization policies. Maybe it\u0027s easier now.",
                                           "updatedAt":  "2022-09-29T00:01:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85LQk_P",
                                           "createdAt":  "2022-09-29T18:08:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "\u003e It\u0027s common for bearer token 401/403 responses to need to add to the response headers.\r\n\r\nJwtBearer does that now, but it doesn\u0027t include any AuthZ details.",
                                           "updatedAt":  "2022-09-29T18:08:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86lZHFy",
                                           "createdAt":  "2025-04-03T08:07:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dltruongdev",
                                           "body":  "Face the same issue today. Now I just throw an exception and end the authentication process. Do you think it a good way to do it?",
                                           "updatedAt":  "2025-04-03T08:08:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86lcG0n",
                                           "createdAt":  "2025-04-03T12:19:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brockallen",
                                           "body":  "\u003e It\u0027s common for bearer token 401/403 responses to need to add to the response headers.\n\u003e https://www.rfc-editor.org/rfc/rfc6750#section-3\n\u003e IIRC this was difficult from authorization policies. Maybe it\u0027s easier now.\n\nMore and more IETF specs are adding more details to this response headers. Having a formal API to add structured info would be useful.",
                                           "updatedAt":  "2025-04-03T12:19:07Z"
                                       }
                                   ],
                         "totalCount":  9
                     },
        "title":  "Write custom authentication failure information to the response body",
        "labels":  [
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/44713",
        "createdAt":  "2022-10-24T13:51:16Z",
        "number":  44713,
        "author":  "sebdej",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-02-19T16:51:43Z",
        "body":  "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nIf I declare a required role for an authorization policy with `AuthorizationPolicyBuilder.RequireRole` or with the `Authorize(Roles=\"...\")` attribute, the role name is taken untransformed.\r\n\r\nIf I add roles to a user with `UserManager\u003c\u003e.AddToRoleAsync` then the role name is transformed by `ILookupNormalizer` (actually the transformation is uppercasing) before passing the roles to `IUserRoleStore.AddToRoleAsync`.\r\n\r\nNow, when the policy is evaluated to authorize a user, `ClaimsIdentity.HasClaim` is called to check if the user have the correct role:\r\n\r\n```\r\n        public virtual bool HasClaim(string type, string value)\r\n        {\r\n            if (type == null)\r\n            {\r\n                throw new ArgumentNullException(nameof(type));\r\n            }\r\n\r\n            if (value == null)\r\n            {\r\n                throw new ArgumentNullException(nameof(value));\r\n            }\r\n\r\n            foreach (Claim claim in Claims)\r\n            {\r\n                if (claim != null\r\n                        \u0026\u0026 string.Equals(claim.Type, type, StringComparison.OrdinalIgnoreCase)\r\n                        \u0026\u0026 string.Equals(claim.Value, value, StringComparison.Ordinal))\r\n                {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        }\r\n```\r\n\r\nThis function is doing a case sensitive comparison of the claim value.\n\n### Expected Behavior\n\nThe role transformation should be consistent across the API. `AuthorizeAttribute` and `AuthorizationPolicyBuilder.RequireRole` should transform the role name.\r\n\r\nIf it\u0027s working as intended then the documentation should be updated to reflect it.\n\n### Steps To Reproduce\n\n_No response_\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n6.0.402\n\n### Anything else?\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOaTLuQQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85M10-6",
                                           "createdAt":  "2022-10-24T15:05:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCuY9FQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Rick-Anderson",
                                                                               "createdAt":  "2022-10-24T18:25:28Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "blowdart",
                                           "body":  "`RequireRole` works on more role providers than identity, some of which are case sensitive, so it\u0027s working as expected. \r\n\r\nAgreed that the either the authorize attribute and builder docs, or the identity create role, add user to role, get role etc docs need updated. \r\n\r\n@Rick-Anderson which would you think gives more bang per buck? I\u0027m tempted to hand wave over the attribute and build and say something like \"Different role providers provide different case guarantees or normalization. Please ensure that you follow the rules for your provider as the check for this attribute/function is case sensitive\", and then call out in the identity apis that they normalize. \r\n\r\n",
                                           "updatedAt":  "2022-10-24T15:05:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85pMu5B",
                                           "createdAt":  "2023-10-16T17:29:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2023-10-16T17:29:06Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Authorization user role is case sensitive",
        "labels":  [
                       "Docs",
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/44724",
        "createdAt":  "2022-10-25T07:34:55Z",
        "number":  44724,
        "author":  "egbertn",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC8iviw==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "davidruhmann",
                                            "createdAt":  "2024-01-06T22:51:02Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "davidngjy",
                                            "createdAt":  "2024-11-10T23:57:57Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2024-03-05T21:31:26Z",
        "body":  "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nUsing multiple Identity Providers the BearerToken Validation code, validates all Idp\u0027s . This makes no sense and leads to false positives (e.g. hacking) having multiple exceptions on invalid tokens.\r\n\r\nThe problem is described here\r\nhttps://oliviervaillancourt.com/posts/Fixing-IDX10501-MultipleAuthScheme\n\n### Describe the solution you\u0027d like\n\nhttps://github.com/dotnet/aspnetcore/blob/v6.0.3/src/Security/Authentication/JwtBearer/src/JwtBearerHandler.cs\r\nshould unpack the token, check the issuer and authority\r\ncompare it. If the token being and it\u0027s issuer or authority do not match, do not raise an exception (or maybe just a warning).\r\n\r\nIf all validations failed but a token was given, *then* an exception should be raised (to improve security/logging)\r\n\n\n### Additional context\n\n![afbeelding](https://user-images.githubusercontent.com/3471239/197710739-372ac63f-9f3b-4c45-8c52-6446ac3c1e4f.png)\r\n\r\nThere is the property ForwardDefaultSelector in JwtBearerOptions, \r\nservices.AddAuthentication(MobileAuthenticationDefaults.AuthenticationScheme)\r\n\r\nwhich is related but in fact, this option seems unnecessary if token validation is a bit smarter using logic, described above.\r\nTo make this very explicit. If I have a JWT from Cognito, it makes no sense to validate this token against a validator for Azure. This also will lead to exensive downloading of public keys using JWTK.json (remotely)\r\n\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOTQ29OA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85M78bH",
                                           "createdAt":  "2022-10-25T15:53:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Related: https://github.com/dotnet/aspnetcore/issues/13046, https://github.com/dotnet/aspnetcore/issues/38498",
                                           "updatedAt":  "2022-10-25T15:53:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85NDbvo",
                                           "createdAt":  "2022-10-26T22:46:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `.NET 8 Planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2022-10-26T22:46:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85NDb04",
                                           "createdAt":  "2022-10-26T22:47:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `.NET 8 Planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2022-10-26T22:47:14Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "JwtBearerHandler should check Authority \u0026 Issuer before trying to validate",
        "labels":  [
                       "enhancement",
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/44783",
        "createdAt":  "2022-10-28T16:39:11Z",
        "number":  44783,
        "author":  "johnkwaters",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-02-27T16:39:27Z",
        "body":  "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nOn our legacy ApiControllers, we have our own customer Authorization Attributes, for instance:\r\n\r\n[FeatureAuthorize(Features.ManageRegions]\r\n\r\nWe would like to apply the same to MinAPI, both with attributes and fluent\n\n### Describe the solution you\u0027d like\n\n\r\napp.MapGet(\"/login\", [FeatureAuthorize(Features.ManageRegions] () =\u003e \"This endpoint is those users with this feature assigned.\");\r\n\r\napp.MapGet(\"/login2\", () =\u003e \"This endpoint also requires this feature.\")\r\n   .FeatureAuthorize(Features.ManageRegions);\r\n\r\nI guess the former might work out of the box... but how would the latter be accomplished, i.e. a fluent syntax for associating a customer authorization attribute with a Map call (via an extension method).\r\n\r\n\n\n### Additional context\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOdT6brQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85NNBNC",
                                           "createdAt":  "2022-10-28T17:22:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "johnkwaters",
                                           "body":  "Use same approach as for AllowAnonymous:\r\n\r\n```\r\npublic static class CustomAuthorizationEndpointConventionBuilderExtensions\r\n{\r\n    /// \u003csummary\u003e\r\n    /// Requires that the caller have access to the specified feature.\r\n    /// \u003c/summary\u003e\r\n    /// \u003cparam name=\"builder\"\u003eThe endpoint convention builder.\u003c/param\u003e\r\n    /// \u003creturns\u003eThe original convention builder parameter.\u003c/returns\u003e\r\n    public static TBuilder RequireFeature\u003cTBuilder\u003e(this TBuilder builder, params Feature[] features)\r\n        where TBuilder : IEndpointConventionBuilder\r\n    {\r\n        builder.Add(endpointBuilder =\u003e { endpointBuilder.Metadata.Add(\r\n            new FeatureAuthorizeAttribute(features)); });\r\n        return builder;\r\n    }\r\n}\r\n\r\n```\r\nAnd\r\n\r\n```\r\napp.MapGet(\"/api/viewusers\", () =\u003e \"I have access to ViewUsers!\")\r\n    .RequireFeature(Feature.ViewUsers);\r\n\r\n\r\n```\r\n\r\n",
                                           "updatedAt":  "2022-10-28T17:22:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85NN1zH",
                                           "createdAt":  "2022-10-28T21:14:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "We don\u0027t recommend custom auth attributes anymore. What component do you expect to run them?\r\n\r\nMost of this logic should move into authorization policies.",
                                           "updatedAt":  "2022-10-28T21:14:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85NOdjy",
                                           "createdAt":  "2022-10-28T23:25:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "I\u0027m not 100% sure this is easy to do with authorization policies but will be easier in the next version on .NET. You\u0027ll can do this in multiple ways today but using custom metadata makes using authorization policies challenging. In .NET 7 I would use a filter for this until we get https://github.com/dotnet/aspnetcore/issues/44551",
                                           "updatedAt":  "2022-10-28T23:25:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85NOkQq",
                                           "createdAt":  "2022-10-29T00:39:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "I should add, this is easier with minimal APIs because you can now directly add an auth policy directly to endpoints. That would allow you to write one like above inline on the endpoint ",
                                           "updatedAt":  "2022-10-29T00:39:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85NOkYB",
                                           "createdAt":  "2022-10-29T00:41:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "```C#\r\npublic static TBuilder RequireFeature\u003cTBuilder\u003e(this TBuilder builder, params Feature[] features)\r\n    where TBuilder : IEndpointConventionBuilder\r\n{\r\n    builder.RequireAuthorization(pb =\u003e pb.RequireAssertion(context =\u003e HasFeatures(context, features)));\r\n    return builder;\r\n}\r\n\r\nprivate static bool HasFeatures(AuthorizationHandlerContext context, Feature[] features)\r\n{\r\n    // Write logic here\r\n    return true;\r\n}\r\n```\r\n\r\nOR\r\n\r\n```C#\r\npublic static TBuilder RequireFeature\u003cTBuilder\u003e(this TBuilder builder, params Feature[] features)\r\n    where TBuilder : IEndpointConventionBuilder\r\n{\r\n    builder.RequireAuthorization(pb =\u003e pb.AddRequirements(new FeatureRequirement(features)));\r\n    return builder;\r\n}\r\n```\r\n\r\nThis lets you directly add requirements to an auth policy.",
                                           "updatedAt":  "2022-10-30T20:24:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85NO1Y_",
                                           "createdAt":  "2022-10-29T04:50:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "```C#\r\napp.MapGet(\"/login\", [FeatureAuthorize(Features.ManageRegions)] () =\u003e \"This endpoint is those users with this feature assigned.\");\r\n```\r\n\r\nThis pattern is much harder to pull off. The attribute will be part of the metadata since that happens automagically but flowing that data to authentication handlers is much harder.\r\n",
                                           "updatedAt":  "2022-10-29T04:50:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85NRBA3",
                                           "createdAt":  "2022-10-30T17:16:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jxwaters",
                                           "body":  "My current implementation of this authorization attribute uses policies under the hood, and automatically generates a policy name based on the list of features enum names, concatenated. How could this more cleanly be expressed using your recommended approach, without the custom attribute?\r\n\r\n1. The custom attribute, which sets the Policy Name:\r\n\r\n```\r\ninternal class FeatureAuthorizeAttribute : AuthorizeAttribute\r\n{\r\n    const string FEATURE_POLICY_PREFIX = \"Feature\";\r\n\r\n    public FeatureAuthorizeAttribute(params Feature[] features) =\u003e Features = features;\r\n\r\n    public Feature[] Features\r\n    {\r\n        get\r\n        {\r\n            var policyFeature = Policy;\r\n            foreach (var fp in policyFeature.Substring(FEATURE_POLICY_PREFIX.Length + 1).Split(\u0027,\u0027))\r\n            {\r\n                var tryParse = Enum.TryParse\u003cFeature\u003e(fp, out var feature);\r\n                if (tryParse)\r\n                {\r\n                    features.Add(feature);\r\n                }\r\n            }\r\n            return default;\r\n        }\r\n        set =\u003e Policy = $\"{FEATURE_POLICY_PREFIX}_{string.Join(\u0027,\u0027, value)}\";\r\n    }\r\n}\r\n```\r\n\r\n2, The custom policy provider that resolves policies with this name pattern to a FeatureRequirement:\r\n\r\n```\r\npublic class CustomPolicyProvider : IAuthorizationPolicyProvider\r\n{\r\n\r\n    public Task\u003cAuthorizationPolicy?\u003e GetPolicyAsync(string policyName)\r\n    {\r\n        var isFP = policyName.StartsWith(FEATURE_POLICY_PREFIX, StringComparison.OrdinalIgnoreCase);\r\n        if (isFP)\r\n        {\r\n            var features = new List\u003cFeature\u003e();\r\n            foreach (var fp in policyName.Substring(FEATURE_POLICY_PREFIX.Length + 1).Split(\u0027,\u0027))\r\n            {\r\n                var tryParse = Enum.TryParse\u003cFeature\u003e(fp, out var feature);\r\n                if (tryParse)\r\n                {\r\n                    features.Add(feature);\r\n                }\r\n            }\r\n            var policy = new AuthorizationPolicyBuilder();\r\n            policy.AddRequirements(new FeatureRequirement(features.ToArray()));\r\n            return Task.FromResult(policy.Build());\r\n        }\r\n        return Task.FromResult\u003cAuthorizationPolicy\u003e(null);\r\n    }\r\n\r\n```\r\n\r\n3. The Feature Requirement:\r\n\r\n```\r\npublic class FeatureRequirement : IAuthorizationRequirement\r\n{\r\n    public Feature[] RequiredFeatures { get; set; }\r\n\r\n    public FeatureRequirement(Feature[] requiredFeatures)\r\n    {\r\n        RequiredFeatures = requiredFeatures;\r\n    }\r\n}\r\n\r\n```\r\n\r\n4. The FeatureHandler\r\n\r\nNOTE the IUserContext is populated by middleware that runs before the Auth pipeline, and contains the features that the user has\r\n\r\n```\r\npublic class FeatureHandler : AuthorizationHandler\u003cFeatureRequirement\u003e\r\n{\r\n    private readonly IUserContext _userContext;\r\n\r\n    public FeatureHandler(IUserContext userContext)\r\n    {\r\n        _userContext = userContext;\r\n    }\r\n\r\n    protected override async Task HandleRequirementAsync(AuthorizationHandlerContext context,\r\n        FeatureRequirement requirement)\r\n    {\r\n        if (context.User.Identity?.IsAuthenticated ?? false)\r\n        {\r\n            if (_userContext.Features.Any(t =\u003e requirement.RequiredFeatures.Contains(t)))\r\n            {\r\n                context.Succeed(requirement);\r\n            }            \r\n        }\r\n    }\r\n}\r\n```\r\n\r\nI feel like this is a very laborious way to accomplish what I want!\r\n",
                                           "updatedAt":  "2022-10-30T17:16:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85NRJJZ",
                                           "createdAt":  "2022-10-30T20:04:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODX_uEQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "asos-alexhaigh",
                                                                               "createdAt":  "2024-02-23T17:09:46Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "@jxwaters this is exactly what we\u0027re going to solve in .NET 8 with https://github.com/dotnet/aspnetcore/issues/44551. It will let you express requirements as attributes. In your example it will eliminate step 2 and in step 1, the attribute would look like this:\r\n\r\n```C#\r\ninternal class FeatureAuthorizeAttribute : AuthorizeAttribute, IAuthorizationRequirementData\r\n{\r\n    public FeatureAuthorizeAttribute(params Feature[] features) =\u003e Features = features;\r\n\r\n    public Feature[] Features { get; }\r\n    \r\n    public IEnumerable\u003cIAuthorizationRequirement\u003e GetRequirements()\r\n    {\r\n        yield return new FeatureRequirement(Features);\r\n    }\r\n}\r\n```\r\n\r\nThis will be enough to flow an `IAuthorizationRequirement` as attributes without smuggleing them via the policy name (which is what we document today).\r\n\r\nThere are other ways to get at this metadata but it isn\u0027t very easy either so it\u0027s may not be worth expressing here.\r\n\r\n@HaoK the other thing worth following up on here is additional user context (the IUserContext) that needs to flow to authorization handlers. There\u0027s no good way to flow that today other than a scoped service that is first set by middleware. \r\n\r\n@jxwaters it may be possible to create your own derived context by using `IAuthorizationHandlerContextFactory`. That would allow you to pass your `IUserContext` in the constructor and set it as part of a derived `AuthorizationHandlerContext`.\r\n\r\nWith minimal APIs, you can directly inline the requirement and close over state in the method (in this case the features) https://github.com/dotnet/aspnetcore/issues/44783#issuecomment-1295664641. So there\u0027s less indirection.",
                                           "updatedAt":  "2022-10-30T20:22:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85NVC7X",
                                           "createdAt":  "2022-10-31T16:36:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "\u003ethe other thing worth following up on here is additional user context (the IUserContext) that needs to flow to authorization handlers. There\u0027s no good way to flow that today other than a scoped service that is first set by middleware.\r\n\r\n@davidfowl Just to clarify what feels weird, the fact that the handler has to get it from the container via constructor?  \r\n\r\nOr are we looking for some mechanism to pass additional arbitrary data in the default context, with a new mechanism to request stuff (as opposed to just pulling it out of the container in the handler?)",
                                           "updatedAt":  "2022-10-31T16:36:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85NX2qQ",
                                           "createdAt":  "2022-11-01T06:51:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "\u003e @davidfowl Just to clarify what feels weird, the fact that the handler has to get it from the container via constructor?\r\n\r\nNo that is pretty clean, but it\u0027s the fact that the IUserContext is popualated by middleware (that code isn\u0027t shown here).\r\n\r\n\u003e Or are we looking for some mechanism to pass additional arbitrary data in the default context, with a new mechanism to request stuff (as opposed to just pulling it out of the container in the handler?)\r\n\r\nI was thinking something along these lines. The factory looks like a great extensibility point but flowing your scoped user context to the call is tricky.",
                                           "updatedAt":  "2022-11-01T06:51:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85NZenD",
                                           "createdAt":  "2022-11-01T13:39:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jxwaters",
                                           "body":  "I do like the idea of being able to inject whatever you need into the handler. In this case, the user context is populated in middleware by a combination of things - some things come from claims, but some things are actually fetched from the database and stored in a server side session state cache, so this needs to be accessed with an async call. So this all happens in a middleware. If this helps you think about the possible scenarios of what kinds of things might need to happen to provide what the handler needs.",
                                           "updatedAt":  "2022-11-01T13:39:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Nciyk",
                                           "createdAt":  "2022-11-01T22:56:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `.NET 8 Planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2022-11-01T22:56:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85NdFIV",
                                           "createdAt":  "2022-11-02T02:18:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "@jxwaters can you share pesudo code for your middleware? It might not be worth improving if the solution is already simple enough.",
                                           "updatedAt":  "2022-11-02T02:18:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85NhYGZ",
                                           "createdAt":  "2022-11-02T14:55:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jxwaters",
                                           "body":  "1. Inject IUserContext into the middleware\r\n2. Populate it with information from claims\r\n3. Look up server side state in IMemoryCache - if not found, fetch from DB and add to cache\r\n4. Put some info from the server side state into the IUserContext",
                                           "updatedAt":  "2022-11-02T14:55:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85NhZli",
                                           "createdAt":  "2022-11-02T14:58:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jxwaters",
                                           "body":  "    public async Task InvokeAsync(HttpContext context, IUserContext userContext, ISessionCacheHelper sch)\r\n    {\r\n...",
                                           "updatedAt":  "2022-11-02T14:58:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85NiJSp",
                                           "createdAt":  "2022-11-02T16:12:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCu63Mw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "davidfowl",
                                                                               "createdAt":  "2022-11-02T17:48:13Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Another wrinkle for us to make this better is that the main AuthorizationHandlerContext is created inside of AuthorizationService which is at the lowest layer which doesn\u0027t even have the concept of HttpContext/request, so we\u0027d have to likely invent another context which would probably result in something more complicated than the inject/InvokeAsync in middleware",
                                           "updatedAt":  "2022-11-02T16:12:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85te-LX",
                                           "createdAt":  "2023-12-01T22:00:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2023-12-01T22:00:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde851Pput",
                                           "createdAt":  "2024-02-27T16:39:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "asos-alexhaigh",
                                           "body":  "This appears to be implemented now but poorly documented. Can we get some official docs with better examples?\r\n\r\nThis is the current one (appears to be AI written) and it does not adequately explain all the features available.\r\nhttps://learn.microsoft.com/en-us/aspnet/core/fundamentals/minimal-apis/security?view=aspnetcore-8.0",
                                           "updatedAt":  "2024-02-27T16:39:26Z"
                                       }
                                   ],
                         "totalCount":  18
                     },
        "title":  "Custom Authorization Attributes on Min APIs",
        "labels":  [
                       "enhancement",
                       "area-auth",
                       "area-minimal"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/44803",
        "createdAt":  "2022-10-31T18:18:06Z",
        "number":  44803,
        "author":  "HaoK",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-02-13T01:58:51Z",
        "body":  "Gathering potential requirements for BCL JWT Apis\r\n\r\nfrom @Tratcher \r\n- read JWTs (and have a plan for eventual encrypted EJWTs) \r\n- Create JWTs (\u0026 EJWTs eventually)\r\n- Fetch OIDC metadata(?)\r\n\r\nAn MVP should consider implementing the following signing algorithms: \r\n\r\nHMAC + SHA256\r\nRSASSA-PKCS1-v1_5 + SHA256\r\nECDSA + P-256 + SHA256\r\n\r\n\r\nfrom @blowdart \r\n- Should Validate be separate, or always a function of Parse? (Probably not, but how would you reflect multiple validation errors, or do you stop at the first one)\r\n- Is decrypt a separate step to parse? (Yes from @blowdart)\r\n- Does anyone need to parse an invalid jwt? (someone asked for this if memory serves.) \r\n- Do we support unprotected tokens at all?  (No from @blowdart)\r\n- Do we accept or create tokens with a null cipher? (No from @blowdart)\r\n- Do we enable the use of non-crypto board approved curves? (Probably, but with a way to disable, same with deprecated algoritms)\r\n- Is the Json Web Key support a separate, public class?\r\n- Should the signing functions be a separate, pluggable class to allow the use of things like Azure Key Vault? ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHObXvcIA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85OIK8J",
                                           "createdAt":  "2022-11-10T19:01:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCvZcTw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "HaoK",
                                                                               "createdAt":  "2022-11-10T19:16:29Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "rafikiassumani-msft",
                                           "body":  "From an MVP standpoint, should we just start with JWT and then potentially increment to EJWT? I think encryption scenarios can be their own deliverables. @HaoK @davidfowl @blowdart @Tratcher ?",
                                           "updatedAt":  "2022-11-10T19:01:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85OIOsx",
                                           "createdAt":  "2022-11-10T19:15:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "That\u0027s fine, so long as we know where it fits in the flow.",
                                           "updatedAt":  "2022-11-10T19:15:39Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85OIPVr",
                                           "createdAt":  "2022-11-10T19:18:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "Cool, updated the requirements to move EJWT to have a plan as opposed to a hard requirement",
                                           "updatedAt":  "2022-11-10T19:18:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85te9wg",
                                           "createdAt":  "2023-12-01T21:58:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2023-12-01T21:58:50Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "[Tracking] JWT requirements",
        "labels":  [
                       "Needs: Design",
                       "enhancement",
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/45220",
        "createdAt":  "2022-11-21T22:44:12Z",
        "number":  45220,
        "author":  "captainsafia",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-02-27T22:25:54Z",
        "body":  "## Background and Motivation\r\n\r\nIn .NET 7, we introduced the `RequireAuthorization` extension method that allowed a user to construct and add an authorization policy onto an endpoint with on invocation. There are scenarios were users would want to factor these policies out to from endpoint-specific (local) to global policies on the application.\r\n\r\n## Proposed Refactoring\r\n\r\n### Refactoring Behavior and Message\r\n\r\nWhen right-clicking on a line of code with a `RequireAuthorization` option the refactoring will be provided with the following message:\r\n\r\n\u003e Convert to global authorization policy\r\n\r\n\r\n## Usage Scenarios\r\n\r\n```csharp\r\nvar builder = WebApplication.CreateBuilder(args);\r\n\r\nbuilder.Services.AddAuthorization();\r\n\r\nvar app = builder.Build();\r\n\r\napp.UseAuthorization();\r\n\r\napp.MapGet(\"/\", () =\u003e \"Hello world!\")\r\n  .RequireAuthorization(policy =\u003e p.RequireClaim(\"scope\", \"api-access\")));\r\n\r\napp.Run();\r\n```\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOU6vfhA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85O2pgu",
                                           "createdAt":  "2022-11-22T02:45:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thank you for submitting this for API review. This will be reviewed by @dotnet/aspnet-api-review at the next meeting of the ASP.NET Core API Review group. Please ensure you take a look at [the API review process documentation](https://github.com/dotnet/aspnetcore/blob/main/docs/APIReviewProcess.md) and ensure that:\n\n* The PR contains changes to the reference-assembly that describe the API change. **Or**, you have included a snippet of reference-assembly-style code that illustrates the API change.\n* The PR describes the impact to users, both positive (useful new APIs) and negative (breaking changes).\n* Someone is assigned to \"champion\" this change in the meeting, and they understand the impact and design of the change.",
                                           "updatedAt":  "2022-11-22T02:45:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Tna0x",
                                           "createdAt":  "2023-01-24T23:53:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2023-01-24T23:53:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Tq9-E",
                                           "createdAt":  "2023-01-25T15:12:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jabellard",
                                           "body":  "@rafikiassumani-msft , @captainsafia : I can take on this.",
                                           "updatedAt":  "2023-01-25T15:12:39Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "[Refactoring] Move local authz policies to global authz policies",
        "labels":  [
                       "area-auth",
                       "analyzer",
                       "help candidate"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/46026",
        "createdAt":  "2023-01-11T11:27:42Z",
        "number":  46026,
        "author":  "Simkiw",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODCX1eA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "wrschneider",
                                            "createdAt":  "2023-01-19T16:13:49Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "iamjplant",
                                            "createdAt":  "2023-03-20T20:14:24Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "pmoleri",
                                            "createdAt":  "2023-05-24T15:06:52Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Jeroen-Van-Loocke",
                                            "createdAt":  "2025-05-14T14:27:21Z"
                                        }
                                    ],
                          "totalCount":  4
                      },
        "updatedAt":  "2024-05-06T22:25:00Z",
        "body":  "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nHi,\r\n\r\nI have an identity provider OIDC compliant which issues a JWT ID token and an opaque access token (or reference token).\r\nMicrosoft offers a way to validate a JWT bearer however, I did not see an alternative for opaque tokens.\n\n### Describe the solution you\u0027d like\n\nI would like to have a method extension that works the same as `ServiceCollection.AddJwtBearer()` extension.  \r\n\r\n\r\nWe would provide almost the same identity provider information such as the issuer uri, user info, and most importantly the **introspect endpoint**, which checks if the access token is valid or not.  \r\n\r\nFinally, we could populate the identity principal with the userinfo endpoint, right after validating the token.\n\n### Additional context\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOfP4qCA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85SNEMx",
                                           "createdAt":  "2023-01-11T16:54:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCyhLzg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "LAUGH",
                                                                               "user":  "Simkiw",
                                                                               "createdAt":  "2023-01-12T09:04:27Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "blowdart",
                                           "body":  "_I am so so wrong_",
                                           "updatedAt":  "2023-01-11T20:04:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85SN5Wh",
                                           "createdAt":  "2023-01-11T19:23:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "@blowdart `reference tokens` != `refresh tokens`.\r\n\r\n@Simkiw FWIW, OpenIddict has a validation handler that natively supports OAuth 2.0 introspection, which should work with any server implementation as long as it\u0027s standard-compliant. You can see https://github.com/openiddict/openiddict-samples/blob/dev/samples/Zirku/Zirku.Api1/Program.cs for an example.",
                                           "updatedAt":  "2023-01-11T19:23:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85SODsm",
                                           "createdAt":  "2023-01-11T20:04:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCyhL0w==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "LAUGH",
                                                                               "user":  "kevinchalet",
                                                                               "createdAt":  "2023-01-11T20:07:40Z"
                                                                           },
                                                                           {
                                                                               "content":  "LAUGH",
                                                                               "user":  "Simkiw",
                                                                               "createdAt":  "2023-01-12T09:04:35Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "blowdart",
                                           "body":  "Aggh doh. This is what I get for opening github when I wake up :)",
                                           "updatedAt":  "2023-01-11T20:04:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85SOENe",
                                           "createdAt":  "2023-01-11T20:05:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "@Simkiw does a third party option work for you, or are you hampered by corporate rules etc making it hard to use 3rd party code?",
                                           "updatedAt":  "2023-01-11T20:05:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85SQccp",
                                           "createdAt":  "2023-01-12T09:31:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Simkiw",
                                           "body":  "So far, I have freedom to use whatever i want.    \r\nI also came across [this article](https://leastprivilege.com/2020/07/06/flexible-access-token-validation-in-asp-net-core/) written in 2020 which targets the same issue, but involves some code tweeking.  \r\n\r\nAs for the openiddict, no i wasn\u0027t aware of it. I\u0027ll take a look at it and give it a try.  \r\n\r\nThank you all, I\u0027ll keep you posted",
                                           "updatedAt":  "2023-01-12T09:31:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85STsc9",
                                           "createdAt":  "2023-01-12T19:17:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCyxhkg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Simkiw",
                                                                               "createdAt":  "2023-01-17T11:49:52Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "captainsafia",
                                           "body":  "Triage: this is a new feature that we will probably want to support via a callback API of some sort.",
                                           "updatedAt":  "2023-01-12T19:17:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85STsf-",
                                           "createdAt":  "2023-01-12T19:17:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `.NET 8 Planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2023-01-12T19:17:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85TSCdV",
                                           "createdAt":  "2023-01-19T16:18:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "wrschneider",
                                           "body":  "Same request:\r\n\r\nSpecific scenario is a SPA using OIDC on the front-end\r\nBackend needs to _authenticate_ from the opaque access token, by calling OIDC userinfo endpoint\r\n\r\nhttps://github.com/IdentityModel/IdentityModel.AspNetCore.OAuth2Introspection is close but calls the introspection endpoint rather than userinfo. And the maintainer says he wouldn\u0027t merge a PR to add this support if I created it :-)\r\n(see: https://github.com/IdentityModel/IdentityModel.AspNetCore.OAuth2Introspection/issues/169)\r\n\r\nNote that token introspection and userinfo endpoint are two different things!\r\nToken introspection will tell you the token is valid but may not give you all the claims you need for authentication.\r\nThis is an artifact of opaque access tokens are supposed to be used for _authorization_ and we\u0027re trying to do _authentication_.",
                                           "updatedAt":  "2023-01-19T16:20:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85TVTJd",
                                           "createdAt":  "2023-01-20T09:01:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Simkiw",
                                           "body":  "@wrschneider Hi there,  \r\n\r\nLike you said, both userinfo and introspect serve different purposes.  \r\nUsually if not always, you cannot get userinfo without a valid token, which means, if you get the userinfo details, that implies the token is valid.  \r\n\r\nHowever, it is vital to keep in mind that the introspection endpoint requires authentication as opposed to userinfo endpoint :  \r\n- Anyone could get the userinfo details as long as the http request has a valid token\r\n- Only authenticated requests could check the validity of a token (as if you are sending two tokens, one authenticating the caller and the other one the token you are checking over)  \r\n\r\nIf somehow your access token gets compromised, userinfo endpoint might not be enough to secure the backend.",
                                           "updatedAt":  "2023-01-20T09:01:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85TWrIm",
                                           "createdAt":  "2023-01-20T14:14:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC0n_ZA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Simkiw",
                                                                               "createdAt":  "2023-01-23T09:37:07Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "wrschneider",
                                           "body":  "\u003e If somehow your access token gets compromised, userinfo endpoint might not be enough to secure the backend.\r\n\r\nThis is why access tokens tend to be short-lived: If your access token is compromised, then you can call whatever API the access token authorizes you to call.  Userinfo is just one specific example.\r\n\r\nNo different than using `AddJwtBearer` to authenticate and using public keys to check JWT signature, or if you had some other kind of access token to authorize your back end API explicitly.\r\n",
                                           "updatedAt":  "2023-01-20T14:14:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85YCCIt",
                                           "createdAt":  "2023-03-20T21:00:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC5wBZQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "tomap",
                                                                               "createdAt":  "2023-04-13T03:56:01Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "iamjplant",
                                           "body":  "Agreed!  This would be nice to have for those of us who don\u0027t get JWT\u0027s back!",
                                           "updatedAt":  "2023-03-20T21:00:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85te570",
                                           "createdAt":  "2023-12-01T21:44:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2023-12-01T21:44:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde858_ioI",
                                           "createdAt":  "2024-05-06T22:24:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "GNUGradyn",
                                           "body":  "This is a massive shame. There are some inherit security compromises in using JWTs that are NOT worth the reduced database pressure for some use cases. This should be supported. Should have been supported a long time ago.",
                                           "updatedAt":  "2024-05-06T22:24:59Z"
                                       }
                                   ],
                         "totalCount":  13
                     },
        "title":  "Opaque - reference token validation",
        "labels":  [
                       "Needs: Design",
                       "enhancement",
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/46120",
        "createdAt":  "2023-01-16T11:56:30Z",
        "number":  46120,
        "author":  "arontsang",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODL-Rug==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "amiru3f",
                                            "createdAt":  "2023-07-09T23:13:19Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "meriturva",
                                            "createdAt":  "2023-09-11T10:56:44Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "robcao",
                                            "createdAt":  "2023-09-26T04:42:28Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "sigridbra",
                                            "createdAt":  "2023-10-19T09:14:22Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "m-jovanovic",
                                            "createdAt":  "2024-01-04T21:29:10Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Leon99",
                                            "createdAt":  "2024-08-15T11:28:50Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "voroninp",
                                            "createdAt":  "2024-10-17T09:30:45Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "sliekens",
                                            "createdAt":  "2024-10-17T11:11:47Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "iamjustsam",
                                            "createdAt":  "2024-11-23T00:32:35Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "WilvanBil",
                                            "createdAt":  "2024-11-23T02:45:15Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Matthias-VDB",
                                            "createdAt":  "2024-11-23T08:47:53Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Trivivium",
                                            "createdAt":  "2024-12-11T20:18:44Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "msmolka",
                                            "createdAt":  "2025-04-07T06:03:28Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "alexaka1",
                                            "createdAt":  "2025-04-15T07:08:02Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Tungsten78",
                                            "createdAt":  "2025-05-28T16:38:49Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "robertcoltheart",
                                            "createdAt":  "2025-08-12T11:16:28Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "byOsta",
                                            "createdAt":  "2025-08-20T16:05:55Z"
                                        }
                                    ],
                          "totalCount":  17
                      },
        "updatedAt":  "2025-08-22T20:12:36Z",
        "body":  "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nMultiple registrations on IClaimsTransformation should compose. For pete\u0027s sake, the signature for `IClaimsTransformation` is literally an async reduce function.\r\n\r\n\n\n### Describe the solution you\u0027d like\n\nA `ReducerClaimsTransformer` should be injected into `AuthenticationService.Transform`\r\n\r\n```\r\npublic class ReducerClaimsTransformation : IClaimsTransformation\r\n{\r\n    public async Task\u003cClaimsPrincipal\u003e TransformAsync(ClaimsPrincipal principal)\r\n    {\r\n        foreach (var transformation in _transformations)\r\n        {\r\n            principal = await transformation.TransformAsync(principal);\r\n        }\r\n\r\n        return principal;\r\n    }\r\n}\r\n```\n\n### Additional context\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOvXobkQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85Shjs4",
                                           "createdAt":  "2023-01-16T20:37:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pinkfloydx33",
                                           "body":  "I remember being surprised that you could only register one `IClaimsTransformation`. At the time (a few years ago) we had multiple distinct use-cases for the transformation and had to combine it all into one. Not useful either if the transformer is provided by third parties (though no idea how common that is).\r\n\r\nWe no longer need the transformation as our entire Auth flow has changed, just throwing out my 2cp that at the very least it was surprising and hard to reason about without looking at the source that you could only have one. ",
                                           "updatedAt":  "2023-01-16T20:37:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Si2e8",
                                           "createdAt":  "2023-01-17T05:52:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "I think this is a reasonable change to make. @HaoK do you see any problems with this? It is a breaking change that we should document though (if we do make it).",
                                           "updatedAt":  "2023-01-17T05:52:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Si7ox",
                                           "createdAt":  "2023-01-17T06:21:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "arontsang",
                                           "body":  "@pinkfloydx33 You could have raised this issue back then... ",
                                           "updatedAt":  "2023-01-17T06:21:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Sndi-",
                                           "createdAt":  "2023-01-17T21:30:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HaoK",
                                           "body":  "The breaking change aspect is probably the biggest deal, but since we don\u0027t do any claims transformation by default, this is just providing new behavior when multiple IClaimsTransformations have been registered.  That said, given that historically claims transformation is not a side effect free operation, and in the past we\u0027ve had a lot of historical issues merging ClaimsPrincipals with multiple auth schemes, and this scenario already has a straight forward workaround, how about we keep this issue open in the backlog and see how much desire there is for this behavior before making any decisions?",
                                           "updatedAt":  "2023-01-17T21:30:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85SoGjj",
                                           "createdAt":  "2023-01-17T23:40:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `.NET 8 Planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2023-01-17T23:40:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde851_1SE",
                                           "createdAt":  "2024-03-05T21:29:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mkArtakMSFT",
                                           "body":  "Hi. Thanks for contacting us.\r\nWe\u0027re closing this issue as there was not much community interest in this ask for quite a while now.\r\nYou can learn more about our triage process and how we handle issues by reading our [Triage Process](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md) writeup.",
                                           "updatedAt":  "2024-03-05T21:29:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde858QX9T",
                                           "createdAt":  "2024-04-30T08:10:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOERXAbg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Tomeroeni",
                                                                               "createdAt":  "2024-05-02T08:20:45Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "tleezer",
                                                                               "createdAt":  "2024-07-31T14:21:27Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "voroninp",
                                                                               "createdAt":  "2024-10-17T09:31:35Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "iamjustsam",
                                                                               "createdAt":  "2024-11-23T00:31:49Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "davisnw",
                                                                               "createdAt":  "2025-05-08T16:48:15Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  5
                                                         },
                                           "author":  "sliekens",
                                           "body":  "@mkArtakMSFT  I vote to reopen. After working extensively with [IAuthorizationHandler](https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.authorization.iauthorizationhandler?view=aspnetcore-8.0), where multiple registrations are the intended design, I was really confused why only one of my `IClaimsTransformation` was activated. (In my mind, they are closely related because one is used by `IAuthorizationService`, the other by `IAuthenticationService`, so they should have similar behavior.) I also agree with the OP that the reducer-like signature (mis)leads you to believe that multiple registrations are supported.\r\n\r\nIt\u0027s not clear to me how I can add `ReducerClaimsTransformation` as shown in the first post to my service collection, without creating a circular dependency.\r\n\r\nCurrently, the last registered transformer is used, which could also lead to programming errors, since you might not even realize that adding a new transformer will also render any previous transformer ineffective.\r\n\r\nWhat you see:\r\n\r\n``` diff\r\nbuilder.Services.AddTransient\u003cIClaimsTransformation, AuthScheme1Transformer\u003e();\r\n+builder.Services.AddTransient\u003cIClaimsTransformation, AuthScheme2Transformer\u003e();\r\n```\r\n\r\nWhat you get:\r\n\r\n``` diff\r\n-builder.Services.AddTransient\u003cIClaimsTransformation, AuthScheme1Transformer\u003e();\r\n+builder.Services.AddTransient\u003cIClaimsTransformation, AuthScheme2Transformer\u003e();\r\n```\r\n\r\nThat is to say, I support making this breaking change, because supporting multiple registrations will eliminate an entire category of programming mistakes in a security-sensitive context.\r\n\r\nLastly, I would not let this depend on community interest. This is one of those problems that don\u0027t bite often, but do bite hard.",
                                           "updatedAt":  "2024-04-30T09:45:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86A9BlQ",
                                           "createdAt":  "2024-06-12T16:40:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOD2tfyA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "voroninp",
                                                                               "createdAt":  "2024-10-17T09:32:30Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "SHAGGAR",
                                           "body":  "Not sure why this was closed without a fix or alternative.  The current design is real bad.",
                                           "updatedAt":  "2024-06-12T16:41:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86QL42I",
                                           "createdAt":  "2024-10-17T09:32:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "voroninp",
                                           "body":  "+1 for the feature.",
                                           "updatedAt":  "2024-10-17T09:32:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86QMRs_",
                                           "createdAt":  "2024-10-17T10:20:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOD2zt4w==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "arontsang",
                                                                               "createdAt":  "2024-10-17T20:13:24Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "voroninp",
                                           "body":  "I\u0027ve recently filed an issue to EF Core:\nIf same migrations history table is reused between different db contexts (default behavior) then `List Applied Migrations` shows all migrations and not only those relevant for particular db context.\nFunny enough, you will face it immediately if you develop a modular monolith.\n\nSame with the current issue.\nI started with the docs looking for the mechanism to extend authenticated `ClaimsPrincipal` with the custom claims. \n— Oh, nice, they have `IClaimsTransformation`. Wait, but what if my modules need their custom transofrmation. Let\u0027s see the source of `AuthenticationService`. Hm... only one instance of ``IClaimsTransformation`. Not good. Let\u0027s look for an Issue on github.\n\nAnd here I am...\n\nIt took me 5 minutes to discover a missing feature. Ok, I\u0027ll probably use Scrutor.\n\nBut do you know what this means?\n\u003e there was not much community interest in this ask for quite a while now\n\nThis effectively means that all those advertisers of best practices, modular monoliths and similar stuff are effectively...bullshitters because they never tried to do it from start to end. Otherwise, there would be an interest in this feature. \n\nP.S. ofc, isolation of transformer in one module from the one in another module is what really needed here, but anyway. \n",
                                           "updatedAt":  "2024-10-19T17:06:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86QMu1b",
                                           "createdAt":  "2024-10-17T11:22:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOD2zUSg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "voroninp",
                                                                               "createdAt":  "2024-10-17T11:32:03Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "arontsang",
                                                                               "createdAt":  "2024-10-17T19:53:42Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "sliekens",
                                           "body":  "RE:\n\n\u003e The breaking change aspect is probably the biggest deal\n\nAt this point I would probably introduce a new interface and mark the old one Obsolete. That should take care of backwards compatibility.\n\n```diff\n+[Obsolete(\"IClaimsTransformation does not support multiple registrations\")]\ninterface IClaimsTransformation\n{\n    Task\u003cClaimsPrincipal\u003e TransformAsync (ClaimsPrincipal principal);\n}\n\n+interface IClaimsReducer\n+{\n+    Task\u003cClaimsPrincipal\u003e TransformAsync (ClaimsPrincipal principal);\n+}\n```\n\nI don\u0027t like that this was closed for lack of community interest. Most applications don\u0027t need claims transformation, of course this won\u0027t get thousands of views. It\u0027s also not an obvious problem, there is no error when you register multiple implementations. I suspect many applications have multiple implementations of the interface because the developer doesn\u0027t even realize that it doesn\u0027t actually work. Someone please reopen this and re-triage.",
                                           "updatedAt":  "2024-10-17T11:22:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86bnsdb",
                                           "createdAt":  "2025-01-23T19:45:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "voroninp",
                                           "body":  "You are [mean](https://github.com/dotnet/aspnetcore/blob/febd7e8bdf05f17fb4e0e4dd3123e9538fbf7e7b/src/Http/Authentication.Core/src/AuthenticationCoreServiceCollectionExtensions.cs#L24C9-L24C140), gentlemen =)\n\nTried to decorate it with Scrutor, but did not expect it\u0027s registered as a singleton.",
                                           "updatedAt":  "2025-01-23T19:45:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86qrKfq",
                                           "createdAt":  "2025-05-08T15:21:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steverukuts",
                                           "body":  "I think this could be resolved in a non-breaking way.\n\nA no-op claims transformer is already defined, so this could be replaced with this implementation:\n\n```csharp\npublic class ClaimsTransformationReducer(IEnumerable\u003cIClaimsSubTransformation\u003e subTransformations) : IClaimsTransformation\n{\n    public async Task\u003cClaimsPrincipal\u003e TransformAsync(ClaimsPrincipal principal)\n    {\n        foreach (var transformation in subTransformations)\n            principal = await transformation.TransformAsync(principal);\n\n        return principal;\n    }\n}\n```\n\nThis is effectively a no-op transformer when no `IClaimsSubTransformation`s are defined. The interface is defined as so - the same as the `IClaimsTransformation` interface:\n\n```csharp\npublic interface IClaimsSubTransformation\n{\n    public Task\u003cClaimsPrincipal\u003e TransformAsync(ClaimsPrincipal principal);\n}\n```\n\nAnyone who would like the new behaviour can simply replace all `IClaimsTransformation` implementations with this same interface, and any apps using a single `IClaimsTransformation` would continue to work as normal. \n\nNote: I am not sure about the `IClaimsSubTransformation` name so perhaps someone could iterate on that. Aside from that I\u0027m happy with the result and it\u0027s largely transparent to my app, which has multiple authentication pathways, handlers and so on.\n\nFor the record, I also arrived at this issue because I was confused about why multiple `IClaimsTransformation` registrations were not working, as the API design did seem to suggest to me that this would work. I appreciate that this is a niche concern but it would be nice to not have to repeat this pattern, and it feels like it wouldn\u0027t be too hard to solve it.",
                                           "updatedAt":  "2025-05-08T15:21:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde869ehuR",
                                           "createdAt":  "2025-08-12T11:19:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "robertcoltheart",
                                           "body":  "Also greatly surprised that this wasn\u0027t supported. Registering my interest for the ability to process multiple claims transformations.",
                                           "updatedAt":  "2025-08-12T11:19:02Z"
                                       }
                                   ],
                         "totalCount":  14
                     },
        "title":  "IClaimsTransformation do not automagically compose",
        "labels":  [
                       "enhancement",
                       "area-auth",
                       "untriaged",
                       "help candidate",
                       "Pillar: Dev Experience"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/46137",
        "createdAt":  "2023-01-17T17:44:33Z",
        "number":  46137,
        "author":  "lukecolbourn",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCu8UYw==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "WGroenestein",
                                            "createdAt":  "2023-03-18T07:03:48Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2024-02-13T01:45:08Z",
        "body":  "## Background and Motivation\r\nIn a project that uses anti forgery features and 3rd party authentication provider, I found you can get anti forgery token validation failures in certain scenarios (auth provider does not use sub, nameidentifier or upn claims, whilst the iat claim value has changed). \r\n\r\nIf we could configure the name(s) of claims we want to use in the [DefaultClaimUidExtractor ](https://github.com/dotnet/aspnetcore/blob/main/src/Antiforgery/src/Internal/DefaultClaimUidExtractor.cs) class, we could fix the issue without having to change the configuration of the auth provider.\r\n\r\n## Proposed API\r\n\r\n```diff\r\n\r\nservices.AddAntiForgery(options =\u003e \r\n    options.UidClaimNames = new string[] { \"myUniqueUserClaim\" }\r\n);\r\n\r\n```\r\n\r\n## Alternative Designs\r\nTell the framework that there is an iat claim, then update [DefaultClaimUidExtractor](https://github.com/dotnet/aspnetcore/blob/ad2f29fcd2540e7c9e73709dcea91280d6f40273/src/Antiforgery/src/Internal/DefaultClaimUidExtractor.cs#L111) to not include the claim in the extraction.\r\n```diff\r\n\r\nservices.AddAntiForgery(options =\u003e \r\n    options.IatClaims = new string[] { \"iat\" }\r\n);\r\n\r\n```\r\n\r\n## Risks\r\nDevelopers could configure a claim that is not unique to the user.\r\n\r\n\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOVB2EKA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85Tnc1R",
                                           "createdAt":  "2023-01-25T00:03:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "rafikiassumani-msft",
                                           "body":  "@lukecolbourn Can you give us the name of the providers that change the default claim behaviors for antiforgery token validation? Do you mind providing a GitHub repository with a repro for this issue?",
                                           "updatedAt":  "2023-01-25T00:03:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Tnc5u",
                                           "createdAt":  "2023-01-25T00:03:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Hi @lukecolbourn. We have added the \"Needs: Author Feedback\" label to this issue, which indicates that we have an open question for you before we can take further action. This issue will be closed automatically in 7 days if we do not hear back from you by then - please feel free to re-open it if you come back to this issue after that time.",
                                           "updatedAt":  "2023-01-25T00:03:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Tnejm",
                                           "createdAt":  "2023-01-25T00:09:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "halter73",
                                           "body":  "Have you considered middleware that runs post-authentication and rewrites the ClaimsPrincipal to include a sub, nameidentifier or upn claim to match the myUniqueUserClaim?",
                                           "updatedAt":  "2023-01-25T00:09:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85ToIyR",
                                           "createdAt":  "2023-01-25T03:00:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lukecolbourn",
                                           "body":  "\u003e @lukecolbourn Can you give us the name of the providers that change the default claim behaviors for antiforgery token validation? Do you mind providing a GitHub repository with a repro for this issue?\r\n\r\nto confirm, the provider doesn\u0027t change the behaviour of the token validation (I don\u0027t believe this is possible). The issue is caused by the claims the auth provider adds (and does not add) to the user.\r\n\r\nHere\u0027s a reproduction, with toggle: https://github.com/lukecolbourn/antiforgery-iat-claim-example/blob/010f5a23c6c8651b1c163c1f8aa252dde9f1351a/Program.cs#L59\r\n\r\nSubmit the form to see token validation failure when iat claim has changed, and there is no sub claim.\r\n\r\nThanks 👍",
                                           "updatedAt":  "2023-01-25T03:00:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85ToKy1",
                                           "createdAt":  "2023-01-25T03:10:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lukecolbourn",
                                           "body":  "\u003e Have you considered middleware that runs post-authentication and rewrites the ClaimsPrincipal to include a sub, nameidentifier or upn claim to match the myUniqueUserClaim?\r\n\r\nNice, that would sort it. I would definitely forget why that middleware exists and delete it in a couple of years though 😜\r\nWe\u0027re getting the auth service admins to add/remove claims, saves us a few lines of code",
                                           "updatedAt":  "2023-01-25T03:10:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85UHYQo",
                                           "createdAt":  "2023-01-31T23:37:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC3ppxg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "axunonb",
                                                                               "createdAt":  "2023-03-12T12:58:23Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "captainsafia",
                                           "body":  "Triage: This API would be a nice to have given more interest in it. Anyone interested in seeing this can give the issue a thumbs up to help us prioritize.",
                                           "updatedAt":  "2023-01-31T23:37:53Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "Anti Forgery Claim Extractor: option to define claim name",
        "labels":  [
                       "area-auth",
                       "api-suggestion"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/46743",
        "createdAt":  "2023-02-19T10:31:12Z",
        "number":  46743,
        "author":  "zimberzimber",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODFDRqg==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "erjiang",
                                            "createdAt":  "2024-07-04T22:22:04Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "tborodii",
                                            "createdAt":  "2025-06-28T09:14:47Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2024-04-01T17:39:08Z",
        "body":  "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Describe the bug\r\n\r\nASP.NET Core has an issue with the Google authentication library on startup, where it seems to run into an endless loop which results in the following stack repeating itself until eventually exiting with error coded `-1073741819`:\r\n```\r\nat System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Microsoft.AspNetCore.Authentication.AuthenticationService+\u003cAuthenticateAsync\u003ed__14, Microsoft.AspNetCore.Authentication.Core, Version=7.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]](\u003cAuthenticateAsync\u003ed__14 ByRef)\r\nat System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Start[[Microsoft.AspNetCore.Authentication.AuthenticationService+\u003cAuthenticateAsync\u003ed__14, Microsoft.AspNetCore.Authentication.Core, Version=7.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]](\u003cAuthenticateAsync\u003ed__14 ByRef)\r\nat Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(Microsoft.AspNetCore.Http.HttpContext, System.String)\r\nat Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1+\u003cHandleAuthenticateAsync\u003ed__13[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MoveNext()\r\nat System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1+\u003cHandleAuthenticateAsync\u003ed__13[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], Microsoft.AspNetCore.Authentication, Version=7.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]](\u003cHandleAuthenticateAsync\u003ed__13\u003cSystem.__Canon\u003e ByRef)\r\nat System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Start[[Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1+\u003cHandleAuthenticateAsync\u003ed__13[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], Microsoft.AspNetCore.Authentication, Version=7.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]](\u003cHandleAuthenticateAsync\u003ed__13\u003cSystem.__Canon\u003e ByRef)\r\nat Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].HandleAuthenticateAsync()\r\nat Microsoft.AspNetCore.Authentication.AuthenticationHandler`1+\u003cAuthenticateAsync\u003ed__48[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MoveNext()\r\nat System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Microsoft.AspNetCore.Authentication.AuthenticationHandler`1+\u003cAuthenticateAsync\u003ed__48[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], Microsoft.AspNetCore.Authentication, Version=7.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]](\u003cAuthenticateAsync\u003ed__48\u003cSystem.__Canon\u003e ByRef)\r\nat System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Start[[Microsoft.AspNetCore.Authentication.AuthenticationHandler`1+\u003cAuthenticateAsync\u003ed__48[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], Microsoft.AspNetCore.Authentication, Version=7.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]](\u003cAuthenticateAsync\u003ed__48\u003cSystem.__Canon\u003e ByRef)\r\nat Microsoft.AspNetCore.Authentication.AuthenticationHandler`1[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].AuthenticateAsync()\r\nat Microsoft.AspNetCore.Authentication.AuthenticationService+\u003cAuthenticateAsync\u003ed__14.MoveNext()\r\n```\r\n\r\nThe issue is tied to the **projects** framework, not the libraries, as setting the libraries version to below 7.x but keeping the projects framework at 7 cause the issue still.\r\n\r\n### Expected Behavior\r\n\r\nA raised exception if an error has occurred, otherwise not crashing.\r\n\r\n### Steps To Reproduce\r\n\r\n- Create a new ASP.NET Core Web App project, with its framework set to .NET 7.0 (can create the project with a different version and change it to 7.0 later)\r\n- Install `Microsoft.AspNetCore.Authentication.Google` NuGet package\r\n- Configure authentication to use the Google provider, with valid `ClientId` and `ClientSecret` (not necessarily connected to an actual client, the value just needs to be valid)\r\n- Run the project\r\n\r\n**Sample project repository: [\\[Link\\]](https://github.com/zimberzimber/asp.net-core-7.0-google-auth-bug/tree/main)**\r\n\r\n### Exceptions (if any)\r\n\r\nNone, it simply crashes with the error code `-1073741819`\r\n\r\n### .NET Version\r\n\r\n7.0.103\r\n\r\n### Anything else?\r\n\r\n# `dotnet --info`\r\n```\r\n.NET SDK:\r\n\tVersion:   7.0.103\r\n\tCommit:    276c71d299\r\n\r\nRuntime Environment:\r\n\tOS Name:     Windows\r\n\tOS Version:  10.0.19043\r\n\tOS Platform: Windows\r\n\tRID:         win10-x64\r\n\tBase Path:   C:\\Program Files\\dotnet\\sdk\\7.0.103\\\r\n\r\nHost:\r\n\tVersion:      7.0.3\r\n\tArchitecture: x64\r\n\tCommit:       0a2bda10e8\r\n\r\n.NET SDKs installed:\r\n\t3.0.103 [C:\\Program Files\\dotnet\\sdk]\r\n\t3.1.422 [C:\\Program Files\\dotnet\\sdk]\r\n\t7.0.103 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n\tMicrosoft.AspNetCore.App 3.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\tMicrosoft.AspNetCore.App 3.1.28 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\tMicrosoft.AspNetCore.App 6.0.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\tMicrosoft.AspNetCore.App 7.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\tMicrosoft.NETCore.App 3.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\tMicrosoft.NETCore.App 3.1.28 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\tMicrosoft.NETCore.App 6.0.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\tMicrosoft.NETCore.App 7.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\tMicrosoft.WindowsDesktop.App 3.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\tMicrosoft.WindowsDesktop.App 3.1.28 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\tMicrosoft.WindowsDesktop.App 6.0.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\tMicrosoft.WindowsDesktop.App 7.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nOther architectures found:\r\n\tx86   [C:\\Program Files (x86)\\dotnet]\r\n\t\tregistered at [HKLM\\SOFTWARE\\dotnet\\Setup\\InstalledVersions\\x86\\InstallLocation]\r\n\r\nEnvironment variables:\r\n\tNot set\r\n\r\nglobal.json file:\r\n\tNot found\r\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOeQLG4w==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85Vl_BB",
                                           "createdAt":  "2023-02-19T15:41:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "Normally, you would use social authentication with cookies. What\u0027s your intention only having a single authentication scheme?",
                                           "updatedAt":  "2023-02-19T15:41:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85VoNMY",
                                           "createdAt":  "2023-02-20T09:16:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODNqeuA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "yohanespradono",
                                                                               "createdAt":  "2023-02-21T18:05:22Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "lazyav",
                                                                               "createdAt":  "2023-11-27T09:49:01Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "zimberzimber",
                                           "body":  "\u003e Normally, you would use social authentication with cookies. What\u0027s your intention only having a single authentication scheme?\r\n\r\nI was learning the interaction with Googles authentication alongside a group of people, many of who ran into this issue.",
                                           "updatedAt":  "2023-02-20T09:16:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Vw1ur",
                                           "createdAt":  "2023-02-21T17:39:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODfXRSg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "yohanespradono",
                                                                               "createdAt":  "2023-02-21T18:07:46Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "zimberzimber",
                                                                               "createdAt":  "2023-02-22T16:57:07Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "farukcan",
                                                                               "createdAt":  "2023-11-07T16:27:56Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "lazyav",
                                                                               "createdAt":  "2023-11-27T09:57:22Z"
                                                                           },
                                                                           {
                                                                               "content":  "ROCKET",
                                                                               "user":  "LmTrieu",
                                                                               "createdAt":  "2024-04-24T09:28:38Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  5
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Add the following code snippets for cookie auth:\r\nhttps://learn.microsoft.com/en-us/aspnet/core/security/authentication/cookie?view=aspnetcore-7.0\r\n\r\nOur Google auth docs don\u0027t clearly state these are required when you\u0027re not using the Identity framework.\r\nhttps://learn.microsoft.com/en-us/aspnet/core/security/authentication/social/google-logins?view=aspnetcore-7.0",
                                           "updatedAt":  "2023-02-21T17:39:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85V2zWA",
                                           "createdAt":  "2023-02-22T17:01:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "zimberzimber",
                                           "body":  "Thank you, it has solved the crashing.\r\n\r\nHowever, the primary issue here is that the program simply crashes instead of raising an exception to point the developer in the right direction.",
                                           "updatedAt":  "2023-02-22T17:01:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85V3jGZ",
                                           "createdAt":  "2023-02-22T18:55:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC2lGwQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "zimberzimber",
                                                                               "createdAt":  "2023-02-22T20:07:14Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Hmm, -1073741819 is 0xC0000005, or Access Violation. It shouldn\u0027t do that... we\u0027ll investigate.",
                                           "updatedAt":  "2023-02-22T18:55:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85V-D2j",
                                           "createdAt":  "2023-02-23T19:43:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "To learn more about what this message means, what to expect next, and how this issue will be handled you can read our [Triage Process document](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).\nWe\u0027re moving this issue to the .NET 8 Planning milestone for future evaluation / consideration. Because it\u0027s not immediately obvious what is causing this behavior, we would like to keep this around to collect more feedback, which can later help us determine how to handle this. We will re-evaluate this issue, during our next planning meeting(s).\nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact work.",
                                           "updatedAt":  "2023-02-23T19:43:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85te23V",
                                           "createdAt":  "2023-12-01T21:31:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mkArtakMSFT",
                                           "body":  "\u003e Add the following code snippets for cookie auth: https://learn.microsoft.com/en-us/aspnet/core/security/authentication/cookie?view=aspnetcore-7.0\r\n\u003e \r\n\u003e Our Google auth docs don\u0027t clearly state these are required when you\u0027re not using the Identity framework. https://learn.microsoft.com/en-us/aspnet/core/security/authentication/social/google-logins?view=aspnetcore-7.0\r\n\r\n@Rick-Anderson can you guys please address this gap? Thanks!",
                                           "updatedAt":  "2023-12-01T21:31:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85te3Fi",
                                           "createdAt":  "2023-12-01T21:32:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mkArtakMSFT",
                                           "body":  "As for the crashing aspect, given that we didn\u0027t get more reports of this I\u0027m going to backlog this for now to accumulate more feedback.",
                                           "updatedAt":  "2023-12-01T21:32:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85te3Jg",
                                           "createdAt":  "2023-12-01T21:32:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2023-12-01T21:32:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde855Asbj",
                                           "createdAt":  "2024-04-01T17:39:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ignj",
                                           "body":  "I\u0027m having the same problem with Facebook\u0027s authentication library in .NET v9.0.100-preview.2.24157.14",
                                           "updatedAt":  "2024-04-01T17:39:07Z"
                                       }
                                   ],
                         "totalCount":  10
                     },
        "title":  "(.NET 7.0) Infinite loop with Google authentication library",
        "labels":  [
                       "bug",
                       "investigate",
                       "Docs",
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/46905",
        "createdAt":  "2023-02-27T13:30:24Z",
        "number":  46905,
        "author":  "kliszaq",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-02-13T01:41:26Z",
        "body":  "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nRepro: \r\nServer is Windows 10 Enterprise 22H2 with .NET 6 (6.0.14)\r\n\r\nCreate simple WebApp with the Windows Authentication hosted on the Kestrel.\r\nSetup same as in the https://github.com/dotnet/aspnetcore/issues/37556.\r\nSetspn set, Kestrel Running on my domain user account on a server.\r\n\r\nI VPN to the remote server.\r\n\r\n**Remote server:**\r\nBrowser: Edge version 110.0.1587.57 64bit.\r\nInternet options set to trust http://computername and http://computername.mydomain.com and \"Automatic logon only in Intranet zone\"\r\nWhen browser is reopened: \r\n- For addresses: 127.0.0.1 and 192.168.XX.YY then I need to provide the credentials\r\n- By computer domain name or FQDN: http://computername and http://computername.mydomain.com **I do not** need to provide the credentials.\r\nIn the application welcome screen I see for all cases \"NTLM\" for {@Model.User.Identity?.AuthenticationType}\r\n\r\n**Local machine (or similarly co-worker\u0027s machine):**\r\nBrowser: Edge version: 110.0.1587.56 64bit\r\nInternet options set as in the server.\r\nDomain account credentials added to the Windows Credentials Manager.\r\nFor all addresses:\r\n- 192.168.XX.YY\r\n- http://computername\r\n- http://computername.mydomain.com\r\nI am forced to provide the credentials each time I reopen the browser. \r\nWelcome page shows \"NTLM\" in all the mentioned cases.\n\n### Expected Behavior\n\nCredentials prompt does not appear for trusted intranet sites.\n\n### Steps To Reproduce\n\n* Create the app from the template\r\n* Execute setspn on domain account\r\n* set internet options\r\n* add credentials to the windows credentials mnanager\r\n* run the app in Kestrel\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n6.0.14\n\n### Anything else?\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHObXtjDA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85WX3cY",
                                           "createdAt":  "2023-02-28T23:47:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "I\u0027m not entirely sure Edge obeys internet zones, that was an IE feature. \r\n\r\nCan you reproduce this if the app is under IIS? That would help discover if it\u0027s a kestrel problem, or an Edge problem?",
                                           "updatedAt":  "2023-02-28T23:47:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85WX3fP",
                                           "createdAt":  "2023-02-28T23:47:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Hi @kliszaq. We have added the \"Needs: Author Feedback\" label to this issue, which indicates that we have an open question for you before we can take further action. This issue will be closed automatically in 7 days if we do not hear back from you by then - please feel free to re-open it if you come back to this issue after that time.",
                                           "updatedAt":  "2023-02-28T23:47:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85WvWRv",
                                           "createdAt":  "2023-03-06T00:00:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "This issue has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **4 days**. It will be closed if no further activity occurs **within 3 days of this comment**. If it *is* closed, feel free to comment when you are able to provide the additional information and we will re-investigate.\n\nSee [our Issue Management Policies](https://aka.ms/aspnet/issue-policies) for more information.",
                                           "updatedAt":  "2023-03-06T00:00:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Wwuv3",
                                           "createdAt":  "2023-03-06T07:40:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kliszaq",
                                           "body":  "@blowdart \r\nI set up the app on the IIS on remote. When Edge is reopened and accessed from both remote and local machine, for the\r\n* http://computername/\r\n* http://computername.mydomain.com/\r\nautomatically logs me in with the authentication type \"Negotiate\".\r\nWhen accessing by 192.168.XX.YY then I need to provide the credentials each time.\r\n\r\nIt looks like it is something wrong on the Kestrel side than on the Edge as IIS behaves correct.",
                                           "updatedAt":  "2023-03-06T07:41:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Wzu-w",
                                           "createdAt":  "2023-03-06T15:58:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "By IP address it always makes sense for the prompt, as local intranet is decided based on host name. \r\n\r\nI notice that you said that on the coworkers machine \"Domain account credentials added to the Windows Credentials Manager.\"\r\n\r\nSo the coworker isn\u0027t logged on to the domain at all? Whereas you are?",
                                           "updatedAt":  "2023-03-06T15:58:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85WzvJP",
                                           "createdAt":  "2023-03-06T15:58:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Hi @kliszaq. We have added the \"Needs: Author Feedback\" label to this issue, which indicates that we have an open question for you before we can take further action. This issue will be closed automatically in 7 days if we do not hear back from you by then - please feel free to re-open it if you come back to this issue after that time.",
                                           "updatedAt":  "2023-03-06T15:58:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85W5wUL",
                                           "createdAt":  "2023-03-07T11:09:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kliszaq",
                                           "body":  "\u003e By IP address it always makes sense for the prompt, as local intranet is decided based on host name.\r\n\u003e \r\nNo doubt.\r\n\r\n\u003e I notice that you said that on the coworkers machine \"Domain account credentials added to the Windows Credentials Manager.\"\r\n\u003e \r\n\u003e So the coworker isn\u0027t logged on to the domain at all? Whereas you are?\r\n\r\nWe both VPN to te remote server/desktop and work there. Co-worker is logged the same way as I do. The test case was that he is using his account as the Kestrel is running on my domain account (user mode for Kestrel). Coworker was logged to the domain. ",
                                           "updatedAt":  "2023-03-07T11:09:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85XDPUg",
                                           "createdAt":  "2023-03-08T16:34:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "Hmm if the co-worker is logged into the domain. and using the fqdn, I would expect it to work, falling back to NTLM wouldn\u0027t be expected either (except when addressing via IP which will always fall back to NTLM, which is why you shouldn\u0027t do it)\r\n\r\nOK, @captainsafia which dev would this fall to?\r\n\r\n",
                                           "updatedAt":  "2023-03-08T16:34:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85XGW_Z",
                                           "createdAt":  "2023-03-09T05:05:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "captainsafia",
                                           "body":  "\u003e OK, @captainsafia which dev would this fall to?\r\n\r\nPerhaps @halter73 for Kestrel + auth insights.\r\n\r\nRumor has it that @Tratcher also has some knowledge in the space.",
                                           "updatedAt":  "2023-03-09T05:05:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85YBVGp",
                                           "createdAt":  "2023-03-20T18:34:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Can you clarify if IIS was set up using user mode or kernel mode auth?\r\n\r\nIn all of these cases was the SPN added to the machine account or to your user account? It would need to be on your user account since you\u0027re the one running Kestrel in user mode. For IIS, if you use kernel mode then the SPN goes on the machine account, otherwise it goes on the worker pool account.",
                                           "updatedAt":  "2023-03-20T18:34:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85YD33F",
                                           "createdAt":  "2023-03-21T08:01:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kliszaq",
                                           "body":  "Hi @Tratcher,\r\nas I stated in the original repro, `setspn` was set following instructions from this [article section](https://learn.microsoft.com/en-us/aspnet/core/security/authentication/windowsauth?view=aspnetcore-7.0\u0026tabs=visual-studio#windows-environment-configuration). In one word: the SPN was added to my user account.\r\n\r\n\u003eFor IIS, if you use kernel mode then the SPN goes on the machine account, otherwise it goes on the worker pool account.\r\n\r\nIt looks like the prompt works fine with the IIS. Why do you focus on the IIS as the IMHO the problem is with the Kestrel? \r\n@blowdart asked for IIS repro to state if it is a general problem or Kestrel specific. I am not interested in the IIS but Kestrel only. Let\u0027s focus on it please.\r\n\r\n",
                                           "updatedAt":  "2023-03-22T12:23:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Z3A8u",
                                           "createdAt":  "2023-04-13T20:50:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Triage: I won\u0027t be able to look into this further, un-assigning.",
                                           "updatedAt":  "2023-04-13T20:50:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85a0gET",
                                           "createdAt":  "2023-04-26T16:27:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `.NET 8 Planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2023-04-26T16:27:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85te2MM",
                                           "createdAt":  "2023-12-01T21:29:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2023-12-01T21:29:01Z"
                                       }
                                   ],
                         "totalCount":  14
                     },
        "title":  "Kestrel windows authentication prompts for the credentials",
        "labels":  [
                       "area-auth",
                       "needs-further-triage"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/47054",
        "createdAt":  "2023-03-06T16:57:57Z",
        "number":  47054,
        "author":  "jamesgurung",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC1G5_A==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "AnatoliiRabchevskyi",
                                            "createdAt":  "2024-01-11T12:08:45Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2025-08-22T20:12:17Z",
        "body":  "The following web application correctly shows a Google sign in page when it is built with `net7.0` and version `7.0.3` of `Microsoft.AspNetCore.Authentication.Google`. Note that a `prompt` query parameter is added to the authorization endpoint to force an account selection dialog to appear, rather than automatically signing in with the current Google account.\r\n\r\nIn `net8.0` (Preview 1), the same app shows an error page on accounts.google.com:\r\n\r\n\u003e **Access blocked: authorisation error**\r\n\u003e OAuth 2 parameters can only have a single value: prompt\r\n\u003e Error 400: invalid_request\r\n\r\nThis is a breaking change, but I couldn\u0027t find it on the [Breaking Changes in .NET 8](https://learn.microsoft.com/en-us/dotnet/core/compatibility/8.0) page. It might be enough of an edge case that it doesn\u0027t matter, but I thought I\u0027d raise an issue just in case.\r\n\r\n**WebApplication1.csproj**\r\n```xml\r\n\u003cProject Sdk=\"Microsoft.NET.Sdk.Web\"\u003e\r\n  \u003cPropertyGroup\u003e\r\n    \u003cTargetFramework\u003enet8.0\u003c/TargetFramework\u003e\r\n    \u003cImplicitUsings\u003eenable\u003c/ImplicitUsings\u003e\r\n  \u003c/PropertyGroup\u003e\r\n  \u003cItemGroup\u003e\r\n    \u003cPackageReference Include=\"Microsoft.AspNetCore.Authentication.Google\" Version=\"8.0.0-preview.1.23112.2\" /\u003e\r\n  \u003c/ItemGroup\u003e\r\n\u003c/Project\u003e\r\n```\r\n\r\n**Program.cs**\r\n```c#\r\nusing Microsoft.AspNetCore.Authentication.Cookies;\r\nusing Microsoft.AspNetCore.Authentication.Google;\r\n\r\nvar builder = WebApplication.CreateBuilder(args);\r\nbuilder.Services\r\n  .AddAuthentication(o =\u003e {\r\n    o.DefaultScheme = CookieAuthenticationDefaults.AuthenticationScheme;\r\n    o.DefaultChallengeScheme = GoogleDefaults.AuthenticationScheme;\r\n  })\r\n  .AddCookie()\r\n  .AddGoogle(o =\u003e\r\n  {\r\n    o.ClientId = builder.Configuration[\"Google:ClientId\"];\r\n    o.ClientSecret = builder.Configuration[\"Google:ClientSecret\"];\r\n    o.AuthorizationEndpoint += \"?prompt=select_account\"; // \u003c-- Broken in .NET 8\r\n  });\r\nvar app = builder.Build();\r\napp.UseAuthentication();\r\napp.MapGet(\"/\", () =\u003e Results.Challenge());\r\napp.Run();\r\n```\r\n\r\n**dotnet --version**\r\n\u003e 8.0.100-preview.1.23115.2\r\n\r\n**Summary Comment** : https://github.com/dotnet/aspnetcore/issues/47054#issuecomment-1786192809",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOqkYuIA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85XjaUn",
                                           "createdAt":  "2023-03-14T22:02:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "What did the resulting url look like? It sounds like the options callback is being invoked twice for the same instance which would be bad. There was a bug in lazy options caching like that recently.",
                                           "updatedAt":  "2023-03-14T22:02:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85XjpPT",
                                           "createdAt":  "2023-03-14T22:38:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jamesgurung",
                                           "body":  "@Tratcher The URL is:\r\n\r\n\u003e https://accounts.google.com/o/oauth2/v2/auth?prompt=select_account\u0026prompt=select_account\u0026client_id=REDACTED.apps.googleusercontent.com\u0026scope=openid%20profile%20email\u0026response_type=code\u0026redirect_uri=https%3A%2F%2Flocalhost%3A5001%2Fsignin-google\u0026code_challenge=REDACTED\u0026code_challenge_method=S256\u0026state=REDACTED",
                                           "updatedAt":  "2023-03-14T22:38:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Y2S_y",
                                           "createdAt":  "2023-03-30T16:57:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mkArtakMSFT",
                                           "body":  "@Tratcher do you think this is a bug we\u0027ve introduced that we need to address?",
                                           "updatedAt":  "2023-03-30T16:57:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85ZHKsr",
                                           "createdAt":  "2023-04-03T22:08:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "@mkArtakMSFT yes, this needs to be investigated.",
                                           "updatedAt":  "2023-04-03T22:08:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85oyapz",
                                           "createdAt":  "2023-10-11T16:16:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "To learn more about what this message means, what to expect next, and how this issue will be handled you can read our [Triage Process document](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).\nWe\u0027re moving this issue to the .NET 9 Planning milestone for future evaluation / consideration. Because it\u0027s not immediately obvious what is causing this behavior, we would like to keep this around to collect more feedback, which can later help us determine how to handle this. We will re-evaluate this issue, during our next planning meeting(s).\nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact work.",
                                           "updatedAt":  "2023-10-11T16:16:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85p5ouo",
                                           "createdAt":  "2023-10-24T08:01:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "PowerSaka",
                                           "body":  "The last line of BuildChallengeUrl() function causes duplicate parameters:\r\n?prompt=select_account\u0026prompt=select_account",
                                           "updatedAt":  "2023-10-24T08:01:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85qdyOp",
                                           "createdAt":  "2023-10-30T23:17:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODhyslg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jamesgurung",
                                                                               "createdAt":  "2023-10-30T23:47:17Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "PowerSaka",
                                                                               "createdAt":  "2023-10-31T04:02:48Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "halter73",
                                                                               "createdAt":  "2023-10-31T19:16:09Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "keatkeat87",
                                                                               "createdAt":  "2023-11-11T23:00:32Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "noctis0430",
                                                                               "createdAt":  "2024-04-13T03:32:58Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ergec",
                                                                               "createdAt":  "2024-05-14T18:02:20Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  6
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Found the regression: https://github.com/dotnet/aspnetcore/commit/afb6ec434fe319676d290b778e85468261c2bc7f#diff-dbfbf20eedf9c001d9d7848400c42e852216354b81f651f5bc82dbf42632475cR63 (thanks @PowerSaka)\r\n\r\nTo enable PKCE in 8.0 the Google auth handler was changed to call `base.BuildChallengeUrl`,\r\n`var queryStrings = QueryHelpers.ParseQuery(new Uri(base.BuildChallengeUrl(properties, redirectUri)).Query);`\r\n\r\nwhich calls \r\nhttps://github.com/dotnet/aspnetcore/blob/c15938bb5f23fd3ad2374bde554a6b492a36ecde/src/Security/Authentication/OAuth/src/OAuthHandler.cs#L331\r\n\r\nThis results in a query param list that contains the original parameters from AuthorizationEndpoint. Once google adds it\u0027s extra properties to the list it calls this again:\r\nhttps://github.com/dotnet/aspnetcore/blob/c15938bb5f23fd3ad2374bde554a6b492a36ecde/src/Security/Authentication/Google/src/GoogleHandler.cs#L84\r\n\r\npulling the original parameters from the AuthorizationEndpoint again, causing duplication.\r\n\r\nWorkaround:\r\n- Add the parameter in the RedirectToAuthorizationEndpoint event.\r\n```diff  \r\n  .AddGoogle(o =\u003e\r\n  {\r\n    o.ClientId = builder.Configuration[\"Google:ClientId\"];\r\n    o.ClientSecret = builder.Configuration[\"Google:ClientSecret\"];\r\n-    o.AuthorizationEndpoint += \"?prompt=select_account\"; // \u003c-- Broken in .NET 8\r\n+    o.Events = new OAuthEvents()\r\n+    {\r\n+        OnRedirectToAuthorizationEndpoint = c =\u003e\r\n+        {\r\n+          c.RedirectUri += \"\u0026prompt=consent\";\r\n+          c.Response.Redirect(c.RedirectUri);\r\n+          return Task.CompletedTask;\r\n+        }\r\n+    };\r\n  });\r\n```\r\n\r\nPossible fix: Since we know that `base.BuildChallengeUrl` already includes the original query params from AuthorizationEndpoint, drop them from the AuthorizationEndpoint before adding the final set of query params here. \r\nhttps://github.com/dotnet/aspnetcore/blob/c15938bb5f23fd3ad2374bde554a6b492a36ecde/src/Security/Authentication/Google/src/GoogleHandler.cs#L84\r\n\r\nNote this is more complex than what other handlers support because they only support append, not per-challenge replacement of base parameters like scope.\r\nhttps://github.com/dotnet/aspnetcore/blob/c15938bb5f23fd3ad2374bde554a6b492a36ecde/src/Security/Authentication/Google/src/GoogleHandler.cs#L74\r\n\r\nAlso, adding `GoogleOptions.PromptParamter` like we have for other parameters would make direct manipulation of the AuthorizationEndpoint less necessary. Also consider ApprovalPrompt.",
                                           "updatedAt":  "2023-10-30T23:34:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85qd2gt",
                                           "createdAt":  "2023-10-30T23:39:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODLbNWg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "EYES",
                                                                               "user":  "martincostello",
                                                                               "createdAt":  "2023-10-31T06:57:30Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "@kevinchalet @martincostello I see a similar issue here:\r\nhttps://github.com/aspnet-contrib/AspNet.Security.OAuth.Providers/blob/163a006c3b3ec38a82da4cb0949c209ae4e04fd3/src/AspNet.Security.OAuth.VisualStudio/VisualStudioAuthenticationHandler.cs#L90-L100",
                                           "updatedAt":  "2023-10-30T23:39:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85qgM4t",
                                           "createdAt":  "2023-10-31T09:26:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODLmLAw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "kevinchalet",
                                                                               "createdAt":  "2023-11-01T20:18:33Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "martincostello",
                                           "body":  "Thanks - I\u0027ll take a look at this some time in the next week to resolve that for our v8 release.",
                                           "updatedAt":  "2023-10-31T09:26:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85qq1AJ",
                                           "createdAt":  "2023-11-01T20:15:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "\u003e @kevinchalet @martincostello I see a similar issue here:\r\n\u003e https://github.com/aspnet-contrib/AspNet.Security.OAuth.Providers/blob/163a006c3b3ec38a82da4cb0949c209ae4e04fd3/src/AspNet.Security.OAuth.VisualStudio/VisualStudioAuthenticationHandler.cs#L90-L100\r\n\r\nThanks for letting us know. Did you see any other provider that may be affected?\r\n\r\nIf it\u0027s only VSO, then it\u0027s probably not a huge deal as it\u0027s almost a legacy thing: pretty much all APIs that use this provider can now be used with Azure AD directly (and Azure AD offers a much more OIDC-compliant implementation).",
                                           "updatedAt":  "2023-11-01T20:15:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85qq1YI",
                                           "createdAt":  "2023-11-01T20:16:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODLmMnQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "kevinchalet",
                                                                               "createdAt":  "2023-11-01T20:23:50Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "kevinchalet",
                                                                               "createdAt":  "2023-11-01T20:23:54Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "I didn\u0027t see any other providers with issues, they all append rather than try to replace parameters.",
                                           "updatedAt":  "2023-11-01T20:16:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85rMHur",
                                           "createdAt":  "2023-11-07T11:41:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODL_wOw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "kevinchalet",
                                                                               "createdAt":  "2023-11-07T13:38:12Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "kevinchalet",
                                                                               "createdAt":  "2023-11-07T13:38:13Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "martincostello",
                                           "body":  "Looking at the [docs](https://learn.microsoft.com/azure/devops/integrate/get-started/authentication/azure-devops-oauth?#2-authorize-your-app), I\u0027m not sure if we really need to do anything in our VisualStudioOnline provider.\r\n\r\nIt seems that the only value recognised for `response_type` is `Assertion`, so if you were overriding it in `AuthorizationEndpoint` you would be either setting to to the same value we set for you already, so it would be redundant/duplicated, or you\u0027d be setting it to something that isn\u0027t supported.\r\n\r\nI can\u0027t see a use case for someone genuinely needing to set it themselves and getting the duplication issue, unless I\u0027m misunderstanding something about how the original issue applies in our case.\r\n",
                                           "updatedAt":  "2023-11-07T11:41:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85rPUzU",
                                           "createdAt":  "2023-11-07T16:45:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "@martincostello if someone added _any_ query parameter to AuthorizationEndpoint it would get duplicated by the current code because of the pattern used to allow replacing an existing parameter. If nobody ever adds to AuthorizationEndpoint then you might never notice.",
                                           "updatedAt":  "2023-11-07T16:45:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85rPoHY",
                                           "createdAt":  "2023-11-07T17:08:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "martincostello",
                                           "body":  "Ah right, I see. Thanks - I\u0027ll take another look tomorrow.",
                                           "updatedAt":  "2023-11-07T17:08:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde855IrQ6",
                                           "createdAt":  "2024-04-02T15:10:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "knopa",
                                           "body":  "Any update on this?",
                                           "updatedAt":  "2024-04-02T15:10:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85-qEas",
                                           "createdAt":  "2024-05-22T14:32:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEL4g0g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "danirzv",
                                                                               "createdAt":  "2025-03-28T12:13:48Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "MattyLeslie",
                                           "body":  "Should this be closed after the merged fixes ?",
                                           "updatedAt":  "2024-05-22T14:32:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86qIpnD",
                                           "createdAt":  "2025-05-06T12:28:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "imparikshith",
                                           "body":  "Is anybody contributing to this story, if not I would like to contribute.",
                                           "updatedAt":  "2025-05-06T12:28:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86qRi4g",
                                           "createdAt":  "2025-05-07T01:03:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "halter73",
                                           "body":  "I\u0027d hold off @imparikshith. We might stop shipping the Microsoft.AspnetCore.Authentication.Google package altogether. See #61817 for more details.\n\n\nInstead, I\u0027d recommend using the official [official Google.Apis.Auth.AspNetCore3 NuGet package](https://www.nuget.org/packages/Google.Apis.Auth.AspNetCore3/) from Google which has a lot more functionality. You can find documentation for it at https://developers.google.com/api-client-library/dotnet/guide/aaa_oauth#web-applications-asp.net-core-3. It mentions \"ASP.NET Core 3\", but it works with .NET 6.0+ as noted on their GitHub README at https://github.com/googleapis/google-api-dotnet-client.",
                                           "updatedAt":  "2025-05-07T01:03:58Z"
                                       }
                                   ],
                         "totalCount":  18
                     },
        "title":  "Updating to .NET 8 Preview 1 breaks AuthorizationEndpoint query on AddGoogle",
        "labels":  [
                       "bug",
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/47059",
        "createdAt":  "2023-03-06T20:06:57Z",
        "number":  47059,
        "author":  "abriening",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC_5ZSQ==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "specialforest",
                                            "createdAt":  "2023-03-09T23:23:26Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "scharnyw",
                                            "createdAt":  "2023-07-27T14:45:51Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Kahbazi",
                                            "createdAt":  "2023-08-01T13:10:38Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "hwoodiwiss",
                                            "createdAt":  "2023-11-24T13:45:04Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "OronDF343",
                                            "createdAt":  "2025-03-10T14:34:18Z"
                                        }
                                    ],
                          "totalCount":  5
                      },
        "updatedAt":  "2024-02-13T01:40:52Z",
        "body":  "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nIf you set `AuthenticationSchemes` on a policy, the `PolicyEvaluator` will remove `AuthenticationProperties` on the `AuthenticateResult` and return only an `ExpiresUtc` property.\r\n\r\nhttps://github.com/dotnet/aspnetcore/blob/v7.0.3/src/Security/Authorization/Policy/src/PolicyEvaluator.cs#L36-L57\r\n\r\nThis makes `SaveToken` on `AddJwtBearer` useless if you try to retrieve/forward the `access_token` property for upstream requests.\r\n\r\nThis is with dotnet `6.0.405` but seems to still be present in .net7.\n\n### Expected Behavior\n\nI wouldn\u0027t expect authorization pipeline to mutate the `AuthenticateResult`. \r\n\r\nNot sure I understand the design of this well enough to know why the `ClaimsPrincipal` is a merged result from `SecurityHelper.MergeUserPrincipal`. But it might make sense to attempt to merge the `AuthenticationProperties` rather than remove them entirely.\n\n### Steps To Reproduce\n\nAdd a JwtHandler with `SaveToken = true`:\r\n```\r\nservices.AddAuthentication()\r\n            .AddJwtBearer(JwtBearerDefaults.AuthenticationScheme, opts =\u003e\r\n            {\r\n                opts.SaveToken = true;\r\n            });\r\n```\r\n\r\nCreate a policy with `AuthenticationSchemes` set, even if there are not multiple schemes defined:\r\n```\r\n            .AddAuthorization(options =\u003e\r\n            {\r\n                options.AddPolicy(\"some-policy\", policy =\u003e\r\n                {\r\n                    policy.AuthenticationSchemes.Add(JwtBearerDefaults.AuthenticationScheme);\r\n                    policy.RequireAuthenticatedUser();\r\n                });\r\n            });\r\n```\r\n\r\nTry to retrieve the saved tokens, in our case we\u0027re trying to use a delegating handler:\r\n```\r\ninternal class AccessTokenHttpMessageHandler : DelegatingHandler\r\n{\r\n    private readonly IHttpContextAccessor _contextAccessor;\r\n\r\n    public AccessTokenHttpMessageHandler(IHttpContextAccessor contextAccessor)\r\n    {\r\n        _contextAccessor = contextAccessor;\r\n    }\r\n\r\n    protected override async Task\u003cHttpResponseMessage\u003e SendAsync(\r\n        HttpRequestMessage request,\r\n        CancellationToken cancellationToken)\r\n    {\r\n        var feature = _contextAccessor.HttpContext.Features.Get\u003cIAuthenticateResultFeature\u003e();\r\n        var token = feature?.AuthenticateResult.Properties.GetTokenValue(\"access_token\");\r\n        if (!string.IsNullOrEmpty(token))\r\n        {\r\n            request.Headers.Authorization =\r\n                new AuthenticationHeaderValue(JwtBearerDefaults.AuthenticationScheme, token);\r\n        }\r\n        return await base.SendAsync(request, cancellationToken);\r\n    }\r\n}\r\n```\r\n\r\nThe `access_token` will never be available on the `IAuthenticateResultFeature` in the handler.\r\n\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n6.0.405\n\n### Anything else?\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHObNJEOw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85Y2SPF",
                                           "createdAt":  "2023-03-30T16:54:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2023-03-30T16:54:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85i9yjj",
                                           "createdAt":  "2023-08-01T13:44:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Kahbazi",
                                           "body":  "I hit this issue too. Is there any plan to fix this?",
                                           "updatedAt":  "2023-08-01T13:44:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85i-Stv",
                                           "createdAt":  "2023-08-01T14:56:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "scharnyw",
                                           "body":  "Seems to be a duplicate of #6518 (which dates back 4 years ago).\r\n\r\nBack then it was claimed that this is by-design. Not sure if MS has changed its mind.",
                                           "updatedAt":  "2023-08-01T14:56:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85s0kQ7",
                                           "createdAt":  "2023-11-24T14:02:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hwoodiwiss",
                                           "body":  "I\u0027ve also recently run into this. I think merging, maybe with the scheme prepended to the property keys, makes sense.\r\n\r\nOtherwise, I think this behavior should at least be better documented in XML docs on, for example, `JwtBearerOptions.SaveToken`, as this can cause the token to be unexpectedly unavailable in properties.",
                                           "updatedAt":  "2023-12-04T09:41:25Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "PolicyEvaluator mutates AuthenticateResult, deletes AuthenticationProperties when policy uses AuthenticationSchemes",
        "labels":  [
                       "enhancement",
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/47105",
        "createdAt":  "2023-03-09T02:41:12Z",
        "number":  47105,
        "author":  "janseris",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODDXs8A==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "wladimir-k-m",
                                            "createdAt":  "2024-02-29T15:37:34Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "fpuglap",
                                            "createdAt":  "2024-04-28T17:02:07Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "jurajpaska8",
                                            "createdAt":  "2024-05-30T13:15:02Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "dil-pkoppany",
                                            "createdAt":  "2024-06-28T06:41:32Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "thuraua",
                                            "createdAt":  "2024-08-27T06:38:08Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "stowellt",
                                            "createdAt":  "2024-08-29T15:57:08Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "dnyn92",
                                            "createdAt":  "2025-04-02T17:29:42Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "FranklinWhale",
                                            "createdAt":  "2025-06-06T15:05:32Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "janseris",
                                            "createdAt":  "2025-06-06T15:15:57Z"
                                        }
                                    ],
                          "totalCount":  9
                      },
        "updatedAt":  "2025-06-06T15:07:27Z",
        "body":  "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Describe the bug\r\n\r\nThe documentation https://learn.microsoft.com/en-us/aspnet/core/security/authorization/limitingidentitybyscheme?view=aspnetcore-7.0 says:\r\n\r\n\u003e The [[Authorize]](https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.authorization.authorizeattribute) attribute specifies the authentication scheme or schemes to use **regardless of whether a default is configured**.\r\n\r\n```\r\n[Authorize(AuthenticationSchemes=JwtBearerDefaults.AuthenticationScheme)]\r\npublic class Mixed2Controller : Controller\r\n{\r\n    public ContentResult Index() =\u003e Content(MyWidgets.GetMyContent());\r\n}\r\n```\r\n\r\n\u003e In the preceding code, only the handler with the \"Bearer\" scheme runs. Any cookie-based identities are ignored.\r\nNote: `JwtBearerDefaults.AuthenticationScheme` is the \"Bearer\" string constant here.\r\n\r\nThis is not true for me.\r\nWhen a default authentication scheme is registered, its authentication handler will be executed upon success of the \"only\" authentication scheme which is requested by the annotation `[Authorize(AuthenticationSchemes=JwtBearerDefaults.AuthenticationScheme)]` on the REST API controller or REST API controller method.\r\n\r\n\r\n\r\nRepro project:\r\nhttps://github.com/janseris/ASPNetCoreMultipleAuthentications\r\n\r\nHow to repro:\r\n1) run project\r\n2) in Swagger UI, click green Authorize button which enables you to enter HTTP Authorization header content to be passed in to the controller\r\n![image](https://user-images.githubusercontent.com/64279914/223900712-6ca0624c-043d-4057-b0d2-7bb38462d2ff.png)\r\n\r\n3) In the Session ID form, enter in value `SessionID 123` which passes the validation in the SessionID `AuthenticationHandler` and click green Authorize button to apply\r\n- this will add HTTP Authorization header value `SessionID 123` to all the HTTP requests executed via the Swagger UI\r\n![image](https://user-images.githubusercontent.com/64279914/223900638-18fb48fc-e31f-412b-bb25-51bf11413340.png)\r\n\r\n4) execute a controller method via Swagger UI by clicking the method, then Try it Out and then blue Execute button\r\n![image](https://user-images.githubusercontent.com/64279914/223900967-787e43d0-983d-4c90-9380-8ddd7e3cc0d9.png)\r\n\r\n5) see debug output in Visual Studio - you will see that the Session ID authentication handler executed and finished and then HTTP Basic authentication handler executed (**unexpected**) _which you can also observe in the browser because the a prompt for HTTP Basic authentication credentials will show as a result of failed HTTP Basic authentication (because the authentication/authorization header did not contain a valid HTTP Basic authentication value because it was `SessionID 123`_)\r\n![image](https://user-images.githubusercontent.com/64279914/223901101-725b937d-dab3-4e9a-a0f1-0efedb7a4db6.png)\r\n\r\n\r\n\r\n\r\n### Expected Behavior\r\n\r\nWhen `[Authorize(AuthenticationSchemes=JwtBearerDefaults.AuthenticationScheme)]` annotation is used, only that single AuthenticationHandler (registered under the authentication scheme name `JwtBearerDefaults.AuthenticationScheme` is executed).\r\n\r\nThat in my case would be the session ID authentication handler specified on the controller method:\r\n```\r\n\r\npublic class ItemsController : ControllerBase\r\n{\r\n    //only \"SessionID\" authentication schema handler should be executed.\r\n    [Authorize(AuthenticationSchemes = SessionIDAuthenticationHandler.AuthenticationSchemeName)] \r\n    [HttpGet(\"\", Name = \"GetAllItems\")]\r\n    [ProducesResponseType(typeof(IEnumerable\u003cItem\u003e), StatusCodes.Status200OK)]\r\n    public Task\u003cIEnumerable\u003cItem\u003e\u003e GetAll()\r\n    {\r\n        var items = new List\u003cItem\u003e\r\n        {\r\n            new Item\r\n            {\r\n                Name = \"item1\"\r\n            },\r\n            new Item\r\n            {\r\n                Name = \"item2\"\r\n            }\r\n        };\r\n        return Task.FromResult(items.AsEnumerable());\r\n    }\r\n}\r\n```\r\n\r\n### Steps To Reproduce\r\n\r\nRepro project:\r\nhttps://github.com/janseris/ASPNetCoreMultipleAuthentications\r\n\r\nRepro steps:\r\n1) run project\r\n2) in Swagger UI, click green Authorize button which enables you to enter HTTP Authorization header content to be passed in to the controller\r\n![image](https://user-images.githubusercontent.com/64279914/223900712-6ca0624c-043d-4057-b0d2-7bb38462d2ff.png)\r\n\r\n3) In the Session ID form, enter in value `SessionID 123` which passes the validation in the SessionID `AuthenticationHandler` and click green Authorize button to apply\r\n- this will add HTTP Authorization header value `SessionID 123` to all the HTTP requests executed via the Swagger UI\r\n![image](https://user-images.githubusercontent.com/64279914/223900638-18fb48fc-e31f-412b-bb25-51bf11413340.png)\r\n\r\n4) execute a controller method via Swagger UI by clicking the method, then Try it Out and then blue Execute button\r\n![image](https://user-images.githubusercontent.com/64279914/223900967-787e43d0-983d-4c90-9380-8ddd7e3cc0d9.png)\r\n\r\n5) see debug output in Visual Studio - you will see that the Session ID authentication handler executed and finished and the HTTP Basic authentication handler executed (**unexpected**) which you can also observe in the browser because the default browser dialog for HTTP Basic authentication will show\r\n![image](https://user-images.githubusercontent.com/64279914/223901101-725b937d-dab3-4e9a-a0f1-0efedb7a4db6.png)\r\n\r\n\r\n### Exceptions (if any)\r\n\r\n_No response_\r\n\r\n### .NET Version\r\n\r\n.NET SDK 7.0.200 commit 534117727b\r\n\r\n### Anything else?\r\n\r\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOr86smA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85Y2OsC",
                                           "createdAt":  "2023-03-30T16:43:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "To learn more about what this message means, what to expect next, and how this issue will be handled you can read our [Triage Process document](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).\nWe\u0027re moving this issue to the .NET 8 Planning milestone for future evaluation / consideration. Because it\u0027s not immediately obvious what is causing this behavior, we would like to keep this around to collect more feedback, which can later help us determine how to handle this. We will re-evaluate this issue, during our next planning meeting(s).\nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact work.",
                                           "updatedAt":  "2023-03-30T16:43:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Y28St",
                                           "createdAt":  "2023-03-30T19:10:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC47E8g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "janseris",
                                                                               "createdAt":  "2023-03-30T21:08:15Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "halter73",
                                           "body":  "It\u0027s true that the default scheme\u0027s `AuthenticateAsync`/`HandleAuthenticateAsync` methods get called by the authentication middleware regardless of what\u0027s set by `[Authorize(AuthenticationSchemes=...)]`. The docs should be clearer about this.\r\n\r\nHowever, this shouldn\u0027t be a problem if `AuthenticateAsync` does not mutate the response. You might have noticed than in your sample, the Controller action still gets run and writes the response body despite the basic auth handler setting the 401 response and `WWW-Authenticate` response header. That\u0027s because the failed default `AuthenticateResult` from `HttpBasicAuthenticationHandler` is being ignored by the authorization middleware since a specific scheme was specified.\r\n\r\nIf you delete all the calls to `AddAuthenticationFailedInfoToResponse` from `HttpBasicAuthenticationHandler.HandleAuthenticateAsync` and instead move it to `HandleChallengeAsync` everything should work because `HandleChallengeAsync` will only be called if the scheme is not overridden despite `HandleAuthenticateAsync` returning a failed `AuthenticateResult`.\r\n\r\n```csharp\r\nprotected override Task HandleChallengeAsync(AuthenticationProperties properties)\r\n{\r\n    Response.Headers.Add(HeaderNames.WWWAuthenticate, $\"{AuthenticationSchemeName} realm=\\\"{Realm}\\\"\" /* realm is special info added in HTTP Basic auth fail */);\r\n    return base.HandleChallengeAsync(properties);\r\n}\r\n```\r\n\r\nAlso, `UseAuthentication` should always be called before `UseAuthorization`. It might not matter if you specify the scheme using `[Authorize]` since the authorization middleware runs the authentication handler inline, but it matters in other scenarios.\r\n\r\nI think in .NET 7 we warn about this, but in .NET 7 you can also just omit those calls. `WebApplicationBuilder` will add both auth middlewares by default if you\u0027ve configured authentication. @captainsafia\r\n\r\n```\r\napp.UseAuthentication();\r\napp.UseAuthorization();\r\n```",
                                           "updatedAt":  "2023-03-30T19:10:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Y3lR1",
                                           "createdAt":  "2023-03-30T21:08:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janseris",
                                           "body":  "@halter73 thank you I will investigate that in the following days ",
                                           "updatedAt":  "2023-03-30T21:08:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85aT-SO",
                                           "createdAt":  "2023-04-19T18:29:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janseris",
                                           "body":  "\u003e It\u0027s true that the default scheme\u0027s AuthenticateAsync/HandleAuthenticateAsync methods get called by the authentication middleware regardless of what\u0027s set by [Authorize(AuthenticationSchemes=...)]. The docs should be clearer about this.\r\n\r\nThe docs say the exact contrary, so I think the framework is not working as intended because the behavior documented in docs makes perfect sense but is not followed by the framework.\r\nI don\u0027t want the default authentication handler executed when it doesn\u0027t need to. \r\nWhy should the default handler be executed when it\u0027s explicitly not supposed to be executed?\r\n\r\n\r\n\r\n\u003e However, this shouldn\u0027t be a problem if `AuthenticateAsync` does not mutate the response\r\n\r\nI have an issue that I check in database in authentication handler. This slows down the application when unwanted authentication handlers are executed and breaks the intended authentication flow.\r\n\r\nThe intended authentication and authorization mechanism is:\r\n1) Login endpoint - should run APIKey authentication handler. This assures only allowed application clients (e.g. only the latest mobile app version) can call the REST API.\r\n2) Public endpoint - can be called by anyone. Does not require APIKey authentication.\r\n3) Any other endpoint - requires authentication of the caller by APIKey and SessionID. \r\nSessionID identifies the user and is later used to load user rights and authorizes the request after authentication passes.\r\nAPIKey makes sure only selected application clients can call the endpoint (e.g. only latest mobile app version or only all mobile app versions etc.) as in case 1.",
                                           "updatedAt":  "2023-04-19T18:37:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85aUCvY",
                                           "createdAt":  "2023-04-19T18:44:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janseris",
                                           "body":  "\u003eAlso, UseAuthentication should always be called before UseAuthorization. It might not matter if you specify the scheme using [Authorize] since the authorization middleware runs the authentication handler inline, but it matters in other scenarios.\r\n\u003eI think in .NET 7 we warn about this\r\n\r\n\r\nI have changed target framework to .NET 7 and reopened VS and rebuilt the solution.\r\nI cannot see any warning in the IDE code editor or any compile-time warning/error.\r\n",
                                           "updatedAt":  "2023-04-19T18:47:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85ajSFJ",
                                           "createdAt":  "2023-04-23T23:51:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janseris",
                                           "body":  "@halter73 \r\nWhen HTTP Basic authentication handler (my custom) and Session ID Authentication handler (my custom) are regsitered and HTTP Basic Authentication handler\u0027s scheme name is set as default in `AddScheme()` and both are registered using `AddScheme()`, then if `[Authorize(AuthenticationSchemes = \"SessionID\")]` is written on method, the HTTP Basic authentication handler still gets executed (and succeds or fails in the background and that\u0027s ignored but it\u0027s executed while **is not supposed to be executed**).\r\n\r\n---\r\n\r\nThis has for example an unwanted side-effect that `WWW-Authenticate` HTTP header is unexpectedly added to the response (as it would have been set if HTTP Basic or any other authentication failed). \r\n\r\nExample: \r\nEndpoint is supposed to only support and check for SessionID authentication.\r\nThe user passes in SessionID in HTTP Authorize header and the authentication succeeds. Then the backend finds out that the user is unauthorized.\r\nIn this case, 403 is returned (OK) _with WWW-Authenticate header set from failed HTTP Basic authentication handler (unexpected)_. \r\n\r\n![image](https://user-images.githubusercontent.com/64279914/233873835-31589a8f-8e02-4444-b915-c8e11ef7d983.png)\r\n\r\nBtw. this is even more wrong because the purpose/semantics of sending `WWW-Authenticate` header in a HTTP response is to inform user about available actions to authenticate themselves. \r\nThat makes no sense here because:\r\n- the user was authenticated succesfully\r\n- the endpoint doesn\u0027t even support HTTP Basic authentication\r\n\r\n",
                                           "updatedAt":  "2023-04-24T00:08:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85ao4LN",
                                           "createdAt":  "2023-04-24T18:54:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "captainsafia",
                                           "body":  "\u003e I have changed target framework to .NET 7 and reopened VS and rebuilt the solution.\r\n\u003e I cannot see any warning in the IDE code editor or any compile-time warning/error.\r\n\r\nInteresting note. We added support for minimal APIs in the startup analyzers (like the auth-middleware ordering one [here](https://source.dot.net/#Microsoft.AspNetCore.Analyzers/UseAuthorizationAnalyzer.cs,2d0fe10ee4ab67db)) in .NET 6 but I\u0027m able to repro what you\u0027re seeing so there might be something going on behind the scenes.\r\n\r\nDo you mind filing a separate issue for the problem of not seeing the analyzer warnings?",
                                           "updatedAt":  "2023-04-24T18:54:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85apaTX",
                                           "createdAt":  "2023-04-24T20:48:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC6fnLQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "janseris",
                                                                               "createdAt":  "2023-04-24T20:49:18Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "janseris",
                                                                               "createdAt":  "2023-04-24T20:49:38Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "halter73",
                                           "body":  "\u003e then if `[Authorize(AuthenticationSchemes = \"SessionID\")]` is written on method, the HTTP Basic authentication handler still gets executed (and succeds or fails in the background and that\u0027s ignored but it\u0027s executed while **is not supposed to be executed**).\r\n\r\nI agree that it\u0027s surprising that the `HttpBasicAuthenticationHandler.AuthenticateAsync` gets called in this case, but it\u0027s existing behavior that\u0027s not likely to change in a patch, because apps may rely on it. I\u0027m even hesitant to change the behavior in .NET 8 for fear of breaking apps, but I\u0027m sympathetic to not wanting to waste resources, so it\u0027s worth considering as long as we don\u0027t think it will be *too* breaking.\r\n\r\n\u003e This has for example an unwanted side-effect that `WWW-Authenticate` HTTP header is unexpectedly added to the response (as it would have been set if HTTP Basic or any other authentication failed).\r\n\r\nThe good news is that if you add the header in `HttpBasicAuthenticationHandler.HandleChallengeAsync` instead of `AuthenticateAsync` as I suggested above, the header will only be sent for authentication failures when the scheme is selected. Setting the 401 manually is also unnessary if you call `base`.\r\n\r\n\u003e ```cs\r\n\u003e protected override Task HandleChallengeAsync(AuthenticationProperties properties)\r\n\u003e {\r\n\u003e     Response.Headers.Add(HeaderNames.WWWAuthenticate, $\"{AuthenticationSchemeName} realm=\\\"{Realm}\\\"\" /* realm is special info added in HTTP Basic auth fail */);\r\n\u003e     return base.HandleChallengeAsync(properties);\r\n\u003e }\r\n\u003e ```\r\n\r\nYou should never modify the response in `AuthenticateAsync`. Even the `CookieAuthenticationHandler` does not do this, and it needs to modify non-challenge responses. It hooks `OnStarting` inside of `InitializeHandlerAsync`.\r\n\r\nhttps://github.com/dotnet/aspnetcore/blob/10a343bbcb7a6d5013a6057620f74aef039964c0/src/Security/Authentication/Cookies/src/CookieAuthenticationHandler.cs#L58-L61\r\n\r\n",
                                           "updatedAt":  "2023-04-24T20:48:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85eb3xB",
                                           "createdAt":  "2023-06-09T10:37:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC9kJDg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "janseris",
                                                                               "createdAt":  "2023-06-09T10:38:16Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "floge07",
                                           "body":  "I also have problems with this behavior. \r\nIn my case, I have two different JwtBearer handlers.\r\nOne of them is the default/fallback. They both use different signing credentials, so because the default one is always executed, it\u0027s throwing an exception that it can\u0027t read the token.\r\nThis doesn\u0027t fail the authentication because it continues with the second handler, which is successful.\r\nIt just causes unnecessary error logs. \r\n",
                                           "updatedAt":  "2023-06-09T10:37:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85zrc6O",
                                           "createdAt":  "2024-02-13T08:43:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODhjWJQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "peter-bertok",
                                                                               "createdAt":  "2024-05-13T06:00:32Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "Sonic198",
                                           "body":  "I also have problem with this. In my case I have two bearer authentication schemes which are also configured as default policy\r\n```csharp\r\nservices.AddAuthorization(options =\u003e\r\n{\r\n    var defaultAuthorizationPolicyBuilder = new AuthorizationPolicyBuilder(\r\n        AuthenticationSchemes.Azure,\r\n        AuthenticationSchemes.Cognito);\r\n    defaultAuthorizationPolicyBuilder = defaultAuthorizationPolicyBuilder.RequireAuthenticatedUser();\r\n    options.DefaultPolicy = defaultAuthorizationPolicyBuilder.Build();\r\n});\r\n```\r\nBut I also have a third auth scheme for API Key authentication and I would like to secure some of my endpoints to be accessible only using API key. So I did the following:\r\n```csharp\r\n[Authorize(AuthenticationSchemes = \"ApiKey\")]\r\n[HttpGet(\"byApiKey\")]\r\npublic Task\u003cIActionResult\u003e ProtectedByApiKey()\r\n{\r\n    return Task.FromResult\u003cIActionResult\u003e(Ok(\"Authorized by ApiKey\"));\r\n}\r\n```\r\nBut unfortunately I can access this endpoint either with API key or with Azure and Cognito bearer tokens.\r\nIf that is expected behavior I think the docks are not clear about that.",
                                           "updatedAt":  "2024-02-13T08:47:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde859kfIX",
                                           "createdAt":  "2024-05-13T06:01:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "peter-bertok",
                                           "body":  "I\u0027m getting an issue similar to @Sonic198, I have an API service that also has a Razor page that uses Easy Auth and Entra ID, but the authentication providers can\u0027t be easily split. The documentation is also very unclear and there are no working examples on the web.",
                                           "updatedAt":  "2024-05-13T06:01:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85_t91N",
                                           "createdAt":  "2024-05-31T18:13:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jurajpaska8",
                                           "body":  "same problem, when using default authentication, this handler is executed no matter which handler i spiecify in authorize attribute         \r\n```\r\nservices\r\n            .AddAuthentication(o =\u003e\r\n            {\r\n                // Any default scheme will be triggered everytime, no matter if we use different authn scheme in authorize attribute. Therefore is better to use wanted Auth handler explicitly on controller / endpoint\r\n                // This is known microsoft issue\r\n                // https://github.com/dotnet/aspnetcore/issues/47105\r\n                // o.DefaultScheme = nameof(EmptyAuthenticationHandler);\r\n                // o.DefaultScheme = nameof(AnotherAuthenticationHandler);\r\n                // o.DefaultScheme = JwtBearerDefaults.AuthenticationScheme;\r\n            })\r\n```",
                                           "updatedAt":  "2024-05-31T18:13:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86vzqyY",
                                           "createdAt":  "2025-06-06T15:07:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEVs_oA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "janseris",
                                                                               "createdAt":  "2025-06-06T15:15:20Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jurajpaska8",
                                                                               "createdAt":  "2025-06-06T15:39:02Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "FranklinWhale",
                                           "body":  "Sadly, after more than 2 years since this issue was reported, neither the doc nor the implementation has been updated.",
                                           "updatedAt":  "2025-06-06T15:07:27Z"
                                       }
                                   ],
                         "totalCount":  13
                     },
        "title":  "[Authorize(AuthenticationSchemes = TheOnlyAuthScheme)] also runs default scheme AuthenticationHandler",
        "labels":  [
                       "Docs",
                       "area-auth",
                       "Pillar: Technical Debt"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/47220",
        "createdAt":  "2023-03-15T15:04:50Z",
        "number":  47220,
        "author":  "koenigst",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-02-13T01:40:08Z",
        "body":  "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nWhen configuring the services with `AddAuthorization` and then building the container with `ValidateOnBuild = true` an `AggregateException` is thrown because not all dependencies were added to the container.\r\n\r\nCalling `AddRouting` inside `AddAuthorization` should fix this.\n\n### Expected Behavior\n\n_No response_\n\n### Steps To Reproduce\n\n```csharp\r\npublic class AuthorizationTest\r\n{\r\n    [Fact]\r\n    public void AddAuthorizationWithoutRouting()\r\n    {\r\n        var builder = new HostBuilder()\r\n            .UseServiceProviderFactory(new DefaultServiceProviderFactory(new ServiceProviderOptions { ValidateOnBuild = true }))\r\n            .ConfigureServices(s =\u003e s.AddAuthorization());\r\n\r\n        Assert.Throws\u003cAggregateException\u003e(builder.Build);\r\n    }\r\n\r\n    [Fact]\r\n    public void AddAuthorizationWithRouting()\r\n    {\r\n        var builder = new HostBuilder()\r\n            .UseServiceProviderFactory(new DefaultServiceProviderFactory(new ServiceProviderOptions { ValidateOnBuild = true }))\r\n            .ConfigureServices(s =\u003e s.AddRouting())\r\n            .ConfigureServices(s =\u003e s.AddAuthorization());\r\n\r\n        using var host = builder.Build();\r\n        Assert.NotNull(host);\r\n    }\r\n}\r\n```\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n7.0.202\n\n### Anything else?\n\n```\r\n.NET SDK:\r\n Version:   7.0.202\r\n Commit:    6c74320bc3\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.22621\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\7.0.202\\\r\n\r\nHost:\r\n  Version:      7.0.4\r\n  Architecture: x64\r\n  Commit:       0a396acafe\r\n\r\n.NET SDKs installed:\r\n  7.0.201 [C:\\Program Files\\dotnet\\sdk]\r\n  7.0.202 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.32 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 7.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 7.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.32 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 7.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 7.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.32 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 7.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 7.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nOther architectures found:\r\n  x86   [C:\\Program Files (x86)\\dotnet]\r\n    registered at [HKLM\\SOFTWARE\\dotnet\\Setup\\InstalledVersions\\x86\\InstallLocation]\r\n\r\nEnvironment variables:\r\n  Not set\r\n\r\nglobal.json file:\r\n  Not found\r\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOWL-jZA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85Yv6Nk",
                                           "createdAt":  "2023-03-29T16:49:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2023-03-29T16:49:50Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Missing Dependency in AddAuthorization",
        "labels":  [
                       "bug",
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/47399",
        "createdAt":  "2023-03-24T15:19:55Z",
        "number":  47399,
        "author":  "ajarrott",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-02-13T01:39:12Z",
        "body":  "If someone decides to define their own JWT token scheme that does not use the prefix Bearer, but a different custom scheme name there are issues authenticating the JWT Token while utilizing AzureAD.\r\n\r\nexample:\r\n```csharp\r\nvar builder = WebApplication.CreateBuilder(args);\r\n\r\nbuilder.Services.AddAuthentication(\"MyCustomScheme\")\r\n    .AddMicrosoftIdentityWebApi(builder.Configuration, jwtBearerScheme: \"MyCustomScheme\");\r\n\r\n/* code removed for brevity */\r\n\r\nvar app = builder.Build();\r\n\r\n/* code removed for brevity */\r\n\r\napp.Run();\r\n```\r\n\r\nIn your controller if you use \"MyCustomScheme\" to authenticate it will not authenticate the token out of the box because it is not prefixed with \"Bearer \", even though you are utilizing \"MyCustomScheme \".  This is highlighted on line 78 here:\r\nhttps://github.com/dotnet/aspnetcore/blob/main/src/Security/Authentication/JwtBearer/src/JwtBearerHandler.cs\r\n\r\nYou can add an event handler to handle this event, and essentially reimplement what is going on in the JwtBearerHandler.cs, but it seems like overkill for a simple rename to the token.\r\n\r\nNow if this may not seem appropriate because [RFC 6750 Section 2.1](https://www.rfc-editor.org/rfc/rfc6750#section-2.1) specifies that the standard for OAuth 2.0 is to use \"Bearer \" + base64Token.  But I would argue then that jwtBearerScheme should not exist as an optional parameter in the extension method as the standard for JWT Tokens should never change  in [.AddMicrosoftIdentityWebApi(...)](https://github.com/AzureAD/microsoft-identity-web/blob/master/src/Microsoft.Identity.Web/WebApiExtensions/MicrosoftIdentityWebApiAuthenticationBuilderExtensions.cs).  Additionally postman will allow you to change the header prefix, the prefix feels arbitrary, so I believe it should be defined by the provided Scheme, not by the linked spec.\r\n\r\nDepending on the responses I feel like it could be argued to open this issue on either side, here or in the AzureAD repository.  I figured I can start the discussion here to see if I\u0027m missing anything on my side.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOamzqdA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85YZduQ",
                                           "createdAt":  "2023-03-24T16:18:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brockallen",
                                           "body":  "It would be useful to have the scheme passed in the HTTP authorization header to be configurable. DPoP is an example where it is different than Bearer: https://datatracker.ietf.org/doc/html/draft-ietf-oauth-dpop#name-the-dpop-http-header",
                                           "updatedAt":  "2023-03-24T16:18:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Yp1fF",
                                           "createdAt":  "2023-03-28T17:52:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODCGX3A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "rikdepeuter",
                                                                               "createdAt":  "2023-07-28T12:16:22Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "halter73",
                                           "body":  "Your best option for now is probably to configure [JwtBearerOptions.Events.OnMessageReceived](https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.authentication.jwtbearer.jwtbearerevents.onmessagereceived?view=aspnetcore-7.0#microsoft-aspnetcore-authentication-jwtbearer-jwtbearerevents-onmessagereceived) and set the token yourself. This seems simple enough considering how rare this feature request is, but if more people start using non-\"Bearer \" prefixes, we might consider it down the road.\r\n\r\n```csharp\r\nbuilder.Services.AddAuthentication(JwtBearerDefaults.AuthenticationScheme)\r\n    .AddJwtBearer(jwtBearerOptions =\u003e\r\n    {\r\n        jwtBearerOptions.Events ??= new();\r\n        jwtBearerOptions.Events.OnMessageReceived = context =\u003e\r\n        {\r\n            var authHeader = context.Request.Headers.Authorization.ToString();\r\n\r\n            if (authHeader.StartsWith(\"DPoP \", StringComparison.Ordinal))\r\n            {\r\n                context.Token = authHeader[\"DPoP \".Length..];\r\n            }\r\n            else\r\n            {\r\n                // Skip NoResult() if you want to fall back to trying to read the \"Bearer \" token.\r\n                context.NoResult();\r\n            }\r\n\r\n            return Task.CompletedTask;\r\n        };\r\n    });\r\n```\r\n\r\nWe document something similar in https://learn.microsoft.com/en-us/aspnet/core/signalr/authn-and-authz?view=aspnetcore-7.0#built-in-jwt-authentication because SignalR is sometimes unable to set the Authorization header when using WebSockets in the browser and instead sends the bearer token as part of the query string (`?access_token=...`).",
                                           "updatedAt":  "2023-03-28T17:52:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Yp18r",
                                           "createdAt":  "2023-03-28T17:54:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2023-03-28T17:54:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85h1BDV",
                                           "createdAt":  "2023-07-19T02:26:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODLXCfw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "AlexKubiesa",
                                                                               "createdAt":  "2023-10-30T16:17:36Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jeremy-morren",
                                           "body":  "This is a problem if you wish to register multiple JWT handlers i.e. the prefix *has* to be different.  It should be noted that this very non-obvious behavior i.e. I spent time hunting around authorization policies/challenge schemes before I thought to look at `JwtBearerHandler` source.\r\n\r\nThis is how you would register an arbitrary JWT bearer scheme.\r\n\r\n```c#\r\nconst string scheme = \"CustomScheme\";\r\n\r\nservices.AddAuthentication(scheme)\r\n    .AddJwtBearer(scheme, o =\u003e\r\n    {\r\n        //See https://github.com/dotnet/aspnetcore/blob/ef07bcb02ae3d7218dbd3dd0358974b2b7e9ddd2/src/Security/Authentication/JwtBearer/src/JwtBearerHandler.cs#L87C39-L87C39\r\n\r\n        var prefix = $\"{scheme} \";\r\n        \r\n        o.Events ??= new ();\r\n        \r\n        o.Events.OnMessageReceived = context =\u003e\r\n        {\r\n            string? authorization = context.Request.Headers[HeaderNames.Authorization];\r\n            if (!string.IsNullOrEmpty(authorization) \u0026\u0026 authorization.StartsWith(prefix))\r\n                context.Token = authorization[prefix.Length..]; //JwtBearerHandler will use this token instead\r\n            \r\n            return Task.CompletedTask;\r\n        };\r\n    });\r\n```\r\n",
                                           "updatedAt":  "2023-07-19T02:32:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85qbOp0",
                                           "createdAt":  "2023-10-30T15:56:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODm05kQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "mstrong64",
                                                                               "createdAt":  "2024-06-24T02:31:13Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "AlexKubiesa",
                                           "body":  "I came across this issue because I\u0027m updating our APIs to support two JwtBearer authentication schemes. Essentially we are migrating from one token issuer to another but for the transition period (which I suspect will be quite long) we need to support JWTs from both issuers.\r\n\r\n**Update:** I solved this by setting the default authentication scheme to be a policy scheme that reads the JWT and switches between the two JwtBearer schemes depending on the JWT issuer (as per the \"iss\" claim). I followed the guide [here](https://learn.microsoft.com/en-us/aspnet/core/security/authorization/limitingidentitybyscheme?view=aspnetcore-7.0).",
                                           "updatedAt":  "2023-10-30T17:23:41Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "JwtBearerHandler.cs hardcoded \"Bearer \"",
        "labels":  [
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/47410",
        "createdAt":  "2023-03-24T22:28:26Z",
        "number":  47410,
        "author":  "eerhardt",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODRp8Xw==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "gnjack",
                                            "createdAt":  "2023-03-27T14:13:54Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "GREsau",
                                            "createdAt":  "2024-01-13T15:21:57Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "anvouk",
                                            "createdAt":  "2024-06-25T13:38:21Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "wsloth",
                                            "createdAt":  "2024-07-25T09:07:11Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "PaulARoy",
                                            "createdAt":  "2024-09-02T09:31:22Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "gorgasparyan",
                                            "createdAt":  "2024-09-25T10:43:42Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "mungojam",
                                            "createdAt":  "2024-12-17T22:47:41Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "jmbryan4",
                                            "createdAt":  "2025-03-06T19:57:32Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "0xfeeddeadbeef",
                                            "createdAt":  "2025-05-22T11:02:26Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "dnguyentien-lmi",
                                            "createdAt":  "2025-06-13T07:21:18Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ebeeraheem",
                                            "createdAt":  "2025-06-27T22:10:29Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "bb-froggy",
                                            "createdAt":  "2025-07-09T10:55:22Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "gabrielhildebrandt",
                                            "createdAt":  "2025-07-24T04:29:42Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "PhanTheMan",
                                            "createdAt":  "2025-09-18T16:16:11Z"
                                        }
                                    ],
                          "totalCount":  14
                      },
        "updatedAt":  "2025-08-25T17:13:44Z",
        "body":  "In .NET 8, we have a goal to enable JWT authentication with Native AOT. See `Stage 2.a` in https://github.com/dotnet/aspnetcore/issues/45910.\r\n\r\nIn order to use JWT authentication, the app needs to call `builder.Services.AddAuthentication()`. When bringing in `AddAuthentication()`, we are getting trimming / NativeAOT warnings from `System.Security.Cryptography.Xml`. `System.Security.Cryptography.Xml` is not currently trimming / NativeAOT compatible. See https://github.com/dotnet/runtime/issues/73432. It also appears to be a major amount of work to make it compatible, possibly with many \"gotchas\".\r\n\r\nThe reason `System.Security.Cryptography.Xml` is brought into the app is because this line:\r\n\r\nhttps://github.com/dotnet/aspnetcore/blob/9c38b3749a69050e0670b8750d9828cf47a19b41/src/Security/Authentication/Core/src/AuthenticationServiceCollectionExtensions.cs#L24\r\n\r\n`DataProtection` brings in the dependency on `System.Security.Cryptography.Xml`.\r\n\r\nHowever, to enable JWT bearer authentication, it doesn\u0027t require `DataProtection`. Other types of authentication services do, for example:\r\n\r\n* [Cookies](https://github.com/dotnet/aspnetcore/blob/3265dc6a9b05c74b199aa39351e5413317df9ad5/src/Security/Authentication/Cookies/src/PostConfigureCookieAuthenticationOptions.cs#L43)\r\n* [OpenIdConnect](https://github.com/dotnet/aspnetcore/blob/3265dc6a9b05c74b199aa39351e5413317df9ad5/src/Security/Authentication/OpenIdConnect/src/OpenIdConnectPostConfigureOptions.cs#L47-L58)\r\n* [OAuth](https://github.com/dotnet/aspnetcore/blob/3265dc6a9b05c74b199aa39351e5413317df9ad5/src/Security/Authentication/OAuth/src/OAuthPostConfigureOptions.cs#L46-L48)\r\n* [WsFederation](https://github.com/dotnet/aspnetcore/blob/3265dc6a9b05c74b199aa39351e5413317df9ad5/src/Security/Authentication/WsFederation/src/WsFederationPostConfigureOptions.cs#L38)\r\n* [Twitter](https://github.com/dotnet/aspnetcore/blob/3265dc6a9b05c74b199aa39351e5413317df9ad5/src/Security/Authentication/Twitter/src/TwitterPostConfigureOptions.cs#L35)\r\n* etc\r\n\r\nSo it made sense originally to add `DataProtection` in a common place, and if the app didn\u0027t use it - no big deal. But now with NativeAOT and trimming, it does affect the app because the unused code can\u0027t be trimmed from the app - making it bigger unnecessarily.\r\n\r\nTo solve both the size issue (being able to trim the unused DataProtection code) and the fact that `System.Security.Cryptography.Xml` is not compatible with NativeAOT/trimming, we should remove `AddDataProtection()` from `AddAuthentication()` and instead move the calls to all the specific authentication services that require it.\r\n\r\nNote that this would be a breaking change because an app could just call `AddAuthentication()`, without calling one of the built-in auth services, and then try to get DataProtection services, it will fail (since they aren\u0027t registered).\r\n\r\n### Alternatives\r\n\r\nOne alternative is to create a new `AddAuthenticationCore()` method that doesn\u0027t call `AddDataProtection()`, but does everything else `AddAuthentication()` does today.\r\n\r\n\r\ncc @halter73 @davidfowl @JamesNK @DamianEdwards ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOgoa1ww==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85YinXB",
                                           "createdAt":  "2023-03-27T16:41:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `.NET 8 Planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2023-03-27T16:41:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Yi4Gb",
                                           "createdAt":  "2023-03-27T17:19:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC4p6Bg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "halter73",
                                                                               "createdAt":  "2023-03-27T21:55:56Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Yes, this would be breaking for most 3rd party auth providers.\r\n\r\nAddAuthenticationCore would avoid the break, but would have to be used directly in program.cs and the template.",
                                           "updatedAt":  "2023-03-27T17:19:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Yrjhi",
                                           "createdAt":  "2023-03-29T01:19:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "eerhardt",
                                           "body":  "@Tratcher - do you have an opinion on which approach we should take?",
                                           "updatedAt":  "2023-03-29T01:19:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85YwO8M",
                                           "createdAt":  "2023-03-29T17:45:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "AddAuthenticationCore has discoverability issues. How about this:\r\n\r\n```diff\r\npublic static class AuthenticationServiceCollectionExtensions\r\n{\r\n    public static AuthenticationBuilder AddAuthentication(this IServiceCollection services)\r\n    public static AuthenticationBuilder AddAuthentication(this IServiceCollection services, string defaultScheme)\r\n    public static AuthenticationBuilder AddAuthentication(this IServiceCollection services, Action\u003cAuthenticationOptions\u003e configureOptions)\r\n+   public static AuthenticationBuilder AddAuthentication(this IServiceCollection services, bool withDataProtection)\r\n+   public static AuthenticationBuilder AddAuthentication(this IServiceCollection services, bool withDataProtection, string defaultScheme)\r\n+   public static AuthenticationBuilder AddAuthentication(this IServiceCollection services, bool withDataProtection, Action\u003cAuthenticationOptions\u003e configureOptions)\r\n}\r\n```\r\n\r\nI\u0027d also set a bool on AuthenticationBuilder `bool HasDataProtection { get; }` that callers like AddOpenIdConnect would check and throw if it wasn\u0027t enabled. That way they fail at startup instead of on individual requests.",
                                           "updatedAt":  "2023-03-29T17:45:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85YwRA9",
                                           "createdAt":  "2023-03-29T17:51:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC41-HQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "davidfowl",
                                                                               "createdAt":  "2023-03-30T02:17:58Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "eerhardt",
                                           "body":  "Unfortunately that proposal is not trim friendly. The trimmer is not able to see that `withDataProtection` is only ever passed `false`. See https://github.com/dotnet/linker/issues/1868.",
                                           "updatedAt":  "2023-03-29T17:51:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85YwZde",
                                           "createdAt":  "2023-03-29T18:16:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Darn. So we end up with:\r\n\r\n```diff\r\npublic static class AuthenticationServiceCollectionExtensions\r\n{\r\n    public static AuthenticationBuilder AddAuthentication(this IServiceCollection services)\r\n    public static AuthenticationBuilder AddAuthentication(this IServiceCollection services, string defaultScheme)\r\n    public static AuthenticationBuilder AddAuthentication(this IServiceCollection services, Action\u003cAuthenticationOptions\u003e configureOptions)\r\n+   public static AuthenticationBuilder AddAuthenticationCore(this IServiceCollection services)\r\n+   public static AuthenticationBuilder AddAuthenticationCore(this IServiceCollection services, string defaultScheme)\r\n+   public static AuthenticationBuilder AddAuthenticationCore(this IServiceCollection services, Action\u003cAuthenticationOptions\u003e configureOptions)\r\n}\r\n```\r\n\r\nI\u0027d still want that bool on AuthenticationBuilder `bool HasDataProtection { get; }` that callers like AddOpenIdConnect would check and throw if it wasn\u0027t enabled.",
                                           "updatedAt":  "2023-03-29T18:16:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85YwfJb",
                                           "createdAt":  "2023-03-29T18:32:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "eerhardt",
                                           "body":  "\u003e that callers like AddOpenIdConnect would check and throw if it wasn\u0027t enabled.\r\n\r\nWhy wouldn\u0027t `AddOpenIdConnect` just call `AddDataProtection()` if it needs it? Why would it require someone else to do it?",
                                           "updatedAt":  "2023-03-29T18:32:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Ywf_a",
                                           "createdAt":  "2023-03-29T18:35:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Good point 😆.",
                                           "updatedAt":  "2023-03-29T18:35:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85YyU_W",
                                           "createdAt":  "2023-03-30T02:19:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "\u003e Unfortunately that proposal is not trim friendly. The trimmer is not able to see that withDataProtection is only ever passed false. See https://github.com/dotnet/linker/issues/1868.\r\n\r\n- It tightly couples the method to the implementation\r\n- It doesn’t scale well for other things we may want to exclude ",
                                           "updatedAt":  "2023-03-30T02:19:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85YycL-",
                                           "createdAt":  "2023-03-30T03:04:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "eerhardt",
                                           "body":  "I just remembered there already is an AddAuthenticationCore method:\r\n\r\nhttps://github.com/dotnet/aspnetcore/blob/3265dc6a9b05c74b199aa39351e5413317df9ad5/src/Http/Authentication.Core/src/AuthenticationCoreServiceCollectionExtensions.cs#L19\r\n\r\nThe issue with it and JwtBearer authentication is that JwtBearer also needs an ‘IAuthenticationConfigurationProvider’, which is only added by AddAuthentication. \r\n\r\nSo other options would be:\r\n* move the default IAuthenticationConfigurationProvider service registration from AddAuthentication to AddAuthenticationCore.\r\n* Have AddJwtBearer add the default IAuthenticationConfigurationProvider service if it hasn’t already been registered.",
                                           "updatedAt":  "2023-03-30T03:04:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85YydCs",
                                           "createdAt":  "2023-03-30T03:09:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "Aside - why do we consider System.Security.Cryptography.Xml legacy/not recommended given so many mainstream auth scenarios apparently depend on it?\nCc @vcsjones ",
                                           "updatedAt":  "2023-03-30T03:09:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85YyeBm",
                                           "createdAt":  "2023-03-30T03:16:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "eerhardt",
                                           "body":  "\u003e why do we consider System.Security.Cryptography.Xml legacy/not recommended\r\n\r\n@danmoseley - I’m not sure where you got that impression. Can you post a link?\r\n\r\nThe core of this issue is that:\r\n\r\n1. The goal for .Net 8 is to enable JWT token auth.\r\n2. JWT token auth doesn’t need System.Security.Cryptography.Xml\r\n3. There’s currently no way to cut the System.Security.Cryptography.Xml code out.\r\n4. System.Security.Cryptography.Xml has not been made compatible with trimming and native AOT. Because it is mostly by design not trim friendly. See https://github.com/dotnet/runtime/issues/73432#issuecomment-1206604301",
                                           "updatedAt":  "2023-03-30T03:16:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85YyfAE",
                                           "createdAt":  "2023-03-30T03:23:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "eerhardt",
                                           "body":  "\u003e why do we consider System.Security.Cryptography.Xml legacy/not recommended\r\n\r\nCheck out https://github.com/dotnet/runtime/tree/main/src/libraries/System.Security.Cryptography.Xml#readme",
                                           "updatedAt":  "2023-03-30T03:23:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85YyhVv",
                                           "createdAt":  "2023-03-30T03:40:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "JamesNK",
                                           "body":  "I\u0027m guessing the problem with System.Security.Cryptography.Xml is there can be type names embedded in XML. For example, `Type.GetType(typeNameFromXml)` then is destined to fail.\r\n\r\nDataProtection has the same kind of issues. The [initial trimming annotations](https://github.com/dotnet/aspnetcore/pull/41118) basically made the whole thing unsafe. Because of how fundamental DataProtection is, I [refactored DataProtection annotations](https://github.com/dotnet/aspnetcore/pull/41650) to a more pragmatic approach. The library works out of the box with all the applicable built-in .NET types. If there is a custom type defined in XML and it can\u0027t be found, then the error message mentions that it could have been trimmed. It didn\u0027t feel like a huge amount of work and it looks like it was successful. At least some people have been using trimming with it (they [logged a bug](https://github.com/dotnet/aspnetcore/issues/43187) about one place I missed 😬).\r\n\r\nIMO System.Security.Cryptography.Xml should be annotated the same way. It works for the vast majority of people and for those doing custom things and AOT (another small number), then provide a good runtime error experience.\r\n\r\nI brought this up before, but I think it is better to just fix the underlying cause here. At the very least, look at what is involved in fixing the underlying cause, and estimate its cost vs the cost of workaround it.\r\n\r\nDataProtection isn\u0027t going anywhere, and for AOT to be a real thing for ASP.NET Core (i.e. generally work and not just a couple of scenarios), we\u0027ll need it to work.",
                                           "updatedAt":  "2023-03-30T03:42:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Yyiv2",
                                           "createdAt":  "2023-03-30T03:52:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vcsjones",
                                           "body":  "Looks like @eerhardt found the most relevant link. A more opinionated answer is found here: https://github.com/dotnet/runtime/issues/28599#issuecomment-460382856\r\n\r\n\u003e System.Security.Cryptography.Xml is in a state of \"as dead as can be while still being technically supported\". Further, the W3C shut down the XML Security WG in 2016.\r\n\r\n\u003e I\u0027m guessing the problem with System.Security.Cryptography.Xml is there can be type names embedded in XML\r\n\r\nKind of. S.S.C.Xml relies heavily on `CryptoConfig`, which basically maps URLs and URNs that are identifiers to types. CryptoConfig is known not to be trimming friendly:\r\n\r\nhttps://github.com/dotnet/runtime/blob/ef15cfbbcebbfd8bcef2664bd6dad5c34ce66108/src/libraries/System.Security.Cryptography/src/System/Security/Cryptography/CryptoConfig.cs#L334\r\n\r\n",
                                           "updatedAt":  "2023-03-30T03:53:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85YzDAC",
                                           "createdAt":  "2023-03-30T06:41:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC442Yw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "DamianEdwards",
                                                                               "createdAt":  "2023-03-30T13:55:17Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "\u003e I brought this up before, but I think it is better to just fix the underlying cause here. At the very least, look at what is involved in fixing the underlying cause, and estimate its cost vs the cost of workaround it.\r\n\u003e DataProtection isn\u0027t going anywhere, and for AOT to be a real thing for ASP.NET Core (i.e. generally work and not just a couple of scenarios), we\u0027ll need it to work.\r\n\r\nAlso, our new token story is currently dependent on data protection so...... +1 to what James said.",
                                           "updatedAt":  "2023-03-30T06:41:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Y1PZD",
                                           "createdAt":  "2023-03-30T13:56:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "@JamesNK @davidfowl, to be clear, are you advocating we don\u0027t do this layering/dependencies fix for Data Protection and instead make Data Protection work for trimming/native AOT? In the case of JWT it still has size implications (JWT doesn\u0027t need it).",
                                           "updatedAt":  "2023-03-30T13:56:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Y1nau",
                                           "createdAt":  "2023-03-30T14:54:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "JamesNK",
                                           "body":  "Yes. Put a pin on new work optimizing publish size and focus on AOT functionality.",
                                           "updatedAt":  "2023-03-30T14:59:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Y12Hv",
                                           "createdAt":  "2023-03-30T15:31:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "eerhardt",
                                           "body":  "Maybe another question to ask here (and maybe the one that @danmoseley is asking), why is DataProtection using a component that is `in a state of \"as dead as can be while still being technically supported\"`? Should we be re-thinking how DataProtection is designed?\r\n\r\n",
                                           "updatedAt":  "2023-03-30T15:31:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Y14xD",
                                           "createdAt":  "2023-03-30T15:38:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "eerhardt",
                                           "body":  "\u003e At the very least, look at what is involved in fixing the underlying cause, and estimate its cost vs the cost of workaround it.\r\n\r\n@jeffhandley - is it possible to get an estimate of its cost?\r\n",
                                           "updatedAt":  "2023-03-30T15:38:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85ZN5s5",
                                           "createdAt":  "2023-04-05T01:57:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "eerhardt",
                                           "body":  "@JamesNK, I took a first crack at annotating the library:\r\n\r\nhttps://github.com/dotnet/runtime/compare/main...eerhardt:runtime:AnnotateSSCXml\r\n\r\nBasically, almost all the APIs have added `[RequiresUnreferencedCode]` on them. This will let any developer who calls these APIs know that they may not (probably won\u0027t) work in a trimmed app.\r\n\r\nThere is more work to be done in that change:\r\n\r\n* Make a good warning message\r\n* Annotate Microsoft.Extensions.Configuration.Xml as RequiresUnreferencedCode, since it uses these APIs\r\n* (potentially) update all the places that call `CryptoHelpers.CreateFromName` and throw an exception to say something like \"if you are trimming an application, ensure the necessary algorithms are preserved in the app\". Note there are a couple places that call `CreateFromName`, but just return `false` if `null` was returned. Those won\u0027t be possible to update an exception message.\r\n\r\nWhat would you suggest to do with the warnings that will now be emitted from the ASP.NET code? For example:\r\n\r\nhttps://github.com/dotnet/aspnetcore/blob/0b10e1349063b1b5b39dd0435509abb52cc81d90/src/DataProtection/DataProtection/src/XmlEncryption/EncryptedXmlDecryptor.cs#L46-L68\r\n\r\nis now going to warn because it is using `EncryptedXml.DecryptDocument()` which is marked as `RequiresUnreferencedCode`. Are we just going to suppress these warnings in ASP.NET? It would either be that or re-mark `AddDataProtection` as `RequiresUnreferencedCode` again.",
                                           "updatedAt":  "2023-04-05T01:58:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85ZN_Nm",
                                           "createdAt":  "2023-04-05T02:35:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "JamesNK",
                                           "body":  "Marking `AddDataProtection` with `RequiresUnreferencedCode` isn\u0027t a good solution. It\u0027s used in so many places that huge parts of ASP.NET Core would also need to be annotated with `RequiresUnreferencedCode`: session, most (all?) of auth, Blazor, host builder (I believe the create default method uses it).\r\n\r\nPeople have been using trimming with DataProtection in .NET 7. Whatever we do today works.\r\n\r\nCan situations like the example below be turned into runtime errors? If `DeformatterAlgorithm` can\u0027t be found, then throw an error saying the name might be wrong or the type might have been trimmed.\r\n\r\n```cs\r\n#if NETCOREAPP\r\n        [RequiresUnreferencedCode(\"CreateDeformatter is not trim compatible because the algorithm implementation referenced by DeformatterAlgorithm might be removed.\")]\r\n#endif\r\n        public sealed override AsymmetricSignatureDeformatter CreateDeformatter(AsymmetricAlgorithm key)\r\n        {\r\n            var item = (AsymmetricSignatureDeformatter)CryptoConfig.CreateFromName(DeformatterAlgorithm!)!;\r\n            item.SetKey(key);\r\n            item.SetHashAlgorithm(DigestAlgorithm!);\r\n            return item;\r\n        }\r\n```\r\n\r\nThis is what I did in `DataProtection`:\r\n\r\nhttps://github.com/dotnet/aspnetcore/blob/419065590260e6597a994007512d03736e744da1/src/DataProtection/DataProtection/src/TypeExtensions.cs#L30-L41\r\n\r\nI\u0027d like a situation like DataProtection where all the built-in crypto types always work and then provide runtime errors if someone customizes the crypto types and they enable trimming.",
                                           "updatedAt":  "2023-04-05T02:38:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85ZON14",
                                           "createdAt":  "2023-04-05T04:23:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "eerhardt",
                                           "body":  "\u003e People have been using trimming with DataProtection in .NET 7. Whatever we do today works.\r\n\r\nWe aren’t doing full trimming in ASP.NET apps. By default it uses “partial” in .NET 7.\r\n\r\n\u003e Can situations like the example below be turned into runtime errors? \r\n\r\nThis isn’t the intent of how we are enabling AOT and trimming. If the apps behavior can change after trimming, our intention is to give the dev a warning to let them know. There are some situations where the behavior is edge case and it would be too hard (like the DI case), but here the whole library’s design is incompatible. So suppressing these warnings in dotnet/runtime isn’t going to be approved.\r\n\r\nWould it be possible to remove EncryptedXml in DataProtection when in trimmed / NativeAOT? We could use a feature switch which devs could turn back on to add it back (with a single warning)? Or is EncryptedXml used too often for this approach to be feasible?",
                                           "updatedAt":  "2023-04-05T04:23:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85ZOPy1",
                                           "createdAt":  "2023-04-05T04:38:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "\u003e Would it be possible to remove EncryptedXml in DataProtection when in trimmed / NativeAOT? We could use a feature switch which devs could turn back on to add it back (with a single warning)? Or is EncryptedXml used too often for this approach to be feasible?\r\n\r\nIt\u0027s currently fundamental to the implementation. I agree with James that DataProtection needs to work with trimming. It seems like we need to take a step back and figure out exactly how much of this needs to work. This is one of the only subsystems that does things like \"loads types from configuration\", so it\u0027ll require more special treatment.",
                                           "updatedAt":  "2023-04-05T04:38:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85ZP4hd",
                                           "createdAt":  "2023-04-05T11:32:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "eerhardt",
                                           "body":  "\u003e  It seems like we need to take a step back and figure out exactly how much of this needs to work. \r\n\r\nFor our current goals for .NET 8, which is just JWT Bearer token authentication, none of it needs to work. The issue is that just calling AddAuthentication() pulls DataProtection in, and then you get warnings - in code your app doesn’t use.",
                                           "updatedAt":  "2023-04-05T11:32:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85ZQN7z",
                                           "createdAt":  "2023-04-05T12:41:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "eerhardt",
                                           "body":  "A potential workable solution for the warnings:\r\n\r\n1. Annotate `System.Security.Cryptography.Xml` as `RequiresUnreferencedCode` as in https://github.com/dotnet/runtime/compare/main...eerhardt:runtime:AnnotateSSCXml.\r\n2. We also add some more information to the exception messages that are thrown from `System.Security.Cryptography.Xml` regarding trimming. Ex. \"If you are trimming your application, ensure the types being used are being preserved.\"\r\n3. We figure out the list of commonly used crypto algorithms used by DataProtection, and add `[DynamicDependency]` attributes for them. We also add some trimming/aot tests to ensure the attributes are working.\r\n4. DataProtection then suppresses the warnings coming from `System.Security.Cryptography.Xml` \r\n\r\nThis solution at least solves the warnings. It doesn\u0027t solve the size problem, but that is less important (but still important, since one of the main reasons you are trimming is so your app is smaller). The main thing blocking a user from using `AddAuthenticationCore()` themselves is that `DefaultAuthenticationConfigurationProvider` is internal. Of the things `AddAuthentication()` does:\r\n\r\nhttps://github.com/dotnet/aspnetcore/blob/419065590260e6597a994007512d03736e744da1/src/Security/Authentication/Core/src/AuthenticationServiceCollectionExtensions.cs#L19-L29\r\n\r\n`AddDataProtection()` is the only thing that JWT Bearer auth doesn\u0027t need. It needs the other 4 things to be done. A user could manually do 3 of the things (AddAuthenticationCore, AddWebEncoders, Add SystemClock) but the last DefaultAuthenticationConfigurationProvider is internal.\r\n\r\nWe could make a new `AddAuthentication` method that doesn\u0027t AddDataProtection, but naming that method is going to be really hard - since AddAuthenticationCore is already used.",
                                           "updatedAt":  "2023-04-05T12:41:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85ZTWYl",
                                           "createdAt":  "2023-04-05T22:38:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "\u003e \u003e It seems like we need to take a step back and figure out exactly how much of this needs to work.\r\n\u003e \r\n\u003e For our current goals for .NET 8, which is just JWT Bearer token authentication, none of it needs to work. The issue is that just calling AddAuthentication() pulls DataProtection in, and then you get warnings - in code your app doesn’t use.\r\n\r\nExcept we\u0027re encrypting the bearer tokens?",
                                           "updatedAt":  "2023-04-05T22:38:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85ZTdhR",
                                           "createdAt":  "2023-04-05T23:19:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "\u003e Except we\u0027re encrypting the bearer tokens?\r\n\r\nHe means the existing JWT auth handler, not the token support we\u0027re adding to Identity. The JWT auth handler doesn\u0027t use Data Protection.",
                                           "updatedAt":  "2023-04-05T23:19:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85ZTdil",
                                           "createdAt":  "2023-04-05T23:20:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC6Namw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "halter73",
                                                                               "createdAt":  "2023-04-19T18:56:57Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "eerhardt",
                                           "body":  "\u003e Except we\u0027re encrypting the bearer tokens?\r\n\r\nCan you show me where?\r\n\r\nFor .NET 8, my understanding is we only need to make [this code](https://github.com/aspnet/Benchmarks/blob/7419aa092dd8ced33b61784fd00d283c25ecb78f/src/BenchmarksApps/TodosApi/Program.cs#L26-L27) work.\r\n\r\n```C#\r\nbuilder.Services.AddAuthentication()\r\n    .AddJwtBearer();\r\n```\r\n\r\nThat only needs to decrypt the tokens, and Microsoft.IdentityModel is doing that, as far as I know.\r\n",
                                           "updatedAt":  "2023-04-05T23:20:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85aUH0W",
                                           "createdAt":  "2023-04-19T18:59:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "halter73",
                                           "body":  "Correct. JWT bearer tokens are verified using IdentityModel rather than DataProtection and AddJwtBearer is not in the business of creating tokens, but the new opaque identity tokens created by #47414 use DataProtection just like cookies.",
                                           "updatedAt":  "2023-04-19T18:59:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85myb8d",
                                           "createdAt":  "2023-09-18T21:43:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jamiewinder",
                                           "body":  "I\u0027m struggling to get a feel for where AddJwtBearer support is when using NativeAOT, especially with .NET 8 GA looming. Is there a workable solution for this now, or will one be  available by GA?",
                                           "updatedAt":  "2023-09-18T21:43:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85myqQS",
                                           "createdAt":  "2023-09-18T22:37:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODHeblw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "jamiewinder",
                                                                               "createdAt":  "2023-09-19T08:58:23Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "eerhardt",
                                                                               "createdAt":  "2023-09-21T23:06:21Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "@jamiewinder that support should land as part of an upcoming RC release.",
                                           "updatedAt":  "2023-09-18T22:37:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85og1JQ",
                                           "createdAt":  "2023-10-09T18:04:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jamiewinder",
                                           "body":  "Sorry to pester, but can we still expect this prior to release? It feels like it\u0027d be a big omission if we can\u0027t practically use JWT with NativeAOT web apps.",
                                           "updatedAt":  "2023-10-09T18:04:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85og26m",
                                           "createdAt":  "2023-10-09T18:11:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "@eerhardt for confirmation of the status of JWT support for native AOT. My understanding is we\u0027re still on track to have this land for 8.0",
                                           "updatedAt":  "2023-10-09T18:11:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85ozRw4",
                                           "createdAt":  "2023-10-11T18:32:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODlkMzA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "DamianEdwards",
                                                                               "createdAt":  "2023-10-13T00:35:24Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "mcallaghan-geotab",
                                                                               "createdAt":  "2024-06-13T15:41:02Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "eerhardt",
                                           "body":  "With the release of .NET 8 RC2 yesterday (see https://devblogs.microsoft.com/dotnet/asp-net-core-updates-in-dotnet-8-rc-2/), JWT Bearer authentication is fully supported in Native AOT. Please update to use the 8.0 RC2 SDK and update your PackageReference to https://www.nuget.org/packages/Microsoft.AspNetCore.Authentication.JwtBearer/8.0.0-rc.2.23480.2. When publishing for NativeAOT you will no longer get warnings from inside the Microsoft.IdentityModel.* libraries.\r\n\r\nNote that this issue isn\u0027t about AOT-compatibility, but instead about size reduction. JWT Bearer auth doesn\u0027t require DataProtection in order to work. But in order to add JWT Bearer auth to your app, you need to call `builder.Services.AddAuthentication()` which brings in DataProtection. This issue is tracking a way to remove the dependency on DataProtection when it isn\u0027t needed (like in the case of JWT Bearer auth).",
                                           "updatedAt":  "2023-10-11T18:32:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85te0-z",
                                           "createdAt":  "2023-12-01T21:24:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2023-12-01T21:24:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86BGx8q",
                                           "createdAt":  "2024-06-13T15:40:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mcallaghan-geotab",
                                           "body":  "What is the workaround here? For non-AOT builds, that ONLY use JWT for authentication, on .NET8.\r\n\r\nWe have log spam with this warning\r\n```\r\nwarn: Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository[60]\r\n      Storing keys in a directory \u0027/home/\u003cuser\u003e/.aspnet/DataProtection-Keys\u0027 that may not be persisted outside of the container. Protected data will be unavailable when container is destroyed. For more information go to https://aka.ms/aspnet/dataprotectionwarning\r\n```",
                                           "updatedAt":  "2024-06-13T15:40:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86BG-CR",
                                           "createdAt":  "2024-06-13T15:58:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "martincostello",
                                           "body":  "One workaround would be to set the log level of `Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository` to `Error`.",
                                           "updatedAt":  "2024-06-13T15:58:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86BHDmw",
                                           "createdAt":  "2024-06-13T16:05:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mcallaghan-geotab",
                                           "body":  "\u003e One workaround would be to set the log level of `Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository` to `Error`.\r\n\r\nTrue (definitely valid point) - that should work;\r\n\r\nI was thinking about a mechanism to disable **DataProtection** entirely via an explicit call to `AddDataProtection` in DI with options to disable.",
                                           "updatedAt":  "2024-06-13T16:05:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86BkdNt",
                                           "createdAt":  "2024-06-17T16:13:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "eerhardt",
                                           "body":  "@amcasey - any thoughts on the above scenario and warning?",
                                           "updatedAt":  "2024-06-17T16:13:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86CZDX9",
                                           "createdAt":  "2024-06-24T23:32:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "amcasey",
                                           "body":  "I can\u0027t tell what the goal is.  If you just don\u0027t want to get the log message, I\u0027d agree with @martincostello that you can just disable it.  If your goal is to make it not run, you\u0027d have to experiment, since there\u0027s no designed/recommended way to do that.  For example, you could register your own dummy repository and encryptor that no-op or throw, depending on your scenario.  Alternatively, you might be able to go upstream and replace the data protection provider.",
                                           "updatedAt":  "2024-06-24T23:32:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86CZ26d",
                                           "createdAt":  "2024-06-25T02:11:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mcallaghan-geotab",
                                           "body":  "I will ask plainly perhaps:  why did we change the DI to add a dependency that spams the logs with a warning when configured using a very common authentication method (`JwtBearer`) when the log message isn\u0027t even applicable?\r\n\r\nThat warning message is very confusing and at first seems very concerning until we spend time to understand what is going on (since .NET8) and eventually find this upstream issue. Of course the warning _MAY_ actually be important for other use cases (but it is difficult to know if it is relevant).\r\n\r\nHiding the log message is a workaround for most just to keep production systems ticking without raising false alarm bells in operations. (and it poses the risk that if some point in the future `DataProtection` is actually put into use (explicitly or implicitly) we wouldn\u0027t get any other warnings from that).\r\n\r\nAs I understand it, the purpose of this ticket is to come up with a solution that allows either better control over the DI (either implicit dependencies or configurability perhaps?).",
                                           "updatedAt":  "2024-06-25T02:11:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86Cfwx0",
                                           "createdAt":  "2024-06-25T16:06:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "amcasey",
                                           "body":  "Sorry, @mcallaghan-geotab, I didn\u0027t mean to imply that your question was unclear - just that I was coming in late without full context.  Thanks for clarifying!\r\n\r\nThat log message has been produced by data protection for many years, so something has probably changed in the way data protection is being configured.  I think I understand from your description that your app worked properly (i.e. without logging) on a previous version of aspnetcore (6.0? 7.0?) and, after upgrading to 8.0 - without code changes - has started producing this confusing log message.  Is that correct?  If so, my guess would be that some change within 8.0, perhaps to improve AOT/trimming support - removed a data protection configuration call that used to make that log warning unnecessary (e.g. setting a different storage location).\r\n\r\nTo provide a little context, that log message is intended to be displayed (primarily) when the app is running in a docker container and the keys are stored in a location that won\u0027t survive container restarts (e.g. a directory that isn\u0027t mounted from the host).",
                                           "updatedAt":  "2024-06-25T16:06:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86Cg34I",
                                           "createdAt":  "2024-06-25T18:11:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODnGAsQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "amcasey",
                                                                               "createdAt":  "2024-06-25T18:30:20Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "mcallaghan-geotab",
                                           "body":  "No problem @amcasey  :) - yes you have roughly described the situation.  To add:\r\n* k8s application (yes runs in a docker container)\r\n* using only JwtBearer authentication\r\n* previously fine through .NET6, .NET7\r\n* warning logs started after .NET8 upgrade",
                                           "updatedAt":  "2024-06-25T18:11:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86ChehR",
                                           "createdAt":  "2024-06-25T19:28:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "amcasey",
                                           "body":  "So, from Data Protection\u0027s perspective, everything is (and was) working correctly - the app is running in a container and the storage folder isn\u0027t on a mounted file system, so it logs a warning.  Obviously, it has no way to know that its keys will never actually be used.\r\n\r\nThat doesn\u0027t mean we can\u0027t improve the user experience though.  I looked through some of the ways to explicitly configure data protection to not store keys in a persistent manner, but they basically exist as fallbacks, so they all log warnings.  It\u0027s not hard to configure your own dummy storage system, but I agree that that shouldn\u0027t be necessary.\r\n\r\n@eerhardt Do you already know what changed in 8.0 in this area?  My guess would be that we used to explicitly configure some other xml repository and now we don\u0027t?  Having said that, it\u0027s not really clear to me what that configuration could have been - where would you store the keys that you know, a priori, is persistent?\r\n\r\n",
                                           "updatedAt":  "2024-06-25T19:28:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86ChfLe",
                                           "createdAt":  "2024-06-25T19:30:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "amcasey",
                                           "body":  "@mcallaghan-geotab Would you be able to collect trace-level logs for Microsoft.AspNetCore.DataProtection from your pre-8.0 app?  That would tell us where the keys are being stored.",
                                           "updatedAt":  "2024-06-25T19:30:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86Chf9f",
                                           "createdAt":  "2024-06-25T19:32:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "amcasey",
                                           "body":  "FWIW, [this](https://github.com/dotnet/aspnetcore/blob/ce80910dbb3c662e309b6eeeab775e8134010786/src/DataProtection/DataProtection/src/Repositories/FileSystemXmlRepository.cs#L39) is the log statement.",
                                           "updatedAt":  "2024-06-25T19:32:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86ChgwD",
                                           "createdAt":  "2024-06-25T19:33:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "eerhardt",
                                           "body":  "\u003e @eerhardt Do you already know what changed in 8.0 in this area?\r\n\r\nNot off the top of my head, no. https://github.com/dotnet/aspnetcore/pull/48082 is the change I made to make DataProtection as trim-compatible as I could.",
                                           "updatedAt":  "2024-06-25T19:33:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86Chpk_",
                                           "createdAt":  "2024-06-25T19:56:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "amcasey",
                                           "body":  "\u003e \u003e @eerhardt Do you already know what changed in 8.0 in this area?\r\n\u003e \r\n\u003e Not off the top of my head, no. #48082 is the change I made to make DataProtection as trim-compatible as I could.\r\n\r\nThose look like changes _to_ data protection and they look fine.  I was wondering about changes to how data protection is called.",
                                           "updatedAt":  "2024-06-25T19:56:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86ChrXD",
                                           "createdAt":  "2024-06-25T20:01:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODnHEJg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "amcasey",
                                                                               "createdAt":  "2024-06-25T20:03:08Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "eerhardt",
                                           "body":  "\u003e I was wondering about changes to how data protection is called.\r\n\r\nI didn\u0027t make any changes like that in .NET 8. I wanted to (which is why I opened this issue), but we never agreed on how to design it.",
                                           "updatedAt":  "2024-06-25T20:01:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86ChscS",
                                           "createdAt":  "2024-06-25T20:04:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "amcasey",
                                           "body":  "Yeah, the current state seems expected to me - it\u0027s the fact that there was apparently no log message in 7.0 that seems strange.  [This](https://github.com/dotnet/aspnetcore/issues/47410#issuecomment-2189816542) seems like the next step, if you can spare the time, @mcallaghan-geotab. ",
                                           "updatedAt":  "2024-06-25T20:04:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86ChuGX",
                                           "createdAt":  "2024-06-25T20:07:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mcallaghan-geotab",
                                           "body":  "\u003e @mcallaghan-geotab Would you be able to collect trace-level logs for Microsoft.AspNetCore.DataProtection from your pre-8.0 app? That would tell us where the keys are being stored.\r\n\r\nwe\u0027re not storing any keys for anything (I dug deeply to confirm this - which led to the conclusion that we can omit/hide the warning logs for now)\r\n\r\nCorrection: It _IS_ possible actually that the logs started in .NET7; (several software systems at play) ",
                                           "updatedAt":  "2024-06-25T20:07:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86ChxRy",
                                           "createdAt":  "2024-06-25T20:16:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODnHQww==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "mcallaghan-geotab",
                                                                               "createdAt":  "2024-06-25T20:22:53Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "amcasey",
                                           "body":  "\u003e we\u0027re not storing any keys for anything (I dug deeply to confirm this - which led to the conclusion that we can omit/hide the warning logs for now)\r\n\r\nI think it will generate one on your behalf and log where it puts it, but I\u0027m not certain.\r\n\r\n\u003e Correction: It IS possible actually that the logs started in .NET7; (several software systems at play)\r\n\r\nNo worries - apples to apples comparisons across upgrades are virtually impossible.\r\n\r\nIf I can summarize then: your user experience is suboptimal but probably not a regression and you have a workaround?  This issue tracks making a real fix, which will probably involve making it possible to omit data protection entirely in scenarios like this.\r\n\r\nAssuming I\u0027ve got that correct, can you please thumbs-up the description of this issue?  That makes it easier for us to assess the user impact of issues like these and prioritize them appropriately.\r\n\r\nThanks for your patience and sorry for the wasted time!",
                                           "updatedAt":  "2024-06-25T20:16:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86Inuvd",
                                           "createdAt":  "2024-08-15T20:04:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEay9xA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "DamianEdwards",
                                                                               "createdAt":  "2024-08-23T18:37:14Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "TrayanZapryanov",
                                                                               "createdAt":  "2024-10-14T14:00:57Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "mungojam",
                                                                               "createdAt":  "2024-12-17T22:53:26Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "bb-froggy",
                                                                               "createdAt":  "2025-07-09T11:01:01Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Dreamescaper",
                                                                               "createdAt":  "2025-07-16T14:28:40Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  5
                                                         },
                                           "author":  "amcasey",
                                           "body":  "I\u0027ve seen this question several times, so we should revisit it during 10 planning.",
                                           "updatedAt":  "2024-08-15T20:04:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde863hT5s",
                                           "createdAt":  "2025-07-16T14:48:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Dreamescaper",
                                           "body":  "\u003e move the default IAuthenticationConfigurationProvider service registration from AddAuthentication to AddAuthenticationCore.\n\nAre there any concerns regarding this option? I\u0027m willing to implement it if is approved.",
                                           "updatedAt":  "2025-07-16T14:49:44Z"
                                       }
                                   ],
                         "totalCount":  55
                     },
        "title":  "Only call AddDataProtection in Authentication Services that require it",
        "labels":  [
                       "breaking-change",
                       "area-auth",
                       "feature-trimming"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/47503",
        "createdAt":  "2023-03-30T19:12:47Z",
        "number":  47503,
        "author":  "ccurrens",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-02-13T01:38:30Z",
        "body":  "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\n[OWASP\u0027s session management cheat sheet requires that a session id is regenerated after any privilege level change](https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#renew-the-session-id-after-any-privilege-level-change). This is required to prevent session fixation attacks.\r\n\r\nIf an application wants to change the privilege level of a user (e.g. switching from user role to admin role), currently there is no way to implement this without introducing a session fixation vulnerability when an application is configured for cookie authentication with a [SessionStore](https://github.com/dotnet/aspnetcore/blob/c0acf059eddd7e70498804dcc99a7c7b33732417/src/Security/Authentication/Cookies/src/CookieAuthenticationOptions.cs#L122).\r\n\r\nWhen trying to use `SignInAsync` with the updated principal that has elevated claims, the previous session id is reused.\r\n\r\nAttempted workarounds by first calling `SignOutAsync` does remove the session from the ticket store, but the session id is still cached in `CookieAuthenticationHandler`. So, if `SignInAsync` is called later in the same request, the previously cached session id is reused.\r\n\r\nThe behavior was introduced as part of #22135 (MR #22732) that renewed the session id rather than storing a new one.\n\n### Expected Behavior\n\nCalling `SignInAsync` should not make creating session-fixation bugs so easy.\n\n### Steps To Reproduce\n\nRepro xunit test is here: https://github.com/ccurrens/session-fixation-repro\r\n\r\nThe same code runs twice for cookie authentication, once with a custom SessionStore (failure) and once without (succeeds).\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n.NET 5+\n\n### Anything else?\n\nAt the very least, `SignOutAsync` should remove clear the cached `sessionKey` so that subsequent calls in the same request to `SignInAsync` can switch users roles and store with a separate session id.\r\n\r\nIt would be great if `SignInAsync` would always issue a new session id. Of course, this causes the issue in #22135, which happens when the session is being refreshed. If there was a way to pass along state perhaps in `AuthenticationProperties` to tell the handler to generate a new session key, that could also work.\r\n\r\nI think ideally `SignInAsync` should only reuse the session id if its coming from the authentication handler (e.g., the session is being refreshed). If the call is coming from user code, it should generate a new session so that developers don\u0027t have to explicitly opt-in to behavior that would prevent session fixation (it should behave that way by default).",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOcxYtRg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85zFi1G",
                                           "createdAt":  "2024-02-06T22:07:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2024-02-06T22:07:30Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Cookie session ID cannot be regenerated when using a custom ticket store",
        "labels":  [
                       "enhancement",
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/48099",
        "createdAt":  "2023-05-06T00:13:51Z",
        "number":  48099,
        "author":  "alexiwonder",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-09-04T08:31:27Z",
        "body":  "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Describe the bug\r\n\r\nI have created a client and a server application to demonstrate Mutual TLS (mTLS). I generated a client certificate and had it signed by a local CA. However, the CA is not trusted by the server. I want to bypass any certificate validation on the server.\r\n\r\nI can confirm that the server has received the client certificate, but the\r\nOnAuthenticationFailed is fired and the attached exception is Client certificate failed validation.\r\n\r\nUpon debugging, I found that it is CertificateAuthenticationHandler (source code [here](https://github.com/dotnet/aspnetcore/blob/main/src/Security/Authentication/Certificate/src/CertificateAuthenticationHandler.cs)) that rejects the certificate. Also, I think it is due the failed certificate chain validation ([here](https://github.com/dotnet/aspnetcore/blob/main/src/Security/Authentication/Certificate/src/CertificateAuthenticationHandler.cs#L143)).\r\n\r\n\r\n### Expected Behavior\r\n\r\n`AllowAnyClientCertificate` disables further validation a client certificate.\r\n\r\n### Steps To Reproduce\r\n\r\n```csharp\r\n public class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n            var builder = WebApplication.CreateBuilder(args);\r\n\r\n            builder.Services.Configure\u003cKestrelServerOptions\u003e(options =\u003e\r\n            {\r\n                options.ConfigureHttpsDefaults(options =\u003e\r\n                {\r\n                    options.AllowAnyClientCertificate();\r\n                    options.CheckCertificateRevocation = false;\r\n                    options.ClientCertificateValidation = ClientCertificateValidation;\r\n                    options.ClientCertificateMode = ClientCertificateMode.AllowCertificate;\r\n                });\r\n            });\r\n\r\n            // Add services to the container.\r\n\r\n            builder.Services.AddControllers();\r\n\r\n            ConfigureServices(builder.Services);\r\n\r\n            var app = builder.Build();\r\n\r\n            // Configure the HTTP request pipeline.\r\n\r\n            app.UseHttpsRedirection();\r\n\r\n            app.UseAuthentication();\r\n\r\n            app.MapControllers();\r\n\r\n            app.Run();\r\n        }\r\n\r\n        private static bool ClientCertificateValidation(X509Certificate2 arg1, X509Chain? arg2, SslPolicyErrors arg3)\r\n        {\r\n            return true;\r\n        }\r\n\r\n        private static void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services\r\n               .AddAuthentication(CertificateAuthenticationDefaults.AuthenticationScheme)\r\n               .AddCertificate(options =\u003e\r\n               {\r\n                   options.RevocationMode = X509RevocationMode.NoCheck;\r\n                   options.ChainTrustValidationMode = X509ChainTrustMode.CustomRootTrust;\r\n                   options.AllowedCertificateTypes = CertificateTypes.All;\r\n                   options.ValidateCertificateUse = false;\r\n                   options.ValidateValidityPeriod = false;\r\n\r\n                   options.Events = new CertificateAuthenticationEvents\r\n                   {\r\n                       OnAuthenticationFailed = p =\u003e\r\n                       {\r\n                           Console.WriteLine(p.Exception);\r\n                           return Task.CompletedTask;\r\n\r\n                       },\r\n                       OnCertificateValidated = context =\u003e\r\n                       {\r\n                           // Add certificate to HttpContext.Items\r\n                           context.HttpContext.Items[\"ClientCertificate\"] = context.ClientCertificate;\r\n                           return Task.CompletedTask;\r\n                       }\r\n                   };\r\n               });\r\n        }\r\n    }\r\n```\r\n\r\n### Exceptions (if any)\r\n\r\n_No response_\r\n\r\n### .NET Version\r\n\r\n7.0.100\r\n\r\n### Anything else?\r\n\r\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOisYsBg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85b0qPc",
                                           "createdAt":  "2023-05-09T16:53:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mkArtakMSFT",
                                           "body":  "@alexiwonder please share the logs so that we can see what is going on here. Thanks!",
                                           "updatedAt":  "2023-05-09T16:53:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85b0qiX",
                                           "createdAt":  "2023-05-09T16:54:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "halter73",
                                           "body":  "Can you enable (preferably trace-level) [ASP.NET Core Logging](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/logging/?view=aspnetcore-5.0) and provide the logs from when the issue occurs?",
                                           "updatedAt":  "2023-05-09T16:54:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85b0qk7",
                                           "createdAt":  "2023-05-09T16:54:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Hi @alexiwonder. We have added the \"Needs: Author Feedback\" label to this issue, which indicates that we have an open question for you before we can take further action. This issue will be closed automatically in 7 days if we do not hear back from you by then - please feel free to re-open it if you come back to this issue after that time.",
                                           "updatedAt":  "2023-05-09T16:54:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85cNeOV",
                                           "createdAt":  "2023-05-15T00:00:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "This issue has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **4 days**. It will be closed if no further activity occurs **within 3 days of this comment**. If it *is* closed, feel free to comment when you are able to provide the additional information and we will re-investigate.\n\nSee [our Issue Management Policies](https://aka.ms/aspnet/issue-policies) for more information.",
                                           "updatedAt":  "2023-05-15T00:00:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85cOoUk",
                                           "createdAt":  "2023-05-15T07:37:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexiwonder",
                                           "body":  "Sorry @halter73 and @mkArtakMSFT for late reply.\r\nHere\u0027s the logs:\r\n\r\n```\r\ndbug: Microsoft.Extensions.Hosting.Internal.Host[1]\r\n      Hosting starting\r\ninfo: Microsoft.Hosting.Lifetime[14]\r\n      Now listening on: https://localhost:54321\r\ninfo: Microsoft.Hosting.Lifetime[0]\r\n      Application started. Press Ctrl+C to shut down.\r\ninfo: Microsoft.Hosting.Lifetime[0]\r\n      Hosting environment: Development\r\ninfo: Microsoft.Hosting.Lifetime[0]\r\n      Content root path: C:\\Projects\\Demo\\Server\\\r\ndbug: Microsoft.Extensions.Hosting.Internal.Host[2]\r\n      Hosting started\r\nwarn: Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationHandler[2]\r\n      Certificate validation failed, subject was CN=localhost. PartialChain A certificate chain could not be built to a trusted root authority.\r\nSystem.Exception: Client certificate failed validation.\r\nwarn: Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationHandler[2]\r\n      Certificate validation failed, subject was CN=localhost. PartialChain A certificate chain could not be built to a trusted root authority.\r\nSystem.Exception: Client certificate failed validation.\r\n```",
                                           "updatedAt":  "2023-05-15T07:37:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85cTJlq",
                                           "createdAt":  "2023-05-15T20:23:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "halter73",
                                           "body":  "@blowdart @Tratcher Do either of you know whether this is a supported scenario for `AddCertificate`? This sets `options.ValidateCertificateUse = false`, but that just disables the EKU check.\r\n\r\nI don\u0027t see a way to completely disable validating the chain. Do you need to add the root or self-signed certificate to `CertificateAuthenticationOptions.CustomTrustStore`? That\u0027d be my guess. We probably don\u0027t want to make it too easy to accept literally any certificate with the `CertificateAuthenticationHandler` even if Kestrel allows it during the TLS handshake.",
                                           "updatedAt":  "2023-05-15T20:23:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85clhny",
                                           "createdAt":  "2023-05-18T16:54:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mkArtakMSFT",
                                           "body":  "@blowdart, @Tratcher can you confirm the above ? Thanks!",
                                           "updatedAt":  "2023-05-18T16:54:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85cncg5",
                                           "createdAt":  "2023-05-19T00:21:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "I\u0027d still be guessing like Stephen, but ValidateCertificateUse is definitely only limited to EKU checks, as that\u0027s what the use refers to. Completely separate to chain trusts or anything of that ilk. The CustomTrustStore would be the way to go",
                                           "updatedAt":  "2023-05-19T00:21:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85dE4pX",
                                           "createdAt":  "2023-05-24T16:39:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "halter73",
                                           "body":  "@blowdart Would we consider adding something like `CertificateAuthenticationOptions.ClientCertificateValidation` that allows you to have complete control over cert validation using a bool-returning delegate? And bypass any default cert chain or EKU checks?\r\n\r\nThis would be similar to what Kestrel (`ClientCertificateValidation`), HttpClient (`ServerCertificateValidationCallback`) and SslStream (`RemoteCertificateValidationCallback`) already expose. @javiercn sounds like he\u0027d be in favor of this.",
                                           "updatedAt":  "2023-05-24T16:39:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85dE6Zl",
                                           "createdAt":  "2023-05-24T16:43:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODG90xQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Vaccano",
                                                                               "createdAt":  "2023-09-15T19:07:25Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "javiercn",
                                           "body":  "Yeah, it\u0027s very aggressive that we don\u0027t leave a backdoor for development in these cases. Forces people into a non-trivial dev setup.",
                                           "updatedAt":  "2023-05-24T16:43:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85dE6el",
                                           "createdAt":  "2023-05-24T16:43:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "At that point why even use the cert auth handler?",
                                           "updatedAt":  "2023-05-24T16:43:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85dE9Tw",
                                           "createdAt":  "2023-05-24T16:48:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "I have no problem with it, as long as it\u0027s off by default.\r\n\r\nYou should mirror HttpClientHandler.DangerousAcceptAnyServerCertificateValidator\u0027s approach and ensure there\u0027s one named the same way that will work for cert auth.",
                                           "updatedAt":  "2023-05-24T16:48:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85dJKor",
                                           "createdAt":  "2023-05-25T10:43:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexiwonder",
                                           "body":  "Hello all,\r\nSorry for interrupting your conversation. \r\nJust wanted to update you that I made a small change by removing \r\n`options.ChainTrustValidationMode = X509ChainTrustMode.CustomRootTrust;` line and now the server is accepting the presented client certificate. Plus, `OnAuthenticationFailed` callback is not invoked anymore:\r\n```\r\n.AddCertificate(options =\u003e\r\n{\r\n   options.RevocationMode = X509RevocationMode.NoCheck;\r\n   options.AllowedCertificateTypes = CertificateTypes.All;\r\n}\r\n```\r\nI also cleaned up some of the configs that appeared to have no impact on both Kestrel and certificate authentication in the scenario of disabling all the client certificate validations.\r\n\r\nSo the final working version of the server is:\r\n```\r\npublic class Program\r\n{\r\n    public static void Main(string[] args)\r\n    {\r\n        var builder = WebApplication.CreateBuilder(args);\r\n\r\n        builder.Services.Configure\u003cKestrelServerOptions\u003e(options =\u003e\r\n        {\r\n            options.ConfigureHttpsDefaults(options =\u003e\r\n            {\r\n                options.AllowAnyClientCertificate();\r\n                options.ClientCertificateMode = ClientCertificateMode.AllowCertificate;\r\n            });\r\n        });\r\n\r\n        // Add services to the container.\r\n\r\n        builder.Services.AddControllers();\r\n\r\n        ConfigureServices(builder.Services);\r\n\r\n        var app = builder.Build();\r\n\r\n        // Configure the HTTP request pipeline.\r\n\r\n        app.UseHttpsRedirection();\r\n\r\n        app.UseAuthentication();\r\n\r\n        app.MapControllers();\r\n\r\n        app.Run();\r\n    }\r\n\r\n    private static void ConfigureServices(IServiceCollection services)\r\n    {\r\n        services\r\n           .AddAuthentication(CertificateAuthenticationDefaults.AuthenticationScheme)\r\n           .AddCertificate(options =\u003e\r\n           {\r\n               options.RevocationMode = X509RevocationMode.NoCheck;\r\n               options.AllowedCertificateTypes = CertificateTypes.All;\r\n\r\n               options.Events = new CertificateAuthenticationEvents\r\n               {\r\n                   OnAuthenticationFailed = p =\u003e\r\n                   {\r\n                       Console.WriteLine(p.Exception);\r\n                       return Task.CompletedTask;\r\n\r\n                   },\r\n                   OnCertificateValidated = context =\u003e\r\n                   {\r\n                       // Add certificate to HttpContext.Items\r\n                       context.HttpContext.Items[\"ClientCertificate\"] = context.ClientCertificate;\r\n                       return Task.CompletedTask;\r\n                   }\r\n               };\r\n           });\r\n    }\r\n}\r\n```\r\nI have no solid explanation why this is working. Any clarification is highly appreciated.\r\n\r\nThanks all for your attention.",
                                           "updatedAt":  "2023-05-25T10:43:42Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85mn2Hq",
                                           "createdAt":  "2023-09-15T19:06:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Vaccano",
                                           "body":  "I too would love an explanation as to why this worked for alexiwonder.  I have been stuck with this same issue for a while and I cannot seem to find a way around it.\r\n\r\nI tried alexiwonder\u0027s code and I still hit the `OnAuthenticationFailed` event.\r\n\r\nI struggle on how to implement the \u0027CustomTrustStore`, as I don\u0027t own certificate that our company uses to sign all of our internal certificates...",
                                           "updatedAt":  "2023-09-15T19:06:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85mn8xD",
                                           "createdAt":  "2023-09-15T19:34:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Vaccano",
                                           "body":  "I was able to get a copy of our root cert for the `CustomTrustStore`.  Adding that in got it working! Here is some sample code:\r\n\r\n```\r\nvar certString = \"-----BEGIN CERTIFICATE-----\\r\\nIMI     \u003eYour Cert Data Here\u003c   humv\\r\\n-----END CERTIFICATE-----\";\r\nReadOnlySpan\u003cchar\u003e rootCert = new ReadOnlySpan\u003cchar\u003e(certString .ToCharArray());\r\nvar rootCertificate2 = X509Certificate2.CreateFromPem(rootCert);\r\noptions.CustomTrustStore.Add(rootCertificate2);\r\noptions.ChainTrustValidationMode = X509ChainTrustMode.CustomRootTrust;\r\n```\r\n\r\nThis is added in the `AddCertificate` lambda method.",
                                           "updatedAt":  "2023-09-15T19:34:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85zFmvC",
                                           "createdAt":  "2024-02-06T22:16:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2024-02-06T22:16:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86A9jAf",
                                           "createdAt":  "2024-06-12T18:00:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "stephannn",
                                           "body":  "Hi @Vaccano ,\r\nI am struggling with the same issue. I modified my code like that:\r\n\r\n```\r\n            options.RevocationMode = X509RevocationMode.NoCheck;\r\n            options.AllowedCertificateTypes = CertificateTypes.All;\r\n\r\n            List\u003cstring\u003e customTrust = builder.Configuration.GetSection(\"Certificate\").GetSection(\"TrustStore\").Get\u003cList\u003cstring\u003e\u003e() ?? new List\u003cstring\u003e();  \r\n            if (customTrust != null \u0026\u0026 customTrust.Count != 0)\r\n            {\r\n                foreach (var customTrustSingle in customTrust) {\r\n                    try\r\n                    {\r\n                        options.CustomTrustStore.Add(new X509Certificate2(Path.Combine(customTrustSingle)));\r\n                        Console.WriteLine($\"Added custom trust certificate: {customTrustSingle}\");\r\n                    }\r\n                    catch (Exception ex)\r\n                    {\r\n                        Console.WriteLine($\"Failed to add custom trust certificate: {customTrustSingle}, Error: {ex.Message}\");\r\n                    }\r\n                }\r\n                options.ChainTrustValidationMode = X509ChainTrustMode.CustomRootTrust;\r\n            }\r\n           \r\n            options.ValidateCertificateUse = false;\r\n            options.ValidateValidityPeriod = false;\r\n```\r\n\r\nin the customTrust list I load my root and intermediate certificate but getting still the warning about it:\r\n```\r\nCertificate validation failed, subject was CN=PC1.contoso.com. PartialChain unable to get local issuer certificate\r\nMicrosoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationHandler: Warning: Certificate validation failed, subject was CN=PC1.contoso.org. PartialChain unable to get local issuer certificate\r\n```\r\nand it hits the OnAuthenticationFailed event.\r\n\r\nI also uploaded it to an Azure Web App and I also cannot use the certificate authentication. I have to say, I do not know how to add the root and intermediate cert to the Web App, but this is actually the CustomRootStore for, isn\u0027t it?\r\n\r\nEdit:\r\nIssue was a new intermediate cert that I did not put. After that it hits the OnCertificateValidated event. Please ignore!",
                                           "updatedAt":  "2024-06-13T10:34:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86KxiwG",
                                           "createdAt":  "2024-09-04T08:31:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Varorbc",
                                           "body":  "I wonder what the CustomRootStore does and it doesn\u0027t work for me either",
                                           "updatedAt":  "2024-09-04T08:31:26Z"
                                       }
                                   ],
                         "totalCount":  18
                     },
        "title":  "How to accept a client certificate signed by an untrusted CA in Asp .netcore?",
        "labels":  [
                       "enhancement",
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/49176",
        "createdAt":  "2023-07-03T12:16:08Z",
        "number":  49176,
        "author":  "DavidThielen",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCzJV6Q==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ThinkElevenDave",
                                            "createdAt":  "2023-10-09T12:53:08Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2024-02-13T01:31:29Z",
        "body":  "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Is your feature request related to a problem? Please describe the problem.\r\n\r\nI wish to have RevalidatingServerAuthenticationStateProvider improved to accomplish the following:\r\n\r\n1. Revalidate immediately upon the start of a new circuit/session as the retained AuthenticationState that is used upon establishing the circuit is from a cookie (as I understand it) that may be from a session 5 seconds ago, but also 5 days ago.\r\n2. When revalidating, update the user so it has the latest claims as those have just been read from the DB. You have it - use it.\r\n3. Provide a call to revalidate immediately. If my code is updating the user account and gets a DbUpdateConcurrencyException for the update (due to that record not existing), then need to revalidate immediately.\r\n\r\n### Describe the solution you\u0027d like\r\n\r\nItems 1 \u0026 3 above can be solved by changing Task.Delay() to a ManualResetEvent that has a timeout of RevalidationInterval but can also be signaled. And move the location of that to the bottom of the `while (!cancellationToken.IsCancellationRequested)` loop so when the task is first started, it revalidates immediately.\r\n\r\nItem 2 can be resolved easiest in RevalidatingIdentityAuthenticationStateProvider where it calls base.SetAuthenticationState() with the user it read in. That\u0027s easiest. \r\n\r\nWith that said, I think a better solution is for RevalidatingServerAuthenticationStateProvider.ValidateAuthenticationStateAsync to be defined as returning a `Task\u003cAuthenticationState\u003e` where null means not valid and non-null is then set. However, that would break the API and as such is probably not a good idea.\r\n\r\n### Additional context\r\n\r\n**Update:** For item 2 above, I misunderstood something. This is not easy unless there\u0027s a call somewhere I am not aware of. It remains a very useful goal. But is there a way to get a ClaimsPrincipal rebuilt anew from what\u0027s in the Identity database? Or takes the existing AuthenticationState and updates the Claims and whatever else to create a ClaimsPrincipal that matches the database?\r\n\r\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOaHwSzw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85gr9sE",
                                           "createdAt":  "2023-07-05T16:54:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mkArtakMSFT",
                                           "body":  "Thanks for contacting us.\r\nThe RevalidatingServerAuthenticationStateProvider type is expected to be overridden, as it\u0027s [done in the template](https://github.com/dotnet/aspnetcore/blob/release/7.0/src/ProjectTemplates/Web.ProjectTemplates/content/BlazorServerWeb-CSharp/Areas/Identity/RevalidatingIdentityAuthenticationStateProvider.cs).\r\nYou can customize the logic as you wish in the child class. If you believe this is impossible, please clarify why.",
                                           "updatedAt":  "2023-07-05T16:54:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85gr9vs",
                                           "createdAt":  "2023-07-05T16:54:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Hi @DavidThielen. We have added the \"Needs: Author Feedback\" label to this issue, which indicates that we have an open question for you before we can take further action. This issue will be closed automatically in 7 days if we do not hear back from you by then - please feel free to re-open it if you come back to this issue after that time.",
                                           "updatedAt":  "2023-07-05T16:54:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85gsjA3",
                                           "createdAt":  "2023-07-05T18:46:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODJDQCg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ThinkElevenDave",
                                                                               "createdAt":  "2023-10-09T12:54:39Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "DavidThielen",
                                           "body":  "@mkArtakMSFT  - right, the suggested approach is to implement my own ValidateAuthenticationStateAsync. The thing is, to accomplish the above I would need to replace RevalidatingServerAuthenticationStateProvider. Not extend, but replace it (which is what I have done).\r\n\r\nThe template suggests extending RevalidatingServerAuthenticationStateProvider and only implementing ValidateAuthenticationStateAsync retaining RevalidatingServerAuthenticationStateProvider.GetAuthenticationStateAsync.\r\n\r\nWhat I did was extend ServerAuthenticationStateProvider and implement the above three features. But I think it would be helpful/useful for other programmers if they did not have to implement ServerAuthenticationStateProvider.GetAuthenticationStateAsync.\r\n\r\nIs this sufficient explanation?\r\n\r\nthanks - dave",
                                           "updatedAt":  "2023-07-05T18:46:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85gzBid",
                                           "createdAt":  "2023-07-06T16:41:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2023-07-06T16:41:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85ofBLP",
                                           "createdAt":  "2023-10-09T12:56:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ThinkElevenDave",
                                           "body":  "Hi @DavidThielen \r\nI believe we also have an open [post relating](https://github.com/dotnet/aspnetcore/issues/50858) to this challenge.  I\u0027m following this post as you\u0027ve already gone that extra step and it\u0027s interesting to read your thoughts.",
                                           "updatedAt":  "2023-10-09T12:56:19Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "Suggested improvements to RevalidatingServerAuthenticationStateProvider",
        "labels":  [
                       "enhancement",
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/49221",
        "createdAt":  "2023-07-05T12:34:36Z",
        "number":  49221,
        "author":  "Jimmys20",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC4owVA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "twofingerrightclick",
                                            "createdAt":  "2024-04-25T04:41:49Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "hjrb",
                                            "createdAt":  "2024-06-14T15:17:38Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2024-07-25T10:28:45Z",
        "body":  "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Describe the bug\r\n\r\nHello I have a Blazor WASM application that implements OIDC authentication using [authentication library](https://learn.microsoft.com/en-us/aspnet/core/blazor/security/webassembly/standalone-with-authentication-library?view=aspnetcore-7.0\u0026tabs=visual-studio). I\u0027m having a problem when users return back to the previous login URL by pressing the browser back button. This issue is described in more detail here: https://github.com/IdentityModel/oidc-client-js/issues/940. Doing some debugging I noticed that indeed I\u0027m getting a \"No matching state found in storage\" error from Microsoft.AspNetCore.Components.WebAssembly.Authentication/AuthenticationService.js. \r\n\r\n![No matching state](https://github.com/dotnet/aspnetcore/assets/34100964/b5109a62-280a-4763-911e-63ad652ca967)\r\n\r\nThis is expected behavior because the state is deleted from storage after successful login. What I would like to ask is a way to better handle this error. Right now it gets stuck Completing login... without showing any error to the user or the browser console. I would expect `RemoteAuthenticatorView` to switch to the `LogInFailed` RenderFragment and show the error that occurred.\r\n\r\nWhat is the best way to handle this error?\r\n\r\n\r\n### Expected Behavior\r\n\r\n_No response_\r\n\r\n### Steps To Reproduce\r\n\r\n_No response_\r\n\r\n### Exceptions (if any)\r\n\r\n_No response_\r\n\r\n### .NET Version\r\n\r\n_No response_\r\n\r\n### Anything else?\r\n\r\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOhhxAng==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85gqPC1",
                                           "createdAt":  "2023-07-05T12:43:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "javiercn",
                                           "body":  "@Jimmys20 thanks for contacting us.\r\n\r\nCan you describe the sequence of pages you visit/actions you perform as part of the flow?",
                                           "updatedAt":  "2023-07-05T12:43:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85gqju_",
                                           "createdAt":  "2023-07-05T13:33:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Jimmys20",
                                           "body":  "Sure, `https://localhost:3375/` is the Blazor WASM application and `https://localhost:3371/` is the OIDC provider (IdentityServer 4) and authorization code flow is implemented between them.\r\n\r\n1. User visits `https://localhost:3375`\r\n1. User is not authenticated so he gets redirected to the `Authentication.razor` page (`NavigationManager.NavigateToLogin($\"authentication/login\");`).\r\n1. `Authentication.razor` starts the the login process and redirects the user to the Identity Provider. `https://localhost:3371/Account/Login?ReturnUrl=...`\r\n2. User enters credentials, submits login form and gets redirected back to `https://localhost:3375/authentication/login-callback?code=...`\r\n3. `Authentication.razor` completes the login process successfully and redirects the user to `https://localhost:3375` (`Index.razor`).\r\n4. Now the user presses the browser back button and goes back to the Identity Provider `https://localhost:3371/Account/Login?ReturnUrl=...`.\r\n5. Submits login form second time and is redirected to `https://localhost:3375/authentication/login-callback?code=...`\r\n6. `Authentication.razor` tries to process login callback but gets stuck on `Completing login...` because \"No matching state found in storage\" occurs.",
                                           "updatedAt":  "2023-07-05T13:38:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85gr6jz",
                                           "createdAt":  "2023-07-05T16:45:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2023-07-05T16:45:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85toJkC",
                                           "createdAt":  "2023-12-04T18:35:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DigitalSauce",
                                           "body":  "Is there any workaround here?",
                                           "updatedAt":  "2023-12-04T18:35:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86BPPQi",
                                           "createdAt":  "2024-06-14T15:17:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hjrb",
                                           "body":  "I get the same issue",
                                           "updatedAt":  "2024-06-14T15:17:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86BPU7c",
                                           "createdAt":  "2024-06-14T15:31:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Jimmys20",
                                           "body":  "In my case, I worked around this by changing the behavior of Identity Server so that it doesn\u0027t show the Login page if the user is already logged in. Instead it shows an \"already logged in\" message and instructs the user to return to the app.\r\n\r\nIn `AccountController.cs` I changed the Login action to:\r\n\r\n```\r\n[HttpGet]\r\npublic async Task\u003cIActionResult\u003e Login(string returnUrl)\r\n{\r\n    // added these lines\r\n    if (User.Identity.IsAuthenticated)\r\n    {\r\n        return View(\"LoggedIn\", returnUrl);\r\n    }\r\n\r\n    var vm = await BuildLoginViewModelAsync(returnUrl);\r\n\r\n    return View(vm);\r\n}\r\n```\r\n\r\nand the `LoggedIn.cshtml`:\r\n\r\n```\r\n@using IdentityServer4.Services\r\n@inject IIdentityServerInteractionService InteractionService\r\n\r\n@model string\r\n@{\r\n    ViewData[\"Title\"] = \"Logged In\";\r\n}\r\n\u003ch1\u003e@ViewData[\"Title\"]\u003c/h1\u003e\r\n\r\n\u003ch4\u003eYou are already logged in.\u003c/h4\u003e\r\n\r\n@{\r\n    var context = await InteractionService.GetAuthorizationContextAsync(Model);\r\n\r\n    if (context?.Client != null \u0026\u0026 context.Client.Properties.TryGetValue(\"ClientUri\", out string clientUri))\r\n    {\r\n        \u003ca class=\"btn btn-primary\" href=\"@clientUri\"\u003eReturn to @context.Client.ClientName\u003c/a\u003e\r\n    }\r\n}\r\n\r\n\u003ca class=\"btn btn-outline-secondary\" asp-controller=\"Account\" asp-action=\"Logout\"\u003eLogout\u003c/a\u003e\r\n```",
                                           "updatedAt":  "2024-06-14T15:31:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86BPW7-",
                                           "createdAt":  "2024-06-14T15:35:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hjrb",
                                           "body":  "\u003e I get the same issue\r\n\r\nIn my case I can reproduce what is causing the issue. A component is calling some API requiring an access token (authenticated) - while the user authentication has not finished. This will throw an Exception which is being caught in the JS code. Theoretically this should not cause any issues. But is does. Obviously catching the exception causes that other steps that should be executed will not be executed. If you care (not so sure with MS these days) I can give you more details.\r\n",
                                           "updatedAt":  "2024-06-14T15:35:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86BPXxJ",
                                           "createdAt":  "2024-06-14T15:38:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hjrb",
                                           "body":  "\u003e I get the same issue\r\n\r\nIn my case the I can reproduce what is causing the issue. A component is calling some API - while the user authentication is not finished. This will throw an Exception which is being caught in the JS code. Theoretically this should not cause any issues. But is does. Obviously catching the excpetion causes that other steps that should be executed will not be executed. If you care (not so sure with MS these days) I can give you ",
                                           "updatedAt":  "2024-06-14T15:38:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86GHECe",
                                           "createdAt":  "2024-07-25T10:27:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "iambigred",
                                           "body":  "I am experiencing the same error, although slightly different circumstances.  In my case the \"state\" query parameter is not being extracted from the URL correctly.  The URLSearchParams returns null for the \"e\" (state) variable as the url is in the format /authentication/login-callback**#**error=..., rather than /authentication/login-callback**?**error=...,\r\n\r\nWith this being a blazor app it uses the hash syntax rather than question mark.\r\n\r\n![image](https://github.com/user-attachments/assets/228756d2-099d-4f3d-9891-14c4018e2811)\r\n\r\nAny ideas on how this can be amended?\r\n",
                                           "updatedAt":  "2024-07-25T10:28:45Z"
                                       }
                                   ],
                         "totalCount":  9
                     },
        "title":  "Blazor RemoteAuthenticatorView stuck in \"Completing login...\" after \"No matching state found\" error",
        "labels":  [
                       "investigate",
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/49334",
        "createdAt":  "2023-07-11T17:09:11Z",
        "number":  49334,
        "author":  "rbhanda",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-02-13T01:30:45Z",
        "body":  "# Microsoft Security Advisory CVE-2023-33170: .NET Security Feature Bypass Vulnerability\r\n\r\n## \u003ca name=\"executive-summary\"\u003e\u003c/a\u003eExecutive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core 2.1 and above. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA vulnerability exist in ASP.NET  Core applications where account lockout maximum failed attempts may not be immediately updated, allowing an attacker to try more passwords.\r\n\r\n## Announcement\r\n\r\nAnnouncement for this issue can be found at https://github.com/dotnet/announcements/issues/264\r\n\r\n### \u003ca name=\"mitigation-factors\"\u003e\u003c/a\u003eMitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## \u003ca name=\"affected-software\"\u003e\u003c/a\u003eAffected software\r\n\r\n* Any ASP.NET 7.0 application running on .NET 7.0.8 or earlier.\r\n* Any ASP.NET 6.0 application running on .NET 6.0.19 or earlier.\r\n* Any ASP.NET Core 2.1 application consuming the package Microsoft.AspNetCore.Identity version 2.1.31 or earlier.\r\n\r\nIf your application uses the following package versions, ensure you update to the latest version of .NET.\r\n\r\n### \u003ca name=\"ASP.NET Core 2.1\"\u003e\u003c/a\u003eASP.NET Core 2.1\r\n\r\nPackage name | Affected version | Patched version\r\n------------ | ---------------- | -------------------------\r\n[ Microsoft.AspNetCore.Identity](https://www.nuget.org/packages/Microsoft.AspNetCore.Identity/2.1.39)      | \u003c=2.1.39 | 2.1.39\r\n\r\n### \u003ca name=\"Microsoft.AspNet.Identity.Owin\"\u003e\u003c/a\u003eMicrosoft.AspNet.Identity.Owin\r\nPackage name | Affected version | Patched version\r\n------------ | ---------------- | -------------------------\r\n[ Microsoft.AspNet.Identity.Owin](https://www.nuget.org/packages/Microsoft.AspNet.Identity.Owin)    |  \u003c= 2.2.3 | 2.2.4\r\n\r\n\r\n### \u003ca name=\"ASP.NET 6\"\u003e\u003c/a\u003eASP.NET 6.0\r\n\r\nPackage name | Affected version | Patched version\r\n------------ | ---------------- | -------------------------\r\n\r\n[Microsoft.AspNetCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm)               |  \u003c= 6.0.19 | 6.0.20\r\n[Microsoft.AspNetCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm64)           |  \u003c= 6.0.19 | 6.0.20\r\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm)     |  \u003c= 6.0.19 | 6.0.20\r\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm64) |  \u003c= 6.0.19 | 6.0.20\r\n[Microsoft.AspNetCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-x64)     |  \u003c= 6.0.19 | 6.0.20\r\n[Microsoft.AspNetCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-x64)               |  \u003c= 6.0.19 | 6.0.20\r\n[Microsoft.AspNetCore.App.Runtime.osx-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-arm64)               |  \u003c= 6.0.19 | 6.0.20\r\n[Microsoft.AspNetCore.App.Runtime.osx-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-x64)                   |  \u003c= 6.0.19 | 6.0.20\r\n[Microsoft.AspNetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm)                   |  \u003c= 6.0.19 | 6.0.20\r\n[Microsoft.AspNetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm64)               |  \u003c= 6.0.19 | 6.0.20\r\n[Microsoft.AspNetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x64)                   |  \u003c= 6.0.19 | 6.0.20\r\n[Microsoft.AspNetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x86)                   |  \u003c= 6.0.19 | 6.0.20\r\n\r\n\r\n### \u003ca name=\"ASP.NET 7\"\u003e\u003c/a\u003eASP.NET 7.0\r\n\r\nPackage name | Affected version | Patched version\r\n------------ | ---------------- | -------------------------\r\n[Microsoft.AspNetCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm)               |  \u003c= 7.0.9 | 7.0.9\r\n[Microsoft.AspNetCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm64)           |  \u003c= 7.0.9 | 7.0.9\r\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm)     |  \u003c= 7.0.9 | 7.0.9\r\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm64) |  \u003c= 7.0.9 | 7.0.9\r\n[Microsoft.AspNetCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-x64)     |  \u003c= 7.0.9 | 7.0.9\r\n[Microsoft.AspNetCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-x64)               |  \u003c= 7.0.9 | 7.0.9\r\n[Microsoft.AspNetCore.App.Runtime.osx-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-arm64)               |  \u003c= 7.0.9 | 7.0.9\r\n[Microsoft.AspNetCore.App.Runtime.osx-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-x64)                   |  \u003c= 7.0.9 | 7.0.9\r\n[Microsoft.AspNetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm)                   |  \u003c= 7.0.9 | 7.0.9\r\n[Microsoft.AspNetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm64)               |  \u003c= 7.0.9 | 7.0.9\r\n[Microsoft.AspNetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x64)                   |  \u003c= 7.0.9 | 7.0.9\r\n[Microsoft.AspNetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x86)                   |  \u003c= 7.0.9 | 7.0.9\r\n\r\n\r\n\r\n## Advisory FAQ\r\n\r\n### \u003ca name=\"how-affected\"\u003e\u003c/a\u003eHow do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-software), you\u0027re exposed to the vulnerability.\r\n\r\n### \u003ca name=\"how-fix\"\u003e\u003c/a\u003eHow do I fix the issue?\r\n\r\n* To fix the issue please install the latest version of .NET 6.0 or .NET 7.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\r\n* If you are using one of the affected packages, please update to the patched version listed above.\r\n* If you have .NET 6.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n Commit:    8473146e7d\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n  Commit:  8473146e7d\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* If you\u0027re using .NET 7.0, you should download and install Runtime 7.0.9 or SDK 7.0.109 (for Visual Studio 2022 v17.4) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n* If you\u0027re using .NET 6.0, you should download and install Runtime 6.0.20 or SDK 6.0.315 (for Visual Studio 2022 v17.2) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n* If you\u0027re using ASP.NET Core 2.1 and consuming the Microsoft.AspNetCore.Identity package, update that package to version [2.1.39](https://www.nuget.org/packages/Microsoft.AspNetCore.Identity/2.1.39)\r\n\r\n.NET 6.0 and and .NET 7.0 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update \u0026 Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you\u0027ve deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET 6.0 or .NET 7.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core \u0026 .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at \u003chttps://aka.ms/corebounty\u003e.\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2023-33170]( https://www.cve.org/CVERecord?id=CVE-2023-33170)\r\n\r\n### Revisions\r\n\r\nV1.0 (July 11, 2023): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2023-07-11_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOYyDOsQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85hQC4o",
                                           "createdAt":  "2023-07-11T22:36:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "johnkors",
                                           "body":  "\u003eAffected software\r\n\r\n\u003eAny ASP.NET 7.0 application running on .NET 7.0.8 or earlier.\r\n\r\n\u003eIf you\u0027re using .NET 7.0, you should download and install Runtime 7.0.7\r\n\r\n🤔\r\n\r\n",
                                           "updatedAt":  "2023-07-11T22:36:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85hQaIp",
                                           "createdAt":  "2023-07-12T00:48:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODAfXgQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "rbhanda",
                                                                               "createdAt":  "2023-07-12T15:29:18Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "\u003e 🤔\r\n\r\nI believe I corrected the post -- @rbhanda please confirm.",
                                           "updatedAt":  "2023-07-12T00:48:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85hUDSi",
                                           "createdAt":  "2023-07-12T14:35:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODAfXiQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "rbhanda",
                                                                               "createdAt":  "2023-07-12T15:29:21Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "Kahbazi",
                                           "body":  "@rbhanda The link for the announcement is the wrong issue. I believe this is the correct one. https://github.com/dotnet/announcements/issues/264",
                                           "updatedAt":  "2023-07-12T14:35:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85hUe3B",
                                           "createdAt":  "2023-07-12T15:31:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "rbhanda",
                                           "body":  "\u003e @rbhanda The link for the announcement is the wrong issue. I believe this is the correct one. [dotnet/announcements#264](https://github.com/dotnet/announcements/issues/264)\r\n\r\nSorry about that. I corrected the links and the text in the [announcement ](https://github.com/dotnet/announcements/issues/264) and this issue",
                                           "updatedAt":  "2023-07-12T15:31:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85hVoWw",
                                           "createdAt":  "2023-07-12T19:05:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "phenning",
                                           "body":  "@rbhanda Can you confirm whether this vulnerability exists in [Microsoft.AspNet.Identity.Owin](https://www.nuget.org/packages/Microsoft.AspNet.Identity.Owin) when targeting .NET Framework TFMS (non NET Core)?\r\n\r\nIt\u0027s not super clear in the bullet points under affected software, even though it is listed in the table below.",
                                           "updatedAt":  "2023-07-12T19:09:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85hVr0M",
                                           "createdAt":  "2023-07-12T19:15:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "rbhanda",
                                           "body":  "\u003e @rbhanda Can you confirm whether this vulnerability exists in [Microsoft.AspNet.Identity.Owin](https://www.nuget.org/packages/Microsoft.AspNet.Identity.Owin) when targeting .NET Framework TFMS (non NET Core)?\r\n\u003e \r\n\u003e It\u0027s not super clear in the bullet points under affected software, even though it is listed in the table below.\r\n\r\n@GrabYourPitchforks @halter73 ",
                                           "updatedAt":  "2023-07-12T19:15:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85hXnnR",
                                           "createdAt":  "2023-07-13T05:40:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "halter73",
                                           "body":  "Yes. It affects any consumer of Microsoft.AspNet.Identity.Owin using the account lockout feature including but not limited to full framework.",
                                           "updatedAt":  "2023-07-13T05:40:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85hgmrR",
                                           "createdAt":  "2023-07-14T14:21:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "phenning",
                                           "body":  "\u003e Yes. It affects any consumer of Microsoft.AspNet.Identity.Owin using the account lockout feature including but not limited to full framework.\r\n\r\nThanks Stephen, wanted to make sure before we started updating the .NET Framework templates in Visual Studio to use the new version.",
                                           "updatedAt":  "2023-07-14T14:21:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85iEq2j",
                                           "createdAt":  "2023-07-21T10:53:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "11qqaazzqwerty",
                                           "body":  "Is it really fixed in version 6.0.20?\r\nMicrosoft Defender for Cloud treat this version as affected:\r\n![image](https://github.com/dotnet/aspnetcore/assets/121670476/33597acd-5f9e-4e18-8e58-7d285e90947f)\r\n\r\n\r\n",
                                           "updatedAt":  "2023-07-21T10:53:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85jF8k7",
                                           "createdAt":  "2023-08-02T16:11:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "peterlukerow",
                                           "body":  "@halter73 \r\n\u003e Yes. It affects any consumer of Microsoft.AspNet.Identity.Owin using the account lockout feature including but not limited to full framework.\r\n\r\nI\u0027m still not clear on this, it\u0027s all a little confusing. I\u0027m using .NET 4.8 which is not listed as one of the affect .NETs. Here you state it doesn\u0027t matter which framework you are on it\u0027s the version of Microsoft.AspNet.Identity.Owin.\r\n\r\nHowever, on [(https://github.com/github/advisory-database/pull/2496)] it says that for Microsoft.AspNet.Identity.Owin you need at least version 7.0.9, however in VS 2019 when managing nugets for the solution we are using v2.2.3 and it says that v2.2.4 is the latest stable, there is no v7.0.9 to upgrade to, thus my confusion.\r\n\r\nIn a recent external pen test of our web app and on anecdotal evidence an account is always locked out after the number of times configured in our SQL DB, i.e. after 5 invalid attempts, 6th attempt fails even if you use valid credentials. ",
                                           "updatedAt":  "2023-08-02T16:12:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85jIM6x",
                                           "createdAt":  "2023-08-02T23:30:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODClajQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "peterlukerow",
                                                                               "createdAt":  "2023-08-03T09:11:59Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "halter73",
                                           "body":  "v2.2.4 is the latest stable. https://github.com/https://github.com/github/advisory-database/pull/2496 is an outdated PR between feature branches. If you take a look at [what\u0027s currently in the `main` branch](https://github.com/github/advisory-database/blob/df30e8a3304bb2887c17f2b63a5c57131b527966/advisories/github-reviewed/2023/07/GHSA-25c8-p796-jg6r/GHSA-25c8-p796-jg6r.json#L37-L55), that indicates 2.2.4 is the patched version just like the announcement at https://github.com/dotnet/announcements/issues/264.",
                                           "updatedAt":  "2023-08-02T23:30:07Z"
                                       }
                                   ],
                         "totalCount":  11
                     },
        "title":  "Microsoft Security Advisory CVE-2023-33170: .NET Security Feature Bypass Vulnerability",
        "labels":  [
                       "area-auth",
                       "announcement"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/49431",
        "createdAt":  "2023-07-15T10:53:06Z",
        "number":  49431,
        "author":  "amiru3f",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC0O1Ig==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "miladashrafi",
                                            "createdAt":  "2023-07-19T21:48:47Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "migueloliveiradev",
                                            "createdAt":  "2023-11-26T15:33:52Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2024-09-12T21:19:43Z",
        "body":  "Note: the original suggestion is moot - there\u0027s a new proposal [further down](https://github.com/dotnet/aspnetcore/issues/49431#issuecomment-1636977890).\r\n\r\n## Background and Motivation\r\n\r\nHey guys.\r\n\r\nAs you know, there are several ways of `Authorization` in Aspnetcore. `Policy`, `Role`, and `Claim` based authorization.\r\nConsider a situation that I want to protect a specific action (either in`MinimalApi` or `Controller` based style) depending on some specific user `Permissions` with the following considerations:\r\n* Permissions are simply located in the user claims with ClaimType=permission\r\n* Claims are available in either JWT, SAML token or even intercepted through `IClaimsTransformation` before entering the authorization process\r\n\r\nAs an example, the user claims look like sth like this:\r\n```json\r\n{\r\n \"sub\": \"user_id\",\r\n \"permission\": [\"P1\", \"P2\"]\r\n}\r\n``` \r\n\r\nThere is an easy way to have this in **MinimalApis**:\r\n\r\n```c#\r\napp.MapGet(\"/\", () =\u003e \"Granted\").RequireAuthorization(policy =\u003e policy.RequireClaim(\"permission\", \"P1\"));\r\n``` \r\nBut what about `Controller Actions`? The developer must hack all of the following steps!\r\n\r\n```c#\r\nbuilder.Services.AddAuthorization(options =\u003e\r\n{\r\n    options.AddPolicy(\"RequiresPermission\", policy =\u003e policy.AddRequirements(new MustHavePermissionRequirement()));\r\n});\r\n\r\n```\r\n```c#\r\n[RequiresPermission(\"P1\")]\r\npublic async Task\u003cstring\u003e Index()\r\n{\r\n    return \"Granted\";\r\n}\r\n``` \r\n```c#\r\n[AttributeUsage(AttributeTargets.Class | AttributeTargets.Method)]\r\ninternal sealed class RequiresPermissionAttribute : Attribute, IAuthorizeData\r\n{\r\n    public string Permissions { get; }\r\n    public RequiresPermissionAttribute(string permissions)\r\n    {\r\n        Permissions = permissions;\r\n        Policy = \"RequiresPermission\";\r\n    }\r\n\r\n    //\r\n    // Summary:\r\n    //     Gets or sets the policy name that determines access to the resource.\r\n    public string? Policy { get; set; }\r\n\r\n    //\r\n    // Summary:\r\n    //     Gets or sets a comma delimited list of roles that are allowed to access the resource.\r\n    public string? Roles { get; set; }\r\n\r\n    //\r\n    // Summary:\r\n    //     Gets or sets a comma delimited list of schemes from which user information is\r\n    //     constructed.\r\n    public string? AuthenticationSchemes { get; set; }\r\n}\r\n``` \r\nThe self-handling (Please see [this](https://source.dot.net/#Microsoft.AspNetCore.Authorization/PassThroughAuthorizationHandler.cs)) `MustHavePermissionRequirement` should look like sth like this: \r\n```c#\r\npublic Task HandleAsync(AuthorizationHandlerContext context)\r\n{\r\n    if (context.Resource is HttpContext httpContext)\r\n    {\r\n        var endpoint = httpContext.GetEndpoint();\r\n        var authDatum = endpoint?.Metadata.GetOrderedMetadata\u003cRequiresPermissionAttribute\u003e() ?? Array.Empty\u003cRequiresPermissionAttribute\u003e();\r\n        var permissionsString = authDatum.Select(x =\u003e x.Permissions).FirstOrDefault();\r\n        var requiredPermissions = permissionsString?.Split(\",\").Select(x =\u003e x.Trim()) ?? Array.Empty\u003cstring\u003e();\r\n        var userPermissions = context.User.Claims.Where(x =\u003e x.Type == \"permission\").ToList();\r\n\r\n        //To check if the user has the specific permission or not\r\n\r\n        context.Succeed(this);\r\n    }\r\n\r\n    return Task.CompletedTask;\r\n}\r\n``` \r\n**But why?**\r\nThe reason is if you take a look at [AuthorizationMiddlware](https://source.dot.net/#Microsoft.AspNetCore.Authorization.Policy/AuthorizationMiddleware.cs,109), there is a [CombineAsync](https://source.dot.net/#Microsoft.AspNetCore.Authorization/AuthorizationPolicy.cs,152) method which only cares about `RoleBased` authorization and also the `IAuthorizeData` interface does not support `AllowedClaimType` and `AllowedClaimValues` out-of-the-box.\r\nThere is a piece of `CombineAsync` method code that tries to extract the `allowedRoles` from `[Authorize]` attribute which is inherited from `IAuthorizeData`:\r\n\r\n```c#\r\nvar rolesSplit = authorizeDatum.Roles?.Split(\u0027,\u0027);\r\nif (rolesSplit?.Length \u003e 0)\r\n{\r\n    var trimmedRolesSplit = rolesSplit.Where(r =\u003e !string.IsNullOrWhiteSpace(r)).Select(r =\u003e r.Trim());\r\n    policyBuilder.RequireRole(trimmedRolesSplit);\r\n    useDefaultPolicy = false;\r\n}\r\n``` \r\nBut what I guess that can be done is:\r\n\r\n## Proposed API\r\n\r\nThe `IAuthorizeData` and consequently `AuthorizeAttribute` can support `AllowedClaimType` and `AllowedClaimValues` in order to be used in `CombineAsync` method like this:\r\n\r\n```diff\r\nnamespace Microsoft.AspNetCore.Authorization;\r\n\r\npublic interface IAuthorizeData\r\n{\r\n    /// \u003csummary\u003e\r\n    /// Gets or sets the policy name that determines access to the resource.\r\n    /// \u003c/summary\u003e\r\n    string? Policy { get; set; }\r\n    /// \u003csummary\u003e\r\n    /// Gets or sets a comma delimited list of roles that are allowed to access the resource.\r\n    /// \u003c/summary\u003e\r\n    string? Roles { get; set; }\r\n\r\n+  /// \u003csummary\u003e\r\n+  /// Gets or sets the claim type name that is allowed to access the resource\r\n+  /// \u003c/summary\u003e\r\n+  string? AllowedClaim { get; set; }\r\n+ \r\n+  /// \u003csummary\u003e\r\n+  /// Gets or sets a comma delimited list of claims that are allowed to access the resource.\r\n+  /// \u003c/summary\u003e\r\n+  string? AllowedClaimValues { get; set; }\r\n+ \r\n    /// \u003csummary\u003e\r\n    /// Gets or sets a comma delimited list of schemes from which user information is constructed.\r\n    /// \u003c/summary\u003e\r\n    string? AuthenticationSchemes { get; set; }\r\n}\r\n```\r\nSo that we can explicitly combine allowed claims with the other policies in `CombineAsync` method like this:\r\n\r\n```c#\r\nvar allowedClaim = authorizeDatum.AllowedClaim;\r\nvar claimSplit = authorizeDatum.AllowedClaimValues?.Split(\u0027,\u0027);\r\n\r\nif (string.IsNullOrWhiteSpace(allowedClaim) \u0026\u0026 claimSplit?.Length \u003e 0)\r\n{\r\n    var trimmedClaimSplit = claimSplit.Where(r =\u003e !string.IsNullOrWhiteSpace(r)).Select(r =\u003e r.Trim());\r\n    policyBuilder.RequireClaim(allowedClaim!, trimmedClaimSplit);\r\n    useDefaultPolicy = false;\r\n}\r\n``` \r\nAnd all of the code hacks can be removed!\r\n\r\n## Usage Examples\r\n\r\n```c#\r\n[Authorize(AllowedClaimType=\"permission\", AllowedClaimValues=\"p1, p2\")]\r\npublic async Task\u003cstring\u003e Index()\r\n{\r\n    return \"Granted\";\r\n}\r\n``` \r\n\r\n## Risks\r\n* Razor pages and components\u0027 authorization integration (`AuthorizeRouteView`, `AuthorizeView`, `AuthorizeDataAdapter`)\r\n* This is a public API change that is widely used, so any kinda breaking change can be also a risk \r\n* For the sake of multiple Claim support, can have multiple [Authorize] on the same action\r\n\r\nP.S. I\u0027ve already implemented this in my own GitHub repo. So fill free to check if it\u0027s feasible enough to submit a pull request: [link-to-the-changes](https://github.com/dotnet/aspnetcore/compare/main...amiru3f:aspnetcore:main)",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOdb0Drw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85hjvx3",
                                           "createdAt":  "2023-07-15T13:06:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODAyPOQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "amiru3f",
                                                                               "createdAt":  "2023-07-15T14:18:01Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "Take a look at the new feature we added in .NET 8 https://devblogs.microsoft.com/dotnet/asp-net-core-updates-in-dotnet-8-preview-4/#improved-support-for-custom-authorization-policies-with-iauthorizationrequirementdata. This should solve the problem for MVC apps without the need to hack around with strings. This feature allows your attribute to express requirements directly.\r\n\r\n\r\n\r\n",
                                           "updatedAt":  "2023-07-15T13:12:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85hj1FA",
                                           "createdAt":  "2023-07-15T14:19:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "amiru3f",
                                           "body":  "Awesome. Totally agree that it solves the problem",
                                           "updatedAt":  "2023-07-15T14:19:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85hkNqr",
                                           "createdAt":  "2023-07-15T20:43:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODFm0cg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "raffaeler",
                                                                               "createdAt":  "2023-09-03T16:02:57Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "To follow up, here\u0027s what the above proposal would look like with the new functionality:\r\n\r\n```C#\r\n[AttributeUsage(AttributeTargets.Method, Inherited = false, AllowMultiple = true)]\r\nsealed class RequireClaimsAttribute(string Name, string AllowedValues) : Attribute, IAuthorizationRequirementData\r\n{\r\n    public IEnumerable\u003cIAuthorizationRequirement\u003e GetRequirements()\r\n    {\r\n        yield return new ClaimsAuthorizationRequirement(Name, AllowedValues.Split(\u0027,\u0027));\r\n    }\r\n}\r\n```\r\n\r\n```C#\r\n[Authorize]\r\n[RequiredClaims(\"permission\", \"p1, p2\")]\r\npublic async Task\u003cstring\u003e Index()\r\n{\r\n    return \"Granted\";\r\n}\r\n```",
                                           "updatedAt":  "2023-07-15T20:43:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85hkNwo",
                                           "createdAt":  "2023-07-15T20:46:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "Maybe we should ship this attribute in the box? It would be the equivalent of https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.authorization.authorizationpolicybuilder.requireclaim?view=aspnetcore-7.0.\r\n\r\nThoughts @Tratcher @halter73 ?",
                                           "updatedAt":  "2023-07-15T20:46:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85hkbwY",
                                           "createdAt":  "2023-07-16T01:24:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "amiru3f",
                                           "body":  "@davidfowl Thanks for the follow up. Actually, I\u0027ve implemented that exactly like the one you mentioned, in our codes.\r\nThrilled to submit a pull request if it\u0027s considered by you",
                                           "updatedAt":  "2023-07-16T01:26:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85hkhJf",
                                           "createdAt":  "2023-07-16T02:33:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "@amiru3f Can you reopen this issue and propose this new API instead? That would be a reasonable thing for us to add (considering all of the overloads as well).",
                                           "updatedAt":  "2023-07-16T02:33:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85hkkzi",
                                           "createdAt":  "2023-07-16T04:26:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODBN6_g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "miladashrafi",
                                                                               "createdAt":  "2023-07-19T21:48:41Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "amiru3f",
                                           "body":  "@davidfowl  sure!\r\n\r\n## Background and Motivation\r\nConsidering the problem defined [above](https://github.com/dotnet/aspnetcore/issues/49431#issue-1806016716) ☝️, and a user with following sample claims\r\n\r\n```json\r\n{\r\n \"sub\": \"user_id\",\r\n \"permission\": [\"P1\", \"P2\"]\r\n}\r\n``` \r\n\r\nThere is an easy way to solve that in **MinimalApis**:\r\n\r\n```c#\r\napp.MapGet(\"/\", () =\u003e \"Granted\").RequireAuthorization(policy =\u003e policy.RequireClaim(\"permission\", \"P1\"));\r\n``` \r\nBut for the sake of **MVC apps**, using [.NET 8 Preview 4](https://devblogs.microsoft.com/dotnet/asp-net-core-updates-in-dotnet-8-preview-4/#improved-support-for-custom-authorization-policies-with-iauthorizationrequirementdata) feature, can be solved like this:\r\n```c#\r\n[AttributeUsage(AttributeTargets.Method | AttributeTargets.Class, Inherited = false, AllowMultiple = true)]\r\n[DebuggerDisplay(\"{ToString(),nq}\")]\r\npublic class RequiresClaimAttribute(string Name, string AllowedValues) : Attribute, IAuthorizationRequirementData\r\n{\r\n    public IEnumerable\u003cIAuthorizationRequirement\u003e GetRequirements()\r\n    {\r\n        yield return new ClaimsAuthorizationRequirement(Name, AllowedValues?.Split(\u0027,\u0027)?.Select(value =\u003e value.Trim()));\r\n    }\r\n}\r\n\r\n```\r\n```c#\r\n\r\n[Authorize] //even this can be removed by inheritance\r\n[RequiresClaim(\"permission\", \"P1\", \"P2\")]\r\n//principal has to have \"P1\" or \"P2\" permission in his claims\r\npublic string Index() =\u003e \"Granted\";\r\n``` \r\n\r\n## Proposed API\r\nThe `RequireClaim` attribute can be supported by`Aspnetcore` OOTB\r\n```c#\r\n[AttributeUsage(AttributeTargets.Method | AttributeTargets.Class, Inherited = false, AllowMultiple = true)]\r\n[DebuggerDisplay(\"{ToString(),nq}\")]\r\npublic class RequiresClaimAttribute : Attribute, IAuthorizationRequirementData\r\n{\r\n    public RequiresClaimAttribute(string claimType, params string[] allowedValues)\r\n    {\r\n        _claimType = claimType;\r\n        _allowedValues = allowedValues;\r\n    }\r\n\r\n    private readonly string _claimType;\r\n\r\n    private readonly IEnumerable\u003cstring\u003e? _allowedValues;\r\n\r\n    public IEnumerable\u003cIAuthorizationRequirement\u003e GetRequirements()\r\n    {\r\n        yield return new ClaimsAuthorizationRequirement(_claimType, _allowedValues);\r\n    }\r\n\r\n    /// \u003cinheritdoc/\u003e\u003e\r\n    public override string ToString()\r\n    {\r\n        return DebuggerHelpers.GetDebugText(nameof(_claimType), _claimType, nameof(_allowedValues), _allowedValues);\r\n    }\r\n}\r\n``` \r\nP.S. By inheriting `RequireClaimAttribute` from `AuthorizeAttribute` there would be less code in action but less readable and consistent (glad to know your opinion as well)\r\n\r\nP.S. With respect to https://github.com/dotnet/aspnetcore/issues/49431#issuecomment-1971886272 we can also simplify the usage of \r\n``` C#\r\napp.MapGet(\"/\", () =\u003e \"Granted\").RequireAuthorization(policy =\u003e policy.RequireClaim(\"permission\", \"P1\"));\r\n``` \r\nby adding `RequireClaim` extension directly to `EndpointConventionBuilder` which can be used like:\r\n``` C#\r\napp.MapGet(\"/\", () =\u003e \"Granted\").RequireClaim(\"permission\", \"P1\");\r\n```\r\n\r\n\r\n\r\n\r\n## Usage Examples\r\n\r\n```c#\r\n[Authorize]\r\n[RequiresClaim(\"permission\", \"P1\", \"P2\")] //Also can be used in controller/class level\r\npublic string Index() =\u003e \"Granted\";\r\n``` \r\n\r\n## Risks\r\n* `Role` and `Claims` based authorization may look different in implementation:\r\n=\u003e  `[Authorize(Role=bla)]` and `[Authorize]` + `[RequiresClaim]`. \r\n* Maybe sth like`[AuthorizeClaimAttribute]` could be a case!\r\n* Not sure about  making the attribute `sealed`",
                                           "updatedAt":  "2024-03-03T21:01:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85hlGYg",
                                           "createdAt":  "2023-07-16T15:05:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brockallen",
                                           "body":  "\u003e [RequiredClaims(\"permission\", \"p1, p2\")]\r\n\r\nFWIW, hard coding these sorts of things in a string in metadata is exactly what the ASP.NET Core policy based authorization system was was trying to get away from when ASP.NET Core v1.0 was developed. Might as well go back to using the Authorize attribute with roles.",
                                           "updatedAt":  "2023-07-16T15:05:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85hlHrG",
                                           "createdAt":  "2023-07-16T15:31:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "amiru3f",
                                           "body":  "@brockallen \r\nIMO, [policy](https://learn.microsoft.com/en-us/aspnet/core/security/authorization/policies?view=aspnetcore-7.0) is a building block of `authorization` which may contain **more** than one `customized-requirement`.\r\nCurrently `Claims` and `Role` -based authorization are widely-used, pre-configured, reusable policies that are supported by `Aspnetcore` OOTB. So the case is to support [claims-based](https://learn.microsoft.com/en-us/aspnet/core/security/authorization/claims?view=aspnetcore-7.0) in the simplest form, for MVC apps as well as Minimal APIs",
                                           "updatedAt":  "2023-07-16T15:31:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85hlI91",
                                           "createdAt":  "2023-07-16T15:56:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODA1iaA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "amiru3f",
                                                                               "createdAt":  "2023-07-16T16:19:11Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "brockallen",
                                           "body":  "How do you unit test the logic in the \"p1, p2\" string?\r\nHow do you re-use that logic elsewhere in the app?\r\nHow do you dynamically use the logic (e.g. hide/show a button based on the result of the logic, or include/exclude a link in your REST hypermedia)?\r\n\r\nI appreciate your desire to use claims, but there\u0027s more to it. I was in the room when the idea for a more modern policy based approach was pitched to the ASP.NET team for inclusion in ASP.NET Core as a solution to the above issues. So I was trying to lend some historical perspective on why some things were deprecated in the past (like the hard coded strings in the old role based Authorize attribute and IsInRole checks from days past).",
                                           "updatedAt":  "2023-07-16T16:00:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85hlKHm",
                                           "createdAt":  "2023-07-16T16:17:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODBN7OA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "miladashrafi",
                                                                               "createdAt":  "2023-07-19T21:49:24Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "amiru3f",
                                           "body":  "As you know better than me, there are many cases to handle authorization in the app based on the business use-case.\r\nIn my specific case (and many other cases as well), business works like this:\r\n* Each action is single responsible like (Http Delete: User) \r\n* User can **act** based on his **permission**. There is no need to change the permission of an action in the future\r\n* Buttons are not tightly coupled to the APIs (They have their own claims or at least a combination of claims based on the user-experience and domain)\r\n* Permissions are not `Logic` to be reused. They are claims of the **principal** coming to the endpoint \r\n\r\nSo I will have this action:\r\n```c#\r\nconst string PermissionConstString = \"permission\";\r\n\r\n[Authorize]\r\n[RequireClaim(PermissionConstString, nameof(DeleteUser)]\r\npublic AnyKindOfResponse DeleteUser() =\u003e \"Deleted\";\r\n``` \r\n\r\nSo that, I will unit/integration test it by Asserting a simple equality check\r\nThere are many cases that using `Roles`, `Policies` can be complex, or even over engineering.\r\n\r\nGuess that\u0027s the reason that [ClaimsAuthorizationRequirement](https://source.dot.net/#Microsoft.AspNetCore.Authorization/ClaimsAuthorizationRequirement.cs) is still there in Aspnetcore\r\n\r\nP.S. Role and Policy based authorization are powerful and useful. But not for all cases\r\n",
                                           "updatedAt":  "2023-07-16T16:22:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85hqLbm",
                                           "createdAt":  "2023-07-17T16:08:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "@blowdart ",
                                           "updatedAt":  "2023-07-17T16:08:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85hqb4S",
                                           "createdAt":  "2023-07-17T16:51:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "As you can guess I\u0027m with brock here, scattering values in attributes moves far away from the centralised, only have to change in one place that we worked so hard to implement.\n\nA single place to update makes the world safer as no random controllers get missed 🤷‍♂️",
                                           "updatedAt":  "2023-07-17T16:51:39Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85hrgWz",
                                           "createdAt":  "2023-07-17T20:06:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODA9BFA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "amiru3f",
                                                                               "createdAt":  "2023-07-17T20:27:16Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "It’s a bit odd because maybe the example is not motivating because don’t use claims as permissions but the attribute maps directly to the requirement we have built in today. This is a way of expressing those requirements via attributes ",
                                           "updatedAt":  "2023-07-17T20:06:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85hr5Zp",
                                           "createdAt":  "2023-07-17T21:18:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brockallen",
                                           "body":  "\u003e This is a way of expressing those requirements via attributes\r\n\r\nThe difference being that it\u0027s not used via the level indirection of a policy name (thus suffers from the aforementioned limitations). But whatever -- if your team\u0027s stance has changed on preferred/good practices, then it has changed.",
                                           "updatedAt":  "2023-07-17T21:18:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85hr_tB",
                                           "createdAt":  "2023-07-17T21:39:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "The authZ system (and I know you know this) works well today if you have authorization requirements that are static, as static as the policy. As soon as those requirements can change based on the endpoint, the current system was *really* hard to use (this post explains it well https://github.com/dotnet/aspnetcore/issues/49431#issuecomment-1636760695).\r\n\r\n\u003e But whatever -- if your team\u0027s stance has changed on preferred/good practices, then it has changed.\r\n\r\nPolicies are recommended, and if you are in a situation where the authorization handler needs extra data, specifying them via a requirement that can be expressed via the attribute is a better alternative to expressing 2^n policies with different combinations of values or building dynamic policy names based on data.\r\n\r\nNow back to the claims based solution. I can understand if we think exposing `RequiresClaimAttribute` might send people down the \"claims are permissions\" path, maybe that\u0027s the push back here? (I\u0027m making sure I\u0027m not missing anything).",
                                           "updatedAt":  "2023-07-17T21:39:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85hsHnf",
                                           "createdAt":  "2023-07-17T22:11:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brockallen",
                                           "body":  "\u003e might send people down the \"claims are permissions\" path\r\n\r\n\"Claims as permissions\" is more nuanced than that (it\u0027s more like don\u0027t put permissions as claims in cookies or tokens). But to answer your question, \"yes a bit\", but also for the other reasons I mentioned. Is IsInRole or [AuthorizeAttribute(Roles=\"Admin, Manager\")] recommended as well? They have the same issues.\r\n\r\nAnyway, like I said -- I was more reminding folks that at one point there was a significant push away from this style. Doing work to make it easy to use it again seems counter to that original goal. I just know that is it\u0027s added then down the road at some point I\u0027ll be having the conversation with a customer explaining why it\u0027s not ideal to use, and recanting this whole history again (including fond memories of this thread :)).",
                                           "updatedAt":  "2023-07-17T22:11:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85hs1ZS",
                                           "createdAt":  "2023-07-18T01:34:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODA_Z1w==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "brockallen",
                                                                               "createdAt":  "2023-07-18T02:25:22Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "amiru3f",
                                                                               "createdAt":  "2023-07-18T05:56:10Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "\u003e \"Claims as permissions\" is more nuanced than that (it\u0027s more like don\u0027t put permissions as claims in cookies or tokens). \r\n\r\nUnfortunately, we use ClaimsPrincipal for both authentication *and* authorization, and we have claims transformation that lets you add more claims that don\u0027t get persisted into the HTTP response (so they are never put in a cookie or a token but they still exists in memory as claims as part of a ClaimsIdentity). That\u0027s hard to even talk about because \"claims\" here might be conflating 2 different things.\r\n\r\n\u003e But to answer your question, \"yes a bit\", but also for the other reasons I mentioned. Is IsInRole or [AuthorizeAttribute(Roles=\"Admin, Manager\")] recommended as well? They have the same issues.\r\n\r\nI don\u0027t know what is \"recommended\", only what we support (the APIs still do support roles in a first class way).\r\n\r\n\u003e I just know that is it\u0027s added then down the road at some point I\u0027ll be having the conversation with a customer explaining why it\u0027s not ideal to use, and recanting this whole history again (including fond memories of this thread :)).\r\n\r\nI understand 😄 ",
                                           "updatedAt":  "2023-07-18T01:34:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85h6tGb",
                                           "createdAt":  "2023-07-19T21:25:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "amiru3f",
                                           "body":  "Hi guys,\r\nAs you put this in the backlog, am I permitted to submit a pull request? I\u0027m not sure, that\u0027s my first time.\r\n@davidfowl ",
                                           "updatedAt":  "2023-07-19T21:25:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85h64R4",
                                           "createdAt":  "2023-07-19T22:11:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thank you for submitting this for API review. This will be reviewed by @dotnet/aspnet-api-review at the next meeting of the ASP.NET Core API Review group. Please ensure you take a look at [the API review process documentation](https://github.com/dotnet/aspnetcore/blob/main/docs/APIReviewProcess.md) and ensure that:\n\n* The PR contains changes to the reference-assembly that describe the API change. **Or**, you have included a snippet of reference-assembly-style code that illustrates the API change.\n* The PR describes the impact to users, both positive (useful new APIs) and negative (breaking changes).\n* Someone is assigned to \"champion\" this change in the meeting, and they understand the impact and design of the change.",
                                           "updatedAt":  "2023-07-19T22:11:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85h65UO",
                                           "createdAt":  "2023-07-19T22:13:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODBODEA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "amiru3f",
                                                                               "createdAt":  "2023-07-19T22:15:33Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "I\u0027ll mark it for API review so the team can look at it, if the API gets approved then you can submit a PR",
                                           "updatedAt":  "2023-07-19T22:13:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde851iJjA",
                                           "createdAt":  "2024-02-29T20:16:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "halter73",
                                           "body":  "@amiru3f Are you still around? Sorry for the delay. This does look like a convenient API. You mention that:\r\n\r\n\u003e There is an easy way to have this in **MinimalApis**:\r\n\u003e \r\n\u003e ```cs\r\n\u003e app.MapGet(\"/\", () =\u003e \"Granted\").RequireAuthorization(policy =\u003e policy.RequireClaim(\"permission\", \"P1\"));\r\n\u003e ```\r\n\r\nI agree that defining an inline policy is more convenient than being forced to configure a named policy in `AddAuthorization` particularly for one-off requirements. However, do we think it would be worth it to make even the minimal API version even simpler? Given a `[RequiresClaim(\"permission\", \"P1\")]` API, I could easily see people wanting and expecting to be able to do the following:\r\n\r\n```cs\r\napp.MapGet(\"/\", () =\u003e \"Granted\").RequireClaim(\"permission\", \"P1\");\r\n```\r\n\r\nDo you think that sounds reasonable?\r\n\r\nI think the `[RequiresClaim(...)]` attribute should be able to target both classes and methods like `[Authorize]` does rather than just targeting `AttributeTargets.Method`. I\u0027m also not sure I like this:\r\n\r\n\u003e```cs\r\n\u003e         _allowedValues = allowedValues?.Split(\u0027,\u0027)?.Select(value =\u003e value.Trim());\r\n\u003e ```\r\n\r\nWhat happens if an allowed value is supposed to contain a `,`? Even if you knew about this footgun, it\u0027d be hard to work around because `[RequiresClaim(\"permission\", \"my,single,comma,seperated,value\")]` will prefer the `string claimType, string allowedValues` overload over the `string claimType, params string[] allowedValues` overload. While `[RequiresClaim(\"permission\", new[] { \"my,single,comma,seperated,value\" })]` is valid C# (to my surprise), I\u0027m not sure how many people will think try that.\r\n\r\nI recommend just copying the [AuthorizationPolicyBuilder.RequireClaim overloads](https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.authorization.authorizationpolicybuilder.requireclaim?view=aspnetcore-8.0) overloads minus the `string claimType, IEnumerable\u003cstring\u003e allowedValues` one since it\u0027s impossible to call when declaring a static attribute.",
                                           "updatedAt":  "2024-02-29T20:16:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde851vNPq",
                                           "createdAt":  "2024-03-03T20:32:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "amiru3f",
                                           "body":  "Hi @halter73, no worries and thanks for the response.\r\n\r\n\u003e do we think it would be worth it to make even the minimal API version even simpler? \r\n\r\nYes, I do think it\u0027s much more easier to use ``` app.MapGet(...).RequireClaim() ``` instead.\r\n\r\n\u003e I think the [RequiresClaim(...)] attribute should be able to target both classes and methods\r\n\r\n\u003e I recommend just copying the [AuthorizationPolicyBuilder.RequireClaim overloads](https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.authorization.authorizationpolicybuilder.requireclaim?view=aspnetcore-8.0) overloads minus the string claimType, IEnumerable\u003cstring\u003e allowedValues one since it\u0027s impossible to call when declaring a static attribute.\r\n\r\nThose ones also sound logical. Will update the proposal\r\n",
                                           "updatedAt":  "2024-03-03T20:32:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde851vQOv",
                                           "createdAt":  "2024-03-03T20:48:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "amiru3f",
                                           "body":  "@halter73 Also `[RequireClaim(String)]` overload is not needed, since `ClaimsAuthorizationRequirement` supports empty allowed values.\r\n\r\nAnd one more thing about `\"comma, seperated, values\"`. It rings a bell but honestly I can\u0027t remember why I\u0027ve put there like that. Right now, I could just find `AuthorizeAttribute` implementation for roles like:\r\n\r\n``` C#\r\n/// \u003csummary\u003e\r\n/// Gets or sets a comma delimited list of roles that are allowed to access the resource.\r\n/// \u003c/summary\u003e\r\npublic string? Roles { get; set; }\r\n```",
                                           "updatedAt":  "2024-03-03T20:48:31Z"
                                       }
                                   ],
                         "totalCount":  24
                     },
        "title":  "Claim-Based Authorization For MVC Actions",
        "labels":  [
                       "enhancement",
                       "area-auth",
                       "api-needs-work"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/49664",
        "createdAt":  "2023-07-26T21:51:42Z",
        "number":  49664,
        "author":  "halter73",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-22T18:01:54Z",
        "body":  "              I assume we\u0027ll want to localize these strings in the future?\r\n\r\n_Originally posted by @BrennanConroy in https://github.com/dotnet/aspnetcore/pull/49498#discussion_r1270876858_\r\n            ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOm9DtXQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85i9gQ4",
                                           "createdAt":  "2023-08-01T13:13:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hishamco",
                                           "body":  "@halter73 In such a case can I start the PR immediately because there are no proposed APIs or do you follow a specific flow?",
                                           "updatedAt":  "2023-08-01T13:13:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85jITnh",
                                           "createdAt":  "2023-08-03T00:14:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "halter73",
                                           "body":  "Were you just planning on moving strings unchanged into a `Resources.resx` file? If so, I say go for it.",
                                           "updatedAt":  "2023-08-03T00:14:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85jNn6J",
                                           "createdAt":  "2023-08-03T19:27:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hishamco",
                                           "body":  "What if we want to add localized strings?",
                                           "updatedAt":  "2023-08-03T19:27:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde859Iqi2",
                                           "createdAt":  "2024-05-07T22:34:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hishamco",
                                           "body":  "@halter73 is this fixed in #49498?",
                                           "updatedAt":  "2024-05-07T22:34:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86b0O1d",
                                           "createdAt":  "2025-01-26T01:14:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hishamco",
                                           "body":  "@halter73 if this is fixed in #49498 we need to close this one",
                                           "updatedAt":  "2025-01-26T01:14:55Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "Use resource strings in IdentityApiEndpointRouteBuilderExtensions for localization",
        "labels":  [
                       "area-auth",
                       "feature-localization"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/49788",
        "createdAt":  "2023-08-02T05:33:46Z",
        "number":  49788,
        "author":  "wsugarman",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODE3vXw==",
                          "nodes":  [
                                        {
                                            "content":  "HEART",
                                            "user":  "halter73",
                                            "createdAt":  "2023-10-17T21:23:30Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "VoX",
                                            "createdAt":  "2025-06-26T14:32:38Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2025-08-22T18:01:25Z",
        "body":  "## Background and Motivation\r\n\r\nWhile developers can use a combination of `ServerCertificateSelector` and `IFileProvider` today to automatically reload a server\u0027s TLS certificate (as mentioned in https://github.com/dotnet/aspnetcore/issues/32351), developers cannot as easily reload the certificate(s) used to validate the client\u0027s certificate chain. Developers can of course write their own `ClientCertificateValidation` delegate, but I think that also means re-performing much of the logic that already exists within the [`Microsoft.AspNetCore.Authentication.Certificate`](https://www.nuget.org/packages/Microsoft.AspNetCore.Authentication.Certificate) package.\r\n\r\nI propose adding a new API that allow developers to leverage the convenience of the `Microsoft.AspNetCore.Authentication.Certificate` while also enabling more dynamic scenarios, like the automatic reload of trusted components in the client certificate chain.\r\n\r\n## Proposed API\r\n\r\nBased on some initial feedback from @Tratcher to consider the existing events, I propose adding a new event that triggers just before validation (as opposed to the existing event `OnCertificateValidated` that triggers just afterwards). This event\u0027s input context contains information about the HTTP request from the `BaseContext\u003cT\u003e`, as well as properties that may aid in further customizing the `X509ChainPolicy`.\r\n\r\nThe new event and its input are below:\r\n```diff\r\nnamespace Microsoft.AspNetCore.Authentication.Certificate;\r\n\r\npublic class CertificateAuthenticationEvents\r\n{\r\n+    public Func\u003cCertificateValidatingContext, Task\u003e OnCertificateValidating { get; set; } = context =\u003e Task.CompletedTask;\r\n    public Func\u003cCertificateValidatedContext, Task\u003e OnCertificateValidated { get; set; } = context =\u003e Task.CompletedTask;\r\n    public Func\u003cCertificateChallengeContext, Task\u003e OnChallenge { get; set; } = context =\u003e Task.CompletedTask;\r\n}\r\n\r\n+public class CertificateValidatingContext : BaseContext\u003cCertificateAuthenticationOptions\u003e\r\n+{\r\n+    public X509ChainPolicy ChainPolicy { get; set; } = default!;\r\n+    public X509Certificate2 ClientCertificate { get; set; } = default!;\r\n+    public bool IsSelfSigned { get; set; }\r\n+}\r\n```\r\n\r\nThis new event is then used by the `CertificateAuthenticationHandler` when validating:\r\n```diff\r\n        var chainPolicy = BuildChainPolicy(clientCertificate, isCertificateSelfSigned);\r\n+        var certificateValidatingContext = new CertificateValidatingContext(Context, Scheme, Options)\r\n+        {\r\n+            ChainPolicy = chainPolicy,\r\n+            ClientCertificate = clientCertificate,\r\n+            IsSelfSigned = isCertificateSelfSigned,\r\n+        };\r\n+\r\n+        await Events.CertificateValidating(certificateValidatingContext);\r\n\r\n        using var chain = new X509Chain\r\n        {\r\n            ChainPolicy = chainPolicy\r\n        };\r\n        var certificateIsValid = chain.Build(clientCertificate);\r\n```\r\n\r\nI tried to model the new event as the others exist today, such that they do not return any data and instead rely on the context as a sort of communication medium. `ChainPolicy` (whose property name is used by [`X509Chain.ChainPolicy`](https://learn.microsoft.com/en-us/dotnet/api/system.security.cryptography.x509certificates.x509chain.chainpolicy?view=net-7.0) too) can be used by developers to make changes to the validation. `ClientCertificate` and `IsSelfSigned` are used internally to generate the policy (in addition to the options), and I thought they could be helpful. I am not opposed to removing them though.\r\n\r\n## Usage Examples\r\nBased on the docs [here](https://learn.microsoft.com/en-us/aspnet/core/security/authentication/certauth?view=aspnetcore-7.0#get-started).\r\n\r\n```csharp\r\nvar builder = WebApplication.CreateBuilder(args);\r\n\r\nbuilder.Services\r\n    .AddAuthentication(CertificateAuthenticationDefaults.AuthenticationScheme)\r\n    .AddCertificate(options =\u003e\r\n    {\r\n        options.Events = new CertificateAuthenticationEvents\r\n        {\r\n            OnCertificateValidating = context =\u003e\r\n            {\r\n                var caCertProvider = context.HttpContext.RequestServices.GetRequiredService\u003cICaCertProvider\u003e();\r\n\r\n                context.ChainPolicty.CustomTrustStore.Clear();\r\n                context.ChainPolicty.Add(caCertProvider.Certificate);\r\n\r\n                return Task.CompletedTask;\r\n            },\r\n        },\r\n    };\r\n\r\nvar app = builder.Build();\r\n\r\napp.UseAuthentication();\r\n\r\napp.MapGet(\"/\", () =\u003e \"Hello World!\");\r\n\r\napp.Run();\r\n```\r\n\r\n## Alternative Designs\r\n\r\n### Event Context Properties\r\nInstead of access to the entire `X509ChainPolicy`, developers could be simply given the `CustomTrustStore` and `AdditionalChainCertificates` collections thereby limiting the scope of changes that could be made.\r\n\r\n```diff\r\n+public class CertificateValidatingContext : BaseContext\u003cCertificateAuthenticationOptions\u003e\r\n+{\r\n+    public X509CertificateCollection CustomTrustStore { get; set } = default!;\r\n+    public X509CertificateCollection AdditionalChainCertificates { get; set; } = default!;\r\n+}\r\n```\r\n\r\n### Selector Properties\r\nAt first, I was first imaging this API to be a parallel of [`HttpsConnectionAdapterOptions.ServerCertificateSelector`](https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.server.kestrel.https.httpsconnectionadapteroptions.servercertificateselector?view=aspnetcore-7.0#microsoft-aspnetcore-server-kestrel-https-httpsconnectionadapteroptions-servercertificateselector) with new selector properties for the [`CertificateAuthenticationOptions`](https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.authentication.certificate.certificateauthenticationoptions?view=aspnetcore-7.0) class.\r\n\r\n```diff\r\npublic class CertificateAuthenticationOptions : AuthenticationSchemeOptions\r\n{\r\n    public X509Certificate2Collection AdditionalChainCertificates { get; set; }\r\n+    public Func\u003cX509Certificate2Collection\u003e AdditionalChainCertificatesSelector { get; set; }\r\n    public X509Certificate2Collection CustomTrustStore { get; set; }\r\n+    public Func\u003cX509Certificate2Collection\u003e CustomTrustStoreSelector { get; set; }\r\n}\r\n```\r\n\r\nThere should be some input to the delegates, and the names could be a lot more creative, but I think this adds too much bloat to the class. It may also be confusing. Although I do appreciate the symmetry for client CA certificates.\r\n\r\n## Risks\r\n\r\nThe biggest problem I see with the proposal is that it may expose too much in the new event; it could be overwhelming and/or simply unnecessary for developers. In fact, developers could completely overwrite the entire `509ChainPolicy`! Is exposing the `X509Certificate2` object before validation also risky business?",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOfYar_g==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85jieA9",
                                           "createdAt":  "2023-08-08T16:54:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2023-08-08T16:54:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85jipT-",
                                           "createdAt":  "2023-08-08T17:30:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "wsugarman",
                                           "body":  "I am going to update this issue and PR based on the comments soon. I\u0027ve just gotten distracted by other commitments.",
                                           "updatedAt":  "2023-08-08T17:30:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85keGu0",
                                           "createdAt":  "2023-08-21T04:14:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "wsugarman",
                                           "body":  "I have updated this proposal to be... better 😅 ",
                                           "updatedAt":  "2023-08-21T04:14:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85pVX3v",
                                           "createdAt":  "2023-10-17T21:23:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thank you for submitting this for API review. This will be reviewed by @dotnet/aspnet-api-review at the next meeting of the ASP.NET Core API Review group. Please ensure you take a look at [the API review process documentation](https://github.com/dotnet/aspnetcore/blob/main/docs/APIReviewProcess.md) and ensure that:\n\n* The PR contains changes to the reference-assembly that describe the API change. **Or**, you have included a snippet of reference-assembly-style code that illustrates the API change.\n* The PR describes the impact to users, both positive (useful new APIs) and negative (breaking changes).\n* Someone is assigned to \"champion\" this change in the meeting, and they understand the impact and design of the change.",
                                           "updatedAt":  "2023-10-17T21:23:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85pVbhG",
                                           "createdAt":  "2023-10-17T21:33:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `.NET 9 Planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2023-10-17T21:33:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85rk-pW",
                                           "createdAt":  "2023-11-09T23:50:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "halter73",
                                           "body":  "API Review Notes:\r\n\r\n- Why does the event expose a `X509ChainPolicy` rather than the `X509CertificateCollection`?\r\n  - The `X509ChainPolicy` is built per request and depends on whether the incoming certificate is self-signed. It should be more flexible than just specifying an `X509CertificateCollection` for `CustomTrustStore`.\r\n- Should we expose `IsSelfSigned` and `ClientCertificate`?\r\n  - It makes sense to be able to read it, but why does it need to be settable?\r\n- Do the properties need to be settable?\r\n  - The current PR does not read the context after firing the event, so anything set to a new instance will be missed.\r\n  - We do not currently see a use case for setting the `ClientCertificate` or `IsSelfSigned` properties.\r\n  - Everything on `X509ChainPolicy` seems to be mutable, and it\u0027s not reused, so we think that can stay non-settable as well.\r\n- Should we use `ResultContext` rather than `BaseContext`?\r\n  - Yes. This matches the validat*ed* event and makes the event a little more powerful since it can short circuit with a helpful failure exception.\r\n- We need to add a constructor. We\u0027ll make all the non-ctor properties required init properties.\r\n\r\n- Is the event bad for performance after you rotate certs?\r\n  - After cert rotation, the handler would first populate the `X509ChainPolicy` with outdated certs from `CertificateAuthenticationOptions.CustomTrustStore`, then the new `OnCertificateValidating` would be forced to clear the outdated certs and add the newly rotated ones during each validation.\r\n\r\nIf we decide that we\u0027re not concerned about the performance of clearing and reconfiguring `X509ChainPolicy.CustomTrustStore`, and should stick to the event, this is how we think the API should look:\r\n\r\n```diff\r\nnamespace Microsoft.AspNetCore.Authentication.Certificate;\r\n\r\npublic class CertificateAuthenticationEvents\r\n{\r\n+    public Func\u003cCertificateValidatingContext, Task\u003e OnCertificateValidating { get; set; } = context =\u003e Task.CompletedTask;\r\n    public Func\u003cCertificateValidatedContext, Task\u003e OnCertificateValidated { get; set; } = context =\u003e Task.CompletedTask;\r\n    public Func\u003cCertificateChallengeContext, Task\u003e OnChallenge { get; set; } = context =\u003e Task.CompletedTask;\r\n}\r\n\r\n+public class CertificateValidatingContext : ResultContext\u003cCertificateAuthenticationOptions\u003e\r\n+{\r\n+       public CertificateValidatingContext(HttpContext context, AuthenticationScheme scheme, CertificateAuthenticationOptions options);\r\n+    public required X509ChainPolicy ChainPolicy { get; init; }\r\n+    public required X509Certificate2 ClientCertificate { get; init; }\r\n+    public required bool IsSelfSigned { get; init; }\r\n+}\r\n```",
                                           "updatedAt":  "2023-11-09T23:56:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85rlHoH",
                                           "createdAt":  "2023-11-10T00:36:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "\u003e * Is the event bad for performance after you rotate certs?\r\n\u003e   \r\n\u003e   * After cert rotation, the handler would first populate the `X509ChainPolicy` with outdated certs from `CertificateAuthenticationOptions.CustomTrustStore`, then the new `OnCertificateValidating` would be forced to clear the outdated certs and add the newly rotated ones during each validation.\r\n\r\nIf you\u0027re using the event to provide certs then I don\u0027t think you\u0027d be setting `CertificateAuthenticationOptions.CustomTrustStore` at all, so you wouldn\u0027t have to add and then clear them.\r\n\r\nThe perf doesn\u0027t change after a rotation, the certs are always provided dynamically.",
                                           "updatedAt":  "2023-11-10T00:37:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85sOEkN",
                                           "createdAt":  "2023-11-17T02:00:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "wsugarman",
                                           "body":  "Actually, in the middle of writing this response, I noticed that there may be an even easier way to solve this problem...! I\u0027ll keep my thoughts/responses to the earlier proposal after this new idea.\r\n\r\n@halter73, @Tratcher - I see that the underlying [`AuthenticationHandler\u003cTOptions\u003e`](https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.authentication.authenticationhandler-1?view=aspnetcore-8.0) exposes an [`OptionsMonitor`](https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.authentication.authenticationhandler-1.optionsmonitor?view=aspnetcore-8.0) property. We could \"snapshot\" it via `OptionsMonitor.Get(Scheme.Name)` at the start of `HandleAuthenticateAsync` and pass it through the other helper methods. That would enable users to use the options pattern to trigger a reload of the settings when the issuer certificate changes.\r\n\r\nWhat do you both think?\r\n\r\n## Extra notes\r\n@halter73 - Thanks for taking a look! When it comes to the aforementioned review, are these questions and subsequent answers/thoughts from that review? I\u0027ll comment on them assuming that to be the case.\r\n\r\n\u003e * Why does the event expose a `X509ChainPolicy` rather than the `X509CertificateCollection`?\r\n\u003e   \r\n\u003e   * The `X509ChainPolicy` is built per request and depends on whether the incoming certificate is self-signed. It should be more flexible than just specifying an `X509CertificateCollection` for `CustomTrustStore`.\r\n\r\nI went back-and-forth on this when formulating the proposal. I agree that ultimately exposing the `X509ChainPolicy` provides more flexibility instead of exposing portions of the policy, via the context, piecemeal as requested by users.\r\n\r\n\u003e * Should we expose `IsSelfSigned` and `ClientCertificate`?\r\n\u003e   \r\n\u003e   * It makes sense to be able to read it, but why does it need to be settable?\r\n\r\nI agree. These fields should not be settable.\r\n\r\n\u003e * Do the properties need to be settable?\r\n\u003e   \r\n\u003e   * The current PR does not read the context after firing the event, so anything set to a new instance will be missed.\r\n\u003e   * We do not currently see a use case for setting the `ClientCertificate` or `IsSelfSigned` properties.\r\n\u003e   * Everything on `X509ChainPolicy` seems to be mutable, and it\u0027s not reused, so we think that can stay non-settable as well.\r\n\r\nI agree that these properties should not be mutable. The `X509ChainPolicy` itself its mutable (e.g. adding certificates to the `CustomTrustStore`), so that should be sufficient. No need to support replacing it wholesale.\r\n\r\n\u003e * Should we use `ResultContext` rather than `BaseContext`?\r\n\u003e   \r\n\u003e   * Yes. This matches the validat_ed_ event and makes the event a little more powerful since it can short circuit with a helpful failure exception.\r\n\r\nWhat would be the purpose of the `Result` property on the \"validating\" event? Could it be set by users to skip validation? E.g. a user could pre-emptively fail validation based on some criteria?\r\n\r\n\u003e * We need to add a constructor. We\u0027ll make all the non-ctor properties required init properties.\r\n\r\nMakes sense!\r\n\r\n\u003e * Is the event bad for performance after you rotate certs?\r\n\u003e   \r\n\u003e   * After cert rotation, the handler would first populate the `X509ChainPolicy` with outdated certs from `CertificateAuthenticationOptions.CustomTrustStore`, then the new `OnCertificateValidating` would be forced to clear the outdated certs and add the newly rotated ones during each validation.\r\n\r\nYeah, I\u0027ve also been thinking about this too. The server certificate already has established a pattern with [`HttpsConnectionAdapterOptions.ServerCertificateSelector`](https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.server.kestrel.https.httpsconnectionadapteroptions.servercertificateselector?view=aspnetcore-8.0), but it may not be relevant given:\r\n1. The server certificate API is located in a different project/assembly\r\n2. While there is only one server certificate, there may be a variable number of issuer certificates\r\n\r\nSo, I see a few approaches for the client certificates trusted components:\r\n1. Double-down on this sort of \"selector\" approach and similarly allow users to provide an `X509CertificateCollection` for the issuer(s) via some delegate (e.g. `Func\u003cX509CertificateCollection\u003e`)\r\n    - Honestly, this approach seems pretty ugly 😅 \r\n2.  Expand the existing events to logically fire before validation, like in the current proposal where components, including the `CustomTrustStore`, may be augmented.\r\n    - Unfortunately, while this API fits nicely into the existing space, the handler for the above scenario would look like the following where the policy\u0027s `X509CertificateCollection` would be presumably be reset each time. On the other hand, we may be making mountains out of molehills; if the user does not supply `CertificateAuthenticationOptions.CustomTrustStore`, then invoking `Clear()` is unnecessary, and the adding the certificate to the store via the event is no different than via the options.\r\n```csharp\r\noptions.Events = new CertificateAuthenticationEvents\r\n{\r\n    OnCertificateValidating = context =\u003e\r\n    {\r\n        var caCertProvider = context.HttpContext.RequestServices.GetRequiredService\u003cICaCertProvider\u003e();\r\n\r\n        context.ChainPolicty.CustomTrustStore.Clear(); // This may be superfluous\r\n        context.ChainPolicty.Add(caCertProvider.Certificate);\r\n\r\n        return Task.CompletedTask;\r\n    },\r\n},\r\n````\r\n\r\n",
                                           "updatedAt":  "2023-11-17T02:00:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85sSVfQ",
                                           "createdAt":  "2023-11-17T16:41:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODM8Ceg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "wsugarman",
                                                                               "createdAt":  "2023-11-17T20:11:18Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Options are already snapshotted at the start of a request here:\r\nhttps://github.com/dotnet/aspnetcore/blob/f8f03ea3764826d009f7ceb9bb91e482ce4a3fa9/src/Security/Authentication/Core/src/AuthenticationHandler.cs#L155\r\n\r\nNote a handler\u0027s lifetime is per-request.\r\n\r\nThat leaves the question of how to trigger an options reload. This would happen automatically if we were binding to IConfiguration, but we\u0027re not in this case. However we should be able to implement a IOptionsChangeTokenSource that tracks file changes and triggers the options reload. Then the original config lambda would run again and get the latest content. That could be a lot nicer than the developer managing the caching.\r\nhttps://github.com/dotnet/runtime/blob/d2c7d8ea3bbd59215ac4689734d440bdeaf570e1/src/libraries/Microsoft.Extensions.Options.ConfigurationExtensions/src/ConfigurationChangeTokenSource.cs#L15C61-L15C86\r\n\r\nI think the base mechanic would be something like:\r\n`services.Configure\u003cClientCertificateOptions\u003e(authScheme, configure).MonitorFile(filePath);`",
                                           "updatedAt":  "2023-11-17T16:41:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85sTdFF",
                                           "createdAt":  "2023-11-17T20:11:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "wsugarman",
                                           "body":  "Oh! I\u0027m sorry -- I missed that this service is transient.\r\n\r\nhttps://github.com/dotnet/aspnetcore/blob/76b5785b4ca4d6107baad792e2fe4d7b6f938b9b/src/Security/Authentication/Core/src/AuthenticationBuilder.cs#L51\r\n\r\nI agree that there should be some easy way for users to easily monitor the file like you suggested.",
                                           "updatedAt":  "2023-11-17T20:11:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85uCg1Q",
                                           "createdAt":  "2023-12-07T21:39:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODO5Nwg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "amcasey",
                                                                               "createdAt":  "2023-12-08T00:55:27Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "halter73",
                                           "body":  "\u003e I agree that there should be some easy way for users to easily monitor the file like you suggested.\r\n\r\nI also agree, but this would need more design. @adityamandaleeka @amcasey Can one of you look into this and mark it `api-ready-for-review` again if/when it gets to a point where we should look at it in API review again?\r\n\r\nIf you\u0027re happy going with just the updated event proposal in https://github.com/dotnet/aspnetcore/issues/49788#issuecomment-1804855894 for now, just say so and reapply the label, but I\u0027m thinking we can probably make it both easier and faster.",
                                           "updatedAt":  "2023-12-07T21:39:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85vtKWK",
                                           "createdAt":  "2024-01-02T14:40:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "wsugarman",
                                           "body":  "@halter73 - I am unsure if I really like my own proposal given the potential of a perhaps more idiomatic approach with `IOptionsMonitor\u003cT\u003e` 😅 \r\n\r\nI\u0027ll try to noodle on a design. I think whatever is built for the client CA certificate also should work for configuring the server certificate as well. I was recently writing TLS support for a gRPC service and had to come up with some sort of abstraction for automatically reloading both certificates, and I would have loved some built-in support: https://github.com/wsugarman/durabletask-azurestorage-scaler/blob/Chart_2.0.0/src/Keda.Scaler.DurableTask.AzureStorage/Security/TlsConfigure.cs",
                                           "updatedAt":  "2024-01-02T14:40:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85ydbU1",
                                           "createdAt":  "2024-02-01T01:34:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "amcasey",
                                           "body":  "Sorry, I haven\u0027t had a chance to look into client certs yet - too many other cert problems. :wink:  Are we working towards a deadline other than 9.0?",
                                           "updatedAt":  "2024-02-01T01:34:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde859hqq5",
                                           "createdAt":  "2024-05-11T18:03:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "wsugarman",
                                           "body":  "I finally found some time to play around with a design, and I looked at the [`FileConfigurationProvider`](https://github.com/dotnet/runtime/blob/bdfbed6de953957fd4dbba9c8cba0a3c47dde1f8/src/libraries/Microsoft.Extensions.Configuration.FileExtensions/src/FileConfigurationProvider.cs) as an inspiration.\r\n\r\nI would propose some new extension methods on `IOptionsBuilder\u003cCertificateAuthenticationOptions\u003e`, like so:\r\n\r\n```csharp\r\npublic static class OptionsBuilderExtensions\r\n{\r\n    public static OptionsBuilder\u003cCertificateAuthenticationOptions\u003e WithAdditionalChainCertificate(this OptionsBuilder\u003cCertificateAuthenticationOptions\u003e builder, Action\u003cCertificateLoadOptions\u003e configureLoad)\r\n\r\n    public static OptionsBuilder\u003cCertificateAuthenticationOptions\u003e WithCustomTrustedAuthority(this OptionsBuilder\u003cCertificateAuthenticationOptions\u003e builder, Action\u003cCertificateLoadOptions\u003e configureLoad);\r\n}\r\n```\r\n\r\nThis would register a `IConfigureNamedOptions\u003cTOptions\u003e` in the service collection that would load the certificate into memory based on the given options. Much of the API is based on `Microsoft.Extensions.Configuration.FileExtensions`:\r\n\r\n```csharp\r\npublic class CertificateLoadOptions\r\n{\r\n    public IFileProvider? FileProvider { get; set; }\r\n\r\n    public CertificateFileFormat Format { get; set; }\r\n\r\n    public string? KeyPath { get; set; }\r\n\r\n    public Action\u003cFileLoadExceptionContext\u003e? OnLoadException { get; set; }\r\n\r\n    [DisallowNull]\r\n    public string? Path { get; set; }\r\n\r\n    [Range(0, int.MaxValue)]\r\n    public int ReloadDelay { get; set; } = 250;\r\n\r\n    public bool ReloadOnChange { get; set; }\r\n}\r\n\r\npublic enum CertificateFileFormat\r\n{\r\n    PFX,\r\n    PEM,\r\n}\r\n\r\npublic class FileLoadExceptionContext\r\n{\r\n    public Exception Exception { get; set; } = null!;\r\n\r\n    public string Path { get; set; } = null!\r\n}\r\n```\r\n\r\nWith this API, users can simply use the existing options pattern to further configure their authentication:\r\n\r\n```csharp\r\nservices\r\n    .AddOptions\u003cCertificateAuthenticationOptions\u003e()\r\n    .WithCustomTrustedAuthority(o =\u003e\r\n    {\r\n        o.Path = \"/mnt/secrets/cert.pem\",\r\n        o.Key = \"/mnt/secrets/key.pem\",\r\n        o.Format = CertificateFileFormat.PEM,\r\n        o.ReloadOnChange = true,\r\n    });\r\n```\r\n\r\nThe trickiest part I noticed when writing an initial implementation is that it may be tricky to cache the certificate as it\u0027s changing. Maintaining a reference to the same `X509Certificate2` object used by the middleware could be tricky, as we would presumably want to `Dispose` it upon detecting a change in the certificate file; however, there may be concurrent requests using that certificate. Alternatively, we probably do not want to keep creating the `X509Certificate2` objects from a cached `byte[]` because we\u0027d just keep creating new objects without disposing. Ideally, we\u0027d probably have some sort of idiomatic reader/writer lock in the certificate auth middleware in which we can use to safely dispose of an obsolete certificate.",
                                           "updatedAt":  "2024-05-12T18:16:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde859hqv-",
                                           "createdAt":  "2024-05-11T18:04:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "wsugarman",
                                           "body":  "One more aspect to consider would be reusing this API for configuring the server TLS certificate used by Kestrel.",
                                           "updatedAt":  "2024-05-11T18:04:57Z"
                                       }
                                   ],
                         "totalCount":  15
                     },
        "title":  "Enable Automatic Rotation of Trusted Client Certificate Chain Components",
        "labels":  [
                       "enhancement",
                       "area-auth",
                       "api-suggestion",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/50026",
        "createdAt":  "2023-08-11T15:12:47Z",
        "number":  50026,
        "author":  "emmaSolirius",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-02-13T01:27:18Z",
        "body":  "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Describe the bug\r\n\r\nWe have two separate apps, a Blazor WASM app using .NET 7 and an ASP.NET Core Web App using .NET 6. Both are using an external OIDC provider that uses OAuth V2 and use the Microsoft.AspNetCore.Authentication.OpenIdConnect assembly to register the authenticator.\r\n\r\nIn these scenarios:\r\n- If initiate a login, stay on the login page for more than 20 minutes to cause a session timeout within the OIDC provider, then continue to try to log in\r\n- If I open two login windows for the same app and log in with two different users at the same time\r\n- After I log in via this external OIDC provider and am redirected back to my app, if I click the back button on the browser\r\n\r\nthen the app is redirected to https://localhost:44338/authentication/callback?error=sessionexpired and it causes an internal server error: System.Exception: OpenIdConnectAuthenticationHandler: message.State is null or empty.\r\n\r\n![image](https://github.com/dotnet/aspnetcore/assets/83760641/b43db7c6-eb32-4794-93a0-5c37f957923c)\r\n\r\n\r\nWe\u0027ve tried using these existing events to handle the error, but none seem to fire\r\n- OnTokenValidated\r\n- OnRedirectToIdentityProvider\r\n- OnAuthenticationFailed\r\n- OnRemoteFailure\r\n\r\nWe also tried\r\n- to use this property SkipUnrecognizedRequests but it didn\u0027t help with this issue. ([OpenIdConnectOptions.SkipUnrecognizedRequests Property (Microsoft.AspNetCore.Authentication.OpenIdConnect) | Microsoft Learn](https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.authentication.openidconnect.openidconnectoptions.skipunrecognizedrequests?view=aspnetcore-7.0))\r\n- to create an Authentication controller with a Callback action (because the callbackurl we have set is /authentication/callback) but it was not reaching the controller.\r\n- to change the callback url to a location we already have but I couldn\u0027t get it to reach that controller either.\r\n\r\n### Expected Behavior\r\n\r\nProvide a way to handle the error scenario\r\n\r\n### Steps To Reproduce\r\n\r\n1.\tCreate a Blazor WASM app with server side authentication using .NET 7 or an MVC ASP.NET Core Web App using .NET 6.\r\n2.\tImplement OIDC with an 0Auth V2 provider using the Microsoft.AspNetCore.Authentication.OpenIdConnect assembly, e.g.\r\n```\r\nservices.AddAuthentication(sharedOptions =\u003e\r\n{\r\n    sharedOptions.DefaultScheme = CookieAuthenticationDefaults.AuthenticationScheme;\r\n    sharedOptions.DefaultSignInScheme = CookieAuthenticationDefaults.AuthenticationScheme;\r\n    sharedOptions.DefaultChallengeScheme = OpenIdConnectDefaults.AuthenticationScheme;\r\n})\r\n.AddOpenIdConnect(options =\u003e\r\n{\r\n    // Redacted\r\n})\r\n.AddCookie(options =\u003e\r\n{\r\n    // Redacted\r\n});\r\n```\r\n\r\n\r\n\r\n### Exceptions (if any)\r\n\r\nSystem.Exception: An error was encountered while handling the remote login.\r\n ---\u003e System.Exception: OpenIdConnectAuthenticationHandler: message.State is null or empty.\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleRequestAsync()\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)\r\n\r\n### .NET Version\r\n\r\n7.0.400\r\n\r\n### Anything else?\r\n\r\n\r\n\r\ndotnet --info\r\n.NET SDK:\r\n Version:   7.0.400\r\n Commit:    73bf45718d\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.22000\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\7.0.400\\\r\n\r\nHost:\r\n  Version:      7.0.10\r\n  Architecture: x64\r\n  Commit:       a6dbb800a4\r\n\r\n.NET SDKs installed:\r\n  2.2.207 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.426 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.406 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.408 [C:\\Program Files\\dotnet\\sdk]\r\n  7.0.105 [C:\\Program Files\\dotnet\\sdk]\r\n  7.0.400 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.32 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.21 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 7.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 7.0.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.32 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.21 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 7.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 7.0.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.32 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.21 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 7.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 7.0.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nOther architectures found:\r\n  x86   [C:\\Program Files (x86)\\dotnet]\r\n    registered at [HKLM\\SOFTWARE\\dotnet\\Setup\\InstalledVersions\\x86\\InstallLocation]\r\n\r\nEnvironment variables:\r\n  Not set\r\n\r\nglobal.json file:\r\n  Not found\r\n\r\nLearn more:\r\n  https://aka.ms/dotnet/info\r\n\r\nDownload .NET:\r\n  https://aka.ms/dotnet/download",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOZfP1Kg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85l8_Uq",
                                           "createdAt":  "2023-09-07T16:51:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2023-09-07T16:51:41Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Session timeout on external OAuth OIDC provider causes internal server error: message.State is null or empty",
        "labels":  [
                       "investigate",
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/50111",
        "createdAt":  "2023-08-16T10:09:57Z",
        "number":  50111,
        "author":  "MariovanZeist",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCyM6fA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "zHaytam",
                                            "createdAt":  "2023-08-16T15:16:34Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "burtonrodman",
                                            "createdAt":  "2023-08-27T02:50:09Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2025-08-22T18:01:54Z",
        "body":  "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nAssume I have a requirement that forces people to enable 2FA when it\u0027s not enabled.\r\nI want users not to be able to access anything in the Blazor application except the page where the user can Enable 2FA.\r\nSo instead of setting an authorization policy on all pages except the \"Enable 2FA page,\" I would like the reverse.\r\nAdding a default policy to pages that have no authorization policies set.\r\n\r\n\n\n### Describe the solution you\u0027d like\n\nBy adding \r\n```cs\r\n[Parameter] public IAuthorizeData[]? DefaultPolicy { get; set; }\r\n```\r\nTo the ``AuthorizeRouteView`` component\r\n\r\nand cascading that down to \r\n\r\n```cs\r\nprivate static IAuthorizeData[]? ComputeAuthorizeDataForType(Type type, IAuthorizeData[]? defaultPolicy)\r\n{\r\n       //...\r\n\treturn authorizeDatas?.ToArray() ?? defaultPolicy;\r\n}\r\n```\r\n the ``DefaultPolicy`` could be used for all components that have no``IAuthorizeData`` set. This reduces the risk of not setting a \"default\" policy on a page\r\n\r\nThe alternative is to set a Policy on all components except the page you need to enable that requirement (in my example the  \"Enable 2FA page\")\r\n\r\nThe other alternative is to create a custom ``AuthorizeRouteView`` component that implements this feature (this is the route I have gone so far)\r\n\n\n### Additional context\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOk6SDUw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85vvnu6",
                                           "createdAt":  "2024-01-03T01:38:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `.NET 9 Planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2024-01-03T01:38:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86TpINT",
                                           "createdAt":  "2024-11-14T17:37:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "halter73",
                                           "body":  "Would setting `AuthorizationOptions.DefaultPolicy` work? Or is it important the default *only* applies to a given `AuthorizeRouteView`? If so, would adding `[Authorize(\"PolicyName\")]` to an `_Imports.razor` be a viable alternative?",
                                           "updatedAt":  "2024-11-14T17:37:00Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Add a DefaultPolicy property on AuthorizeRouteView to be used when no Policies are set on a component",
        "labels":  [
                       "enhancement",
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/50122",
        "createdAt":  "2023-08-16T20:27:02Z",
        "number":  50122,
        "author":  "SPWizard01",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-22T18:01:25Z",
        "body":  "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nConsider the following scenario:\r\n\r\nAn app is running inside an org that is using on prem AD which syncs with Azure, you want to be able to host your blazor app inside IIS server on prem, but you also want to be able to configure specific route(component) inside blazor to be protected by Microsoft.Identity.Web package.\r\n\r\nIt partially works until you specify render mode to be `RenderModeServer`.\n\n### Expected Behavior\n\nMy understanding that it should fulfill Authorize attribute completely and if you say you want the user to be authorized with `OpenIdConnectDefaults.AuthenticationScheme` via `EntraId` policy then it should use that and not Windows auth and vice versa,\n\n### Steps To Reproduce\n\nProgram.cs\r\n```\r\n//you can supply OpenIdConnectDefaults.AuthenticationScheme as default scheme\r\n//the behaviour wont change, it will only change the user \"Name\" that is returned inside component.\r\n\r\nbuilder.Services.AddAuthentication(NegotiateDefaults.AuthenticationScheme)\r\n.AddNegotiate()\r\n.AddMicrosoftIdentityWebApp(cfg =\u003e\r\n{\r\n    cfg.Instance = globalConfig.AzureAd.Instance;\r\n    cfg.TenantId = globalConfig.AzureAd.TenantId;\r\n    cfg.ClientId = globalConfig.AzureAd.ClientId;\r\n    cfg.CallbackPath = globalConfig.AzureAd.CallbackPath;\r\n    ...\r\n});\r\n...\r\nbuilder.Services.AddAuthorization(options =\u003e\r\n{\r\n    var entraId = new AuthorizationPolicyBuilder()\r\n    .AddAuthenticationSchemes(OpenIdConnectDefaults.AuthenticationScheme)\r\n    .RequireAuthenticatedUser()\r\n    .Build();\r\n\r\n    options.AddPolicy(\"EntraId\", entraId);\r\n\r\n    var kerb = new AuthorizationPolicyBuilder()\r\n    .AddAuthenticationSchemes(NegotiateDefaults.AuthenticationScheme)\r\n    .RequireAuthenticatedUser()\r\n    .Build();\r\n    options.AddPolicy(\"Kerberos\", kerb);\r\n\r\n    // By default, all incoming requests will be authorized according to the default policy.\r\n    options.FallbackPolicy = options.DefaultPolicy;\r\n});\r\n```\r\n\r\nComponent.razor\r\n```\r\n@using Microsoft.AspNetCore.Authorization;\r\n@using Microsoft.Identity.Web;\r\n@using System.Diagnostics;\r\n@page \"/authbugssr\"\r\n@attribute [Authorize(\"EntraId\")]\r\n@* Uncomment line bellow and observe OnInitializedAsync firing at least couple of time while providing different user each time first is the user required by configured policy, last is the user configured by default policy*@\r\n@* @attribute [RenderModeServer] *@\r\n@inject AuthenticationStateProvider AuthProvider\r\n\r\n\u003cCascadingAuthenticationState\u003e\r\n    ﻿\u003cAuthorizeView Policy=\"EntraId\"\u003e\r\n        \u003cAuthorized\u003e\r\n            Hello, @context.User.Identity.Name!\r\n        \u003c/Authorized\u003e\r\n        \u003cNotAuthorized\u003e\r\n            Not authed\r\n        \u003c/NotAuthorized\u003e\r\n    \u003c/AuthorizeView\u003e\r\n\u003c/CascadingAuthenticationState\u003e\r\n@code {\r\n\r\n    protected async override Task OnInitializedAsync()\r\n    {\r\n        base.OnInitialized();\r\n        var user = (await AuthProvider.GetAuthenticationStateAsync()).User;\r\n        Debugger.Break();\r\n    }\r\n}\r\n```\r\n\r\nAuthorize to your App (so it saves id token to your cookies) then try accessing `/authbugssr` with RenderModeServer and without it.\n\n### Exceptions (if any)\n\nNone\n\n### .NET Version\n\n8.0.100-preview.7.23376.3\n\n### Anything else?\n\n.NET SDK:\r\n Version:   8.0.100-preview.7.23376.3\r\n Commit:    daebeea8ea\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.19044\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\8.0.100-preview.7.23376.3\\\r\n\r\n.NET workloads installed:\r\nThere are no installed workloads to display.\r\n\r\nHost:\r\n  Version:      8.0.0-preview.7.23375.6\r\n  Architecture: x64\r\n  Commit:       65b696cf5e\r\n  RID:          win-x64\r\n\r\n.NET SDKs installed:\r\n  6.0.301 [C:\\Program Files\\dotnet\\sdk]\r\n  8.0.100-preview.7.23376.3 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 7.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 8.0.0-preview.7.23375.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 6.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 7.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 8.0.0-preview.7.23375.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 6.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 7.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 8.0.0-preview.7.23376.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nOther architectures found:\r\n  x86   [C:\\Program Files (x86)\\dotnet]\r\n    registered at [HKLM\\SOFTWARE\\dotnet\\Setup\\InstalledVersions\\x86\\InstallLocation]\r\n\r\nEnvironment variables:\r\n  Not set\r\n\r\nglobal.json file:\r\n  Not found\r\n\r\nLearn more:\r\n  https://aka.ms/dotnet/info\r\n\r\nDownload .NET:\r\n  https://aka.ms/dotnet/download",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOhAm3Cw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85kTDUy",
                                           "createdAt":  "2023-08-17T17:49:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SPWizard01",
                                           "body":  "After further investigation it seems that this is a bug with Blazor hub (i.e. the SignalR Client/Server is not configurable to specify auth scheme) therefore the Web request(1st request coming through) is using correct auth method while the SignalR connection (2nd request once `RenderModeServer` is specified) reverts to default scheme.\r\n\r\nIt would most likely be possible to manually workaround this issue once the `configureSignalR` would be accounted for inside the `Blazor.start` method.\r\n\r\nhttps://github.com/dotnet/aspnetcore/blob/31a26e080ae5652cd3c9b414078d1b61a0b89010/src/Components/Web.JS/src/Platform/Circuits/CircuitStartOptions.ts#L15C12\r\n\r\nHowever it seems that this version of [blazor.web.js](https://github.com/dotnet/aspnetcore/blob/31a26e080ae5652cd3c9b414078d1b61a0b89010/src/Components/Web.JS/dist/Release/blazor.web.js) is not yet in the preview build.\r\n\r\nOf course it would be best if the SignalR client for Blazor hub \"knew\" what type of auth it should use :)",
                                           "updatedAt":  "2023-08-17T17:49:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85k2vkN",
                                           "createdAt":  "2023-08-24T16:53:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SteveSandersonMS",
                                           "body":  "Thanks for the report. Are you able to supply a minimal repro project, as a public GitHub repo? We will then investigate.",
                                           "updatedAt":  "2023-08-24T16:53:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85k2vpJ",
                                           "createdAt":  "2023-08-24T16:53:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Hi @SPWizard01. We have added the \"Needs: Author Feedback\" label to this issue, which indicates that we have an open question for you before we can take further action. This issue will be closed automatically in 7 days if we do not hear back from you by then - please feel free to re-open it if you come back to this issue after that time.",
                                           "updatedAt":  "2023-08-24T16:53:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85k2vqW",
                                           "createdAt":  "2023-08-24T16:54:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thank you for filing this issue. In order for us to investigate this issue, please provide [a minimalistic repro project](https://github.com/dotnet/aspnetcore/blob/main/docs/repro.md) that illustrates the problem.",
                                           "updatedAt":  "2023-08-24T16:54:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85k3__n",
                                           "createdAt":  "2023-08-24T21:01:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SPWizard01",
                                           "body":  "\u003e Thanks for the report. Are you able to supply a minimal repro project, as a public GitHub repo? We will then investigate.\r\n\r\nHi Steve,\r\n\r\nHere you go: https://github.com/SPWizard01/MultiAuthBug\r\n\r\nMake sure to change https://github.com/SPWizard01/MultiAuthBug/blob/7913909ee576c4f9adec633e61b545f1c6583cf5/Program.cs#L12 with appropriate values once you registered your app in Azure :)\r\n",
                                           "updatedAt":  "2023-08-24T21:11:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85rEUBl",
                                           "createdAt":  "2023-11-06T20:00:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thank you for contacting us. Due to a lack of activity on this discussion issue we\u0027re closing it in an effort to keep our backlog clean. If you believe there is a concern related to the ASP.NET Core framework, which hasn\u0027t been addressed yet, please file a new issue.\n\nThis issue will be locked after 30 more days of inactivity. If you still wish to discuss this subject after then, please create a new issue!",
                                           "updatedAt":  "2023-11-06T20:00:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85sVm0g",
                                           "createdAt":  "2023-11-18T19:20:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SPWizard01",
                                           "body":  "still an issue with blazor server rendering because the websocket uses the default auth supplied and not the one requested in the Authorize attribute",
                                           "updatedAt":  "2023-11-18T19:20:42Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86ECbcL",
                                           "createdAt":  "2024-07-08T20:34:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "halter73",
                                           "body":  "I\u0027m reopening this because unlike the `AuthorizationMiddleware` and the default `PolicyEvaluator` it uses, `AuthorizeViewCore` does not take into account `AuthorizationPolicy.AuthenticationSchemes` at all and instead uses the `IAuthorizationService` directly.\r\n\r\nThis is a pretty fundamental limitation, because `AuthorizeViewCore`/`AuthorizeRouteView` has no reference to Http.Abstraction and `HttpContext` which is necessary to reauthenticate, but we could probably do a better job of warning in this scenario. We already throw when an authentication scheme is specified via an attribute (e.g. `[Authorize(AuthenticationScheme \"Cookies\")]`, but we do not when you specify a policy that that configures and authentication scheme via `AuthorizationPolicyBuilder.AddAuthenticationSchemes` as demonstrated in this issue.\r\n\r\nSee `PolicyEvaluator`:\r\n\r\nhttps://github.com/dotnet/aspnetcore/blob/afc520c49d9857c68d2faae5ae89821ae671bb1b/src/Security/Authorization/Policy/src/PolicyEvaluator.cs#L34-L42\r\n\r\nvs `AuthorizeViewCore`:\r\n\r\nhttps://github.com/dotnet/aspnetcore/blob/afc520c49d9857c68d2faae5ae89821ae671bb1b/src/Components/Authorization/src/AuthorizeViewCore.cs#L108-L130\r\n\r\nSignalR has a similar issue when it evaluates auth policies for hub invocations (@BrennanConroy):\r\n\r\nhttps://github.com/dotnet/aspnetcore/blob/afc520c49d9857c68d2faae5ae89821ae671bb1b/src/SignalR/server/Core/src/Internal/DefaultHubDispatcher.cs#L653-L662\r\n\r\nAt the very least we should throw the same way no matter how you try to specify a per-page (or hub method) authentication scheme. Ideally, we could make it just work no matter how you try to specify a per-page authentication scheme if you only have per-page interactivity, but this would require using the specified authentication scheme to authenticate the per-page circuit.",
                                           "updatedAt":  "2024-07-08T21:00:38Z"
                                       }
                                   ],
                         "totalCount":  8
                     },
        "title":  "Blazor multiple authentication schemes do not play nice with RenderModeServer",
        "labels":  [
                       "enhancement",
                       "area-auth",
                       "Blazor ♥ SignalR"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/50242",
        "createdAt":  "2023-08-21T19:22:19Z",
        "number":  50242,
        "author":  "eerhardt",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-02-13T01:26:32Z",
        "body":  "              @halter73 @Tratcher - any thoughts here? Why is `Options.Wtrealm` annotated as `string?` when `WsFederationMessage.Wtrealm` is a non-nullable `string`? Do we have our nullable annotations incorrect in ASP.NET?\r\n\r\n_Originally posted by @eerhardt in https://github.com/dotnet/aspnetcore/pull/50218#discussion_r1300412103_\r\n            ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOZNqAAw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85kqeaz",
                                           "createdAt":  "2023-08-22T20:10:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "halter73",
                                           "body":  "Should we close this now that https://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/issues/2240 has been opened?",
                                           "updatedAt":  "2023-08-22T20:10:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85kqgKU",
                                           "createdAt":  "2023-08-22T20:16:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODEd67Q==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "halter73",
                                                                               "createdAt":  "2023-08-22T22:18:25Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "eerhardt",
                                           "body":  "I think we can use this to track removing the `!`s added in #50218. All three of them should be able to be removed once we get a build with https://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/pull/2241 in it.",
                                           "updatedAt":  "2023-08-22T20:16:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85k2oAD",
                                           "createdAt":  "2023-08-24T16:37:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2023-08-24T16:37:07Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "WsFederation Wtrealm is required but it is a nullable string on WsFederationOptions",
        "labels":  [
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/50517",
        "createdAt":  "2023-09-05T00:31:59Z",
        "number":  50517,
        "author":  "vanbukin",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC6JtcQ==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Keroosha",
                                            "createdAt":  "2023-09-05T06:54:50Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Santas",
                                            "createdAt":  "2024-04-02T15:04:22Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "shravan2x",
                                            "createdAt":  "2024-08-13T20:57:18Z"
                                        }
                                    ],
                          "totalCount":  3
                      },
        "updatedAt":  "2024-02-13T01:25:25Z",
        "body":  "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nDevelopers who use ASP.NET Core to create OAuth/OpenID Connect providers often require a mechanism to work with server-side sessions. For instance, they may need to implement a deferred Back Channel Logout Notification, which involves placing the identifier of the ended user session in a queue by the provider when the user logs out from the Identity Provider (IDP). This allows all client applications to be notified of the session termination in the background, ensuring that the logout operation doesn\u0027t take up too much time.\r\n\r\n\r\nIn the standard CookieAuthenticationHandler, there is an [ITicketStore](https://github.com/dotnet/aspnetcore/blob/00d0038f937f0059a847fde504649fe33ec935e0/src/Security/Authentication/Cookies/src/CookieAuthenticationOptions.cs#L118-L122) designed for working with server-side sessions. However, the session identifier it returns is only stored in the cookie and there are no convenient ways to retrieve it directly.\r\n\r\nIf I need a server session identifier, the following options are available to me:\r\n- Generate a separate \"actual\" surrogate session identifier before invoking the save operation in the database through ITicketStore, save it in ClaimsPrincipal or AuthenticationProperties, and subsequently access it appropriately.\r\n- Write an implementation of ITicketStore that will use the key from the provided parameters as such an identifier and dynamically add it during reading, mutating the passed AuthenticationTicket, and remove it during writing (as this parameter serves as the key by which the AuthenticationTicket should be stored).\r\n- Create a custom CookieAuthenticationHandler that enables dynamic addition and concealment of this identifier, similar to the previous approach, but at the authentication handler level without transferring this logic to the ITicketStore.\r\n- In case the session identifier is generated by the database itself and I need to store it, and none of the previous options suit me, I am forced to first create a record in the database, then save the obtained identifier in ClaimsPrincipal or Authentication Properties, and then update the newly created record as well as mutate the passed AuthenticationTicket so that the code following the authentication handler can access this identifier.\r\n- Create a separate cookie to store the server session identifier.\r\n- Using the same DataProtection settings as the original authentication handler, independently read and decrypt the session identifier from the cookie using a separate extension method for HttpContext.\r\n\r\nAll these options seem fragile and inconvenient. Having a mechanism that would allow \"pulling\" the identifier, which is [created here](https://github.com/dotnet/aspnetcore/blob/00d0038f937f0059a847fde504649fe33ec935e0/src/Security/Authentication/Cookies/src/ITicketStore.cs#L37), retrieved from the cookie and [stored in runtime here](https://github.com/dotnet/aspnetcore/blob/00d0038f937f0059a847fde504649fe33ec935e0/src/Security/Authentication/Cookies/src/CookieAuthenticationHandler.cs#L32), and [passed as a \"key\" parameter here](https://github.com/dotnet/aspnetcore/blob/00d0038f937f0059a847fde504649fe33ec935e0/src/Security/Authentication/Cookies/src/ITicketStore.cs#L88), would enable much more convenient handling of server sessions.\r\n\n\n### Describe the solution you\u0027d like\n\n1) Add a separate public property to AuthenticationProperties for a non-serializable dictionary, similar to the Parameters property, but instead of input parameters, it will store output parameters of the authentication handler. Then, place the session identifier into this dictionary within the CookieAuthenticationHandler.\r\n2) Add a separate nullable string property to [`AuthenticationProperties`](https://github.com/dotnet/aspnetcore/blob/00d0038f937f0059a847fde504649fe33ec935e0/src/Http/Authentication.Abstractions/src/AuthenticationProperties.cs) and make it non-serializable. This property would hold the value of the server session identifier after retrieving it from [`ITicketStore`](https://github.com/dotnet/aspnetcore/blob/00d0038f937f0059a847fde504649fe33ec935e0/src/Security/Authentication/Cookies/src/ITicketStore.cs). For example, near the code that sets the value in the private field [`_sessionKey`](https://github.com/dotnet/aspnetcore/blob/00d0038f937f0059a847fde504649fe33ec935e0/src/Security/Authentication/Cookies/src/CookieAuthenticationHandler.cs#L32) in CookieAuthenticationHandler, a method call can be added to set the value of this property in AuthenticationProperties. \r\n3) Use the [`Parameters`](https://github.com/dotnet/aspnetcore/blob/00d0038f937f0059a847fde504649fe33ec935e0/src/Http/Authentication.Abstractions/src/AuthenticationProperties.cs#L67) dictionary in AuthenticationProperties for these purposes. But I like this option less because `Parameters` is used for passing input parameters. On the other hand, [`Items`](https://github.com/dotnet/aspnetcore/blob/00d0038f937f0059a847fde504649fe33ec935e0/src/Http/Authentication.Abstractions/src/AuthenticationProperties.cs#L60) seems like a good candidate based on the description, but it is a serializable value that needs to be stored in a database. The scenario where we only learn the actual identifier after writing to the database is valid, and we shouldn\u0027t exclude it, so `Items` won\u0027t be suitable.\n\n### Additional context\n\nIn this issue, I am indeed discussing authentication sessions implemented through ITicketStore. It is not related to regular sessions used for storing intermediate data, such as items in a shopping cart.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOZfOfVQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85lwDkD",
                                           "createdAt":  "2023-09-05T18:16:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "~~The ticket store key is not guaranteed to be a unique value per auth session. In fact, if a session expires but the cookie is still in use, the key could be re-used.~~\r\n\r\nI think you need your own value added to claims or AuthenticationProperties by the application that you can use to track sessions.",
                                           "updatedAt":  "2023-09-05T18:19:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85l859V",
                                           "createdAt":  "2023-09-07T16:36:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2023-09-07T16:36:31Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Add the ability to view the authentication server session identifier returned from ITicketStore.",
        "labels":  [
                       "enhancement",
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/50867",
        "createdAt":  "2023-09-22T03:08:56Z",
        "number":  50867,
        "author":  "michiproep",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-02-13T01:23:37Z",
        "body":  "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nA custom IAuthorizationMiddlewareResultHandler is not called if a controller/action is not decorated with Authorize-Attribute but instead enriched via a IControllerModelConvention, e.g.\r\n`\r\ncontroller.Filters.Add(new AuthorizeFilter(AuthConstants.PolicyMembershipFull));\r\n`\n\n### Expected Behavior\n\nThe IAuthorizationMiddlewareResultHandler.HandleAsync needs to get called not matter how the controller/action gets it\u0027s Authorization settings.\n\n### Steps To Reproduce\n\nsee description\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n.net 7\n\n### Anything else?\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOcxbZFg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85uDgGr",
                                           "createdAt":  "2023-12-08T01:25:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEcKNQg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "bytefish",
                                                                               "createdAt":  "2025-01-16T16:20:20Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "JohnathanBarclay",
                                                                               "createdAt":  "2025-07-28T12:01:11Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "jossean-rivera",
                                           "body":  "### Here are the steps for a minimal reproduction\r\n- Create a custom authentication handler that always validates every Http request with a hard-coded claims principal for a user named John Doe.\r\n- Create a custom week day policy requirement and policy handler that validates if a request was being made on a specific day of the week (say Monday)\r\n- Using the week day policy handler, create a policy that only validates requests on Monday named \"MondayPolicy\".\r\n- Create a custom implementation of [IAuthorizationMiddlewareResultHandler](https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.authorization.iauthorizationmiddlewareresulthandler?view=aspnetcore-7.0) that will get the error message from any failed policies and write them on the body of the Http response. \r\n- Add the AuthorizeFilter globally using the \"MondayPolicy\".\r\n- Add a controller action for the route \"/monday\".\r\n- Run the app, send an Http request to /monday and check the response. If the day is not Monday, the response will have a status of 403 but the response body will be empty because [IAuthorizationMiddlewareResultHandler](https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.authorization.iauthorizationmiddlewareresulthandler?view=aspnetcore-7.0) was not called. \r\n- Comment the line 35 where we set the [AuthorizeFilter](https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.mvc.authorization.authorizefilter?view=aspnetcore-7.0) globally and uncomment line 144 where we use the [AuthorizeAttribute](https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.authorization.authorizeattribute?view=aspnetcore-7.0). \r\n- Run the app, send an Http request to /monday and check the response. If the day is not Monday, you will see the following error on the body of the request: \"Authorization failed because the request was made on the wrong day of the week. Please, come back on Monday.\"\r\n\r\n```c#\r\nusing System.Security.Claims;\r\nusing System.Text.Encodings.Web;\r\nusing Microsoft.AspNetCore.Authentication;\r\nusing Microsoft.AspNetCore.Authorization;\r\nusing Microsoft.AspNetCore.Authorization.Policy;\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing Microsoft.AspNetCore.Mvc.Authorization;\r\nusing Microsoft.Extensions.Options;\r\n\r\nvar builder = WebApplication.CreateBuilder(args);\r\n\r\n// Add services to the container.\r\nbuilder.Services.AddAuthentication()\r\n    .AddScheme\u003cAuthenticationSchemeOptions, ConstantAuthenticationHandler\u003e(\"ConstantAuthScheme\", options =\u003e { });\r\n\r\nbuilder.Services.AddAuthorization(options =\u003e\r\n{\r\n    AuthorizationPolicy policy = new AuthorizationPolicyBuilder()\r\n        .RequireAuthenticatedUser()\r\n        .RequireDayOfWeek(DayOfWeek.Monday)\r\n        .AddAuthenticationSchemes(\"ConstantAuthScheme\")\r\n        .Build();\r\n    options.AddPolicy(\"MondayPolicy\", policy);\r\n});\r\n\r\nbuilder.Services.AddSingleton\u003cIAuthorizationMiddlewareResultHandler, MyAuthorizationMiddlewareResultHandler\u003e();\r\nbuilder.Services.AddSingleton\u003cIAuthorizationHandler, WeekRequirementHandler\u003e();\r\n\r\n//  Add controllers\r\n//  Add the AuthorizeFilter and run the MondayPolicy globaly\r\nbuilder.Services.AddControllers(options =\u003e\r\n{\r\n    //  COMMENT THE FOLLOWING LINE TO SEE HOW IAuthorizationMiddlewareResultHandler\r\n    //  GETS CALLED WHEN YOU USE THE [Authorize(\"MondayPolicy\")] ATTRIBUTE ON THE CONTROLLER ACTION\r\n    options.Filters.Add(new AuthorizeFilter(\"MondayPolicy\"));\r\n});\r\n\r\nWebApplication app = builder.Build();\r\n\r\n// Configure the HTTP request pipeline.\r\napp.UseAuthentication();\r\napp.UseAuthorization();\r\napp.MapControllers();\r\n\r\napp.Run();\r\n\r\n\r\n//  A custom authentication handler that always validates an Http request with a hard-coded parsed token for John Doe\r\nclass ConstantAuthenticationHandler : AuthenticationHandler\u003cAuthenticationSchemeOptions\u003e\r\n{\r\n    public ConstantAuthenticationHandler(\r\n        IOptionsMonitor\u003cAuthenticationSchemeOptions\u003e options,\r\n        ILoggerFactory logger,\r\n        UrlEncoder encoder,\r\n        ISystemClock clock) : base(options, logger, encoder, clock)\r\n    {\r\n\r\n    }\r\n\r\n    protected override Task\u003cAuthenticateResult\u003e HandleAuthenticateAsync()\r\n    {\r\n        //  Hard-code a parsed token and always set the authentication result to success\r\n        Claim[] claims = new[]\r\n        {\r\n            new Claim(ClaimTypes.Upn, \"johndoe@example.com\"),\r\n            new Claim(ClaimTypes.Email, \"johndoe@example.com\"),\r\n            new Claim(ClaimTypes.GivenName, \"John\"),\r\n            new Claim(ClaimTypes.GivenName, \"Doe\"),\r\n            new Claim(ClaimTypes.Name, \"John Doe\"),\r\n            new Claim(ClaimTypes.Role, \"base_user\"),\r\n        };\r\n        ClaimsIdentity identity = new(claims, Scheme.Name, nameType: ClaimTypes.Name, roleType: ClaimTypes.Role);\r\n        ClaimsPrincipal principal = new(identity);\r\n        AuthenticationTicket ticket = new(principal, Scheme.Name);\r\n        AuthenticateResult success = AuthenticateResult.Success(ticket);\r\n        return Task.FromResult(success);\r\n    }\r\n}\r\n\r\n//  A policy requirment to validate requests on a specific day of the week\r\nclass WeekRequirement : IAuthorizationRequirement\r\n{\r\n    public DayOfWeek ValidDayOfWeek { get; }\r\n\r\n    public WeekRequirement(DayOfWeek validDayOfWeek) =\u003e ValidDayOfWeek = validDayOfWeek;\r\n}\r\n\r\n//  The policy handler for validating requests on a specific day of the week\r\nclass WeekRequirementHandler : AuthorizationHandler\u003cWeekRequirement\u003e\r\n{\r\n    protected override Task HandleRequirementAsync(AuthorizationHandlerContext context, WeekRequirement requirement)\r\n    {\r\n        //  Check if the request is being made on the day of the week\r\n        if (requirement.ValidDayOfWeek == DateTime.Now.DayOfWeek)\r\n        {\r\n            context.Succeed(requirement);\r\n        }\r\n        else\r\n        {\r\n            string message = \"Authorization failed because the request was made on the wrong day of the week. \" +\r\n                $\"Please, come back on {requirement.ValidDayOfWeek}.\";\r\n            context.Fail(new AuthorizationFailureReason(this, message));\r\n        }\r\n\r\n        return Task.CompletedTask;\r\n    }\r\n}\r\n\r\nstatic class WeekRequirementExtensions\r\n{\r\n    public static AuthorizationPolicyBuilder RequireDayOfWeek(this AuthorizationPolicyBuilder policyBuilder, DayOfWeek dayOfWeek)\r\n    {\r\n        return policyBuilder.AddRequirements(new WeekRequirement(dayOfWeek));\r\n    }\r\n}\r\n\r\n\r\n//  A custom authorization middleware that takes the error message from a failed policy\r\nclass MyAuthorizationMiddlewareResultHandler : IAuthorizationMiddlewareResultHandler\r\n{\r\n    private readonly AuthorizationMiddlewareResultHandler _defaultHandler = new();\r\n\r\n    public Task HandleAsync(RequestDelegate next, HttpContext context, AuthorizationPolicy policy, PolicyAuthorizationResult authorizeResult)\r\n    {\r\n        if (!authorizeResult.Succeeded \u0026\u0026 authorizeResult.AuthorizationFailure?.FailureReasons?.Any() == true)\r\n        {\r\n            //  Use the error message from a failed policy and write it on the body of the request\r\n            string errorMessage = string.Join(\"; \", authorizeResult.AuthorizationFailure.FailureReasons.Select(fr =\u003e fr.Message));\r\n            context.Response.StatusCode = StatusCodes.Status403Forbidden;\r\n            return context.Response.WriteAsync(errorMessage);\r\n        }\r\n\r\n        //  Use the default handler implementation\r\n        return _defaultHandler.HandleAsync(next, context, policy, authorizeResult);\r\n    }\r\n}\r\n\r\n[ApiController]\r\npublic class WeekController : ControllerBase\r\n{\r\n    //  UNCOMMENT THE FOLLOWING LINE TO SEE HOW IAuthorizationMiddlewareResultHandler\r\n    //  GETS CALLED WHEN YOU USE THE [Authorize(\"MondayPolicy\")] ATTRIBUTE ON THE CONTROLLER ACTION\r\n    //[Authorize(\"MondayPolicy\")]\r\n    [HttpGet(\"monday\")]\r\n    public string Monday() =\u003e \"Hello, \" + (User.Identity?.Name ?? \"MISSING_NAME\");\r\n}\r\n```\r\n\r\n### Output using AuthorizeFilter globally\r\n\u003cimg width=\"608\" alt=\"Screenshot 2023-12-07 at 5 18 04 PM\" src=\"https://github.com/dotnet/aspnetcore/assets/32784144/57371afc-1e0f-4ad1-9a99-8f1265c07a63\"\u003e\r\n\r\n### Output using AuthorizeAttribute\r\n\u003cimg width=\"599\" alt=\"Screenshot 2023-12-07 at 5 18 42 PM\" src=\"https://github.com/dotnet/aspnetcore/assets/32784144/5f373c9c-7563-4ea6-9a0a-260edadf30ca\"\u003e\r\n\r\nThanks for creating this issue, I couldn\u0027t find why IAuthorizationMiddlewareResultHandler wasn\u0027t being called until I found this ticket. I thought that it was happening because we were using multiple authentication schemes, but after I created the reproduce from above with multiple authentication schemes, I realized that wasn\u0027t the real problem.",
                                           "updatedAt":  "2023-12-08T01:25:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85zEu5a",
                                           "createdAt":  "2024-02-06T19:32:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "michiproep",
                                           "body":  "I haven\u0027t tested with . net 8 yet but if this is still an issue it should not get closed",
                                           "updatedAt":  "2024-02-06T19:32:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85zFtkW",
                                           "createdAt":  "2024-02-06T22:28:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2024-02-06T22:28:38Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "IAuthorizationMiddlewareResultHandler not called",
        "labels":  [
                       "enhancement",
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/51169",
        "createdAt":  "2023-10-05T18:22:10Z",
        "number":  51169,
        "author":  "Tratcher",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-22T18:01:26Z",
        "body":  "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nErrors from Unprotect are currently suppressed, making them difficult to debug.\r\nhttps://github.com/dotnet/aspnetcore/blob/933bc8447e10e3e4a327e8ac1c598935ddd294ae/src/Security/Authentication/Core/src/SecureDataFormat.cs#L85-L89\n\n### Describe the solution you\u0027d like\n\nLog these Exceptions.\n\n### Additional context\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "Add logging in SecureDataFormat",
        "labels":  [
                       "task",
                       "area-auth",
                       "feature-observability"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/52063",
        "createdAt":  "2023-11-15T04:30:52Z",
        "number":  52063,
        "author":  "christallire",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODCxbqA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "christallire",
                                            "createdAt":  "2023-11-15T04:35:40Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "appsolab",
                                            "createdAt":  "2023-11-15T12:15:02Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ChrisCA",
                                            "createdAt":  "2023-11-15T15:38:34Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "augustevn",
                                            "createdAt":  "2023-11-16T19:33:12Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "joecuevasjr",
                                            "createdAt":  "2023-11-16T19:44:42Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "jcob-ross",
                                            "createdAt":  "2023-11-17T00:23:05Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Kumima",
                                            "createdAt":  "2023-11-20T12:28:16Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "iotalambda",
                                            "createdAt":  "2023-11-30T15:30:30Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "david-obee",
                                            "createdAt":  "2023-12-13T13:38:49Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "mesakomarevich",
                                            "createdAt":  "2023-12-15T20:43:12Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "fravizel-dev",
                                            "createdAt":  "2023-12-28T17:01:12Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Remy-Be",
                                            "createdAt":  "2024-01-08T10:11:17Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "luis-fss",
                                            "createdAt":  "2024-01-08T15:44:03Z"
                                        },
                                        {
                                            "content":  "CONFUSED",
                                            "user":  "luis-fss",
                                            "createdAt":  "2024-01-08T15:44:18Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Eivinddh",
                                            "createdAt":  "2024-01-23T09:56:16Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "pablofrommars",
                                            "createdAt":  "2024-01-24T10:57:51Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "jorgedfmendes",
                                            "createdAt":  "2024-01-25T12:22:54Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "DAHAG-ArisNourbakhsh",
                                            "createdAt":  "2024-01-30T12:44:54Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "CodeFontana",
                                            "createdAt":  "2024-02-04T22:58:45Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "connorivy",
                                            "createdAt":  "2024-02-19T17:28:19Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "albin-karlsson",
                                            "createdAt":  "2024-02-23T15:23:08Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Tornhoof",
                                            "createdAt":  "2024-02-29T15:06:51Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "tjorvenK",
                                            "createdAt":  "2024-03-28T12:16:22Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "EkaterinaTikhomirova",
                                            "createdAt":  "2024-04-15T13:06:28Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "skrasekmichael",
                                            "createdAt":  "2024-04-27T09:25:32Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ryanbuening",
                                            "createdAt":  "2024-04-29T19:45:44Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "intronate67",
                                            "createdAt":  "2024-05-08T17:23:14Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Hvatir",
                                            "createdAt":  "2024-05-24T22:14:55Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "cn-ml",
                                            "createdAt":  "2024-06-03T16:10:37Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Rocky-25",
                                            "createdAt":  "2024-06-12T15:26:09Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "BieleckiLtd",
                                            "createdAt":  "2024-07-11T16:04:10Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Blaisor",
                                            "createdAt":  "2024-07-12T08:30:26Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "vladislav-karamfilov",
                                            "createdAt":  "2024-07-23T09:52:31Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Yulimus",
                                            "createdAt":  "2024-10-08T10:42:54Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "moshali1",
                                            "createdAt":  "2024-11-11T02:47:17Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Poffertjie",
                                            "createdAt":  "2024-11-25T08:55:50Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Trivivium",
                                            "createdAt":  "2024-12-11T20:11:22Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "TetsuyaOYA",
                                            "createdAt":  "2025-02-22T12:13:30Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "s-beji",
                                            "createdAt":  "2025-05-24T15:43:28Z"
                                        }
                                    ],
                          "totalCount":  39
                      },
        "updatedAt":  "2025-08-25T17:19:31Z",
        "body":  "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Describe the bug\r\n\r\nI\u0027ve created Blazor WebApp via VS 2022 template with individual identity.\r\nNo matter what I do, ```\u003cAuthorizeRouteView\u003e``` and ```\u003cNotAuthorized\u003e``` are not working and redirect any request to /Account/Login. putting ```\u003cp\u003enot working\u003c/p\u003e``` doesn\u0027t help.\r\n\r\n### Expected Behavior\r\n```\r\n\u003cRouter AppAssembly=\"@typeof(Program).Assembly\"\u003e\r\n    \u003cFound Context=\"routeData\"\u003e\r\n        \u003cAuthorizeRouteView RouteData=\"@routeData\" DefaultLayout=\"@typeof(Layout.MainLayout)\"\u003e\r\n            \u003cNotAuthorized\u003e\r\n                \u003cp\u003enot authorized\u003c/p\u003e\r\n            \u003c/NotAuthorized\u003e\r\n        \u003c/AuthorizeRouteView\u003e\r\n        \u003cFocusOnNavigate RouteData=\"@routeData\" Selector=\"h1\" /\u003e\r\n    \u003c/Found\u003e\r\n\u003c/Router\u003e\r\n```\r\nPrints \"not authorized\" when you click \"Auth Required\" in the template app\r\n\r\n\u003cimg width=\"689\" alt=\"image\" src=\"https://github.com/dotnet/aspnetcore/assets/1384630/90647652-bf34-43e9-bb82-b84ad896d8dd\"\u003e\r\n\r\n\r\n### Steps To Reproduce\r\n\r\n1) Create Blazor Web App with Server Interactive render mode, and with Individual Account Authentication type.\r\n2) Replace from \"```\u003cRedirectToLogin /\u003e```\" to \"```\u003cp\u003enot authorized\u003c/p\u003e```\" in Routes.razor (to see if your redirection is from RedirectToLogin component)\r\n3) Click \"Auth Required\" in template app.\r\n\r\n### Exceptions (if any)\r\n\r\n_No response_\r\n\r\n### .NET Version\r\n\r\n8.0.100\r\n\r\n### Anything else?\r\n\r\nThis is a blocker since I was migrating .NET 7.0 app to .NET 8.0, but It behaves very differently.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOoukrSA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85sB5Ym",
                                           "createdAt":  "2023-11-15T12:16:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "appsolab",
                                           "body":  "Same here. Since RC1 I can\u0027t migrate without this issue.",
                                           "updatedAt":  "2023-11-15T12:16:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85sED8t",
                                           "createdAt":  "2023-11-15T17:58:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MackinnonBuck",
                                           "body":  "@halter73 Would you be able to look into this?",
                                           "updatedAt":  "2023-11-15T17:58:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85sJIH4",
                                           "createdAt":  "2023-11-16T12:17:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODM2QJQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jcob-ross",
                                                                               "createdAt":  "2023-11-17T00:26:10Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "christallire",
                                           "body":  "Another thing I noticed Is that an authorization check (the route with [Authorize] Attribute) is done before the component lifecycle or Routing. \r\nFor an example. I used to put OnInitialized and handle some logic in what we now call Routes.razor. When I refresh the page, no routing or component lifecycle logic runs. Is this where we have the bug?\r\n\r\n.NET 7.0\r\nNo auth - Route OnInitialized = YES\r\nReq Auth- Route OnInitialized = YES\r\n\r\n.NET 8.0\r\nNo auth - Route Oninitialized = YES\r\nReq Auth - Route OnInitialized = NO\r\n\r\nUpon investigating all other interactivity - the same thing happens when refresh. It looks like there\u0027s something with pipeline.",
                                           "updatedAt":  "2023-11-16T13:34:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85sJouv",
                                           "createdAt":  "2023-11-16T13:46:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEQRidQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "mesakomarevich",
                                                                               "createdAt":  "2023-12-15T20:44:09Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "hellfirehd",
                                                                               "createdAt":  "2024-06-25T01:36:27Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "los93sol",
                                                                               "createdAt":  "2024-09-17T20:09:37Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "dbrcina",
                                                                               "createdAt":  "2024-10-21T09:17:45Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "zaMuffenMan",
                                                                               "createdAt":  "2025-04-30T10:26:48Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  5
                                                         },
                                           "author":  "christallire",
                                           "body":  "it seems the new 8.0 routing adds pages with [Authorization] to route, so that they have authorization metadata and can be checked with AuthorizationMiddleware if we prerender or first render (when we have HttpContext)\r\n\r\nThe request runs through pipelines, Invoking Authentication middleware first, and if this fails (no login, so always) - doing redirection defined in middleware.\r\nBut this is different, especially when we navigate with SPA and there\u0027s no Authentication middleware (obviously), and AuthenticationStateProvider is invoked instead of the middleware.\r\n\r\nI think someone really messed this up.\r\n\r\nedit: When I add JwtBearer authentication to the application they just throw 401 so authorization middleware it is.",
                                           "updatedAt":  "2023-11-16T14:00:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85sJsPH",
                                           "createdAt":  "2023-11-16T13:54:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEHQrhw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "kjkrum",
                                                                               "createdAt":  "2024-05-11T20:13:31Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "TetsuyaOYA",
                                                                               "createdAt":  "2025-02-22T12:13:55Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "christallire",
                                           "body":  "@MackinnonBuck can we urgently have a look into this? this seems serious because Authorization in blazor is basically broken.",
                                           "updatedAt":  "2023-11-16T13:57:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85sMfMR",
                                           "createdAt":  "2023-11-16T19:50:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "joecuevasjr",
                                           "body":  "I\u0027m experiencing the same issue as @christallire. This was working as expected in NET 7. In my case I\u0027m using a Cookie for auth but I don\u0027t utilize the Cookie\u0027s `options.LoginPath` configuration. I prefer to use the `\u003cNotAuthorized\u003e` template directive.",
                                           "updatedAt":  "2023-11-16T19:51:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85sNIg9",
                                           "createdAt":  "2023-11-16T21:59:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "augustevn",
                                           "body":  "@halter73 @MackinnonBuck @mkArtakMSFT\r\n\r\nI did some digging, it seems like the user Claims are no longer returned from `/manage/info` from the `.MapIdentityApi\u003cUser\u003e()`.\r\n\r\nThis change broke my app, worked in RC2 not in RTM. Is this intentional? Possibly related.\r\n\r\n`IdentityApiEndpointRouteBuilderExtensions.cs`, line 455:\r\n\r\n```\r\n\r\n    private static async Task\u003cInfoResponse\u003e CreateInfoResponseAsync\u003cTUser\u003e(TUser user, UserManager\u003cTUser\u003e userManager)\r\n        where TUser : class\r\n    {\r\n        return new()\r\n        {\r\n            Email = await userManager.GetEmailAsync(user) ?? throw new NotSupportedException(\"Users must have an email.\"),\r\n            IsEmailConfirmed = await userManager.IsEmailConfirmedAsync(user),\r\n        };\r\n    }\r\n\r\n```",
                                           "updatedAt":  "2023-11-16T22:31:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85sQt6r",
                                           "createdAt":  "2023-11-17T12:24:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "augustevn",
                                           "body":  "@christallire How do you implement the `AuthenticationStateProvider` and do you pass your claims to it? If so, could you check whether your claims are empty or not?",
                                           "updatedAt":  "2023-11-17T12:24:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85sQxVe",
                                           "createdAt":  "2023-11-17T12:33:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODM5gbg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "augustevn",
                                                                               "createdAt":  "2023-11-17T12:58:50Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "christallire",
                                           "body":  "\u003e @christallire How do you implement the `AuthenticationStateProvider` and do you pass your claims to it? If so, could you check whether your claims are empty or not?\r\n\r\n(edit: oh shoot sorry I thought you\u0027re asking me about my \"original\" implementation)\r\n\r\nI haven\u0027t changed anything from the template project except `RedirectToLogin` part.",
                                           "updatedAt":  "2023-11-17T12:41:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85sU6Ng",
                                           "createdAt":  "2023-11-18T07:13:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOD9j3Xg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jcob-ross",
                                                                               "createdAt":  "2023-11-18T15:53:16Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "rezamohammad",
                                                                               "createdAt":  "2023-11-28T20:38:45Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "rezamohammad",
                                                                               "createdAt":  "2023-11-28T20:38:53Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "brackers17",
                                                                               "createdAt":  "2023-12-05T11:18:01Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "pockets3407",
                                                                               "createdAt":  "2023-12-08T15:25:24Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "eholman",
                                                                               "createdAt":  "2024-01-08T13:44:26Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "CodeFontana",
                                                                               "createdAt":  "2024-02-04T23:00:31Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "connorivy",
                                                                               "createdAt":  "2024-02-19T17:25:03Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "paulonev",
                                                                               "createdAt":  "2024-03-09T10:14:42Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "AleksandrSt",
                                                                               "createdAt":  "2024-03-15T13:08:55Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "ChrisCA",
                                                                               "createdAt":  "2024-03-28T07:54:15Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "iq2luc",
                                                                               "createdAt":  "2024-03-29T22:12:59Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "MG174",
                                                                               "createdAt":  "2024-04-21T15:52:35Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "asifbacchus",
                                                                               "createdAt":  "2024-04-24T12:36:10Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "patrickgod",
                                                                               "createdAt":  "2024-04-30T20:28:00Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "mobinseven",
                                                                               "createdAt":  "2024-06-18T09:35:50Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "vladislav-karamfilov",
                                                                               "createdAt":  "2024-07-23T09:52:41Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "zachrburke",
                                                                               "createdAt":  "2024-09-06T20:24:58Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "zachrburke",
                                                                               "createdAt":  "2024-09-06T20:24:59Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "zachrburke",
                                                                               "createdAt":  "2024-09-06T20:25:00Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "mchlstrng",
                                                                               "createdAt":  "2024-09-08T20:05:48Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "joseluisct",
                                                                               "createdAt":  "2024-10-08T10:52:27Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "joseluisct",
                                                                               "createdAt":  "2024-10-08T10:52:28Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "joseluisct",
                                                                               "createdAt":  "2024-10-08T10:52:29Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "dbrcina",
                                                                               "createdAt":  "2024-10-21T09:19:13Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ram-xv",
                                                                               "createdAt":  "2024-12-04T16:18:57Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  26
                                                         },
                                           "author":  "christallire",
                                           "body":  "Well, I found a workaround by:\r\ndefine following class and register it where server initializes\r\n\r\n```\r\npublic class BlazorAuthorizationMiddlewareResultHandler : IAuthorizationMiddlewareResultHandler\r\n{\r\n    public Task HandleAsync(RequestDelegate next, HttpContext context, AuthorizationPolicy policy, PolicyAuthorizationResult authorizeResult)\r\n    {\r\n        return next(context);\r\n    }\r\n}\r\n```\r\nand handler:\r\n```\r\nservices.AddSingleton\u003cIAuthorizationMiddlewareResultHandler, BlazorAuthorizationMiddlewareResultHandler\u003e();\r\n```\r\n\r\nThis class will prevent redirection from the new .net 8 authorization middleware response.\r\nThe problem still exists, but we can at least we can use .NET 8 new feature the way we used to in Blazor and .NET 7.\r\n\r\nYou may need to separate endpoint routing other than blazor routes since it basically renders serverside authorization (via `.AddAuthentication(...).AddJwtBearer(...)`) ineffective.\r\n\r\nhope this helps, enjoy .net 8. while the team fixes the problem.",
                                           "updatedAt":  "2023-11-18T08:00:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85sbE-D",
                                           "createdAt":  "2023-11-20T13:10:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Kumima",
                                           "body":  "After investigation, I can understand it\u0027s by design now. But this is still a **very** weird behavior of navigation. \r\nIf the interactive is not ready, the app is matching `Static Stuff Routes`, the request route is managed by the pipeline. It will be redirected by `CookieAuthentication*` stuff. Only after the app is ready to be interactive, the interactive `Routes` component takes over the routing. If you refresh the browser manually, there is no ready interactive component.\r\n\r\nThis is just one of the problems that may arise. A worse scenario is the pages may flicker caused by this. Because the `Static Response` during Prerender may significantly differ from the `Interactive Content`. Check #51203 to see the behavior.\r\n\r\nA deeper investigation is under #52176 ",
                                           "updatedAt":  "2023-11-20T13:10:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85s57jw",
                                           "createdAt":  "2023-11-27T04:56:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEHQrnA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "KrzysztofUrbanczyk",
                                                                               "createdAt":  "2023-11-27T09:17:58Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "iotalambda",
                                                                               "createdAt":  "2023-11-30T15:33:10Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "brackers17",
                                                                               "createdAt":  "2023-12-05T11:18:16Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "pockets3407",
                                                                               "createdAt":  "2023-12-08T15:25:00Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "david-obee",
                                                                               "createdAt":  "2023-12-13T14:38:17Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "christallire",
                                                                               "createdAt":  "2023-12-18T05:38:44Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jackfiled",
                                                                               "createdAt":  "2023-12-19T14:52:15Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "luis-fss",
                                                                               "createdAt":  "2024-01-04T02:35:22Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "BelowH",
                                                                               "createdAt":  "2024-01-15T12:19:39Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "DAHAG-ArisNourbakhsh",
                                                                               "createdAt":  "2024-01-30T12:44:21Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "CodeFontana",
                                                                               "createdAt":  "2024-02-05T04:20:06Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "connorivy",
                                                                               "createdAt":  "2024-02-19T17:27:24Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jpgarza93",
                                                                               "createdAt":  "2024-03-14T21:27:25Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "cn-ml",
                                                                               "createdAt":  "2024-06-03T16:13:27Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "hellfirehd",
                                                                               "createdAt":  "2024-06-25T01:39:01Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "zachrburke",
                                                                               "createdAt":  "2024-09-06T20:25:05Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "los93sol",
                                                                               "createdAt":  "2024-09-17T20:11:49Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "TetsuyaOYA",
                                                                               "createdAt":  "2025-02-22T12:15:11Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  18
                                                         },
                                           "author":  "christallire",
                                           "body":  "I\u0027m afraid I have to disagree that this problem can be solved with documentation.",
                                           "updatedAt":  "2023-11-27T04:56:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85wHzuZ",
                                           "createdAt":  "2024-01-08T14:16:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "eholman",
                                           "body":  "\u003e Well, I found a workaround by: define following class and register it where server initializes\r\n\u003e \r\n\u003e ```\r\n\u003e public class BlazorAuthorizationMiddlewareResultHandler : IAuthorizationMiddlewareResultHandler\r\n\u003e {\r\n\u003e     public Task HandleAsync(RequestDelegate next, HttpContext context, AuthorizationPolicy policy, PolicyAuthorizationResult authorizeResult)\r\n\u003e     {\r\n\u003e         return next(context);\r\n\u003e     }\r\n\u003e }\r\n\u003e ```\r\n\u003e \r\n\u003e and handler:\r\n\u003e \r\n\u003e ```\r\n\u003e services.AddSingleton\u003cIAuthorizationMiddlewareResultHandler, BlazorAuthorizationMiddlewareResultHandler\u003e();\r\n\u003e ```\r\n\u003e \r\n\u003e This class will prevent redirection from the new .net 8 authorization middleware response. The problem still exists, but we can at least we can use .NET 8 new feature the way we used to in Blazor and .NET 7.\r\n\u003e \r\n\u003e You may need to separate endpoint routing other than blazor routes since it basically renders serverside authorization (via `.AddAuthentication(...).AddJwtBearer(...)`) ineffective.\r\n\u003e \r\n\u003e hope this helps, enjoy .net 8. while the team fixes the problem.\r\n\r\nThe Blazor Server template with .Net 8 and Identity worked fine out of the box for me. But with the Jwt-Bearer as authentication the symptoms where exactly the same. The 401 http response code was thrown instead, before the AuthorizeRouteView component kicked in and isn\u0027t able to redirect to login this way. \r\n\r\nThe workaround of above works like a charm. I unfortunately don\u0027t have time to dig in further why this works.\r\n\r\nThis is my program minimal api authentication code:\r\n```c#\r\nbuilder.Services.AddAuthentication(JwtBearerDefaults.AuthenticationScheme).AddJwtBearer(options =\u003e\r\n{\r\n    options.Events = new JwtBearerEvents\r\n    {\r\n        OnMessageReceived = context =\u003e\r\n        {\r\n            if (context.Request.Cookies.TryGetValue(\"token\", out var token))\r\n            {\r\n                context.Token = token;\r\n            }\r\n\r\n            return Task.CompletedTask;\r\n        }\r\n    };\r\n\r\n    options.TokenValidationParameters = new TokenValidationParameters\r\n    {\r\n        ValidateAudience = false,\r\n        ValidateIssuerSigningKey = false,\r\n        ValidateIssuer = false,\r\n        SignatureValidator = (token, parameters) =\u003e new Microsoft.IdentityModel.JsonWebTokens.JsonWebToken(token)\r\n    };\r\n});\r\n```",
                                           "updatedAt":  "2024-01-08T14:16:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85wLL6_",
                                           "createdAt":  "2024-01-08T23:28:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jorg3roch4",
                                           "body":  "\u003e \u003e Well, I found a workaround by: define following class and register it where server initializes\r\n\u003e \u003e ```\r\n\u003e \u003e public class BlazorAuthorizationMiddlewareResultHandler : IAuthorizationMiddlewareResultHandler\r\n\u003e \u003e {\r\n\u003e \u003e     public Task HandleAsync(RequestDelegate next, HttpContext context, AuthorizationPolicy policy, PolicyAuthorizationResult authorizeResult)\r\n\u003e \u003e     {\r\n\u003e \u003e         return next(context);\r\n\u003e \u003e     }\r\n\u003e \u003e }\r\n\u003e \u003e ```\r\n\u003e \u003e \r\n\u003e \u003e \r\n\u003e \u003e     \r\n\u003e \u003e       \r\n\u003e \u003e     \r\n\u003e \u003e \r\n\u003e \u003e       \r\n\u003e \u003e     \r\n\u003e \u003e \r\n\u003e \u003e     \r\n\u003e \u003e   \r\n\u003e \u003e and handler:\r\n\u003e \u003e ```\r\n\u003e \u003e services.AddSingleton\u003cIAuthorizationMiddlewareResultHandler, BlazorAuthorizationMiddlewareResultHandler\u003e();\r\n\u003e \u003e ```\r\n\u003e \u003e \r\n\u003e \u003e \r\n\u003e \u003e     \r\n\u003e \u003e       \r\n\u003e \u003e     \r\n\u003e \u003e \r\n\u003e \u003e       \r\n\u003e \u003e     \r\n\u003e \u003e \r\n\u003e \u003e     \r\n\u003e \u003e   \r\n\u003e \u003e This class will prevent redirection from the new .net 8 authorization middleware response. The problem still exists, but we can at least we can use .NET 8 new feature the way we used to in Blazor and .NET 7.\r\n\u003e \u003e You may need to separate endpoint routing other than blazor routes since it basically renders serverside authorization (via `.AddAuthentication(...).AddJwtBearer(...)`) ineffective.\r\n\u003e \u003e hope this helps, enjoy .net 8. while the team fixes the problem.\r\n\u003e \r\n\u003e The Blazor Server template with .Net 8 and Identity worked fine out of the box for me. But with the Jwt-Bearer as authentication the symptoms where exactly the same. The 401 http response code was thrown instead, before the AuthorizeRouteView component kicked in and isn\u0027t able to redirect to login this way.\r\n\u003e \r\n\u003e The workaround of above works like a charm. I unfortunately don\u0027t have time to dig in further why this works.\r\n\u003e \r\n\u003e This is my program minimal api authentication code:\r\n\u003e \r\n\u003e ```cs\r\n\u003e builder.Services.AddAuthentication(JwtBearerDefaults.AuthenticationScheme).AddJwtBearer(options =\u003e\r\n\u003e {\r\n\u003e     options.Events = new JwtBearerEvents\r\n\u003e     {\r\n\u003e         OnMessageReceived = context =\u003e\r\n\u003e         {\r\n\u003e             if (context.Request.Cookies.TryGetValue(\"token\", out var token))\r\n\u003e             {\r\n\u003e                 context.Token = token;\r\n\u003e             }\r\n\u003e \r\n\u003e             return Task.CompletedTask;\r\n\u003e         }\r\n\u003e     };\r\n\u003e \r\n\u003e     options.TokenValidationParameters = new TokenValidationParameters\r\n\u003e     {\r\n\u003e         ValidateAudience = false,\r\n\u003e         ValidateIssuerSigningKey = false,\r\n\u003e         ValidateIssuer = false,\r\n\u003e         SignatureValidator = (token, parameters) =\u003e new Microsoft.IdentityModel.JsonWebTokens.JsonWebToken(token)\r\n\u003e     };\r\n\u003e });\r\n\u003e ```\r\n\r\nYou don\u0027t need that on the client side; the same happened to me. I removed it, and it worked perfectly. It\u0027s only used in the API code.",
                                           "updatedAt":  "2024-01-08T23:28:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85xnWa4",
                                           "createdAt":  "2024-01-23T14:11:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODZ9dVw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jorgedfmendes",
                                                                               "createdAt":  "2024-01-25T12:25:26Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "paulonev",
                                                                               "createdAt":  "2024-03-09T10:06:19Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "dustrat",
                                           "body":  "We have a similar issue with Blazor Webassembly (hosted) and I tried applying the workaround in the Host API, but it didn\u0027t work. Anyone have any idea how to solve it in WASM?",
                                           "updatedAt":  "2024-01-23T14:11:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85xuBPG",
                                           "createdAt":  "2024-01-24T10:54:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODUEK6A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jorgedfmendes",
                                                                               "createdAt":  "2024-01-25T12:25:31Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "pablofrommars",
                                           "body":  "Same problem as @dustrat reported",
                                           "updatedAt":  "2024-01-24T10:54:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85yh6AZ",
                                           "createdAt":  "2024-02-01T14:40:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "gyurisicSSPS",
                                           "body":  "Running into the same issue with Blazor WASM as @dustrat  and @pablofrommars \r\n",
                                           "updatedAt":  "2024-02-01T14:40:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde850G-kd",
                                           "createdAt":  "2024-02-16T08:54:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODm961A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "CodeFontana",
                                                                               "createdAt":  "2024-02-16T14:49:54Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "hellfirehd",
                                                                               "createdAt":  "2024-06-25T01:42:27Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "flennic",
                                           "body":  "\u003e Well, I found a workaround by: define following class and register it where server initializes\r\n\u003e \r\n\u003e ```\r\n\u003e public class BlazorAuthorizationMiddlewareResultHandler : IAuthorizationMiddlewareResultHandler\r\n\u003e {\r\n\u003e     public Task HandleAsync(RequestDelegate next, HttpContext context, AuthorizationPolicy policy, PolicyAuthorizationResult authorizeResult)\r\n\u003e     {\r\n\u003e         return next(context);\r\n\u003e     }\r\n\u003e }\r\n\u003e ```\r\n\u003e \r\n\u003e and handler:\r\n\u003e \r\n\u003e ```\r\n\u003e services.AddSingleton\u003cIAuthorizationMiddlewareResultHandler, BlazorAuthorizationMiddlewareResultHandler\u003e();\r\n\u003e ```\r\n\u003e \r\n\u003e This class will prevent redirection from the new .net 8 authorization middleware response. The problem still exists, but we can at least we can use .NET 8 new feature the way we used to in Blazor and .NET 7.\r\n\u003e \r\n\u003e You may need to separate endpoint routing other than blazor routes since it basically renders server-side authorization (via `.AddAuthentication(...).AddJwtBearer(...)`) ineffective.\r\n\u003e \r\n\u003e hope this helps, enjoy .net 8. while the team fixes the problem.\r\n\r\nEncountering the same problem and ended up using your recommended workaround, so thanks a lot for the hint. This unfortunately has some implications. The project I am working on using OIDC for logging in users, so the authorization result `Challenged` still needs to intercept to call for the OAuth 2.0 redirect to the identity provider. I have solved this by making this adjustment:\r\n\r\n```c#\r\npublic async Task HandleAsync(RequestDelegate next, HttpContext context, AuthorizationPolicy policy, PolicyAuthorizationResult authorizeResult)\r\n{\r\n    if (authorizeResult.Challenged)\r\n        await _defaultHandler.HandleAsync(next, context, policy, authorizeResult);\r\n    else\r\n        await next(context);\r\n}\r\n```\r\n\r\nHowever, my biggest concern is the implication which you already mentioned. This more or less disables the ASP.NET authorization layer, so if you have an API you must move that one to another project. I would like to re-use the cookie session but this is not as straight forward anymore. I will look into using a shared state for the cookie data protection and might be able to re-use the cookie when Blazor project and API are running under the same domain. Another way would be to either re-use the `id_token` or `access_token` for the API. Probably the `id_token` because this is the token meant to be for the application and not the underlying APIs (so a different API layer). So to say the JWT bearer.\r\n\r\nNevertheless—even assuming finding a good solution—this definitely does not seem optimal and might be difficult for not so experienced programmers. It would be nice if the ASP.NET middleware somehow knows when a request is meant to be routed to Blazor. I have not looked too much into it yet, but as `HttpContext`, `AuthorizationPolicy` and `PolicyAuthorizationResult` are available one could probably build something here.\r\n\r\nThe main thing is, it does not really feel \"round\", it would be nice if Blazor projects with authentication and authorization would be carved into one stone. I do not have a good solution here, but hope that I could lay out the problem a bit more in detail.\r\n\r\n__Edit:__ On another note, I also noticed another issue if you use Blazor SSR and WebAssembly only for interactivity. In this case, no `AuthenticationStateProvider` is registered, which means that you will get a runtime exception when using `builder.Services.AddCascadingAuthenticationState();`. It feels that a default implementation mapping the authentication state, the same way at the Blazor server project uses, would suffice as a good starting point. It feels that there are so many \"manual\" tweaks one has to do to get a standard setup \"Blazor with OIDC\" to work properly.\r\n\r\nThanks for reading!",
                                           "updatedAt":  "2024-02-18T07:58:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde8503XMG",
                                           "createdAt":  "2024-02-23T03:04:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "halter73",
                                           "body":  "\u003e Running into the same issue with Blazor WASM as @dustrat and @pablofrommars\r\n\r\nAre you using the new `MapRazorComponents\u003cApp\u003e()` with `AddInteractiveWebAssemblyRenderMode()`, or are you trying to keep a hosted Blazor WebAssembly app working with `\u003ccomponent type=\"typeof(App)\" render-mode=\"WebAssembly\"\u003e` in a `_Host.cshtml`? Can someone please provide a copy of what they\u0027ve tried so far to get Blazor WASM working?",
                                           "updatedAt":  "2024-02-23T23:10:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde851GAht",
                                           "createdAt":  "2024-02-26T16:03:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEHQrzA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "TetsuyaOYA",
                                                                               "createdAt":  "2025-02-22T12:16:33Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "flatproject",
                                           "body":  "Latest visual studio, starting a new blazor project, no interactivity (just SSR), the `\u003cRedirectToLogin/\u003e` never gets hit when clicking on the \"Auth Required\" link. When navigating to Account/Manage/Index without being authenticated it redirects me to InvalidUser which is a redirection hapenning in the IdentityUserAccessor. The _imports file has an [Authorize] attribute. Shouldn\u0027t the authorize attribute work first before the IdentityUserAccessor used inside the component? Bug or by design?",
                                           "updatedAt":  "2024-02-26T16:08:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde852SmLH",
                                           "createdAt":  "2024-03-07T22:07:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jdbahnick",
                                           "body":  "I\u0027m currently working on a .NET 8 Blazor PWA implenting Auth0 B2C and am having the same issue. In the `\u003cAuthorizeRouteView\u003e`, the `\u003cAuthorizing\u003e` component is hit. However, the `\u003cNotAuthorized\u003e` component is just straight up ignored. What\u0027s worse, it\u0027s not until I have an exception thrown by my API and bubbled up to the browser due to a lack of access token that a call to `authentication/login` actually does what it\u0027s supposed to. Adding `[Authorize]\u0027 to the _Imports file does absolutely nothing.\r\n\r\nI am also following best practice and not using Cookie Authentication.\r\n\r\nI\u0027m not sure if I\u0027m missing something or what the issue is. Some guidance would be appreciated.\r\n\r\nEDIT:\r\nSo I finally figured out that I have to explicitly put the `[Authorize]` attribute on top of each page I want to secure. So placing an attribute in _Imports has no affect, using an AuthorizeView in my main layout just created an infinite loop of authentication requests.\r\n\r\nPerhaps I\u0027m not securing my entire client app correctly? I would think I should just be able to specify that my app can only be used by authorized users.",
                                           "updatedAt":  "2024-03-07T22:45:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde8529yUZ",
                                           "createdAt":  "2024-03-13T21:37:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEROFoQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "CodeFontana",
                                                                               "createdAt":  "2024-03-14T00:10:43Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jpgarza93",
                                                                               "createdAt":  "2024-03-14T21:29:21Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "diegomgarcia",
                                                                               "createdAt":  "2024-03-15T02:42:54Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "AleksandrSt",
                                                                               "createdAt":  "2024-03-15T13:12:40Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "KrzysztofUrbanczyk",
                                                                               "createdAt":  "2024-03-15T16:40:06Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jdbahnick",
                                                                               "createdAt":  "2024-03-19T19:56:09Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ChrisCA",
                                                                               "createdAt":  "2024-03-20T13:23:13Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "tjorvenK",
                                                                               "createdAt":  "2024-03-28T12:12:27Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "GetGol",
                                                                               "createdAt":  "2024-04-17T14:08:16Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "skrasekmichael",
                                                                               "createdAt":  "2024-04-27T09:30:03Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ryanbuening",
                                                                               "createdAt":  "2024-04-29T19:50:21Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "pedershk",
                                                                               "createdAt":  "2024-05-06T16:40:07Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "misaka12450",
                                                                               "createdAt":  "2024-05-20T08:00:37Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Liandrel",
                                                                               "createdAt":  "2024-06-02T11:07:50Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "cn-ml",
                                                                               "createdAt":  "2024-06-03T16:15:01Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "helder-dev",
                                                                               "createdAt":  "2024-06-07T16:20:35Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "eaindra-cnvx",
                                                                               "createdAt":  "2024-06-14T14:21:55Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "hellfirehd",
                                                                               "createdAt":  "2024-06-25T01:45:06Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Usergitbit",
                                                                               "createdAt":  "2024-07-03T20:37:53Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "danieldespainTLS",
                                                                               "createdAt":  "2024-07-25T11:49:47Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "olejsc",
                                                                               "createdAt":  "2024-07-29T12:24:47Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "alfred0dev",
                                                                               "createdAt":  "2024-12-09T06:45:52Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "TetsuyaOYA",
                                                                               "createdAt":  "2025-02-22T12:16:57Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "enes4934",
                                                                               "createdAt":  "2025-05-07T19:38:51Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  24
                                                         },
                                           "author":  "andy250",
                                           "body":  "It\u0027s been 4 months, the problem is still there. The docs are wrong saying that the `RedirectToLogin` component is doing the redirection (https://learn.microsoft.com/en-us/aspnet/core/blazor/security/?view=aspnetcore-8.0\u0026preserve-view=true#customize-unauthorized-content-with-the-router-component). This is not true, the component is never fired. It can be reproduced by:\r\n* creating a fresh Blazor Web App project from the template in VS2022 (with authentication)\r\n* putting a breakpoint in `RedirectToLogin.razor` inside `OnInitialized`\r\n* running the project and clicking \"Auth Required\" menu item in the navbar\r\n* the breakpoint is not hit (so `\u003cNotAuthorized\u003e` section inside `Routes.razor` was not triggered) but user is redirected to login page by some other means\r\n\r\nHere is the `Routes.razor` for reference from this project:\r\n```\r\n@using IndetityAuth.Components.Account.Shared\r\n\u003cRouter AppAssembly=\"typeof(Program).Assembly\"\u003e\r\n    \u003cFound Context=\"routeData\"\u003e\r\n        \u003cAuthorizeRouteView RouteData=\"routeData\" DefaultLayout=\"typeof(Layout.MainLayout)\"\u003e\r\n            \u003cNotAuthorized\u003e\r\n                \u003cRedirectToLogin /\u003e\r\n            \u003c/NotAuthorized\u003e\r\n        \u003c/AuthorizeRouteView\u003e\r\n        \u003cFocusOnNavigate RouteData=\"routeData\" Selector=\"h1\" /\u003e\r\n    \u003c/Found\u003e\r\n\u003c/Router\u003e\r\n```\r\n\r\nSome comments here indicate this is by design, but it\u0027s really a puzzle to understand what is going on with all the auth and redirection magic. It is really disappointing such a basic security mechanism seems to be broken since Nov 2023. I am working on a custom setup with external auth provider and making blazor part work is a nightmare. I think I will resort to `AuthorizeView` in the MainLayout and other pages probably for now.",
                                           "updatedAt":  "2024-03-13T21:37:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde853mEvU",
                                           "createdAt":  "2024-03-19T09:22:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Maetness",
                                           "body":  "I have a smiliar problem where the basic authentication and redirects are working but as soon as I implement any further authorization rules on a page (role or policy based) it just infinitly loops between the redirectToLogin component and tries to authenticated the already logged-in user. \r\n\r\nrealted issue: https://github.com/dotnet/aspnetcore/issues/19855",
                                           "updatedAt":  "2024-03-19T09:22:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde853r_xf",
                                           "createdAt":  "2024-03-19T20:03:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEdbO7A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "markgr",
                                                                               "createdAt":  "2024-03-20T03:06:16Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "pedershk",
                                                                               "createdAt":  "2024-05-06T16:41:12Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "hung-doan",
                                                                               "createdAt":  "2025-08-07T07:02:33Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "jdbahnick",
                                           "body":  "I abandoned the AuthorizeRouteView all together since I could only get it to properly trigger the NotAuthorized portion after trying to render a page that had the Authorize attribute on it. I decided to do an AuthorizeView in the main layout with the RedirectToLogin component in the NotAuthorized portion. This seems to work as the AuthorizeRouteView should. And I guess technically since at the App.razor level you\u0027re working with the routes and not with the pages directly, routes are not what is being secured but the actual page. However, at the AuthorizeRouteView level, I would think there should be an explicit check to see if the current user has Identity.IsAuthenticated be true. If not, then you\u0027re not authorized. \r\n\r\nNone of this seems to function as I think it should. Templating the App.razor in this fashion seems like an oversite if this is not the way Blazor Wasm is intended to work. Sure I currently have a work around for the issue, but it feels wrong to handle the state of authentication from a layout.",
                                           "updatedAt":  "2024-03-19T20:03:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde854Z6cd",
                                           "createdAt":  "2024-03-26T10:28:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODziY-w==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "slynch401k",
                                                                               "createdAt":  "2024-09-25T12:55:02Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "NathanVG",
                                           "body":  "I am having a related problem (I think): https://github.com/dotnet/aspnetcore/issues/54666\r\n\r\nI\u0027m fairly new to Blazor and .net as a whole and it has been a nightmare trying to figure this out. \r\nI\u0027ve read all sorts of docs but it\u0027s a maze if you\u0027re not at home in this ecosystem. \r\n\r\nI scaffolded the app using the template provided, and set up everyting in Azure AD, authentication for the API works fine when just normally navigating the app, but when the user refreshes all authorization for the api is lost. ",
                                           "updatedAt":  "2024-03-26T10:28:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde855ON7O",
                                           "createdAt":  "2024-04-03T07:34:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HuaFangYun",
                                           "body":  "Would you like to ask if the current problem has been solved? Thank you!",
                                           "updatedAt":  "2024-04-03T07:34:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85-Bh7y",
                                           "createdAt":  "2024-05-16T07:56:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODm99Jg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "hellfirehd",
                                                                               "createdAt":  "2024-06-25T01:48:02Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "Appli4Ever",
                                           "body":  "I have a hosted Blazor WASM app in Asp.Net Core. I have prerendering enabled. My problem was, that builder.Services.AddCascadingAuthenticationState(); is not the same as CascadingAuthenticationState Componente in the Routes.razor despite being described as such. The differenz is while prerendering, the GetAuthenticationStateAsync() method is not called when adding the CascadingAuthenticationState via the ServiceCollection. \r\n\r\nSince I have some specially authentication (anonymous user are being logged in with cookies) this was an essential part of my solution. ",
                                           "updatedAt":  "2024-05-16T08:16:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85_x-2C",
                                           "createdAt":  "2024-06-02T11:21:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEE8yRQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "kasahara-t",
                                                                               "createdAt":  "2024-06-05T07:33:20Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "danieldespainTLS",
                                                                               "createdAt":  "2024-07-25T04:40:11Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "mmaderic",
                                                                               "createdAt":  "2024-11-14T19:38:33Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "Jaydon-ATO",
                                                                               "createdAt":  "2025-02-03T04:14:39Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  4
                                                         },
                                           "author":  "Liandrel",
                                           "body":  "If someone still struggles with this problem I found another workaround.\r\n\r\n`services.ConfigureApplicationCookie(opts =\u003e\r\n{\r\n    opts.LoginPath = new PathString(\"/authorize/login\");\r\n});`\r\n\r\nWith this workaround when accessing page with [Authorize] attribute it redirects to \"/autorize/login\" instead of \"Account/Login\"\r\n\r\nStill it would be better if this was fixed on blazor framework level and AuthorizeRouteView worked like it should do",
                                           "updatedAt":  "2024-06-02T11:22:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85_5HJu",
                                           "createdAt":  "2024-06-03T16:44:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEHQr6g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "rzmz",
                                                                               "createdAt":  "2024-06-21T11:56:43Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "skwax",
                                                                               "createdAt":  "2024-06-29T13:34:42Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "FVFmfr",
                                                                               "createdAt":  "2024-07-04T06:09:20Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "slynch401k",
                                                                               "createdAt":  "2024-09-25T12:55:54Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "TetsuyaOYA",
                                                                               "createdAt":  "2025-02-22T12:18:25Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  5
                                                         },
                                           "author":  "cn-ml",
                                           "body":  "I also just wasted a couple hours on debugging my requests until i found this. I just wanted to do some experimentations with blazor, but this is a real bummer.",
                                           "updatedAt":  "2024-06-03T16:44:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86BJyrw",
                                           "createdAt":  "2024-06-13T21:30:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOD0GjrA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "Herdo",
                                                                               "createdAt":  "2024-09-30T14:26:41Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "sinoergin",
                                           "body":  "it was working from me below that but #19855 is good idea. \r\n\r\n`..AddCookie(IdentityConstants.ApplicationScheme, opt =\u003e opt.LoginPath = \"routeUrl\")`\r\n",
                                           "updatedAt":  "2024-06-13T21:30:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86DkOGY",
                                           "createdAt":  "2024-07-03T21:13:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODziZvw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "slynch401k",
                                                                               "createdAt":  "2024-09-25T12:56:43Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "Usergitbit",
                                           "body":  "@flennic I\u0027m also doing OIDC with IdentityServer and I don\u0027t seem to need anything more than\r\n```\r\npublic class BlazorAuthorizationMiddlewareResultHandler() : IAuthorizationMiddlewareResultHandler\r\n{\r\n    public async Task HandleAsync(RequestDelegate next, HttpContext context, AuthorizationPolicy policy, PolicyAuthorizationResult authorizeResult)\r\n    {\r\n        await next(context);\r\n    }\r\n}\r\n```\r\nIn which case did you need that? User not logged in trying to access a page that requires authorization? How do you have the redirect to login provider implemented?\r\n\r\nAlso, is there any plan on making Blazor Server easier to integrate with OIDC? I\u0027m doing some hacky stuff in order to refresh the access token and then get it updated in the cookie.",
                                           "updatedAt":  "2024-07-03T21:23:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86Eeef0",
                                           "createdAt":  "2024-07-11T10:30:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEHQsDA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "TetsuyaOYA",
                                                                               "createdAt":  "2025-02-22T12:19:30Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "flennic",
                                           "body":  "@Usergitbit When combining an API and Blazor in the same project. I now do not remember the exact setup, but the API layer middleware comes before the request gets to Blazor. So e.g. \"Unauthorized\" should not be blocked by the API, but should be forwarded to Blazor to show a \"Hey, you do not have permission to see this page\" message. But \"Challanged\" _should_ respond with the correct OAuth 2.0 / OIDC flow and not forward the request to Blazor.\r\n\r\nSo the redirect to the identity provider is the default OIDC ASP.NET implementation, it is not handled by Blazor.\r\n\r\nAnd regarding you last point, I agree. The integration for projects where API and Blazor are mixed should be improved. Also I do not understand why refresh token generation is not enabled (or at least implemented) by default as there actually exist Microsoft examples which can be copy and pasted, maybe with minor adjustments which cloud be put into an `Action\u003cRefreshOptions\u003e` extension method.\r\n\r\nThere are even more quirks, e.g. only OAuth 2.0 (for example for an API) where only the JWKS endpoint is used, is also not supported by default. A friendly user provides his own library for fixing that, I think it should be part of the stack the same as OIDC. But there are probably more reasons for it why decisions are made as they are, I only see it from my perspective.",
                                           "updatedAt":  "2024-07-11T10:30:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86FGet0",
                                           "createdAt":  "2024-07-17T11:21:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Joaomfcarmo",
                                           "body":  "\u003e \u003e Well, I found a workaround by: define following class and register it where server initializes\r\n\u003e \u003e ```\r\n\u003e \u003e public class BlazorAuthorizationMiddlewareResultHandler : IAuthorizationMiddlewareResultHandler\r\n\u003e \u003e {\r\n\u003e \u003e     public Task HandleAsync(RequestDelegate next, HttpContext context, AuthorizationPolicy policy, PolicyAuthorizationResult authorizeResult)\r\n\u003e \u003e     {\r\n\u003e \u003e         return next(context);\r\n\u003e \u003e     }\r\n\u003e \u003e }\r\n\u003e \u003e ```\r\n\u003e \u003e \r\n\u003e \u003e \r\n\u003e \u003e     \r\n\u003e \u003e       \r\n\u003e \u003e     \r\n\u003e \u003e \r\n\u003e \u003e       \r\n\u003e \u003e     \r\n\u003e \u003e \r\n\u003e \u003e     \r\n\u003e \u003e   \r\n\u003e \u003e and handler:\r\n\u003e \u003e ```\r\n\u003e \u003e services.AddSingleton\u003cIAuthorizationMiddlewareResultHandler, BlazorAuthorizationMiddlewareResultHandler\u003e();\r\n\u003e \u003e ```\r\n\u003e \u003e \r\n\u003e \u003e \r\n\u003e \u003e     \r\n\u003e \u003e       \r\n\u003e \u003e     \r\n\u003e \u003e \r\n\u003e \u003e       \r\n\u003e \u003e     \r\n\u003e \u003e \r\n\u003e \u003e     \r\n\u003e \u003e   \r\n\u003e \u003e This class will prevent redirection from the new .net 8 authorization middleware response. The problem still exists, but we can at least we can use .NET 8 new feature the way we used to in Blazor and .NET 7.\r\n\u003e \u003e You may need to separate endpoint routing other than blazor routes since it basically renders server-side authorization (via `.AddAuthentication(...).AddJwtBearer(...)`) ineffective.\r\n\u003e \u003e hope this helps, enjoy .net 8. while the team fixes the problem.\r\n\u003e \r\n\u003e Encountering the same problem and ended up using your recommended workaround, so thanks a lot for the hint. This unfortunately has some implications. The project I am working on using OIDC for logging in users, so the authorization result `Challenged` still needs to intercept to call for the OAuth 2.0 redirect to the identity provider. I have solved this by making this adjustment:\r\n\u003e \r\n\u003e ```cs\r\n\u003e public async Task HandleAsync(RequestDelegate next, HttpContext context, AuthorizationPolicy policy, PolicyAuthorizationResult authorizeResult)\r\n\u003e {\r\n\u003e     if (authorizeResult.Challenged)\r\n\u003e         await _defaultHandler.HandleAsync(next, context, policy, authorizeResult);\r\n\u003e     else\r\n\u003e         await next(context);\r\n\u003e }\r\n\u003e ```\r\n\u003e \r\n\u003e However, my biggest concern is the implication which you already mentioned. This more or less disables the ASP.NET authorization layer, so if you have an API you must move that one to another project. I would like to re-use the cookie session but this is not as straight forward anymore. I will look into using a shared state for the cookie data protection and might be able to re-use the cookie when Blazor project and API are running under the same domain. Another way would be to either re-use the `id_token` or `access_token` for the API. Probably the `id_token` because this is the token meant to be for the application and not the underlying APIs (so a different API layer). So to say the JWT bearer.\r\n\u003e \r\n\u003e Nevertheless—even assuming finding a good solution—this definitely does not seem optimal and might be difficult for not so experienced programmers. It would be nice if the ASP.NET middleware somehow knows when a request is meant to be routed to Blazor. I have not looked too much into it yet, but as `HttpContext`, `AuthorizationPolicy` and `PolicyAuthorizationResult` are available one could probably build something here.\r\n\u003e \r\n\u003e The main thing is, it does not really feel \"round\", it would be nice if Blazor projects with authentication and authorization would be carved into one stone. I do not have a good solution here, but hope that I could lay out the problem a bit more in detail.\r\n\u003e \r\n\u003e **Edit:** On another note, I also noticed another issue if you use Blazor SSR and WebAssembly only for interactivity. In this case, no `AuthenticationStateProvider` is registered, which means that you will get a runtime exception when using `builder.Services.AddCascadingAuthenticationState();`. It feels that a default implementation mapping the authentication state, the same way at the Blazor server project uses, would suffice as a good starting point. It feels that there are so many \"manual\" tweaks one has to do to get a standard setup \"Blazor with OIDC\" to work properly.\r\n\u003e \r\n\u003e Thanks for reading!\r\n\r\nHi, can you show me your _defaultHandler declaration, please.\r\n\r\n",
                                           "updatedAt":  "2024-07-17T11:21:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86FR6LN",
                                           "createdAt":  "2024-07-18T09:36:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "flennic",
                                           "body":  "@Joaomfcarmo It is a field in the `IAuthorizationMiddlewareResultHandler` declared like this:\r\n\r\n```cs\r\nprivate readonly AuthorizationMiddlewareResultHandler _defaultHander = new();\r\n```",
                                           "updatedAt":  "2024-07-18T09:36:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86Flvgj",
                                           "createdAt":  "2024-07-20T19:06:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "killyp",
                                           "body":  "Is there official documentation on this yet?  I am still using the `IAuthorizationMiddlewareResultHandler` workaround on my Blazor Webapp to get the NotAuthorized component to trigger and redirect to a landing page.",
                                           "updatedAt":  "2024-07-20T19:06:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86GEx3I",
                                           "createdAt":  "2024-07-25T04:53:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danieldespainTLS",
                                           "body":  "The template code is very misleading.  Looking at `Routes.razor` makes it look like the `\u003cRedirectToLogin /\u003e` component is where the \"magic\" happens - which is the way it used to be.  As mentioned, that component isn\u0027t involved anymore **(so why is it in the Routes template??)**.  You can open up the RedirectToLogin.razor file and change the `NavigateTo(...)` path but it will still take you to `Account/Login?…`.  You can put a breakpoint in that component, and it never gets hit.\r\n\r\nThe solution from @Liandrel about `services.ConfigureApplicationCookie(…)` is what finally helped me out - after wasting way too many hours.",
                                           "updatedAt":  "2024-07-25T04:53:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86GQxRj",
                                           "createdAt":  "2024-07-26T11:17:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOD6HQKw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "iq2luc",
                                                                               "createdAt":  "2024-07-26T11:27:31Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "iq2luc",
                                                                               "createdAt":  "2024-07-26T11:28:11Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Liandrel",
                                                                               "createdAt":  "2024-07-27T21:58:19Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "killyp",
                                                                               "createdAt":  "2024-08-28T17:17:36Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "FrankNiemeyer",
                                                                               "createdAt":  "2024-09-03T16:28:15Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "FrankNiemeyer",
                                                                               "createdAt":  "2024-09-03T16:28:17Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "MrDreamer93",
                                                                               "createdAt":  "2024-09-24T06:36:01Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "dbrcina",
                                                                               "createdAt":  "2024-10-21T09:08:35Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Zzzzjle",
                                                                               "createdAt":  "2024-11-09T03:25:48Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  9
                                                         },
                                           "author":  "Appli4Ever",
                                           "body":  "\u003e The template code is very misleading. Looking at `Routes.razor` makes it look like the `\u003cRedirectToLogin /\u003e` component is where the \"magic\" happens - which is the way it used to be. As mentioned, that component isn\u0027t involved anymore **(so why is it in the Routes template??)**. You can open up the RedirectToLogin.razor file and change the `NavigateTo(...)` path but it will still take you to `Account/Login?…`. You can put a breakpoint in that component, and it never gets hit.\r\n\u003e \r\n\u003e The solution from @Liandrel about `services.ConfigureApplicationCookie(…)` is what finally helped me out - after wasting way too many hours.\r\n\r\nSo I know what the \"problem\" semes to be: Prerender\r\n1. Create a new Blazor Web App\r\n2. Select Individual Accounts\r\n3. Select Interactive Render Mode\r\n4. Change `NavigateTo(...)` to counter page (or anything else)\r\n5. Start project. \r\n6. You will get redirected to counter always.\r\n\r\nSomething to look out for, if you have prerender enabled:\r\nI does not use `RedirectToLogin.razor` when you prerender a page with `@attribute [Authorize]`. \r\n\r\nThis is because:\r\n```\r\napp.MapRazorComponents\u003cApp\u003e()\r\n    .[your render modes]\r\n    .AddAdditionalAssemblies(typeof(test.Client._Imports).Assembly); \r\n```\r\n\r\nredirects you to the login page, befor App renders Routes.\r\n\r\nSimple Fix:\r\n\r\n```\r\napp.MapRazorComponents\u003cApp\u003e()\r\n    .[your render modes]\r\n    .AddAdditionalAssemblies(typeof(test.Client._Imports).Assembly)\r\n    .AllowAnonymous();\r\n```\r\n",
                                           "updatedAt":  "2024-07-26T11:17:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86GQ_H2",
                                           "createdAt":  "2024-07-26T11:52:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Appli4Ever",
                                           "body":  "To be more specific: Asp.Net Core Redirects you while prerender, not Blazor. If you call .AllowAnonymous() App.razor will prerender anonymous and Routes will execute RedirectToLogin or anything else in  \r\n```\r\n\u003cNotAuthorized\u003e\r\n...\r\n \u003c/NotAuthorized\u003e\r\n```\r\nUse this: if you want to change the behavior of Asp.Net core redirecting ur API calls:\r\n```\r\n.AddIdentityCookies(o =\u003e\r\n{\r\n    o.ApplicationCookie?.Configure(\r\n        co =\u003e\r\n        {\r\n            co.Events.OnRedirectToLogin = e =\u003e\r\n            {\r\n                e.Response.StatusCode = 401;\r\n                return Task.CompletedTask;\r\n            };\r\n            co.Events.OnRedirectToAccessDenied = e =\u003e\r\n            {\r\n                e.Response.StatusCode = 401;\r\n                return Task.CompletedTask;\r\n            };\r\n            ...\r\n        });\r\n});\r\n```\r\nThis way, API Endpoints wont send back a redirect result when called from Blazor WASM. ",
                                           "updatedAt":  "2024-07-26T14:00:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86GXVuk",
                                           "createdAt":  "2024-07-27T22:03:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODw1Kcg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Appli4Ever",
                                                                               "createdAt":  "2024-08-15T07:26:08Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "FrankNiemeyer",
                                                                               "createdAt":  "2024-09-03T16:32:56Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "Liandrel",
                                           "body":  "That solution works like a charm. I didn\u0027t think about it initially, but it makes perfect sense that it was redirecting to the default login path because of the pre-render on the server. And by allowing all paths to be anonymous, it reaches App.razor and displays the NotAuthorized content.",
                                           "updatedAt":  "2024-07-27T22:03:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86HXAuS",
                                           "createdAt":  "2024-08-06T10:36:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SwartBergStudio",
                                           "body":  "I had the same issue as described in this post\r\nhttps://github.com/dotnet/aspnetcore/issues/52317\r\nBut instead of doing this overwrite\r\n`public class BlazorAuthorizationMiddlewareResultHandler : IAuthorizationMiddlewareResultHandler\r\n{\r\n    public Task HandleAsync(RequestDelegate next, HttpContext context, AuthorizationPolicy policy, PolicyAuthorizationResult authorizeResult)\r\n    {\r\n        return next(context);\r\n    }\r\n}`\r\n\r\nI went with making splash screen on routes rather\r\n![Screenshot 2024-08-06 123804](https://github.com/user-attachments/assets/09b8bd80-5f4d-4c01-a3e0-fcebbfa336f5)\r\n\r\n\r\nThis way the refresh can happen and after render my javascript interop that reads session for token on auth will work.  Wanted to post on initial post but it was close.  Hope someone finds this as an helpfull way to workaround the issue and is a better work around without messing with the rest of the auth",
                                           "updatedAt":  "2024-08-06T10:38:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86JiOzT",
                                           "createdAt":  "2024-08-23T16:48:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "nemtajo",
                                           "body":  "I have the same problem. I tried creating custom auth library with Cookie authentication scheme, but it seems whatever is in the Router is not rendered at all. \r\n\r\nIn all my components where AuthorizeView is used, even though all custom cookies are deleted and the user is logged out via \r\n`await _httpContextAccessor.HttpContext.SignOutAsync(LingoDub.Blazor.Auth.Model.Constants.AuthenticationScheme, new AuthenticationProperties\r\n{\r\n    RedirectUri = \"/\"\r\n});`\r\nThe components always render Authorized content...\r\n\r\nIt would be great if Microsoft provided example implementation of different custom sign in options (openid, jwt bearer, cookie, etc) on both WebAssembly and Server hosting models.",
                                           "updatedAt":  "2024-08-23T16:50:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86JiTzr",
                                           "createdAt":  "2024-08-23T17:00:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SwartBergStudio",
                                           "body":  "\u003e I have the same problem. I tried creating custom auth library with Cookie authentication scheme, but it seems whatever is in the Router is not rendered at all.\r\n\u003e \r\n\u003e In all my components where AuthorizeView is used, even though all custom cookies are deleted and the user is logged out via `await _httpContextAccessor.HttpContext.SignOutAsync(LingoDub.Blazor.Auth.Model.Constants.AuthenticationScheme, new AuthenticationProperties { RedirectUri = \"/\" });` The components always render Authorized content...\r\n\u003e \r\n\u003e It would be great if Microsoft provided example implementation of different custom sign in options (openid, jwt bearer, cookie, etc) on both WebAssembly and Server hosting models.\r\n\r\nIf you use the browser storage then the components need to complete the rendering to be able to access the storage.  That is the issue, so adding the loading as I given in the image will sort that out.  When you logout are you calling the NotifyAuthenticationStateChanged  so that blazor can rerender?  For me calling that logs out and no more authorized views show.  Only issue is using the browser storage to read and write the auth tokens or cookies, this can be worked around with the loading stuff I shared",
                                           "updatedAt":  "2024-08-23T17:00:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86MLfws",
                                           "createdAt":  "2024-09-15T23:02:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "nemtajo",
                                           "body":  "@Mecerburn Thank you for sharing a possible solution. I think wrapping Router in an if statement, whose condition is changed only after rendering the page, disables prerendering completely for the whole webapp, and therefore might not be a suitable solution for everyone. Afterall, I want to have prerendering enabled for some pages - it is an awesome feature to have.\r\n\r\nI discovered that my issue would be resolved with the workaround proposed above, if I didn\u0027t have additional problems in my auth library. I just want to mention the solution, in case someone else wants to implement auth library of their own. There is a very unclear behaviour of ClaimsIdentity constructor, depending on which parameters you pass in, you will get IsAuthenticated property set to always true or always false. I hope that ASP.NET Core team cleans up this confusion. For reference, this blog helped me tackle my problem:\r\nhttps://www.benday.com/2021/08/13/3-common-problems-with-claimsidentity-and-claimsprincipal-in-asp-net-core/",
                                           "updatedAt":  "2024-09-15T23:02:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86SB7UL",
                                           "createdAt":  "2024-10-31T14:16:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Woudjee",
                                           "body":  "\n\n\n\u003e To be more specific: Asp.Net Core Redirects you while prerender, not Blazor. If you call .AllowAnonymous() App.razor will prerender anonymous and Routes will execute RedirectToLogin or anything else in\n\u003e \n\u003e ```\n\u003e \u003cNotAuthorized\u003e\n\u003e ...\n\u003e  \u003c/NotAuthorized\u003e\n\u003e ```\n\u003e \n\u003e Use this: if you want to change the behavior of Asp.Net core redirecting ur API calls:\n\u003e \n\u003e ```\n\u003e .AddIdentityCookies(o =\u003e\n\u003e {\n\u003e     o.ApplicationCookie?.Configure(\n\u003e         co =\u003e\n\u003e         {\n\u003e             co.Events.OnRedirectToLogin = e =\u003e\n\u003e             {\n\u003e                 e.Response.StatusCode = 401;\n\u003e                 return Task.CompletedTask;\n\u003e             };\n\u003e             co.Events.OnRedirectToAccessDenied = e =\u003e\n\u003e             {\n\u003e                 e.Response.StatusCode = 401;\n\u003e                 return Task.CompletedTask;\n\u003e             };\n\u003e             ...\n\u003e         });\n\u003e });\n\u003e ```\n\u003e \n\u003e This way, API Endpoints wont send back a redirect result when called from Blazor WASM.\n\n@Appli4Ever I believe your cookie approach is the best solution. However, when attempting it myself, it does not work for me. I also tried setting the `RedirectUri`, but this also seems to not be doing anything. Any suggestions what else I could do?",
                                           "updatedAt":  "2024-10-31T14:16:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86S_Gwx",
                                           "createdAt":  "2024-11-09T03:26:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOECpIBQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "Appli4Ever",
                                                                               "createdAt":  "2024-11-09T07:48:28Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "Anjato",
                                                                               "createdAt":  "2025-01-15T20:38:12Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "Zzzzjle",
                                           "body":  "\u003e app.MapRazorComponents\u003cApp\u003e()\n\u003e     .[your render modes]\n\u003e     .AddAdditionalAssemblies(typeof(test.Client._Imports).Assembly)\n\u003e     .AllowAnonymous();\n\nThanks, this works for me.",
                                           "updatedAt":  "2024-11-09T03:26:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86S_czd",
                                           "createdAt":  "2024-11-09T07:48:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Appli4Ever",
                                           "body":  "@Woudjee what exactly did not work? Can you share some code?",
                                           "updatedAt":  "2024-11-09T07:48:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86S_oih",
                                           "createdAt":  "2024-11-09T10:02:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Woudjee",
                                           "body":  "I haven’t worked on this problem since I posted. Next week, I will take a look at it again 👍\r\n\r\nOp 9 nov. 2024 om 08:48 heeft Simon Müller ***@***.***\u003e het volgende geschreven:\r\n\r\n﻿\r\n\r\n@Woudjee\u003chttps://github.com/Woudjee\u003e what exactly did not work? Can you share some code?\r\n\r\n—\r\nReply to this email directly, view it on GitHub\u003chttps://github.com/dotnet/aspnetcore/issues/52063#issuecomment-2466106589\u003e, or unsubscribe\u003chttps://github.com/notifications/unsubscribe-auth/AUGP35DKX7WNIZUL5X7CL3TZ7W46DAVCNFSM6AAAAAA7L36HRSVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDINRWGEYDMNJYHE\u003e.\r\nYou are receiving this because you were mentioned.Message ID: ***@***.***\u003e\r\n",
                                           "updatedAt":  "2024-11-09T10:02:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86S_2La",
                                           "createdAt":  "2024-11-09T13:14:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Appli4Ever",
                                           "body":  "\u003e \u003e The template code is very misleading. Looking at `Routes.razor` makes it look like the `\u003cRedirectToLogin /\u003e` component is where the \"magic\" happens - which is the way it used to be. As mentioned, that component isn\u0027t involved anymore **(so why is it in the Routes template??)**. You can open up the RedirectToLogin.razor file and change the `NavigateTo(...)` path but it will still take you to `Account/Login?…`. You can put a breakpoint in that component, and it never gets hit.\n\u003e \n\u003e \u003e \n\u003e \n\u003e \u003e The solution from @Liandrel about `services.ConfigureApplicationCookie(…)` is what finally helped me out - after wasting way too many hours.\n\u003e \n\u003e \n\u003e \n\u003e So I know what the \"problem\" semes to be: Prerender\n\u003e \n\u003e 1. Create a new Blazor Web App\n\u003e \n\u003e 2. Select Individual Accounts\n\u003e \n\u003e 3. Select Interactive Render Mode\n\u003e \n\u003e 4. Change `NavigateTo(...)` to counter page (or anything else)\n\u003e \n\u003e 5. Start project. \n\u003e \n\u003e 6. You will get redirected to counter always.\n\u003e \n\u003e \n\u003e \n\u003e Something to look out for, if you have prerender enabled:\n\u003e \n\u003e I does not use `RedirectToLogin.razor` when you prerender a page with `@attribute [Authorize]`. \n\u003e \n\u003e \n\u003e \n\u003e This is because:\n\u003e \n\u003e ```\n\u003e \n\u003e app.MapRazorComponents\u003cApp\u003e()\n\u003e \n\u003e     .[your render modes]\n\u003e \n\u003e     .AddAdditionalAssemblies(typeof(test.Client._Imports).Assembly); \n\u003e \n\u003e ```\n\u003e \n\u003e \n\u003e \n\u003e redirects you to the login page, befor App renders Routes.\n\u003e \n\u003e \n\u003e \n\u003e Simple Fix:\n\u003e \n\u003e \n\u003e \n\u003e ```\n\u003e \n\u003e app.MapRazorComponents\u003cApp\u003e()\n\u003e \n\u003e     .[your render modes]\n\u003e \n\u003e     .AddAdditionalAssemblies(typeof(test.Client._Imports).Assembly)\n\u003e \n\u003e     .AllowAnonymous();\n\u003e \n\u003e ```\n\u003e \n\u003e \n\nI recently published a blogpost about this with video showing it: https://www.databinding.net/prerender-mit-blazor-webassembly-wasm-in-asp-net-core-8-teil-3/\n\nIt is in german but I am sure your browser can translate it.",
                                           "updatedAt":  "2024-11-09T13:16:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86c24tp",
                                           "createdAt":  "2025-02-03T17:30:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEdVbYQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "marcdieters",
                                                                               "createdAt":  "2025-02-19T07:02:55Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "iq2luc",
                                                                               "createdAt":  "2025-03-18T13:27:46Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "zaMuffenMan",
                                                                               "createdAt":  "2025-04-30T10:34:45Z"
                                                                           },
                                                                           {
                                                                               "content":  "ROCKET",
                                                                               "user":  "CodeFontana",
                                                                               "createdAt":  "2025-06-13T19:38:35Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "sagos95",
                                                                               "createdAt":  "2025-08-06T15:41:19Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  5
                                                         },
                                           "author":  "Appli4Ever",
                                           "body":  "This issue should not be open anymore. \n\nFor anyone still figuring it out, this is the solution:\n\nServer Program.cs:\n```C#\napp.MapRazorComponents\u003cApp\u003e()\n    .[your render modes]\n    .AddAdditionalAssemblies(typeof({CLIENT APP NAMESPACE}._Imports).Assembly);\n    .AllowAnonymous();\n```\nThis has to do with pre-rendering.\n\n`AllowAnonymous()` skips the default Asp.Net Identity redirection. Afterwards, Blazor (AuthorizeRouteView) decides if and where the user gets redirected to if not authenticated.\n\nApp.razor:\n```C#\n\u003cAuthorizeRouteView RouteData=\"@routeData\"\n                    DefaultLayout=\"@typeof(MainLayout)\"\u003e\n    \u003cNotAuthorized\u003e\n            \u003cRedirectToLogin /\u003e        \n    \u003c/NotAuthorized\u003e\n\u003c/AuthorizeRouteView\u003e\n```",
                                           "updatedAt":  "2025-03-18T14:46:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86i6StI",
                                           "createdAt":  "2025-03-18T13:17:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "another-wes",
                                           "body":  "What the heck does `test` refer to in this code?  Not a recognized keyword, that\u0027s for sure.",
                                           "updatedAt":  "2025-03-18T13:17:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86i7fn4",
                                           "createdAt":  "2025-03-18T14:41:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Appli4Ever",
                                           "body":  "@another-wes `test.Client` ist the name of the client project. The project where your WebAssembly code is. `AddAdditionalAssemblies` is needed to include the client assembly/project for routing reasons. If the client assembly is not added like this, the routing of all the pages in the client project won\u0027t work while pre-rendering.\n\nSee: https://learn.microsoft.com/en-us/aspnet/core/migration/70-80?view=aspnetcore-9.0\u0026tabs=visual-studio#convert-a-hosted-blazor-webassembly-app-into-a-blazor-web-app -\u003e 8. and https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.builder.razorcomponentsendpointconventionbuilderextensions.addadditionalassemblies?view=aspnetcore-9.0",
                                           "updatedAt":  "2025-03-18T14:47:39Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86xHa4q",
                                           "createdAt":  "2025-06-13T19:57:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "CodeFontana",
                                           "body":  "\u003e This issue should not be open anymore.\n\u003e \n\u003e For anyone still figuring it out, this is the solution:\n\u003e \n\u003e Server Program.cs:\n\u003e \n\u003e app.MapRazorComponents\u003cApp\u003e()\n\u003e     .[your render modes]\n\u003e     .AddAdditionalAssemblies(typeof({CLIENT APP NAMESPACE}._Imports).Assembly);\n\u003e     .AllowAnonymous();\n\u003e This has to do with pre-rendering.\n\u003e \n\u003e `AllowAnonymous()` skips the default Asp.Net Identity redirection. Afterwards, Blazor (AuthorizeRouteView) decides if and where the user gets redirected to if not authenticated.\n\u003e \n\u003e App.razor:\n\u003e \n\u003e \u003cAuthorizeRouteView RouteData=\"@routeData\"\n\u003e                     DefaultLayout=\"@typeof(MainLayout)\"\u003e\n\u003e     \u003cNotAuthorized\u003e\n\u003e             \u003cRedirectToLogin /\u003e        \n\u003e     \u003c/NotAuthorized\u003e\n\u003e \u003c/AuthorizeRouteView\u003e\n\nThanks, this fixed for me as well...\n\nBlazor Web App on .NET 8\n- Mix of static server-side and interactive server-side pages/components using cookie auth.\n- Both Blazor and Minimal API endpoints needing to verify the user is authorized for specific roles.\n- Ability to redirect the user within Blazor, when the cookie expires, rather than ASP.NET Core using the default /Account/Login",
                                           "updatedAt":  "2025-06-13T19:57:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86xu4QS",
                                           "createdAt":  "2025-06-17T21:15:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEe34pA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "horaciodiez",
                                                                               "createdAt":  "2025-07-15T01:00:04Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "timconner",
                                                                               "createdAt":  "2025-08-19T22:22:53Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "winseros",
                                           "body":  "I tried the solution with `.AllowAnonymous()` but that did not work for me, as it completely disabled the built-in asp.net core authentication pipeline. Thus even authenticated users began to see `401`.\n\nFor me the issue with not-working `NotFound` and `NotAuthorized` with `@rendermode=InteractiveServer/InteractiveAuto` is still actual.",
                                           "updatedAt":  "2025-06-17T21:15:48Z"
                                       }
                                   ],
                         "totalCount":  53
                     },
        "title":  "Blazor Authorization - AuthorizeRouteView and RedirectToLogin not working.",
        "labels":  [
                       "Docs",
                       "area-auth",
                       "feature-identity-ui"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/52099",
        "createdAt":  "2023-11-15T21:42:22Z",
        "number":  52099,
        "author":  "csowa",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC9PfHw==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "OttoG",
                                            "createdAt":  "2023-11-20T23:20:29Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "tednyberg",
                                            "createdAt":  "2023-12-15T16:14:36Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "andreabianchi",
                                            "createdAt":  "2024-01-19T15:48:27Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "tryagaintmr",
                                            "createdAt":  "2024-02-01T09:27:02Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "CValentine",
                                            "createdAt":  "2024-02-09T16:48:37Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "radmorecameron",
                                            "createdAt":  "2024-03-11T19:15:29Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "havotto",
                                            "createdAt":  "2024-05-31T15:55:48Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "chrisfcarroll",
                                            "createdAt":  "2024-11-05T11:52:34Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "lhdboy",
                                            "createdAt":  "2024-12-06T05:37:24Z"
                                        }
                                    ],
                          "totalCount":  9
                      },
        "updatedAt":  "2025-04-17T15:26:00Z",
        "body":  "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nUsing Authentication.WsFederation for authentication results in error regardless of new UseSecurityTokenHandlers setting. \r\n\r\n`options.UseSecurityTokenHandlers = true;`\r\n\r\nSecurityTokenInvalidIssuerException: IDX10204: Unable to validate issuer. validationParameters.ValidIssuer is null or whitespace AND validationParameters.ValidIssuers is null or empty.\r\n\r\nExpected: behavior prior to change introduced with issue 49469.\r\n\r\n`options.UseSecurityTokenHandlers = false;`\r\n\r\nXmlReadException: IDX30011: Unable to read XML. Expecting XmlReader to be at ns.element: \u0027urn:oasis:names:tc:SAML:2.0:assertion.Assertion\u0027, found: \u0027urn:oasis:names:tc:SAML:1.0:assertion.Assertion\u0027.\r\n\r\nExpected: to be able to handle SAML 1.0 assertion emitted by WsFed server.\n\n### Expected Behavior\n\noptions.UseSecurityTokenHandlers = true;\r\n\r\nExpected: behavior prior to change introduced with issue 49469.\r\n\r\noptions.UseSecurityTokenHandlers = false;\r\n\r\nExpected: to be able to handle SAML 1.0 assertion emitted by WsFed server.\n\n### Steps To Reproduce\n\nRepro project: https://github.com/csowa/aspdotnetcore-auth-sample\r\n\r\nDemonstrates WS-Federation issue with change introduced for https://github.com/dotnet/aspnetcore/issues/49469\r\n\r\nBased on example at https://learn.microsoft.com/en-us/aspnet/core/security/authentication/ws-federation?view=aspnetcore-8.0#use-ws-federation-without-aspnet-core-identity\r\n\r\nBuild and run. Home page uses [Authorize] attribute, authentication begins when loading.\r\n\r\nDependency: ADFS server required. Server version tested: 10.0.17763.4644\r\n\n\n### Exceptions (if any)\n\n`options.UseSecurityTokenHandlers = true;`\r\n\r\nSecurityTokenInvalidIssuerException: IDX10204: Unable to validate issuer. validationParameters.ValidIssuer is null or whitespace AND validationParameters.ValidIssuers is null or empty.\r\n\r\n`options.UseSecurityTokenHandlers = false;`\r\n\r\nXmlReadException: IDX30011: Unable to read XML. Expecting XmlReader to be at ns.element: \u0027urn:oasis:names:tc:SAML:2.0:assertion.Assertion\u0027, found: \u0027urn:oasis:names:tc:SAML:1.0:assertion.Assertion\u0027.\r\n\n\n### .NET Version\n\n8.0.100\n\n### Anything else?\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOp6_X5g==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85sLWuw",
                                           "createdAt":  "2023-11-16T17:32:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mkArtakMSFT",
                                           "body":  "Thanks for contacting us.\r\nPlease share the full stack-trace of the error that you see.",
                                           "updatedAt":  "2023-11-16T17:32:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85sM7vS",
                                           "createdAt":  "2023-11-16T21:18:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "csowa",
                                           "body":  "`options.UseSecurityTokenHandlers = true;`\r\n\r\n----\r\n\r\nMicrosoft.AspNetCore.Authentication.AuthenticationFailureException: An error was encountered while handling the remote login.\r\n ---\u003e Microsoft.IdentityModel.Tokens.SecurityTokenException: No token validator or token handler was found for the given token.\r\n ---\u003e Microsoft.IdentityModel.Tokens.SecurityTokenInvalidIssuerException: IDX10204: Unable to validate issuer. validationParameters.ValidIssuer is null or whitespace AND validationParameters.ValidIssuers is null or empty.\r\n   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuerAsync(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\r\n   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\r\n   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters)\r\n   at Microsoft.IdentityModel.Tokens.Saml.SamlSecurityTokenHandler.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters)\r\n   at Microsoft.IdentityModel.Tokens.Saml.SamlSecurityTokenHandler.ValidateSignature(SamlSecurityToken samlToken, String token, TokenValidationParameters validationParameters)\r\n   at Microsoft.IdentityModel.Tokens.Saml.SamlSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)\r\n   at Microsoft.IdentityModel.Tokens.Saml.SamlSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken\u0026 validatedToken)\r\n   at Microsoft.AspNetCore.Authentication.WsFederation.WsFederationHandler.HandleRemoteAuthenticateAsync()\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.AspNetCore.Authentication.WsFederation.WsFederationHandler.HandleRemoteAuthenticateAsync()\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleRequestAsync()\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)",
                                           "updatedAt":  "2023-11-16T21:18:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85sM8df",
                                           "createdAt":  "2023-11-16T21:20:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "csowa",
                                           "body":  "`options.UseSecurityTokenHandlers = false;`\r\n\r\n-----\r\n\r\nMicrosoft.AspNetCore.Authentication.AuthenticationFailureException: An error was encountered while handling the remote login.\r\n ---\u003e Microsoft.IdentityModel.Tokens.SecurityTokenException: No token validator or token handler was found for the given token.\r\n ---\u003e System.AggregateException: One or more errors occurred. (IDX30011: Unable to read XML. Expecting XmlReader to be at ns.element: \u0027urn:oasis:names:tc:SAML:2.0:assertion.Assertion\u0027, found: \u0027urn:oasis:names:tc:SAML:1.0:assertion.Assertion\u0027.) (IDX10204: Unable to validate issuer. validationParameters.ValidIssuer is null or whitespace AND validationParameters.ValidIssuers is null or empty.) (IDX14100: JWT is not well formed, there are no dots (.).\r\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): \u0027EncodedHeader.EndcodedPayload.EncodedSignature\u0027. (JWE): \u0027EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag\u0027.)\r\n ---\u003e Microsoft.IdentityModel.Xml.XmlReadException: IDX30011: Unable to read XML. Expecting XmlReader to be at ns.element: \u0027urn:oasis:names:tc:SAML:2.0:assertion.Assertion\u0027, found: \u0027urn:oasis:names:tc:SAML:1.0:assertion.Assertion\u0027.\r\n   at Microsoft.IdentityModel.Xml.XmlUtil.CheckReaderOnEntry(XmlReader reader, String element, String namespace)\r\n   at Microsoft.IdentityModel.Tokens.Saml2.Saml2Serializer.ReadAssertion(XmlReader reader)\r\n   at Microsoft.IdentityModel.Tokens.Saml2.Saml2SecurityTokenHandler.ReadSaml2Token(XmlReader reader)\r\n   at Microsoft.IdentityModel.Tokens.Saml2.Saml2SecurityTokenHandler.ReadSaml2Token(String token)\r\n   at Microsoft.IdentityModel.Tokens.Saml2.Saml2SecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)\r\n   at Microsoft.IdentityModel.Tokens.Saml2.Saml2SecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken\u0026 validatedToken)\r\n   at Microsoft.IdentityModel.Tokens.Saml2.Saml2SecurityTokenHandler.ValidateTokenAsync(String token, TokenValidationParameters validationParameters)\r\n   --- End of inner exception stack trace ---\r\n ---\u003e (Inner Exception #1) Microsoft.IdentityModel.Tokens.SecurityTokenInvalidIssuerException: IDX10204: Unable to validate issuer. validationParameters.ValidIssuer is null or whitespace AND validationParameters.ValidIssuers is null or empty.\r\n   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuerAsync(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\r\n   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\r\n   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters)\r\n   at Microsoft.IdentityModel.Tokens.Saml.SamlSecurityTokenHandler.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters)\r\n   at Microsoft.IdentityModel.Tokens.Saml.SamlSecurityTokenHandler.ValidateSignature(SamlSecurityToken samlToken, String token, TokenValidationParameters validationParameters)\r\n   at Microsoft.IdentityModel.Tokens.Saml.SamlSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)\r\n   at Microsoft.IdentityModel.Tokens.Saml.SamlSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken\u0026 validatedToken)\r\n   at Microsoft.IdentityModel.Tokens.Saml.SamlSecurityTokenHandler.ValidateTokenAsync(String token, TokenValidationParameters validationParameters)\u003c---\r\n\r\n ---\u003e (Inner Exception #2) Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\r\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): \u0027EncodedHeader.EndcodedPayload.EncodedSignature\u0027. (JWE): \u0027EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag\u0027.\r\n ---\u003e Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14122: JWT is not a well formed JWE, there are more than four dots (.) a JWE can have at most 4 dots.\r\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): \u0027EncodedHeader.EndcodedPayload.EncodedSignature\u0027. (JWE): \u0027EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag\u0027.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(String encodedJson)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)\r\n   --- End of inner exception stack trace ---\u003c---\r\n\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.AspNetCore.Authentication.WsFederation.WsFederationHandler.HandleRemoteAuthenticateAsync()\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleRequestAsync()\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)",
                                           "updatedAt":  "2023-11-16T21:20:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85sPqjY",
                                           "createdAt":  "2023-11-17T09:43:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEJZ9TQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "halter73",
                                                                               "createdAt":  "2023-11-20T18:56:08Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "OttoG",
                                                                               "createdAt":  "2023-11-20T23:20:13Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "kieranbenton",
                                                                               "createdAt":  "2023-12-28T11:46:28Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "tietoevry-johan",
                                                                               "createdAt":  "2024-01-29T21:33:22Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "CValentine",
                                                                               "createdAt":  "2024-02-09T16:49:13Z"
                                                                           },
                                                                           {
                                                                               "content":  "ROCKET",
                                                                               "user":  "iSatishYadav",
                                                                               "createdAt":  "2024-03-06T17:15:57Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "Blackbaud-ChristopherRodgers",
                                                                               "createdAt":  "2024-09-04T22:04:39Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "gitDeveloper1",
                                                                               "createdAt":  "2025-03-11T15:12:13Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  8
                                                         },
                                           "author":  "Hakon",
                                           "body":  "We have encountered this issue as well and implemented a [workaround](https://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/issues/2406#issuecomment-1814246256).\r\n\r\nThis may be an issue with a difference in how JsonWebTokenHandler and SamlSecurityTokenHandler handles configuration fetching from ConfigurationManager. I have reported this issue to Microsoft.IdentityModel here: https://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/issues/2406\r\n\r\nThe JsonWebTokenHandler fetches BaseConfiguration from the ConfigurationManager when validating a token, the Saml*SecurityTokenHandler does not. This change https://github.com/dotnet/aspnetcore/commit/a56e968c19be1275db6dc462310d723615b006a7#diff-42233637069e62d711d83e163c06bbf11849c4acb594daaf5587697c3ef0789fL99 changed configuration fetching so that this now is delegated to the TokenHandler when using the default ConfigurationManager or StaticConfigurationManager (inherits from BaseConfigurationManager). While this works for JsonWebTokenHandler, the SAML handlers is not compatible.",
                                           "updatedAt":  "2023-11-17T09:51:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85sdaFG",
                                           "createdAt":  "2023-11-20T19:10:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "csowa",
                                           "body":  "Received the following response via email, does not appear here.\r\n\r\n-----\r\n\r\nFrom: Stephen Halter \r\nSent: Monday, November 20, 2023 9:49 AM\r\nTo: dotnet/aspnetcore \r\nCc: Chris Sowa; Author \r\nSubject: Re: [dotnet/aspnetcore] Authentication.WsFederation breaks with on-premise AD FS use (Issue #52099) \r\n \r\n\r\nIt\u0027s undocumented breaking change.\r\nWe did make a breaking change announcement for the switch from JwtSecurityToken and JwtTokenValidators to JsonWebToken and TokenHandler in .NET 8 preview 7.  https://learn.microsoft.com/en-us/dotnet/core/compatibility/aspnet-core/8.0/securitytoken-events\r\n\r\nWe recommend updating your code to utilize the newer, more-optimized types. But if that\u0027s not possible, you can set WsFederationOptions.UseSecurityTokenHandlers = true which is the second option listed in the \"Recommended action\" section of the announcement.\r\nIf there\u0027s something that is no longer possible with the new types, please file an issue at https://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet. If you have suggestions for how to improve the breaking change announcement, you can suggest edits at https://github.com/dotnet/docs/blob/main/docs/core/compatibility/aspnet-core/8.0/securitytoken-events.md",
                                           "updatedAt":  "2023-11-20T19:10:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85sdgAy",
                                           "createdAt":  "2023-11-20T19:29:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOD83Jcw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ManuelHaas",
                                                                               "createdAt":  "2024-11-28T12:56:11Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "csowa",
                                           "body":  "Thank you for your response. I am aware of the breaking change as described.  Unfortunately, that is not the issue here.  \r\nI am attempting to use an ASP.NET Core component, and it breaks regardless of UseSecurityTokenHandlers setting.  Please see the provided repro app.\r\n\r\nI can confirm the issue noted above https://github.com/dotnet/aspnetcore/issues/52099#issuecomment-1816045784, and I can work around the initialization problem related to that which was introduced in the associated ASP.NET Core change to the WsFederation component.  \r\n\r\nWhile that initialization issue may have a root cause deeper in the architecture and in a separate project, the issue is exposed in a component from this project.  \r\n\r\nThere is a separate issue in the new token handler in that it does not appear to handle WS-Fed tokens properly.  But again, that is internal to the ASP.NET Core component implementation in its choice of relying on other projects.\r\n\r\nI am not using the token handlers directly, there is nothing in the code or the sample app to be switched.\r\n\r\nIt appears that ASP.NET Core\u0027s Authentication.WsFederation component has relied internally on one or more broken components from other project(s).  \r\n\r\nI would expect that such internal issues between projects would be addressed by the involved projects\u0027 members.\r\n\r\nTo reiterate: this is not a question about the breaking change that was noted, it\u0027s an issue with the component not working as documented, requiring user space work arounds.",
                                           "updatedAt":  "2023-11-20T19:29:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85serI6",
                                           "createdAt":  "2023-11-20T23:40:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "OttoG",
                                           "body":  "Hi, I can confirm what @csowa assumes, that this is not a matter of the state of the `UseSecurityTokenHandlers` setting or in any way specifically related to the breaking change announced for Preview 7 that prompted the introduction of that setting, as mentioned above.\r\n\r\nThat change relates to the use of JWT tokens (and handling them with one class or the other), but the error messages in the bug report clearly indicate that @csowa uses SAML tokens, which are handled by completely different classes.\r\n\r\n@Hakon has, as far as I can tell, correctly diagnosed the problem and has also published a great workaround in this issue: https://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/issues/2406\r\n\r\nThe error message in this bug report indicates that the workaround should be applicable as-is, but users who get a SAML 2.0 version token may need to subclass `Saml2SecurityTokenHandler` instead of `SamlSecurityTokenHandler`.\r\n\r\nAs @csowa writes, this is fine for those of us who are in control of the code that configures WsFederation, but if that code resides in a separate component that cannot be easily modified, it of course becomes a direct obstacle to adoption .NET 8.0.",
                                           "updatedAt":  "2023-11-20T23:40:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85siiSE",
                                           "createdAt":  "2023-11-21T14:07:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODNPEJg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "OttoG",
                                                                               "createdAt":  "2023-11-21T15:25:16Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "Hakon",
                                           "body":  "\u003e The error message in this bug report indicates that the workaround should be applicable as-is, but users who get a SAML 2.0 version token may need to subclass `Saml2SecurityTokenHandler` instead of `SamlSecurityTokenHandler`.\r\n\r\nThis is correct. It was not intended as a general fix for everyone but rather a hint at how to work around the problem. I am working on a proper fix in IdentityModel.",
                                           "updatedAt":  "2023-11-21T14:07:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85tv5rB",
                                           "createdAt":  "2023-12-05T17:23:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODOsu2g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "viceice",
                                                                               "createdAt":  "2023-12-06T14:28:34Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "brentschmaltz",
                                           "body":  "@Hakon @OttoG @csowa @halter73 the workaround is great and can be used until we get the fix into IdentityModel.\r\nPlease make sure to call TokenValidationParameters.Clone() before modifying and calling ValidateTokenAsync(...) as TokenValidationParameters can persist across http requests.",
                                           "updatedAt":  "2023-12-05T17:23:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85tzYGa",
                                           "createdAt":  "2023-12-06T06:43:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODTTuzw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "ROCKET",
                                                                               "user":  "viceice",
                                                                               "createdAt":  "2023-12-06T14:26:56Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "viceice",
                                                                               "createdAt":  "2023-12-06T14:27:17Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Cityonhill93",
                                                                               "createdAt":  "2023-12-08T20:05:26Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "andreabianchi",
                                                                               "createdAt":  "2024-01-19T16:12:35Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  4
                                                         },
                                           "author":  "Hakon",
                                           "body":  "Thank you for the warning. I have submitted a fix to IdentityModel.",
                                           "updatedAt":  "2023-12-06T06:43:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85vT5Vh",
                                           "createdAt":  "2023-12-22T10:01:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODkDtMQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "gle-hrweb",
                                                                               "createdAt":  "2024-01-11T11:01:45Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "CValentine",
                                                                               "createdAt":  "2024-02-09T16:51:16Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "masthy",
                                                                               "createdAt":  "2024-03-06T12:59:22Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "havotto",
                                                                               "createdAt":  "2024-05-31T16:03:46Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  4
                                                         },
                                           "author":  "arknu",
                                           "body":  "Just hit this as well. This is a pretty big breaking change to be undocumented! And how come this has not been fixed? It completely breaks ADFS Integration.\r\n\r\nThanks for the workaround, @Hakon! It works great.",
                                           "updatedAt":  "2023-12-22T10:01:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde850blsI",
                                           "createdAt":  "2024-02-20T02:31:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SimonCropp",
                                           "body":  "@Hakon \r\n\r\n\u003e Thank you for the warning. I have submitted a fix to IdentityModel.\r\n\r\ncan you link to the fix. did it make it into net8?\r\n",
                                           "updatedAt":  "2024-02-20T02:31:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde851TCvr",
                                           "createdAt":  "2024-02-27T23:49:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "halter73",
                                           "body":  "\u003e can you link to the fix. did it make it into net8?\r\n\r\nNot yet. The PR to fix it is still open at https://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/pull/2412.",
                                           "updatedAt":  "2024-02-27T23:49:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde852GYci",
                                           "createdAt":  "2024-03-06T17:14:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "iSatishYadav",
                                           "body":  "Stumbled upon this after spending afternoon. The workaround works as claimed. But a major breaking change.",
                                           "updatedAt":  "2024-03-06T17:14:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde852GY9T",
                                           "createdAt":  "2024-03-06T17:15:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "guillaume86",
                                           "body":  "Yes some regression tests would be welcome for components this sensitive.",
                                           "updatedAt":  "2024-03-06T17:15:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde852bXhy",
                                           "createdAt":  "2024-03-09T15:27:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOD4L5eQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "stasberkov",
                                                                               "createdAt":  "2024-07-17T01:35:17Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "EnriqueUlloa",
                                                                               "createdAt":  "2024-08-04T07:45:51Z"
                                                                           },
                                                                           {
                                                                               "content":  "LAUGH",
                                                                               "user":  "EnriqueUlloa",
                                                                               "createdAt":  "2024-08-04T07:46:06Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "EnriqueUlloa",
                                                                               "createdAt":  "2024-08-04T07:46:10Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "EnriqueUlloa",
                                                                               "createdAt":  "2024-08-04T07:46:48Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "christlin",
                                                                               "createdAt":  "2024-10-26T14:04:04Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "christlin",
                                                                               "createdAt":  "2024-10-26T14:04:08Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  7
                                                         },
                                           "author":  "MatiasEnrique",
                                           "body":  "Had it fixed after replacing:\r\n![image](https://github.com/dotnet/aspnetcore/assets/87081374/77d09311-6cda-4f36-a973-e73324c47e92)\r\nfor:\r\n![image](https://github.com/dotnet/aspnetcore/assets/87081374/d56d02f6-3c10-4dde-933f-043531640f47)\r\n\r\n",
                                           "updatedAt":  "2024-03-09T15:30:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde853PJrQ",
                                           "createdAt":  "2024-03-15T21:26:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODaxJtQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "ROCKET",
                                                                               "user":  "viceice",
                                                                               "createdAt":  "2024-03-15T21:28:09Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "mkArtakMSFT",
                                           "body":  "Closing as the updated packages from the Microsoft.IdentityModel.* version 7.4.1 have shipped now, which includes the fix.",
                                           "updatedAt":  "2024-03-15T21:26:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde853PkJK",
                                           "createdAt":  "2024-03-15T22:08:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODaxgXw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "EYES",
                                                                               "user":  "guillaume86",
                                                                               "createdAt":  "2024-03-15T22:44:10Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "hheexx",
                                           "body":  "Will next patch version of WsFederation depend on fixed versions of IdentityModel?",
                                           "updatedAt":  "2024-03-15T22:08:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde853Po10",
                                           "createdAt":  "2024-03-15T22:33:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "csowa",
                                           "body":  "\u003e Will next patch version of WsFederation depend on fixed versions of IdentityModel?\r\n\r\nThat is the bug covered by this issue.  This appears to have been prematurely closed, pending resolution / confirmation of WsFederation\u0027s dependency.",
                                           "updatedAt":  "2024-03-15T22:33:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde857BQ01",
                                           "createdAt":  "2024-04-18T13:55:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODhMveQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "oakandfeather",
                                                                               "createdAt":  "2024-04-25T18:57:40Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "dbulgakov",
                                                                               "createdAt":  "2024-04-29T12:01:35Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "csowa",
                                                                               "createdAt":  "2024-04-29T19:09:34Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "rjhoffmann",
                                                                               "createdAt":  "2024-05-03T15:09:21Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jjacobson",
                                                                               "createdAt":  "2024-05-08T22:50:00Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  5
                                                         },
                                           "author":  "pcibraro",
                                           "body":  "Microsoft.AspNetCore.Authentication.WsFederation has not been updated to reference 7.4.1, which is the one that contains the fix. The latest version 8.0.4 still references to 7.1.2. Do you know if there is any plan to get that updated ? Thanks",
                                           "updatedAt":  "2024-04-18T13:55:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde859RFRp",
                                           "createdAt":  "2024-05-08T22:54:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODkoVXw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Sobotkama",
                                                                               "createdAt":  "2024-05-10T08:40:35Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "csowa",
                                                                               "createdAt":  "2024-05-16T17:17:03Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "havotto",
                                                                               "createdAt":  "2024-05-31T16:13:11Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "havasvolgyi-otto-nxsun",
                                                                               "createdAt":  "2024-06-05T11:32:28Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  4
                                                         },
                                           "author":  "jjacobson",
                                           "body":  "@mkArtakMSFT This issue was specifically for Authentication.WsFederation breaking. Despite the fix to Microsoft.IdentityModel, Authentication.WsFederation still has not been updated to reference the fixed version, and thus the issue raised by this ticket still exists. This was closed prematurely.",
                                           "updatedAt":  "2024-05-08T22:54:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86EXXEm",
                                           "createdAt":  "2024-07-10T14:47:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODpQ-iQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "TruffleMuffin",
                                                                               "createdAt":  "2024-07-11T06:36:11Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ngboardway",
                                           "body":  "It would appear that the 4th preview version for the package with net 9 has finally increased the minimum version to 7.4.1 (and a couple later bumped it again). I\u0027d love if they could release a version with 8, but if you ever upgrade it should eventually be resolved.",
                                           "updatedAt":  "2024-07-10T14:47:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86Fn-YO",
                                           "createdAt":  "2024-07-22T00:42:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODtO3Aw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "fseidl-bauradar",
                                                                               "createdAt":  "2024-07-23T11:59:14Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "FlavioMH",
                                                                               "createdAt":  "2024-07-23T13:45:39Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "havasvolgyi-otto-nxsun",
                                                                               "createdAt":  "2024-08-08T08:03:52Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "SimonCropp",
                                           "body":  "please re-open. this is still broken",
                                           "updatedAt":  "2024-07-22T00:42:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86F1Kwv",
                                           "createdAt":  "2024-07-23T13:46:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "FlavioMH",
                                           "body":  "Re-open please. Still not working:\r\n![image](https://github.com/user-attachments/assets/723d6229-50f6-4ab8-9ff3-98f24d9a5684)\r\n",
                                           "updatedAt":  "2024-07-23T13:46:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86F3NkK",
                                           "createdAt":  "2024-07-23T17:34:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "halter73",
                                           "body":  "Generally speaking, we do not force higher dependency versions for external dependencies in patch releases. Updating IdentityModel packages has not been without [issues](https://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/issues/2513), and forcing an update to Microsoft.IdentityModel.Protocols.WsFederation to 7.4.1 would also force us to also update other packages which are much more widely used like Microsoft.IdentityModel.Tokens to 7.1.2 to 7.4.1.\r\n\r\nUnlike with new major versions, it\u0027s a lot harder for us to build confidence that taking a major update to external dependencies will not be too breaking since we do not have multiple preview releases to try to iron out any kinks. Instead, we have to rely entirely on internal automated and manual testing. I\u0027m sympathetic to wanting AD FS to work out of the box without updating any NuGet packages with ASP.NET Core 8, but the workaround of updating outdated NuGet packages does not seem too onerous. You should generally be doing this to get security updates as fast as possible in any case.\r\n\r\n@mkArtakMSFT @wtgodbe @JeremyLikness @danroth27 @jennyf19 Given the severity of the issue, would we be willing to make an exception to our usual patching policy and take a dependency update to Microsoft.IdentityModel.Protocols.WsFederation, Microsoft.IdentityModel.Tokens, et al. in a .NET 8 patch? And would 7.4.1 be the version we pick? It does seem risky and has implications beyond just the Microsoft.AspNetCore.Authentication.WsFederation package, and the workaround is simply updating NuGet packages.",
                                           "updatedAt":  "2024-07-23T17:36:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86J7qtx",
                                           "createdAt":  "2024-08-28T03:18:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SimonCropp",
                                           "body":  "@mkArtakMSFT @wtgodbe @JeremyLikness @danroth27 @jennyf19  any thoughts on the above?",
                                           "updatedAt":  "2024-08-28T03:18:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86J-51h",
                                           "createdAt":  "2024-08-28T10:45:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pcibraro",
                                           "body":  "To be clear, the issue is not only affecting apps using adfs, but any app that uses an external idp saml metadata file. ",
                                           "updatedAt":  "2024-08-28T10:45:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86KYurk",
                                           "createdAt":  "2024-08-30T15:52:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "wtgodbe",
                                           "body":  "What\u0027s stopping users from updating the PackageReference to WSFederation in their own app to work around the issue? That would generally be our recommendation for situations like this. I generally agree w/ @halter73\u0027s interpretation here - we definitely wouldn\u0027t upgrade to a new Major version in a servicing release, and upgrading to a new Minor version would be highly unusual",
                                           "updatedAt":  "2024-08-30T15:52:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86KZEij",
                                           "createdAt":  "2024-08-30T16:16:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODweVLg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "FlavioMH",
                                                                               "createdAt":  "2024-08-30T16:46:10Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "pcibraro",
                                           "body":  "\u003e What\u0027s stopping users from updating the PackageReference to WSFederation in their own app to work around the issue? That would generally be our recommendation for situations like this. I generally agree w/ @halter73\u0027s interpretation here - we definitely wouldn\u0027t upgrade to a new Major version in a servicing release, and upgrading to a new Minor version would be highly unusual\r\n\r\nWhat do you mean with that ? If you reference the latest version for WSFederation, it includes the version  7.1.2 for Microsoft.IdentityModel that is broken. The only workaround is to go and manually reference the assembly with the latest version of the SamlHandler that fixes the issue. ",
                                           "updatedAt":  "2024-08-30T16:16:39Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86KZiw-",
                                           "createdAt":  "2024-08-30T16:46:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "wtgodbe",
                                           "body":  "\u003e What do you mean with that ? If you reference the latest version for WSFederation, it includes the version 7.1.2 for Microsoft.IdentityModel that is broken.\r\n\r\nSorry, looks like I got some of the details wrong. \r\n\r\n\u003e The only workaround is to go and manually reference the assembly with the latest version of the SamlHandler that fixes the issue.\r\n\r\nThis is what I was trying to suggest - Would adding a PackageReference to the 7.4.1 version of `Microsoft.IdentityModel.*` not fix the issue?",
                                           "updatedAt":  "2024-08-30T16:47:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86K100I",
                                           "createdAt":  "2024-09-04T15:23:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "FlavioMH",
                                           "body":  "@wtgodbe Even if I don\u0027t find it a very clean solution, yes: manually forcing _System.IdentityModel.Protocols.WsFederation_ to the version (at least) 7.4.1 fixes the issue:\r\n![image](https://github.com/user-attachments/assets/a6482d93-9a94-4dd4-b99a-4bc4f4c76fa1)\r\n",
                                           "updatedAt":  "2024-09-04T15:23:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86K2lcG",
                                           "createdAt":  "2024-09-04T16:57:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "wtgodbe",
                                           "body":  "@FlavioMH thanks for confirming - we\u0027re happy to take these kind of dependency updates in our active development branches (e.g. we\u0027ve already done this update in .NET 9 \u0026 10), but our policy is not to take Minor or Major version updates in Servicing releases, as they can contain breaking changes. Given that the proposed workaround fixes the problem, I\u0027m going to close this issue. Feel free to re-open if you feel there\u0027s an angle that we\u0027ve missed here.",
                                           "updatedAt":  "2024-09-04T16:57:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86K2oLE",
                                           "createdAt":  "2024-09-04T17:04:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODw_J_g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "arknu",
                                                                               "createdAt":  "2024-09-04T17:05:22Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "hheexx",
                                           "body":  "@wtgodbe As I understand the problem, angle you missed in last message is that WsFederation package is almost completely broken without this update.",
                                           "updatedAt":  "2024-09-04T17:04:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86K2q-o",
                                           "createdAt":  "2024-09-04T17:10:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "arknu",
                                           "body":  "\u003e @wtgodbe As I understand the problem, angle you missed in last message is that WsFederation package is almost completely broken without this update.\r\n\r\n@wtgodbe Not to mention that this is a regression compared to .NET 7. It should absolutely be fixed in a servicing update for .NET 8, especially since .NET 8 is an LTS release with a longer lifespan.",
                                           "updatedAt":  "2024-09-04T17:10:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86K3EE7",
                                           "createdAt":  "2024-09-04T18:11:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOD7463A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "chrisfcarroll",
                                                                               "createdAt":  "2024-11-21T10:01:43Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "wtgodbe",
                                           "body":  "Unfortunately we aren\u0027t able to take the dependency update in 8.0, as there is a known breaking change between 7.1.2 and 7.4.1 - https://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/issues/2513. If we _were_ to take that update, then later realize that we\u0027d broken even _more_ people, it would be impossible for us to roll it back.\r\n\r\nWe realize that this isn\u0027t a great state to be in, but we\u0027re essentially stuck between a rock and a hard place on this one. I\u0027m going to re-open this issue to track our ongoing work to improve the documentation for this one (to suggest adding a `PackageReference` to user projects), which @halter73 is working on.",
                                           "updatedAt":  "2024-09-04T18:11:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86K3Jcy",
                                           "createdAt":  "2024-09-04T18:24:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "csowa",
                                           "body":  "And just an FYI, I updated the repro project with a branch that verifies the proposed work-around, in this case taking an explicit dependency on Microsoft.IdentityModel.Protocols.WsFederation v8.0.0, which is version-number-consistent with the rest  of the packages.\r\n",
                                           "updatedAt":  "2024-09-04T18:24:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86K3XT8",
                                           "createdAt":  "2024-09-04T18:58:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hheexx",
                                           "body":  "@wtgodbe you probably want to mention this issue in WsFederation project readme and other high visibility places. I just wanted to make sure you understand that package is completely broken OOB without update.",
                                           "updatedAt":  "2024-09-04T18:58:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86Na1-J",
                                           "createdAt":  "2024-09-25T00:26:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEH9xPw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "LAUGH",
                                                                               "user":  "ravindUwU",
                                                                               "createdAt":  "2024-10-08T00:04:53Z"
                                                                           },
                                                                           {
                                                                               "content":  "LAUGH",
                                                                               "user":  "cherbie-rio",
                                                                               "createdAt":  "2025-02-28T00:41:55Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "SimonCropp",
                                           "body":  "![image](https://github.com/user-attachments/assets/123a30cf-c0f9-47c2-8f21-ff2485d1a6cb)\r\n",
                                           "updatedAt":  "2024-09-25T00:26:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86f4GhZ",
                                           "createdAt":  "2025-02-25T15:01:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEI9_-g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "chrisfcarroll",
                                                                               "createdAt":  "2025-03-07T15:20:53Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "csowa",
                                                                               "createdAt":  "2025-03-07T18:27:28Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "vojta-vorel",
                                           "body":  "I do not have really deep insight into this, but maybe this could be helpful for someone:\n1. I am using the package WsFederation 8.0.3 with .NET 8. Seeing exactly the same two errors as in the original post (depending on value of UseSecurityTokenHandlers).\n2. I tried everything mentioned on this page and other pages, nothing works.\n3. Found out accidentally that the loging starts to work when I add` \u003cPackageReference Include=\"Microsoft.IdentityModel.Tokens.Saml\" Version=\"8.6.0\" /\u003e` and keep `UseSecurityTokenHandlers=false`",
                                           "updatedAt":  "2025-02-25T15:01:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86hVUxV",
                                           "createdAt":  "2025-03-07T15:20:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "chrisfcarroll",
                                           "body":  "Having last year used [Hakon\u0027s workaround](https://github.com/dotnet/aspnetcore/issues/52099#issuecomment-1816045784) …\n\nI concur with [vojta-vorel](https://github.com/dotnet/aspnetcore/issues/52099#issuecomment-2682284121) that after adding a reference to Microsoft.IdentityModel.Tokens.Saml Version=\"8.6.0\", I no longer need the workaround, it all seems to works fine.",
                                           "updatedAt":  "2025-03-07T15:34:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86hXA7_",
                                           "createdAt":  "2025-03-07T18:42:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "csowa",
                                           "body":  "Verified @vojta-vorel\u0027s Microsoft.IdentityModel.Tokens.Saml Version=\"8.6.0\" proposal with the repro app: https://github.com/csowa/aspdotnetcore-auth-sample/pull/2\n\nAlso note, that\u0027s the most recent version at this time.\n",
                                           "updatedAt":  "2025-03-07T18:42:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86nr9fm",
                                           "createdAt":  "2025-04-17T15:25:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "guillaume86",
                                           "body":  "\u003e I do not have really deep insight into this, but maybe this could be helpful for someone:\n\u003e \n\u003e 1. I am using the package WsFederation 8.0.3 with .NET 8. Seeing exactly the same two errors as in the original post (depending on value of UseSecurityTokenHandlers).\n\u003e 2. I tried everything mentioned on this page and other pages, nothing works.\n\u003e 3. Found out accidentally that the loging starts to work when I add` \u003cPackageReference Include=\"Microsoft.IdentityModel.Tokens.Saml\" Version=\"8.6.0\" /\u003e` and keep `UseSecurityTokenHandlers=false`\n\nBe careful that including that dependency in net9.0 can trigger another bug in other auth scenarios: \nhttps://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/issues/2577\nJust got hit with it, reverting to previous fix...",
                                           "updatedAt":  "2025-04-17T15:25:59Z"
                                       }
                                   ],
                         "totalCount":  42
                     },
        "title":  "Authentication.WsFederation breaks with on-premise AD FS use",
        "labels":  [
                       "External",
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/52400",
        "createdAt":  "2023-11-27T14:22:49Z",
        "number":  52400,
        "author":  "DevJasperNL",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-22T18:01:55Z",
        "body":  "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nWe are currently in the process of hardening our OIDC implementation. As part of this, we want to add an antiforgery token to the state and validate it when getting the response from the IDP.\r\n\r\nHowever, when using context.ProtocolMessage.State, enabling state validation on OpenIdConnectProtocolValidator causes an exception.\n\n### Expected Behavior\n\nAfter enabling RequireState and RequireStateValidation, any state set in context.ProtocolMessage.State should be validated automatically.\n\n### Steps To Reproduce\n\nWhen configuring OpenIdConnect, I am enabling both RequireState and RequireStateValidation:\r\n\r\n```\r\noptions.ProtocolValidator.RequireState = true;\r\noptions.ProtocolValidator.RequireStateValidation = true;\r\n```\r\n\r\nThen in OnRedirectToIdentityProvider, I am configuring a custom state:\r\n\r\n```\r\noptions.Events.OnRedirectToIdentityProvider = (RedirectContext context) =\u003e\r\n{\r\n    context.ProtocolMessage.State = \"AntiForgery token will go here\";\r\n    return Task.CompletedTask;\r\n};\r\n```\r\n\r\nThis will result in the following exception:\r\n`OpenIdConnectProtocolInvalidStateException: IDX21329: RequireState is \u0027System.Boolean\u0027 but the OpenIdConnectProtocolValidationContext.State is null. State cannot be validated.`\r\n\r\nAfter further investiation, I see that inside the OpenIdConnectProtocolValidator, OpenIdConnectProtocolValidationContext.State remains null.\r\n\r\nWhen looking into where this is created, it seems that State is never set on this context:\r\nhttps://github.com/dotnet/aspnetcore/blob/9efaf0e84dead340be574a27c6924efb5ffaa39b/src/Security/Authentication/OpenIdConnect/src/OpenIdConnectHandler.cs#L684\n\n### Exceptions (if any)\n\nOpenIdConnectProtocolInvalidStateException: IDX21329: RequireState is \u0027System.Boolean\u0027 but the OpenIdConnectProtocolValidationContext.State is null. State cannot be validated.\n\n### .NET Version\n\n7.0.403\n\n### Anything else?\n\nWhen looking into where this is created, it seems that State is never set on this context:\r\nhttps://github.com/dotnet/aspnetcore/blob/9efaf0e84dead340be574a27c6924efb5ffaa39b/src/Security/Authentication/OpenIdConnect/src/OpenIdConnectHandler.cs#L684",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOcyuySQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85tCucJ",
                                           "createdAt":  "2023-11-28T09:33:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DevJasperNL",
                                           "body":  "After some experimenting with this, it seems there are two issues:\r\n\r\n1. State validation on OpenIdConnectProtocolValidator does not work at all. Even if the original state is not altered, setting both RequireState and RequireStateValidation to true will never work due to the state not being set on the context.\r\n\r\nHOWEVER: If the incorrect state is passed, it does result in exceptions. So at least some checks are done on it. Looking in OpenIdConnectHandler, I do see a ValidateCorrelationId method being called, but I am unsure if this actually validates the state itself:\r\nhttps://github.com/dotnet/aspnetcore/blob/c8ef35df22225230b5524ba824b97c5099c87475/src/Security/Authentication/OpenIdConnect/src/OpenIdConnectHandler.cs#L612\r\n\r\n2. Setting context.ProtocolMessage.State in OnRedirectToIdentityProvider handler does not change the state being sent to the IDP. It does however change the state in OpenIdConnectProtocolValidationContext.ProtocolMessage.State (but OpenIdConnectProtocolValidationContext.State remains null)",
                                           "updatedAt":  "2023-11-28T09:33:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85uQI8t",
                                           "createdAt":  "2023-12-11T10:05:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Rora",
                                           "body":  "I also need to know how to leverage the state, is there any update or expected timeline on this?",
                                           "updatedAt":  "2023-12-11T10:06:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85w-LNG",
                                           "createdAt":  "2024-01-17T08:46:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "RickvF",
                                           "body":  "I am facing the same issue. Can anyone please give an update on this?",
                                           "updatedAt":  "2024-01-17T08:46:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85zK7JJ",
                                           "createdAt":  "2024-02-07T15:06:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DevJasperNL",
                                           "body":  "I have closed and reopened this issue as suggested by the bot above, yet the \"pending-ci-rerun\" label is not removed.\r\n\r\nLeaving this comment to inform that I have rechecked, and the issue is still there.",
                                           "updatedAt":  "2024-02-07T15:06:47Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "Custom state not set for OpenIdConnectProtocolValidator",
        "labels":  [
                       "investigate",
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/52415",
        "createdAt":  "2023-11-28T06:31:16Z",
        "number":  52415,
        "author":  "sivaji55",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-03-13T17:04:58Z",
        "body":  "### Is there an existing issue for this?\n\n- [X] #54532\n\n### Is your feature request related to a problem? Please describe the problem.\n\nin my application we are using two authentication schemes and in my controller action I want to know the which authentication scheme is used for current request, so that I can execute related code.\n\n### Describe the solution you\u0027d like\n\nAdd property in ClaimsPrincipal and set it during authentication, so later it can be used to know which authentication scheme is used.\n\n### Additional context\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOdumFoQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85tF304",
                                           "createdAt":  "2023-11-28T16:33:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Getting access to the AuthenticationTicket would address this without requiring modification of the principal. It could be cached in the auth feature? Note that AspNetCore often does not directly create or modify the Principal.",
                                           "updatedAt":  "2023-11-28T16:34:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde8526YWh",
                                           "createdAt":  "2024-03-13T17:04:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "halter73",
                                           "body":  "It would be nice to provide a built-in way to see what schemes successfully authenticated.\r\n\r\nIn the meantime, you could customize your `AuthenticationHandlers` to add a `Claim` to the `ClaimsPrincipal` on success that indicates that the user was successfully authenticated by the scheme. Even for non-custom handlers, there are usually options like `CookieAuthenticationOptions.Events.OnValidatePrincipal` (or `OnSigningIn`) and `JwtBearerOptions.Events.OnTokenValidated` that allow customizing the `ClaimsPrincipal`.\r\n\r\nYou could also replace [the default IPolicyEvaluator](https://github.com/dotnet/aspnetcore/blob/268a2dfc29b33e3fdb73cbac6eb198c05314d77e/src/Security/Authorization/Policy/src/PolicyEvaluator.cs) to include the successful schemes in the `ClaimsPrincipal` it creates.",
                                           "updatedAt":  "2024-03-13T17:04:56Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "which authentication shceme is used to authenticate the current request",
        "labels":  [
                       "enhancement",
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/53048",
        "createdAt":  "2023-12-28T21:09:20Z",
        "number":  53048,
        "author":  "JeroMiya",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-22T18:01:57Z",
        "body":  "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Describe the bug\r\n\r\nThis issue has a similar symptom as other reported issues, but I believe has a different cause:\r\n- https://github.com/dotnet/aspnetcore/issues/46053\r\n- https://github.com/dotnet/aspnetcore/issues/24870\r\n- https://github.com/dotnet/aspnetcore/issues/17247\r\n\r\nFor context, we have an application that authenticates with OIDC to an identity server that is on the same domain/site as our application. We\u0027re using Duende.Bff and we have a silent login flow implemented, where an iframe is opened up to `/bff/silent-login`. `/silent-login` issues a challenge (thus setting the nonce and correlation cookies) and redirects to the identity server using the `prompt=none` parameter. If the user is already logged into the identity server, then the IS redirects back to `/signin-oidc`, which then deletes the nonce and correlation cookies. That\u0027s expected behavior. The problem occurs when the user is **not** already signed into the identity server. In this case, the IS redirects back to `/signin-oidc` with the `?error=login_required` parameter. When this happens, the `/signin-oidc` endpoint does **NOT** delete the nonce and correlation cookies. And, while Duende.Bff correctly notifies the parent frame via a message that silent login was unsuccessful (so that we can notify the user and prompt for them to login manually), this leaves around extra nonce and correlation cookies until they expire.\r\n\r\nIt does not take long for these extra cookies to build up to the point that we get errors for cookies being too big. Around 4 or 5 navigations to the site without being logged in, within a 15 minute window, will cause the errors to occur. Users clicking on a handful of deep links or accidently double clicking the refresh button a couple of times while not being logged in will trigger the errors, so it\u0027s plausible this will occur outside of QA testing.\r\n\r\nI\u0027ve noticed some differences in the successful vs unsuccessful request, though I don\u0027t know if they are relevant or are the cause:\r\n\r\n- successful requests send `code`, `scope`, `state`, `session_state`, and `iss` parameters\r\n- unsuccessful requests send `error=login_required`, `state`, and `session_state` parameters (i.e. missing `code` and `scope` parameters)\r\n\r\nThus, I\u0027m not sure if this is expected behavior, given that the unsuccessful request is missing the `code` parameter - perhaps there is no way for the OIDC middleware to associate it with the original nonce/correlation cookies? Please advise. Our options to mitigate this issue are limited, outside of eliminating silent login functionality which is an option of last resort given we are attempting to support SSO for multiple applications, and that would be a bad user experience.\r\n\r\nNote: contrary to previously reported issues, I can verify that this is not due to a cookie SameSite issue (the identity server is on the same site, and I can confirm that the cookies are being sent correctly with the `/signin-oidc` request). I can also confirm that there is no login redirect loop happening, and that there is only one challenge being made (in Duende.Bff\u0027s implementation of the `/bff/silent-login` endpoint).\r\n\r\n### Expected Behavior\r\n\r\nWhen the identity server redirects back to `/signin-oidc` with the `?error=login_required` parameter, I expect that it will still delete the nonce and correlation cookies corresponding to the original request, just as it does when the `?error=login_required` is not present in the request.\r\n\r\n### Steps To Reproduce\r\n\r\nHere is the setup code for our API:\r\n\r\n```CSharp\r\nbuilder.Services.AddAuthentication(options =\u003e\r\n{\r\n    options.DefaultScheme = \"cookie\";\r\n    options.DefaultChallengeScheme = \"oidc\";\r\n    options.DefaultSignOutScheme = \"oidc\";\r\n})\r\n.AddCookie(\"cookie\", options =\u003e\r\n{\r\n    // set session lifetime\r\n    options.ExpireTimeSpan = TimeSpan.FromHours(8);\r\n\r\n    // sliding or absolute\r\n    options.SlidingExpiration = false;\r\n\r\n    // the \"__Secure\" prefix is special\r\n    // See: https://www.ietf.org/archive/id/draft-west-cookie-prefixes-05.txt\r\n    // We are using __Secure instead of __Host because\r\n    // the cookie will have a subpath (e.g. {subdomain.domain}/{app-subpath}) and not the root \"/\"\r\n    options.Cookie.Name = \"__Secure-bff\";\r\n\r\n    // strict SameSite handling\r\n    options.Cookie.SameSite = SameSiteMode.Strict;\r\n})\r\n.AddOpenIdConnect(\"oidc\", options =\u003e\r\n{\r\n    if (isOptions is null)\r\n    {\r\n        throw new InvalidOperationException(\"Missing IdentityServer config section\");\r\n    }\r\n\r\n    options.Authority = isOptions.Authority;\r\n\r\n    // confidential client using code flow + PKCE\r\n    options.RequireHttpsMetadata = true;\r\n    options.ClientId = isOptions.ClientId;\r\n    options.ClientSecret = isOptions.ClientSecret;\r\n    options.ResponseType = OpenIdConnectResponseType.Code;\r\n\r\n    // query response type is compatible with strict SameSite mode\r\n    options.ResponseMode = OpenIdConnectResponseMode.Query;\r\n\r\n    // get claims without mappings\r\n    options.MapInboundClaims = false;\r\n    options.GetClaimsFromUserInfoEndpoint = true;\r\n\r\n    // save tokens into authentication session\r\n    // to enable automatic token management\r\n    options.SaveTokens = true;\r\n\r\n    // request scopes\r\n    options.Scope.Clear();\r\n    options.Scope.Add(\"openid\");\r\n    options.Scope.Add(\"profile\");\r\n\r\n    // and refresh token\r\n    options.Scope.Add(\"offline_access\");\r\n});\r\n```\r\n\r\nAnd here is the silent-login functionality on the frontend side (note the issue occurs with or without the `redirectToLogin` functionality below):\r\n\r\n```Ts\r\n  private silentLogin(s: Session) {\r\n    if (this.userIsAnonymous(s)) {\r\n      console.log(\u0027not already logged in, attempting silent login...\u0027);\r\n      const timeout = 5000;\r\n\r\n      function redirectToLogin() {\r\n        const returnUrl = window.location.pathname + window.location.search + window.location.hash;\r\n        window.location.href = `/app1/bff/login?returnUrl=${returnUrl}`;\r\n      }\r\n\r\n      function onMessage(e: any) {\r\n        if (e.data \u0026\u0026 e.data.source === \u0027bff-silent-login\u0027) {\r\n          window.removeEventListener(\"message\", onMessage);\r\n          if (e.data.isLoggedIn) {\r\n            console.log(\u0027silent login succeeded, refreshing\u0027);\r\n            window.location.reload();\r\n          } else {\r\n            console.log(\u0027silent login failed due to not being logged in, redirecting to identity server login page\u0027);\r\n            redirectToLogin();\r\n          }\r\n        }\r\n      }\r\n      window.addEventListener(\"message\", onMessage);\r\n\r\n      window.setTimeout(() =\u003e {\r\n        window.removeEventListener(\"message\", onMessage);\r\n        console.error(\u0027silent login timed out, redirecting to login\u0027);\r\n        redirectToLogin();\r\n      }, timeout);\r\n\r\n      const iframe = document.createElement(\u0027iframe\u0027);\r\n      iframe.src = \u0027/app1/bff/silent-login\u0027;\r\n      iframe.setAttribute(\u0027style\u0027, \u0027width:0px;height:0px\u0027);\r\n      document.body.appendChild(iframe);\r\n    }\r\n    return s;\r\n  }\r\n```\r\n\r\n### Exceptions (if any)\r\n\r\n_No response_\r\n\r\n### .NET Version\r\n\r\n8.0.100\r\n\r\n### Anything else?\r\n\r\nASP.NET Core version is 6.0.25\r\n\r\n`dotnet --info`:\r\n\r\n```\r\n.NET SDK:\r\n Version:           8.0.100\r\n Commit:            57efcf1350\r\n Workload version:  8.0.100-manifests.8d38d0cc\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.22631\r\n OS Platform: Windows\r\n RID:         win-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\8.0.100\\\r\n\r\n.NET workloads installed:\r\n Workload version: 8.0.100-manifests.8d38d0cc\r\n [wasm-tools]\r\n   Installation Source: VS 17.8.34330.188\r\n   Manifest Version:    8.0.0/8.0.100\r\n   Manifest Path:       C:\\Program Files\\dotnet\\sdk-manifests\\8.0.100\\microsoft.net.workload.mono.toolchain.current\\8.0.0\\WorkloadManifest.json\r\n   Install Type:              Msi\r\n\r\n [android]\r\n   Installation Source: VS 17.8.34330.188\r\n   Manifest Version:    34.0.43/8.0.100\r\n   Manifest Path:       C:\\Program Files\\dotnet\\sdk-manifests\\8.0.100\\microsoft.net.sdk.android\\34.0.43\\WorkloadManifest.json\r\n   Install Type:              Msi\r\n\r\n [wasm-tools-net6]\r\n   Installation Source: VS 17.8.34330.188\r\n   Manifest Version:    8.0.0/8.0.100\r\n   Manifest Path:       C:\\Program Files\\dotnet\\sdk-manifests\\8.0.100\\microsoft.net.workload.mono.toolchain.net6\\8.0.0\\WorkloadManifest.json\r\n   Install Type:              Msi\r\n\r\n [maui-windows]\r\n   Installation Source: VS 17.8.34330.188\r\n   Manifest Version:    8.0.3/8.0.100\r\n   Manifest Path:       C:\\Program Files\\dotnet\\sdk-manifests\\8.0.100\\microsoft.net.sdk.maui\\8.0.3\\WorkloadManifest.json\r\n   Install Type:              Msi\r\n\r\n [maccatalyst]\r\n   Installation Source: VS 17.8.34330.188\r\n   Manifest Version:    17.0.8478/8.0.100\r\n   Manifest Path:       C:\\Program Files\\dotnet\\sdk-manifests\\8.0.100\\microsoft.net.sdk.maccatalyst\\17.0.8478\\WorkloadManifest.json\r\n   Install Type:              Msi\r\n\r\n [ios]\r\n   Installation Source: VS 17.8.34330.188\r\n   Manifest Version:    17.0.8478/8.0.100\r\n   Manifest Path:       C:\\Program Files\\dotnet\\sdk-manifests\\8.0.100\\microsoft.net.sdk.ios\\17.0.8478\\WorkloadManifest.json\r\n   Install Type:              Msi\r\n\r\n\r\nHost:\r\n  Version:      8.0.0\r\n  Architecture: x64\r\n  Commit:       5535e31a71\r\n\r\n.NET SDKs installed:\r\n  8.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 6.0.25 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 7.0.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 8.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 6.0.25 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 7.0.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 8.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 6.0.25 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 7.0.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 8.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nOther architectures found:\r\n  x86   [C:\\Program Files (x86)\\dotnet]\r\n    registered at [HKLM\\SOFTWARE\\dotnet\\Setup\\InstalledVersions\\x86\\InstallLocation]\r\n\r\nEnvironment variables:\r\n  Not set\r\n\r\nglobal.json file:\r\n  Not found\r\n\r\nLearn more:\r\n  https://aka.ms/dotnet/info\r\n\r\nDownload .NET:\r\n  https://aka.ms/dotnet/download\r\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOkooHVA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85vmbVI",
                                           "createdAt":  "2023-12-29T21:23:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "That makes sense, the nonce cookie isn\u0027t consumed \u0026 deleted until late in the validation process. Maybe that could happen earlier?\r\n\r\nIf there\u0027s an id token:\r\nhttps://github.com/dotnet/aspnetcore/blob/e6be3e95fec33ca3a3b576df4b265ead680a91a0/src/Security/Authentication/OpenIdConnect/src/OpenIdConnectHandler.cs#L669\r\n\r\nIf there\u0027s a code:\r\nhttps://github.com/dotnet/aspnetcore/blob/e6be3e95fec33ca3a3b576df4b265ead680a91a0/src/Security/Authentication/OpenIdConnect/src/OpenIdConnectHandler.cs#L752\r\n\r\nThe logic for deleting the right cookie only cross checks against the received code/token, that would have to be relaxed in the error scenario.\r\nhttps://github.com/dotnet/aspnetcore/blob/e6be3e95fec33ca3a3b576df4b265ead680a91a0/src/Security/Authentication/OpenIdConnect/src/OpenIdConnectHandler.cs#L1062-L1090",
                                           "updatedAt":  "2023-12-29T21:23:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86SWJcA",
                                           "createdAt":  "2024-11-04T17:19:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Looks like this issue has been identified as a candidate for community contribution. If you\u0027re considering sending a PR for this issue, look for the `Summary Comment` link in the issue description. That comment has been left by an engineer on our team to help you get started with handling this issue. You can learn more about our Help Wanted process [here](https://aka.ms/aspnet/processes/help-wanted)\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-11-04T17:19:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86SiVvM",
                                           "createdAt":  "2024-11-06T00:39:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AndyWangMSFT",
                                           "body":  "@JeroMiya Thanks for posting this question. Just curious, were you able to delete the nonce/correlation cookie from server side? I\u0027m trying to delete these two types of cookie so that they are not building up",
                                           "updatedAt":  "2024-11-06T00:39:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86SigdU",
                                           "createdAt":  "2024-11-06T01:27:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "JeroMiya",
                                           "body":  "\u003e [@JeroMiya](https://github.com/JeroMiya) Thanks for posting this question. Just curious, were you able to delete the nonce/correlation cookie from server side? I\u0027m trying to delete these two types of cookie so that they are not building up\n\nIt\u0027s funny, we actually decided to port the Angular app to Blazor. Since we are using enhanced navigation, we removed the need to implement silent login using an iframe in the frontend, since the redirect happens on the server side before the frontend even loads (or it happens at navigation time if it happens post load). So, I didn\u0027t need to go back and implement a workaround. But the problem will still exist for anybody trying to implement the silent login flow with a more traditional frontend spa following the latest OIDC recommendations.",
                                           "updatedAt":  "2024-11-06T01:27:31Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "/signin-oidc does not unset nonce and correlation cookies with param error=login_required from failed identity server prompt=none request",
        "labels":  [
                       "help wanted",
                       "enhancement",
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/53267",
        "createdAt":  "2024-01-10T11:47:06Z",
        "number":  53267,
        "author":  "tndata",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC55Jxg==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "cadcad-sat",
                                            "createdAt":  "2024-02-01T01:07:08Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "HaptelmanovArtem",
                                            "createdAt":  "2024-04-09T20:12:24Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "wim-kaspar",
                                            "createdAt":  "2024-08-02T11:27:33Z"
                                        }
                                    ],
                          "totalCount":  3
                      },
        "updatedAt":  "2025-08-22T18:01:57Z",
        "body":  "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nAn invalid/incomplete ASPNET Core authentication configuration causes the framework to crash and generate a stack overflow.\n\n### Expected Behavior\n\nI would the application not to crash.\r\n\n\n### Steps To Reproduce\n\nIf I:\r\n\r\n1. Create a new empty ASP.NET Core application, .NET 8\r\n2. Add OpenIdConnect NuGet package (Microsoft.AspNetCore.Authentication.OpenIdConnect 8.0.1)\r\n3. add this code\r\n```\r\nbuilder.Services.AddAuthentication()\r\n.AddOpenIdConnect(\"oidc\", o =\u003e\r\n{\r\n    o.Authority = \"https://example.com\";\r\n\r\n    o.ClientId = \"localhost-client\";\r\n    o.ClientSecret = \"mysecret\";\r\n\r\n    o.ResponseType = \"code\";\r\n    o.Prompt = \"consent\";\r\n\r\n});\r\n\r\n```\r\n\r\n4. I start the application\r\n5. Then I get a stack overflow as shown below and the console output just outputs errors forever.\r\n\r\n\r\n```\r\ninfo: Microsoft.Hosting.Lifetime[14]\r\n      Now listening on: https://localhost:7106\r\ninfo: Microsoft.Hosting.Lifetime[14]\r\n      Now listening on: http://localhost:5080\r\ninfo: Microsoft.Hosting.Lifetime[0]\r\n      Application started. Press Ctrl+C to shut down.\r\ninfo: Microsoft.Hosting.Lifetime[0]\r\n      Hosting environment: Development\r\ninfo: Microsoft.Hosting.Lifetime[0]\r\n      Content root path: c:\\code\\WebApplication1\\WebApplication1\r\nStack overflow.\r\n   at System.Threading.Tasks.Task.FromResult[[System.__Canon, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]](System.__Canon)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].SetResult(System.__Canon)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider+\u003cGetHandlerAsync\u003ed__5.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider+\u003cGetHandlerAsync\u003ed__5, Microsoft.AspNetCore.Authentication.Core, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]](\u003cGetHandlerAsync\u003ed__5 ByRef)\r\n...\r\n```\r\n\r\n\r\nYes, the confiuration is not complete/valid.\r\n\r\n\n\n### Exceptions (if any)\n\nStack Overflow\n\n### .NET Version\n\ndotnet --version 8.0.100\n\n### Anything else?\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOg4izPw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85xwbwg",
                                           "createdAt":  "2024-01-24T16:47:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODU6fXg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "cadcad-sat",
                                                                               "createdAt":  "2024-02-01T01:03:01Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ltrzesniewski",
                                           "body":  "FWIW, I have the same issue, and I\u0027d also like ASP.NET to give me an error message if possible.\r\n\r\nI\u0027m just trying to serve static files for authenticated users, and this seems much harder than it should be. Right now I\u0027m kind of stuck because I don\u0027t know ASP.NET very well. 😕 ",
                                           "updatedAt":  "2024-01-24T16:47:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85ydSvc",
                                           "createdAt":  "2024-02-01T01:03:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODU9yLA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "ltrzesniewski",
                                                                               "createdAt":  "2024-02-01T09:34:13Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "cadcad-sat",
                                           "body":  "I was able to reproduce this issue as well.\r\n\r\nThe reason for the occurrence of the loop is due to the setting of oidc in defaultAuthenticate.Name in the AuthenticationMiddleware when calling context.AuthenticateAsync(defaultAuthenticate.Name).\r\n``` cs\r\n// AuthenticationMiddleware.cs\r\nvar defaultAuthenticate = await Schemes.GetDefaultAuthenticateSchemeAsync(); \r\nif (defaultAuthenticate != null)\r\n{\r\n    var result = await context.AuthenticateAsync(defaultAuthenticate.Name);\r\n}\r\n```\r\n\r\nThe rationale behind Schemes.GetDefaultAuthenticateSchemeAsync returning OidcScheme is that in AuthenticationSchemeProvider.GetDefaultSchemeAsync, it used to return null in version 6.0.26, but in version 8.0.1, it now returns _autoDefaultScheme.\r\n``` cs\r\n// AuthenticationSchemeProvider.cs\r\nprivate Task\u003cAuthenticationScheme?\u003e GetDefaultSchemeAsync()\r\n    =\u003e _options.DefaultScheme != null\r\n    ? GetSchemeAsync(_options.DefaultScheme)\r\n    : _autoDefaultScheme; // 6.0.26 Task.FromResult\u003cAuthenticationScheme?\u003e(null);\r\n\r\npublic virtual Task\u003cAuthenticationScheme?\u003e GetDefaultAuthenticateSchemeAsync()\r\n    =\u003e _options.DefaultAuthenticateScheme != null\r\n    ? GetSchemeAsync(_options.DefaultAuthenticateScheme)\r\n    : GetDefaultSchemeAsync();\r\n\r\nprivate void CheckAutoDefaultScheme()\r\n{\r\n    if (!_options.DisableAutoDefaultScheme)\r\n    {\r\n        if (_schemes.Count == 1)\r\n        {\r\n            _autoDefaultScheme = Task.FromResult\u003cAuthenticationScheme?\u003e(_schemesCopy.First());\r\n        }\r\n        else\r\n        {\r\n            _autoDefaultScheme = _nullScheme;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nTo resolve the issue, it is recommended to add CookieAuthentication. Please refer to the following code snippet:\r\n``` cs\r\nservices.AddAuthentication(options =\u003e\r\n{\r\n    options.DefaultScheme = CookieAuthenticationDefaults.AuthenticationScheme;\r\n    options.DefaultChallengeScheme = JwtBearerDefaults.AuthenticationScheme;\r\n})\r\n.AddCookie(setup =\u003e setup.ExpireTimeSpan = TimeSpan.FromMinutes(sessionCookieLifetime))\r\n.AddOpenIdConnect(options =\u003e\r\n{\r\n    options.SignInScheme = CookieAuthenticationDefaults.AuthenticationScheme;\r\n});\r\n```\r\nReference: [Authenticate with an OpenID Connect or OAuth 2.0 Identity Provider](https://learn.microsoft.com/en-us/dotnet/architecture/microservices/secure-net-microservices-web-applications/#authenticate-with-an-openid-connect-or-oauth-20-identity-provider)",
                                           "updatedAt":  "2024-02-01T01:03:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85yhWaI",
                                           "createdAt":  "2024-02-01T13:37:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODVFzug==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "cadcad-sat",
                                                                               "createdAt":  "2024-02-02T01:42:02Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ltrzesniewski",
                                           "body":  "@cadcad-sat Thank you so much for your explanation, I managed to get the authentication to work thanks to your help! 😀 ",
                                           "updatedAt":  "2024-02-01T13:37:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85-TgtS",
                                           "createdAt":  "2024-05-19T00:37:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "rashadrivera",
                                           "body":  "I have the same problem, except I\u0027m using the `AddMicrosoftAccount` instead of the `AddOpenIdConnect` method.  I\u0027m also using the .NET Core 7 library version.",
                                           "updatedAt":  "2024-05-19T00:39:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86DiLM_",
                                           "createdAt":  "2024-07-03T16:42:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "halter73",
                                           "body":  "\u003e I have the same problem, except I\u0027m using the `AddMicrosoftAccount` instead of the `AddOpenIdConnect` method. I\u0027m also using the .NET Core 7 library version.\r\n\r\nWere you able to fix this by calling [AddCookie](https://learn.microsoft.com/en-us/dotnet/api/microsoft.extensions.dependencyinjection.cookieextensions.addcookie?view=aspnetcore-8.0)?",
                                           "updatedAt":  "2024-07-03T16:42:04Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "Invalid authentication configuration crashes ASP.NET core (stack overflow)",
        "labels":  [
                       "enhancement",
                       "area-auth",
                       "Pillar: Dev Experience"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/53332",
        "createdAt":  "2024-01-12T18:59:24Z",
        "number":  53332,
        "author":  "Shane32",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC8VJBA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "seantleonard",
                                            "createdAt":  "2024-05-02T21:24:50Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "danabr",
                                            "createdAt":  "2024-11-01T08:47:08Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2025-08-25T17:23:02Z",
        "body":  "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Describe the bug\r\n\r\nWhen using `WebHostBuilder` to run web applications or tests in .NET 8, and `app.UseAuthorization()` is called, when starting the web app, an exception is thrown stating the following:\r\n\r\n\u003e Unable to resolve service for type \u0027Microsoft.AspNetCore.Routing.EndpointDataSource\u0027 while attempting to activate \u0027Microsoft.AspNetCore.Authorization.Policy.AuthorizationPolicyCache\u0027.\r\n\r\nThis issue does not occur with any prior version of .NET.\r\n\r\n### Expected Behavior\r\n\r\nUsing WebHostBuilder to create a web application should work as it did in .NET 7 and prior versions.\r\n\r\n### Steps To Reproduce\r\n\r\n```xml\r\n\u003cProject Sdk=\"Microsoft.NET.Sdk.Web\"\u003e\r\n\r\n  \u003cPropertyGroup\u003e\r\n    \u003cOutputType\u003eExe\u003c/OutputType\u003e\r\n    \u003cTargetFramework\u003enet8.0\u003c/TargetFramework\u003e\u003c!-- change to 7.0 and it works --\u003e\r\n    \u003cImplicitUsings\u003eenable\u003c/ImplicitUsings\u003e\r\n    \u003cNullable\u003eenable\u003c/Nullable\u003e\r\n  \u003c/PropertyGroup\u003e\r\n\r\n\u003c/Project\u003e\r\n```\r\n\r\n```cs\r\nvar hostBuilder = new WebHostBuilder();\r\nhostBuilder.UseIIS(); // fails with UseKestrel() also\r\nhostBuilder.ConfigureServices(services =\u003e\r\n{\r\n    services.AddAuthentication();\r\n    services.AddAuthorization();\r\n});\r\nhostBuilder.Configure(app =\u003e\r\n{\r\n    app.UseAuthentication();\r\n    app.UseAuthorization();\r\n    app.Run(async context =\u003e\r\n    {\r\n        context.Response.StatusCode = 200;\r\n        context.Response.ContentType = \"text/plain\";\r\n        await context.Response.WriteAsync(\"OK\");\r\n    });\r\n});\r\nawait hostBuilder.Build().RunAsync(); // \u003c-- crashes here\r\n```\r\n\r\n\r\n### Exceptions (if any)\r\n\r\n```\r\nSystem.InvalidOperationException\r\n  HResult=0x80131509\r\n  Message=Unable to resolve service for type \u0027Microsoft.AspNetCore.Routing.EndpointDataSource\u0027 while attempting to activate \u0027Microsoft.AspNetCore.Authorization.Policy.AuthorizationPolicyCache\u0027.\r\n  Source=Microsoft.Extensions.DependencyInjection\r\n  StackTrace:\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain, Int32 slot)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetService[T](IServiceProvider provider)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware..ctor(RequestDelegate next, IAuthorizationPolicyProvider policyProvider, IServiceProvider services)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddlewareInternal..ctor(RequestDelegate next, IServiceProvider services, IAuthorizationPolicyProvider policyProvider, ILogger`1 logger)\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\r\n   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr) in /_/src/libraries/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.cs:line 178\r\n   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture) in /_/src/libraries/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.cs:line 145\r\n   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture) in /_/src/libraries/System.Private.CoreLib/src/System/Reflection/RuntimeConstructorInfo.cs:line 162\r\n   at Microsoft.Extensions.Internal.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider provider)\r\n   at Microsoft.Extensions.Internal.ActivatorUtilities.CreateInstance(IServiceProvider provider, Type instanceType, Object[] parameters)\r\n   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.ReflectionMiddlewareBinder.CreateMiddleware(RequestDelegate next)\r\n   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()\r\n   at Microsoft.AspNetCore.Hosting.WebHost.BuildApplication() in /_/src/Hosting/Hosting/src/Internal/WebHost.cs:line 225\r\n   at Microsoft.AspNetCore.Hosting.WebHost.\u003cStartAsync\u003ed__27.MoveNext() in /_/src/Hosting/Hosting/src/Internal/WebHost.cs:line 132\r\n   at Microsoft.AspNetCore.Hosting.WebHostExtensions.\u003cRunAsync\u003ed__5.MoveNext() in /_/src/Hosting/Hosting/src/WebHostExtensions.cs:line 112\r\n   at Microsoft.AspNetCore.Hosting.WebHostExtensions.\u003cRunAsync\u003ed__5.MoveNext() in /_/src/Hosting/Hosting/src/WebHostExtensions.cs:line 147\r\n   at Microsoft.AspNetCore.Hosting.WebHostExtensions.\u003cRunAsync\u003ed__4.MoveNext() in /_/src/Hosting/Hosting/src/WebHostExtensions.cs:line 97\r\n   at Program.\u003c\u003cMain\u003e$\u003ed__0.MoveNext() in C:\\......\\Program.cs:line 24\r\n   at Program.\u003cMain\u003e(String[] args)\r\n```\r\n\r\n### .NET Version\r\n\r\n8.0.101\r\n\r\n### Anything else?\r\n\r\n- Workaround: add `services.AddRouting();`\r\n- Workaround is not required when using `WebApplication.CreateBuilder`",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOtMMO1A==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde858r0d8",
                                           "createdAt":  "2024-05-02T22:37:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "seantleonard",
                                           "body":  "Hi @Shane32, I was having the same issue.\r\n\r\nI got my tests working by adding `services.AddRouting()` before `services.AddAuthorization()`.\r\n\r\n```csharp\r\nservices.AddRouting(); // \u003c-- Order matters\r\nservices.AddAuthorization();\r\n```\r\n\r\n### Background:\r\nThat idea was motivated by a comment in the source code of `app.UseAuthorization()`. \r\n\r\nhttps://github.com/dotnet/aspnetcore/blob/0bae45ebe88ad07f69e13a142c93a05b496dc9b4/src/Security/Authorization/Policy/src/AuthorizationAppBuilderExtensions.cs#L20-L21\r\n\r\nI added the \"using\" (and not the service.AddRouting) and received this error:\r\n```\r\nSystem.InvalidOperationException: Unable to find the required services. Please add all the required services by calling \u0027IServiceCollection.AddRouting\u0027 inside the call to \u0027ConfigureServices(...)\u0027 in the application startup code.\r\n```\r\n\r\nTo mitigate, I then added ` services.AddRouting();` before `services.AddAuthorization();` and my code worked!\r\nJust out of curiosity because my tests didn\u0027t explicitly need \"app.UseRouting()\", I checked whether removing the \"using\" would render the same results. My code ran without issue.\r\n\r\n### Mitigation -\u003e more contextual setup code.\r\n```csharp\r\nwebBuilder\r\n    .UseTestServer()\r\n    .ConfigureServices(services =\u003e\r\n    {\r\n        services.AddAuthentication(defaultScheme: \u003cscheme\u003e);\r\n        services.AddRouting();\r\n        services.AddAuthorization();\r\n    })\r\n    .Configure(app =\u003e\r\n    {\r\n        //app.UseRouting(); // \u003c- didn\u0027t need this. Whether it is correct to leave out is TBD.\r\n        app.UseAuthentication();\r\n        app.UseAuthorization();\r\n\r\n        // app.Run acts as terminating middleware to return 200 if we reach it. Without this,\r\n        // the Middleware pipeline will return 404 by default.\r\n        app.Run(async (context) =\u003e\r\n        {\r\n            context.Response.StatusCode = (int)HttpStatusCode.OK;\r\n            await context.Response.WriteAsync(\"Successful Request\");\r\n            await context.Response.StartAsync();\r\n        });\r\n    });\r\n```\r\n\r\n### Original exception\r\nI observed (and found this issue) because my stack trace matched yours.\r\n\u003e System.InvalidOperationException: Unable to resolve service for type \u0027Microsoft.AspNetCore.Routing.EndpointDataSource\u0027 while attempting to activate \u0027Microsoft.AspNetCore.Authorization.Policy.AuthorizationPolicyCache\u0027.\r\n\r\n### notes\r\n\r\nI\u0027m sure there must be a more elegant way of doing this, but I didn\u0027t have more time to look into this because I was trying to unblock myself from finishing a deliverable.",
                                           "updatedAt":  "2024-05-02T22:37:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85872kY",
                                           "createdAt":  "2024-05-06T13:49:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOECgdhw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "johnkors",
                                                                               "createdAt":  "2024-06-27T19:36:00Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "mpdunlop",
                                                                               "createdAt":  "2025-01-15T06:07:59Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "warmfire540",
                                           "body":  "I\u0027m having this same exception, but in a console app...\r\nI added `.UseRouting()` and it works... but this is not a webhost?\r\n\r\nafter upgrading to NET 8",
                                           "updatedAt":  "2024-05-06T13:49:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86C3RfV",
                                           "createdAt":  "2024-06-27T19:36:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEecELQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "light-traveller",
                                                                               "createdAt":  "2025-08-15T13:27:25Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "johnkors",
                                           "body":  "What warmfire said. Routing does not make sense in a Console app.",
                                           "updatedAt":  "2024-06-27T19:36:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86TpDWc",
                                           "createdAt":  "2024-11-14T17:26:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mikekistler",
                                           "body":  "We should optionally resolve endpoint datasource.",
                                           "updatedAt":  "2024-11-14T17:26:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde860ww7U",
                                           "createdAt":  "2025-07-03T15:22:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BuriedStPatrick",
                                           "body":  "Experiencing the same thing on a .NET 8 worker application (`Microsoft.NET.Sdk.Worker`) that I bootstrap with `Host.CreateApplicationBuilder()`. It started happening as soon as I depended on a library that has optional extension methods on `WebApplicationBuilder` to set up auth policies based on some incoming config.\n\nHowever, I don\u0027t call that particular method. In fact, at no point is `AddAuthorization()` or `UseAuthorization()` called. Adding `.AddRouting()` early in my DI setup \"fixed\" the problem for now.",
                                           "updatedAt":  "2025-07-08T09:13:31Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "UseAuthorization does not work with WebHostBuilder on .NET 8",
        "labels":  [
                       "bug",
                       "area-auth",
                       "Pillar: Dev Experience"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/53675",
        "createdAt":  "2024-01-28T13:45:46Z",
        "number":  53675,
        "author":  "sanderaiaots",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-04-04T16:49:43Z",
        "body":  "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nI\u0027m struggling to get windows auth working on Kestler.\r\nIt kinda works, but only when clients are windows Chrome or IE browsers. When client in MacOS UN/PW challenge is not prompted.\n\n### Expected Behavior\n\nExpected behaviour is that macOS Chrome / Safari would also prompt for username password.\n\n### Steps To Reproduce\n\nSetup keslter server running on windows and enable windows auth like:\r\nMain:\r\n`builder.Services.AddAuthentication(NegotiateDefaults.AuthenticationScheme).AddNegotiate();\r\n//for my case I want Auth to be executed on specific path of URL\r\napp.UseWhen(context =\u003e context.Request.Path.StartsWithSegments(\"/Auth\"), specificPathApp =\u003e {\r\n\tspecificPathApp.UseAuthentication(); // Apply authentication only for this path\r\n\tspecificPathApp.UseAuthorization();\r\n});`\r\n\r\n\r\nAuthController:\r\n`public class AuthController : Controller {\r\n\t[HttpGet]\r\n\t[Authorize]\r\n\tpublic ActionResult Index(string? redirect = null) {\r\n\t\tWindowsIdentity? winIdent = User.Identity as WindowsIdentity;\r\n\t\treturn new ContentResult { Content = \"Auth ok, winidentity: name=\" + (winIdent?.Name ?? \"user not found\"), ContentType = \"text/plain\" };\r\n\t}\r\n}`\r\n\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n8.0.101\n\n### Anything else?\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOcj_DFQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85yJ_B6",
                                           "createdAt":  "2024-01-29T17:25:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "That seems like a client limitation, I don\u0027t know that there\u0027s anything the server can/should do differently here. Does it work with any other servers?",
                                           "updatedAt":  "2024-01-29T17:25:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85yP8MV",
                                           "createdAt":  "2024-01-30T12:52:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sanderaiaots",
                                           "body":  "Might as well be issue how browsers have implemented Negotiate authentication on MacOS, but on windows I get prompted UN/PW when I access site outside my domain, in Mac I just get 401.\r\nSo far same behaviour in Mac with: Chrome, Safari, Firefox.\r\nIt works with IIS 10 server, but its also offer NTLM auth, that might work on MacOS.",
                                           "updatedAt":  "2024-01-30T12:52:36Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Kestrel Windows Auth is not prompting UN/PW challenge on macOS, when server runs on windows AD.",
        "labels":  [
                       "investigate",
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/54424",
        "createdAt":  "2024-03-08T02:26:00Z",
        "number":  54424,
        "author":  "halter73",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODDzKvw==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "martincostello",
                                            "createdAt":  "2024-03-08T07:23:35Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "keegan-caruso",
                                            "createdAt":  "2024-03-13T22:38:16Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "JustusGreiberORGADATA",
                                            "createdAt":  "2024-04-22T12:45:56Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "cschulznethaus",
                                            "createdAt":  "2024-09-16T12:29:18Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "jesperkristensen",
                                            "createdAt":  "2025-01-21T19:51:31Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ahaeber",
                                            "createdAt":  "2025-02-13T12:36:32Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "cdschneider",
                                            "createdAt":  "2025-03-08T13:54:28Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Selfa97",
                                            "createdAt":  "2025-06-13T01:22:48Z"
                                        }
                                    ],
                          "totalCount":  8
                      },
        "updatedAt":  "2025-08-22T18:01:28Z",
        "body":  "If you use an authentication handler from Microsoft.Identity.Web, it will [wire up](https://github.com/AzureAD/microsoft-identity-web/blob/0f1095cede2529a9311392ef3405448bb35d44f7/src/Microsoft.Identity.Web/WebApiExtensions/MicrosoftIdentityWebApiAuthenticationBuilderExtensions.cs#L172) Microsoft.IdentityModel logs [with Microsoft.Extensions.Logging](https://github.com/AzureAD/microsoft-identity-web/blob/0f1095cede2529a9311392ef3405448bb35d44f7/src/Microsoft.Identity.Web.TokenAcquisition/MicrosoftIdentityBaseAuthenticationBuilder.cs#L63) using [IdentityLoggerAdapter](https://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/blob/3f504620646bff24e22a41ee636baecb47b6937b/src/Microsoft.IdentityModel.LoggingExtensions/IdentityLoggerAdapter.cs). The authentication handlers we ship out of this repo (JwtBearerHandler, OpenIdConnectHander, and WsFederationHandler) don\u0027t do this.\r\n\r\nCurrently, to get logs from IdentityModel like \"IDX10214: Audience validation failed.\" from the JwtBearerHandler into your ASP.NET Core loggers, you have to do something like the following after adding a new package reference to Microsoft.IdentityModel.LoggingExtensions:\r\n\r\n```csharp\r\nvar loggerFactory = app.Services.GetRequiredService\u003cILoggerFactory\u003e();\r\nvar logger = loggerFactory.CreateLogger(\"IdentityLogger\");\r\nLogHelper.Logger = new IdentityLoggerAdapter(logger);\r\n```\r\n\r\nSetting the static LogHelper.Logger property the way Microsoft.Identity.Web does in methods like AddJwtBearer is far from ideal. We should work with the Identity team to add APIs to components like JsonWebTokenHandler and ConfigurationManager so they log to a non-static IIdentityLogger provided by our authentication handlers.\r\n\r\nThis could be used to improve the Microsoft.Identity.Web integration with ASP.NET Core logging as well by allowing log messages to be scoped to the handler that is logging and include things like the whether the log came from AddMicrosoftIdentityWebApp or AddMicrosoftIdentityWebApi.\r\n\r\n@jennyf19 @keegan-caruso ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOdk_Hdw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde852T8d3",
                                           "createdAt":  "2024-03-08T02:32:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "halter73",
                                           "body":  "This is similar to https://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/issues/1778, but it looks like some progress has been made since then with the addition of `IdentityLoggerAdapter`. I don\u0027t know if that needs its own assembly, but maybe a middle ground would be to introduce a `AddIdentityLoggerAdapter` API to Microsoft.IdentityModel.LoggingExtensions and have all the handlers call that. That wouldn\u0027t be nearly as good as being able to provide a unique logger from each authentication handler, but it would be better than what we have now.",
                                           "updatedAt":  "2024-03-08T02:32:58Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Improve observability of Microsoft.IdentityModel logs",
        "labels":  [
                       "enhancement",
                       "blocked",
                       "area-auth",
                       "feature-observability"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/54664",
        "createdAt":  "2024-03-21T09:54:17Z",
        "number":  54664,
        "author":  "softwaretirol",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-22T18:00:31Z",
        "body":  "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nWe have several hundreds of endpoints and discovered that our startup time of our application is terrible slow.\r\nAfter Investigation into this situation we enclosed the problem that the call to \"UseAuthorization\" makes the WebApplication configuration process slow.\r\n\r\nSee here the sample code to reproduce the issue:\r\nhttps://gist.github.com/softwaretirol/a3169c404226fbe5193c70a721ec8cc5\r\n\r\nWith UseAuthorization() the console gives us a duration of \"00:00:02.94\".\r\nWithout UseAuthorization() the console gives us a duration of \"00:00:00.023\"\r\n\r\n\n\n### Expected Behavior\n\nSame performance with UseAuthorization as without UseAuthorization\n\n### Steps To Reproduce\n\n_No response_\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n8.0.100\n\n### Anything else?\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "Combine MapWhen with UseAuthorization and many Endpoints is slow",
        "labels":  [
                       "investigate",
                       "Perf",
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/54704",
        "createdAt":  "2024-03-22T18:42:20Z",
        "number":  54704,
        "author":  "weijuncitrix",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-03-28T21:46:14Z",
        "body":  "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nCurrently the `OpenIdConnectHandler` class uses `Options.StateDataFormat` to protect/unprotect OAuth state, and the interface `ISecureDataFormat\u003cTData\u003e` does not define any async methods, so the data protection operation here is always synchronous.\r\nThis creates a problem for the following use case: \r\nPutting the entire state in `state` query param could make the URL too large, a common solution to this is putting the actual state in storage and only set an encrypted key in state param which can be used later to retrieve the state.\r\nObviously the storage operations will need to be async, but the way that `OpenIdConnectHandler` handles this today, like I mentioned earlier, makes it impossible to do state data protection synchronously. The only option we have is to implement `ISecureDataFormat\u003cTData\u003e`, call async storage methods and wait for Task results synchronously. But this sort of \"sync over async\" behavior should best be avoided if possible.\n\n### Describe the solution you\u0027d like\n\nOne possible solution: \r\n\r\n1. define a new interface `IAsyncSecureDataFormat\u003cTData\u003e`, similar to `ISecureDataFormat\u003cTData\u003e` except the methods are all async \r\n2. add a new property in `OpenIdConnectOptions`: `IAsyncSecureDataFormat\u003cAuthenticationProperties\u003e AsyncStateDataFormat { get; set; }`\r\n3. in `OpenIdConnectHandler`, use the `Options.AsyncStateDataFormat` if defined, otherwise fallback to `Options.StateDataFormat`\n\n### Additional context\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "OpenIdConnectHandler to support async state data format operations",
        "labels":  [
                       "enhancement",
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/58062",
        "createdAt":  "2024-04-20T18:46:18Z",
        "number":  58062,
        "author":  "teh13th",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC7R3qQ==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "FANAT--",
                                            "createdAt":  "2024-09-24T16:45:03Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2025-08-25T17:13:00Z",
        "body":  "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nReal-world AD deployments can have groups with brackets in name (example: `Some resource access (rw)`). In this case, when nested claims resolution is enabled, Linux clients will get `LdapException: The search filter is invalid`.\n\n### Expected Behavior\n\nIn case, when nested claims resolution is enabled, expected that each user\u0027s group will parse correctly, even if it contains brackets.\n\n### Steps To Reproduce\n\n1. Set up any AD server (contoso.com in the example).\r\n2. Add AD group with brackets in name (`Some resource access (rw)`).\r\n3. Add user to that group.\r\n4. Create a simple API project, set up RBAC claims resolution:\r\n```\r\nservices.AddAuthentication(NegotiateDefaults.AuthenticationScheme).AddNegotiate(options =\u003e\r\n{\r\n    if (!RuntimeInformation.IsOSPlatform(OSPlatform.Linux))\r\n    {\r\n        return;\r\n    }\r\n    \r\n    options.EnableLdap(settings =\u003e\r\n    {\r\n        settings.Domain = \"contoso.com\";\r\n        settings.MachineAccountName = \"someuser\";\r\n        settings.MachineAccountPassword = \"somepassword\";\r\n    });\r\n});\r\n\r\nservices.AddAuthorization();\r\n```\r\n```\r\n[ApiController]\r\n[Route(\"api/[controller]\")]\r\n[Authorize(Roles = \"GroupA\")]\r\npublic class SomeController : Controller\r\n{\r\n    [HttpGet]\r\n    [Route(\"someMethod\")]\r\n    public async Task\u003cActionResult\u003cint\u003e\u003e SomeMethod()\r\n    {\r\n        return 1;\r\n    }\r\n }\r\n```\n\n### Exceptions (if any)\n\n```\r\nSystem.DirectoryServices.Protocols.LdapException: The search filter is invalid. \r\n   at System.DirectoryServices.Protocols.LdapConnection.SendRequest(DirectoryRequest request, TimeSpan requestTimeout) \r\n   at System.DirectoryServices.Protocols.LdapConnection.SendRequest(DirectoryRequest request) \r\n   at Microsoft.AspNetCore.Authentication.Negotiate.NegotiateEvents.RetrieveLdapClaims(LdapContext context) \r\n   at Microsoft.AspNetCore.Authentication.Negotiate.NegotiateHandler.HandleAuthenticateAsync() \r\n   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync() \r\n   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme) \r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context) \r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context) \r\n```\n\n### .NET Version\n\n8.0.204\n\n### Anything else?\n\nThe problem is that class `LdapAdapter` does not [escape](https://learn.microsoft.com/en-us/archive/technet-wiki/5312.active-directory-characters-to-escape#ldap-filters) group name when place it in query to LDAP [here](https://github.com/dotnet/aspnetcore/blob/7033ec7f402fa4b7df2bf72a5e3dff1df6831f57/src/Security/Authentication/Negotiate/src/Internal/LdapAdapter.cs#L105):\r\n```\r\nvar filter = $\"(\u0026(objectClass=group)(sAMAccountName={groupCN}))\"; // This is using ldap search query language, it is looking on the server for someUser\r\n```\r\n\r\nIt seems that you can use one of existing tool here:\r\n1. [System.DirectoryServices.ActiveDirectory.Utils.GetEscapedFilterValue()](https://github.com/dotnet/runtime/blob/ce84f1d8a3f12711bad678a33efbc37b461f684f/src/libraries/System.DirectoryServices/src/System/DirectoryServices/ActiveDirectory/Utils.cs#L1771)\r\n2. [System.DirectoryServices.AccountManagement.ADUtils.EscapeRFC2254SpecialChars()](https://github.com/dotnet/runtime/blob/ce84f1d8a3f12711bad678a33efbc37b461f684f/src/libraries/System.DirectoryServices.AccountManagement/src/System/DirectoryServices/AccountManagement/AD/ADUtils.cs#L148).\r\n\r\nAlso, you can use mentioned tools to get the common name (CN) from the distinguished name (DN) [here](https://github.com/dotnet/aspnetcore/blob/7033ec7f402fa4b7df2bf72a5e3dff1df6831f57/src/Security/Authentication/Negotiate/src/Internal/LdapAdapter.cs#L69):\r\n```\r\nvar groupCN = DistinguishedNameSeparator().Split(groupDN)[0].Substring(\"CN=\".Length);\r\n```\r\nMethod: [System.DirectoryServices.ActiveDirectory.Utils.GetDNComponents()](https://github.com/dotnet/runtime/blob/ce84f1d8a3f12711bad678a33efbc37b461f684f/src/libraries/System.DirectoryServices/src/System/DirectoryServices/ActiveDirectory/Utils.cs#L459).",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOoO3y2g==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde86NX5rr",
                                           "createdAt":  "2024-04-30T16:43:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SteveSandersonMS",
                                           "body":  "@joperezr Who would be the best person to look at this? We transferred it to runtime because as we understand, the implementation is in that repo, and it does look like a possible bug.",
                                           "updatedAt":  "2024-04-30T16:43:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86NX5rt",
                                           "createdAt":  "2024-04-30T16:46:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "joperezr",
                                           "body":  "Tagging @dotnet/area-system-directoryservices team and @buyaa-n.",
                                           "updatedAt":  "2024-04-30T16:46:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86NX5rz",
                                           "createdAt":  "2024-07-25T02:56:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "buyaa-n",
                                           "body":  "\u003e The problem is that class LdapAdapter does not [escape](https://learn.microsoft.com/en-us/archive/technet-wiki/5312.active-directory-characters-to-escape#ldap-filters) group name when place it in query to LDAP [here](https://github.com/dotnet/aspnetcore/blob/7033ec7f402fa4b7df2bf72a5e3dff1df6831f57/src/Security/Authentication/Negotiate/src/Internal/LdapAdapter.cs#L105):\r\n\u003e ```\r\n\u003e var filter = $\"(\u0026(objectClass=group)(sAMAccountName={groupCN}))\"; // This is using ldap search query language, it is looking on the server for someUser\r\n\u003e ```\r\n\r\nI do not have an AD server for testing, tested with open LDAP server, a filter with works with or without escaping, though according to the doc you shared escaping might needed for active directory.\r\n\r\nGiven that the escaping was optional for OpenLdap and `System.DirectoryServices.Protocols.SearchRequest` will accept the entire `filter` string that contains many brackets that is not supposed to be escaped it will be not easy to determine which brackets (and other special characters) need to be escaped, I don\u0027t think we should try to escape the filter in `DirectoryServices.Protocols.SearchRequest` library level. \r\n\r\n@teh13th I would suggest you escape the `groupCN` yourself, if possible, you might could not do that because the value comes from the controller annotations, in that case I would say `ASPNetCore` implementation should escape it CC @SteveSandersonMS",
                                           "updatedAt":  "2024-07-25T02:56:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86NX5r7",
                                           "createdAt":  "2024-09-05T15:31:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "teh13th",
                                           "body":  "@buyaa-n, we don\u0027t pass problem values directly, they are came from **Microsoft.AspNetCore.Authentication.Negotiate** package internals (package reads current user roles (groups) and tries to get nested groups). So we can\u0027t escape it ourselves.",
                                           "updatedAt":  "2024-09-05T15:31:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86NX5r_",
                                           "createdAt":  "2024-09-05T21:10:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "buyaa-n",
                                           "body":  "Well then, I believe it should be fixed in `AspNetCore` side not runtime, maybe file an issue there?",
                                           "updatedAt":  "2024-09-05T21:10:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86NX5sI",
                                           "createdAt":  "2024-09-07T20:51:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "teh13th",
                                           "body":  "@buyaa-n, initially, I created a request in ASP.NET repo, but @SteveSandersonMS transferred it here. Maybe, one of you can transfer it back?",
                                           "updatedAt":  "2024-09-07T20:51:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86NX5sN",
                                           "createdAt":  "2024-09-24T16:57:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "FANAT--",
                                           "body":  "I have the same problem while interacting with Microsoft Active Directory server.\r\n\r\n.NET clients, being built for Windows, work correctly, but Linux clients get the same error `LdapException: The search filter is invalid`, if any groups\u0027 name (the user is in) contains brackets.\r\n\r\nEscaping values in ldap queries solves the problem.",
                                           "updatedAt":  "2024-09-24T16:57:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86NX7gU",
                                           "createdAt":  "2024-09-24T17:10:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "buyaa-n",
                                           "body":  "Transferred back to ASP .NET as it needs to be escaped in their side or customer side  ",
                                           "updatedAt":  "2024-09-24T17:10:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86euxCY",
                                           "createdAt":  "2025-02-17T13:02:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "teh13th",
                                           "body":  "Any updates?",
                                           "updatedAt":  "2025-02-17T13:02:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86g7fLa",
                                           "createdAt":  "2025-03-05T05:58:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "joperezr",
                                           "body":  "@MackinnonBuck can you please take a look?",
                                           "updatedAt":  "2025-03-05T05:58:11Z"
                                       }
                                   ],
                         "totalCount":  10
                     },
        "title":  "Linux: RBAC claims resolution fails if user has group with brackets in name",
        "labels":  [
                       "bug",
                       "area-auth",
                       "untriaged"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/56435",
        "createdAt":  "2024-06-24T20:41:50Z",
        "number":  56435,
        "author":  "halter73",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-06-26T17:01:22Z",
        "body":  "It would be nice to expand analyzer warning ASP0026, \"[Authorize] overridden by [AllowAnonymous] from farther away\", to apply not only to MVC Controllers and Actions, but also to SignalR Hubs (and Hub methods), Razor Pages, and Razor Components.\r\n\r\nhttps://github.com/dotnet/aspnetcore/pull/56244 introduced this analyzer for MVC Controllers.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "Warn when [Authorize] is overridden on SignalR Hubs, Razor Pages, and Razor Components",
        "labels":  [
                       "enhancement",
                       "area-auth",
                       "analyzer"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/57356",
        "createdAt":  "2024-08-16T00:08:39Z",
        "number":  57356,
        "author":  "halter73",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-22T18:01:30Z",
        "body":  "When a JWT includes an invalid issuer or audience, the `JwtBearerHandler` will try to produce a `WWW-Authenticate` response header including the invalid issuer and/or audience from the user-supplied token.\r\n\r\nThese values appear to come from untrusted user input:\r\n https://github.com/dotnet/aspnetcore/blob/27f2a011a4211118552dfb8f38d36e8629267d2b/src/Security/Authentication/JwtBearer/src/JwtBearerHandler.cs#L389-L390\r\n \r\nAnd flow unescaped into headers here: https://github.com/dotnet/aspnetcore/blob/27f2a011a4211118552dfb8f38d36e8629267d2b/src/Security/Authentication/JwtBearer/src/JwtBearerHandler.cs#L328\r\n\r\nThis impact of this lack of validation in a response header is mitigated by the fact that our servers (Kestrel, IIS and HttpSys) ll immediately throw an InvalidOperationException from HttpResponse.Headers.Append as expected with a message indicating the header contained an invalid control character given any instance of either a carriage return or line feed in the header string.\r\n\r\nAll of our servers validate headers values when they are set using one of [these two methods](https://github.com/dotnet/aspnetcore/blob/257d69079e0f7fc84e3f6cd5047272d7f79b4d66/src/Shared/ServerInfrastructure/HttpCharacters.cs#L49-L54). The methods are SearchValues based, so it’s straightforward to see exactly which characters are allowed and disallowed if you’re interested. By default, Kestrel will only allow ASCII characters and IIS/HttpSys will allow extended ASCII, but none of our servers allow control characters regardless of how they’re configured.\r\n\r\nThrowing an `InvalidOperationException` given a JWT token with an issuer or audience containing a newline isn’t ideal since this will usually result in a 500 response instead of a 401 response with a helpful `WWW-Authenticate` response header as expected. The simplest option to fix this would be to always use a generic error_description for invalid issuers and audiences, but I think that would be unnecessarily inconvenient in development scenarios. I would probably scan the InvalidIssuer and InvalidAudience to verify it only has allowed characters before using it in the error_description and fall back to a generic message otherwise.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "Validate or sanitize client-controlled inputs to the JwtBearer WWW-Authenticate header",
        "labels":  [
                       "enhancement",
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/57545",
        "createdAt":  "2024-08-27T10:45:36Z",
        "number":  57545,
        "author":  "kuldeepcis-lab",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC6hXcg==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "utkarshdubeyfsd",
                                            "createdAt":  "2024-08-27T10:50:24Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2025-08-22T18:00:55Z",
        "body":  "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Describe the bug\r\n\r\n\r\nI cloned the repository and started working with the [BlazorWebappOidc](https://github.com/dotnet/blazor-samples/tree/main/8.0/BlazorWebAppOidc) project. I configured the Entra ID settings, such as the client ID and tenant ID, using the details from my Entra ID tenant account. After running the application locally on the Kestrel server with the HTTPS profile, the Blazor application launched successfully. The interface loaded in the browser, and I was able to log in using my Entra ID account. After a successful callback to my Blazor application URL, I was redirected and received the expected details (Such as Username, email address, etc).\r\n\r\nHowever, when I deployed the same application on an IIS server, I encountered an issue. While the Blazor application opened, when I attempted to log in to my Microsoft Entra ID account, I received a Bad Request - Request Too Long (HTTP Error 400. The size of the request headers is too long) error after the callback.\r\n\r\n\r\n### Expected Behavior\r\n\r\n\r\nAfter a successful callback to my Blazor application URL, I was redirected and received the expected details (Such as Username, email address, etc).\r\n\r\n### Steps To Reproduce\r\n\r\n- Go to repository and clone [BlazorWebappOidc](https://github.com/dotnet/blazor-samples/tree/main/8.0/BlazorWebAppOidc) and Open the application in Visual Studio.\r\n\r\n- Provide the needed configuration like Tenant ID, Client ID, etc for your Microsoft Azure Entra ID.\r\n\r\n- Add an IIS Settings to launchsettings.json to run the application on IIS locally then Run\r\n\r\n` \"iisSettings\": { \"windowsAuthentication\": false, \"anonymousAuthentication\": true, \"iisExpress\": { \"applicationUrl\": \"http://localhost:46294\", \"sslPort\": 44381 }  },\"profiles\": {   \"IIS Express\": { \"commandName\": \"IISExpress\", \"launchBrowser\": true, \"inspectUri\": \"{wsProtocol}://{url.hostname}:{url.port}/_framework/debug/ws-proxy?browser={browserInspectUri}\", \"environmentVariables\": { \"ASPNETCORE_ENVIRONMENT\": \"Development\" }   } }`\r\n\r\n- Click on login and it will redirect you to the authentication flow then provide the Credentials for login (Entra ID Username and password).\r\n\r\n- After the successful callback you get back to the Blazor Application and then you will see the Error\r\n\r\nBad Request - Request Too Long (HTTP Error 400. The size of the request headers is too long.)\r\n\r\n### Exceptions (if any)\r\n\r\n_No response_\r\n\r\n### .NET Version\r\n\r\nDOTNET 8 \r\n\r\n### Anything else?\r\n\r\n![Screenshot_10](https://github.com/user-attachments/assets/5ea76b6e-b850-417e-a832-dcb6fd91652b)\r\n\r\ncc: @guardrex https://github.com/dotnet/blazor-samples/issues/344\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOiwKu_A==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde86J0Tod",
                                           "createdAt":  "2024-08-27T10:50:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "martincostello",
                                           "body":  "Try configuring [IIS Request Limits](https://learn.microsoft.com/iis/configuration/system.webserver/security/requestfiltering/requestlimits/) in web.config like this to increase the allowed query string length:\r\n\r\n```diff\r\n﻿\u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e\r\n\u003cconfiguration\u003e\r\n  \u003c!-- Any existing configuration you may have --\u003e\r\n+ \u003csystem.webServer\u003e\r\n+   \u003csecurity\u003e\r\n+     \u003crequestFiltering\u003e\r\n+       \u003crequestLimits maxQueryString=\"4096\" /\u003e\r\n+     \u003c/requestFiltering\u003e\r\n+   \u003c/security\u003e\r\n+ \u003c/system.webServer\u003e\r\n\u003c/configuration\u003e\r\n```\r\n",
                                           "updatedAt":  "2024-08-27T10:50:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86J0UGf",
                                           "createdAt":  "2024-08-27T10:51:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODvzycw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "utkarshdubeyfsd",
                                                                               "createdAt":  "2024-08-27T10:52:29Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "kuldeepcis-lab",
                                           "body":  "Already tried, but Not Worked.",
                                           "updatedAt":  "2024-08-27T10:52:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86J0XE2",
                                           "createdAt":  "2024-08-27T10:56:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODv3e7A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "halter73",
                                                                               "createdAt":  "2024-08-27T18:22:58Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "javiercn",
                                           "body":  "@kuldeepcis-lab thanks for contacting us.\r\n\r\nThe request that fails is the one that happens after the logging, isn\u0027t it? Seems that too much information might be stored in the auth cookie. (There are 5 chunks at 4Kb per chunk)\r\n\r\nSo I suspect IIS has a 16KB header limit.\r\n\r\nIn that situation, you need to either configure a higher limit (not sure if possible) or reduce the amount of information that you put on the cookie.\r\n\r\nYou can do so by hooking on to the Oidc call and customizing the claims principal https://learn.microsoft.com/en-us/aspnet/core/security/authentication/claims?view=aspnetcore-8.0",
                                           "updatedAt":  "2024-08-27T10:56:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86J0XPk",
                                           "createdAt":  "2024-08-27T10:57:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "utkarshdubeyfsd",
                                           "body":  "@kuldeepcis-lab, Try configuring the other IIS limits in the web.config file, such as increasing the request length and content length.\r\n\r\n```\r\n\u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e\r\n\u003cconfiguration\u003e\r\n  \u003csystem.web\u003e\r\n    \u003c!-- Increase max request length in KB --\u003e\r\n    \u003chttpRuntime maxRequestLength=\"51200\" /\u003e \u003c!-- 50 MB --\u003e\r\n  \u003c/system.web\u003e\r\n  \r\n  \u003csystem.webServer\u003e\r\n    \u003csecurity\u003e\r\n      \u003crequestFiltering\u003e\r\n        \u003c!-- Increase max content length in bytes --\u003e\r\n        \u003crequestLimits maxAllowedContentLength=\"52428800\" /\u003e \u003c!-- 50 MB --\u003e\r\n      \u003c/requestFiltering\u003e\r\n    \u003c/security\u003e\r\n  \u003c/system.webServer\u003e\r\n\u003c/configuration\u003e\r\n\r\n```",
                                           "updatedAt":  "2024-08-27T10:58:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86J0Zm_",
                                           "createdAt":  "2024-08-27T11:00:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kuldeepcis-lab",
                                           "body":  "Hello @utkarshdubeyfsd \r\nI had already tried both of the solutions but did not work at all.",
                                           "updatedAt":  "2024-08-27T11:00:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86J0cMl",
                                           "createdAt":  "2024-08-27T11:03:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kuldeepcis-lab",
                                           "body":  "Hello @javiercn \r\n\r\nI had tried setting the header limit to 64 KB, but no luck even after that change.",
                                           "updatedAt":  "2024-08-27T11:03:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86J0icv",
                                           "createdAt":  "2024-08-27T11:09:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "guardrex",
                                           "body":  "@kuldeepcis-lab ... You tried by setting the registry keys?",
                                           "updatedAt":  "2024-08-27T11:09:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86J0lS3",
                                           "createdAt":  "2024-08-27T11:12:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kuldeepcis-lab",
                                           "body":  "@guardrex \r\nNo, I do not know, Can you please guide me.",
                                           "updatedAt":  "2024-08-27T11:12:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86J0rUq",
                                           "createdAt":  "2024-08-27T11:20:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "guardrex",
                                           "body":  "Note that I\u0027m not recommending this even if it will work. The product unit must state what approach should be taken here. We will need to do ***something*** in the article/sample to address this because this is a failure with the BWA+OIDC sample app OOB with no special config.\r\n\r\nSee ...\r\n\r\nhttps://learn.microsoft.com/troubleshoot/developer/webapps/iis/iisadmin-service-inetinfo/httpsys-registry-windows\r\n\r\n... for `MaxFieldLength` and `MaxRequestBytes`.\r\n\r\nAgain ... I mention this ⚠️ ***for testing here to get to the root problem.*** ⚠️\r\n\r\nSee if that even lets the app run properly, and then @javiercn / @halter73 can discuss with us how the article/sample app should really address this. I kind\u0027a doubt that we\u0027ll be including guidance on how to adjust registry keys to let the OOB app run under IIS.\r\n\r\nI\u0027ve opened a docs issue 👇 for when there\u0027s guidance to publish.",
                                           "updatedAt":  "2024-08-27T11:37:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86J1c0t",
                                           "createdAt":  "2024-08-27T12:56:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODv01tA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "guardrex",
                                                                               "createdAt":  "2024-08-27T13:09:38Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "utkarshdubeyfsd",
                                                                               "createdAt":  "2024-08-27T13:16:31Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "kuldeepcis-lab",
                                           "body":  "@guardrex \r\nby adding the MaxFieldLength and MaxRequestBytes parameter to registry. it is still **not** working",
                                           "updatedAt":  "2024-08-27T12:57:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86J1lkK",
                                           "createdAt":  "2024-08-27T13:11:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "guardrex",
                                           "body":  "Ok ... thanks for checking (and I assume that you changed those and restarted the server).\r\n\r\nI\u0027m 👂 here for the discussion/resolution, and I\u0027ll get the article+sample updated per the docs issue that I opened as soon as I know what to do.",
                                           "updatedAt":  "2024-08-27T13:15:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86J4e-N",
                                           "createdAt":  "2024-08-27T18:53:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODwKwUA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "utkarshdubeyfsd",
                                                                               "createdAt":  "2024-08-28T12:14:58Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "kuldeepcis-lab",
                                                                               "createdAt":  "2024-08-29T08:56:40Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "halter73",
                                           "body":  "@kuldeepcis-lab What did you try setting `MaxRequestBytes` to? Did you confirm changing this setting allowed you to manually send a request with more than 16 KiB of request headers?\r\n\r\nEven [Kestrel has a limit on the total size of request headers](https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.server.kestrel.core.kestrelserverlimits.maxrequestheaderstotalsize?view=aspnetcore-8.0). If Kestrel can handle request headers of this size without custom configuration, IIS should also be able to with the right configuration.\r\n\r\nThe default `MaxRequestHeadersTotalSize` for Kestrel is 32 KiB while IIS\u0027s `MaxRequestBytes` (which is nearly equivalent except that the IIS limit also counts the size of the request line in addition to the headers) is 16 KiB, but this can be increased all the way to 16 MiB.\r\n\r\nThere\u0027s also the `MaxFieldLength`, but that shouldn\u0027t come into play considering the cookies are chunked at 4 KiB per header, and the `MaxFieldLength` limit is 16 KiB per header.\r\n\r\nHowever, I think @javiercn is on the right track. You probably don\u0027t want to take the performance hit of sending such large cookies every request anyway. Your best bet is likely to first inspect which claims are getting stored in the cookie and try clearing any unnecessary claims from the cookie using `OpenIdConnectOptions.ClaimActions.DeleteClaim`. https://learn.microsoft.com/en-us/aspnet/core/security/authentication/social/additional-claims?view=aspnetcore-8.0#remove-claim-actions-and-claims\r\n\r\nhttps://learn.microsoft.com/troubleshoot/developer/webapps/iis/www-administration-management/http-bad-request-response-kerberos has some similar guidance to https://learn.microsoft.com/troubleshoot/developer/webapps/iis/iisadmin-service-inetinfo/httpsys-registry-windows, but it\u0027s first suggestion is to \"Decrease the number of Active Directory groups\". This is for Kerberos rather than OIDC, but the principle is the same. If you try to encode too many claims into a header (in this case the \"Cookie\" header), you\u0027ll eventually run into limits.",
                                           "updatedAt":  "2024-08-27T18:56:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86J9dfV",
                                           "createdAt":  "2024-08-28T07:54:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kuldeepcis-lab",
                                           "body":  "Hi @halter73 \r\n[BlazorWebappOidc](https://github.com/dotnet/blazor-samples/tree/main/8.0/BlazorWebAppOidc) Works locally when launched using Visual Studio and it runs on Kestral Server on Https profile by default and we do not need to customize the headers \r\nbut having issues With the IIS Server, Not only on deployment The issue is persistent when run locally on IIS through Visual Studio \r\n \r\nNow trying to Delete the unnecessary claim `OpenIdConnectOptions.ClaimActions.DeleteClaim` \r\nwill back soon.",
                                           "updatedAt":  "2024-08-28T07:54:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86KGMPc",
                                           "createdAt":  "2024-08-29T07:15:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kuldeepcis-lab",
                                           "body":  "Hi @halter73 \r\nReducing the claim size **helps** but also creates an issue that the application does not contain the Authentication state I think because whenever I tried to switch between the pages the application automatically goes down. \r\n",
                                           "updatedAt":  "2024-08-29T07:18:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86KIeDi",
                                           "createdAt":  "2024-08-29T12:12:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODwaCng==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "LAUGH",
                                                                               "user":  "kuldeepcis-lab",
                                                                               "createdAt":  "2024-08-30T09:33:49Z"
                                                                           },
                                                                           {
                                                                               "content":  "LAUGH",
                                                                               "user":  "utkarshdubeyfsd",
                                                                               "createdAt":  "2024-08-30T10:18:30Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "guardrex",
                                           "body":  "Given that this issue has arisen and concern that other devs are going to face it in the future with users who have many AD groups/AD built-in Admin Roles, I now plan to modify the approach described by the article.\r\n\r\nLet\u0027s obtain AD groups/AD built-in Admin Roles ***via Graph SDK/API*** separately for authenticating users on sign in. It will eliminate this problem for everyone forever. I already have a separate issue to include an add-on section for Graph SDK/API setup anyway.\r\n\r\n@kuldeepcis-lab ... The soonest that I can reach it is next week (if no fires come up between now and then) due to a couple of factors ... 🦖🧠🔥😆 ... I\u0027m tired and need a few days off. We also have the Labor Day holiday on Monday. If you can wait until next week, I\u0027ll have a new Graph-based approach for you.\r\n\r\n@halter73 @MackinnonBuck @javiercn ... If everyone is in agreement with my plan, this PU issue can be closed in favor of the existing docs issues ...\r\n\r\n* [Add Graph access to the BWA+OIDC article+samples (`dotnet/AspNetCore.Docs` #33099)](https://github.com/dotnet/AspNetCore.Docs/issues/33099)\r\n* [BWA+OIDC request header length problem in IIS (`dotnet/AspNetCore.Docs` #33450)](https://github.com/dotnet/AspNetCore.Docs/issues/33450)\r\n\r\n@halter73 ... I\u0027ll ping u for review when the docs PR goes up.",
                                           "updatedAt":  "2024-08-29T12:28:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86KtthI",
                                           "createdAt":  "2024-09-03T19:13:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "guardrex",
                                           "body":  "@kuldeepcis-lab ... I have a working 🙈 ***RexHacks!***\u0026trade; 🙈 approach that uses Graph SDK/API now. It doesn\u0027t rely upon sending AD groups and AD built-in Admin Roles via the cookie, so it should work in your scenario. However, a few caveats ...\r\n\r\n* I ran into some problems trying to create a Graph client prototype with the OIDC provider (i.e., `AddOpenIdConnect`), but I had success with MS Identity Web (i.e., `AddMicrosoftIdentityWebApp`). AFAIK, we\u0027ll have an MS Identity Web-based BWA sample app for 9.0 GA, and I defer to the PU for what such an app is ***really*** supposed to look like. I hacked it to life following a Jean-Marc example for regular ASP.NET Core apps.\r\n* Since I went with MS Identity Web, I won\u0027t be adding Graph for AD groups/roles to the BWA+OIDC article. Azure recommends MS Identity Web for ME-ID, and I think that\u0027s the direction the coverage will go. When I write a new article, that\u0027s where Graph for AD groups/roles will appear.\r\n* The [*Application roles for apps registered with Microsoft Entra (ME-ID)* section](https://learn.microsoft.com/en-us/aspnet/core/blazor/security/blazor-web-app-with-oidc?view=aspnetcore-8.0\u0026pivots=without-bff-pattern#application-roles-for-apps-registered-with-microsoft-entra-me-id) will be removed from the BWA+OIDC article, leaving the [*Application roles for apps not registered with Microsoft Entra (ME-ID)* section](https://learn.microsoft.com/en-us/aspnet/core/blazor/security/blazor-web-app-with-oidc?view=aspnetcore-8.0\u0026pivots=without-bff-pattern#application-roles-for-apps-not-registered-with-microsoft-entra-me-id) in place with a section heading name change.\r\n\r\nThe simplest way for me to show you my 🦖 ***hacks*** is to toss this prototype app into GH for you to look at. You can adopt its approaches ⚠️ ***AT YOUR OWN RISK*** ⚠️😨 until an official sample+coverage is released. The README has the particulars. If you want to discuss the sample, open an issue on that sample repo. This isn\u0027t an official sample, and we won\u0027t discuss it here, unless Halter/Javier/Mackinnon want to chat about it.\r\n\r\nhttps://github.com/guardrex/BlazorWebAppMSIdentityWeb/\r\n\r\n@halter73 may or may not look at that. *Idk if he has time for such silly* 🦖 *things!* 😆\r\n\r\n",
                                           "updatedAt":  "2024-09-03T20:22:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86K3Dhe",
                                           "createdAt":  "2024-09-04T18:09:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "guardrex",
                                           "body":  "I took one more shot with the Graph client + BWA+OIDC, and it still gives me a 💥. It complains about a malformed request using the OBO credential provider. \r\n\r\nI\u0027ll throw a dog a bone tho ... ***REST API to the rescue!*** 🚑🚒🚓.\r\n\r\nIt\u0027s not \"nice\" in the SDK sense, but it works ✨. It has the nice benefit of requiring no packages, so it\u0027s very lean.\r\n\r\nIn the `CookieOidcRefresher.cs`, I made a nullable string property for the access token (`CurrentAccessToken`) and assign to it at the top and the bottom of the `ValidateOrRefreshCookieAsync` method. That keeps it updated regardless of refreshing the cookie.\r\n\r\nNeed a couple of classes for deserializing ...\r\n\r\n```csharp\r\npublic class RootObject\r\n{\r\n    [JsonPropertyName(\"odatacontext\")]\r\n    public string? Context { get; set; }\r\n\r\n    [JsonPropertyName(\"value\")]\r\n    public Value[]? Value { get; set; }\r\n}\r\n\r\npublic class Value\r\n{\r\n    [JsonPropertyName(\"@odata.type\")]\r\n    public string? Type { get; set; }\r\n\r\n    [JsonPropertyName(\"id\")]\r\n    public string? Id { get; set; }\r\n        \r\n    [JsonPropertyName(\"roleTemplateId\")]\r\n    public string? RoleTemplateId { get; set; }\r\n}\r\n```\r\n\r\nIn `PersistingAuthenticationStateProvider.cs`, inject the `CookieOidcRefresher` as `cookieOidcRefresher`.\r\n\r\n`OnPersistingAsync` looks like this ...\r\n\r\n```csharp\r\nprivate async Task OnPersistingAsync()\r\n{\r\n    var authenticationState = await GetAuthenticationStateAsync();\r\n    var principal = authenticationState.User;\r\n\r\n    if (principal.Identity?.IsAuthenticated == true)\r\n    {\r\n        var claimsIdentity = (ClaimsIdentity)principal.Identity;\r\n        var accessToken = cookieOidcRefresher.CurrentAccessToken;\r\n\r\n        var client = new HttpClient();\r\n        client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Bearer\", accessToken);\r\n\r\n        var response = await client.GetAsync(\"https://graph.microsoft.com/v1.0/me/memberOf\");\r\n\r\n        if (response.StatusCode == HttpStatusCode.OK)\r\n        {\r\n            var content = await response.Content.ReadAsStringAsync();\r\n            RootObject? rootObject = JsonSerializer.Deserialize\u003cRootObject\u003e(content);\r\n\r\n            var groupsAndRoles = rootObject?.Value;\r\n\r\n            if (groupsAndRoles is not null)\r\n            {\r\n                foreach (var entry in groupsAndRoles)\r\n                {\r\n                    if (entry.Type == \"#microsoft.graph.group\" \u0026\u0026 entry.Id is not null)\r\n                    {\r\n                        claimsIdentity.AddClaim(new Claim(\"groups\", entry.Id));\r\n                    }\r\n\r\n                    if (entry.Type == \"#microsoft.graph.directoryRole\" \u0026\u0026 entry.RoleTemplateId is not null)\r\n                    {\r\n                        claimsIdentity.AddClaim(\r\n                            new Claim(\"directoryRole\", entry.RoleTemplateId));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else\r\n        {\r\n            throw new HttpRequestException($\"Invalid status code in the HttpResponseMessage: {response.StatusCode}.\");\r\n        }\r\n\r\n        principal = new ClaimsPrincipal(claimsIdentity);\r\n        persistentComponentState.PersistAsJson(nameof(UserInfo), UserInfo.FromClaimsPrincipal(principal));\r\n    }\r\n}\r\n```\r\n\r\nThis won\u0027t be for docs. I\u0027m just placing this here in passing in case anyone wants to see how I did it in the BWA+OIDC app. If anyone figures out the Graph client approach ***without \u0027malformed requests\u0027***, I\u0027d like to hear about it 👂. I still think we\u0027re going to move the AD groups/roles section into a new article on BWA+MS Identity Web, where I know the API call to Graph works well for AD groups/roles 🎉. MS Identity Web ***IS*** the Entra-recommended way to go.\r\n\r\n@halter73 ... My ***hacked*** sample for BWA+MS Identity Web is linked in the prior comment, but I\u0027ll wait for an official sample before writing anything up.",
                                           "updatedAt":  "2024-09-04T18:09:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86K5Edh",
                                           "createdAt":  "2024-09-04T21:59:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODxBbGA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "guardrex",
                                                                               "createdAt":  "2024-09-04T22:23:36Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "halter73",
                                           "body":  "At a glance, https://github.com/guardrex/BlazorWebAppMSIdentityWeb/ looks pretty good to me. You might be able to leverage `AddMicrosoftIdentityUI` to get rid of `LoginLogoutEndpointRouteBuilderExtensions`, but it\u0027s nice that the latter doesn\u0027t rely on MVC, so I understand leaving it there. I might do the same in the \"official\" version we use for the template.\r\n\r\nInstead of putting the Microsoft Graph logic inside of `OnPersistingAsync`, you could do the same thing in `OpenIdConnectOptions.Events.OnTokenValidated`. It might also be worth checking if you can get the same claims you can from Microsoft Graph if you configure `OpenIdConnectOptions.GetClaimsFromUserInfoEndpoint = true`. If we did that, we\u0027d need to update `CookieOidcRefresher` to also query the `userinfo_endpoint`. I agree that using `AddMicrosoftIdentityWebApp` is best if you\u0027re connecting to Entra ID. And I\u0027m not sure how much the data `userinfo_endpoint` overlaps with the Microsoft Graph data.\r\n\r\nI\u0027m also not sure that `JwtSecurityTokenHandler.DefaultMapInboundClaims = false` does anything anymore, since `JwtSecurityToken` has been deprecated and is no longer used unless you configure `UseSecurityTokenValidators = true`. https://learn.microsoft.com/en-us/dotnet/core/compatibility/aspnet-core/8.0/securitytoken-events\r\n\r\nYou should be able to achieve the same result with `JsonWebToken` by calling `JsonWebTokenHandler.DefaultInboundClaimTypeMap.Clear()`. Or if you don\u0027t want to rely on mutating static state, you can still configure `OpenIdConnectOptions.MapInboundClaims = false` as follows:\r\n\r\n```\r\nbuilder.Services.Configure\u003cMicrosoftIdentityOptions\u003e(OpenIdConnectDefaults.AuthenticationScheme, oidcOptions =\u003e\r\n{\r\n    oidcOptions.MapInboundClaims = false;\r\n});\r\n```\r\n\r\nIt\u0027s also probably better to use an array of DownstreamApi scopes rather than splitting a single string with `builder.Configuration.GetValue\u003cstring\u003e(\"DownstreamApi:Scopes\")?.Split(\u0027 \u0027)`. `AddMicrosoftGraph(builder.Configuration.GetSection(\"DownstreamApi\"))` should already be reading the scopes [as an array](https://github.com/AzureAD/microsoft-identity-abstractions-for-dotnet/blob/5d2d6fb00b1988b644df3517c03b3e3bdfdc33e4/src/Microsoft.Identity.Abstractions/DownstreamApi/DownstreamApiOptions.cs#L25). I\u0027m not sure if `EnableTokenAcquisitionToCallDownstreamApi` needs the initial scopes, but if it does, you should be able to manually read them as an array without splitting using `builder.Configuration.GetValue\u003cstring[]\u003e(\"DownstreamApi:Scopes\")`.\r\n\r\nAlso, where is `HandleSameSiteCookieCompatibility()` coming from? And what does it do exactly?",
                                           "updatedAt":  "2024-09-04T21:59:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86K5ONb",
                                           "createdAt":  "2024-09-04T22:23:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "guardrex",
                                           "body":  "For ...\r\n\r\n\u003e I\u0027m also not sure that `JwtSecurityTokenHandler.DefaultMapInboundClaims = false` does anything anymore\r\n\r\n... and ...\r\n\r\n\u003e `HandleSameSiteCookieCompatibility()` coming from?\r\n\r\nThose are taken from the Azure docs sample app. It might be a Jean-Marc sample. ~I don\u0027t have the link handy at the moment, but I\u0027ll post it tomorrow.~ One of my source links is lost. No matter. I\u0027m going to update per your tips :point_up:.\r\n\r\n\u003e builder.Configuration.GetValue\u003cstring\u003e(\"DownstreamApi:Scopes\")?.Split(\u0027 \u0027)\r\n\r\nI think that came from the sample, too.\r\n\r\nFor the rest, I\u0027ll see if I can take those approaches with the sample app to improve it. I\u0027ll let you know how it turns out.",
                                           "updatedAt":  "2024-09-05T16:24:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86LAq78",
                                           "createdAt":  "2024-09-05T16:50:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "guardrex",
                                           "body":  "I found ... \r\n\r\nhttps://github.com/microsoftgraph/msgraph-sample-aspnet-core/tree/main/GraphTutorial\r\n\r\n... and based a set of updates on that. They\u0027re using extension methods and grabbing a lot more Graph data. I\u0027m just hacking a minimal approach without all the bells and whistles at this point.\r\n\r\nHere are my latest 🦖 ***Hack\u0027ins!***\u0026trade; ...\r\n\r\nhttps://github.com/guardrex/BlazorWebAppMSIdentityWeb\r\n\r\n* `LoginLogoutEndpointRouteBuilderExtensions ... doesn\u0027t rely on MVC` 👉 I left that alone because not relying on MVC sounds good to me.\r\n* Uses `OnTokenValidated` for the Graph work.\r\n* `OpenIdConnectOptions.GetClaimsFromUserInfoEndpoint = true` 👉 I didn\u0027t check, but I might look into that approach tomorrow.\r\n* `JwtSecurityTokenHandler.DefaultMapInboundClaims = false` 👉 Removed.\r\n* `OpenIdConnectOptions.MapInboundClaims = false` 👉 Along with setting the `NameClaimType` and `RoleClaimType`, I resolved it.\r\n* `builder.Configuration.GetValue\u003cstring\u003e(\"DownstreamApi:Scopes\")?.Split(\u0027 \u0027)` 👉 Resolved.\r\n* `manually read them as an array without splitting using builder.Configuration.GetValue\u003cstring[]\u003e(\"DownstreamApi:Scopes\")` 👉 Resolved.\r\n* `where is HandleSameSiteCookieCompatibility() coming from?` 👉 I\u0027ve removed the cookie policy stuff. It\u0027s not in the Azure Graph sample that I\u0027m looking at now. I lost that original sample source, but here\u0027s the API for it ...\r\n  * https://learn.microsoft.com/en-us/dotnet/api/microsoft.identity.web.cookiepolicyoptionsextensions.handlesamesitecookiecompatibility\r\n  * https://github.com/AzureAD/microsoft-identity-web/blob/master/src/Microsoft.Identity.Web/CookiePolicyOptionsExtensions.cs\r\n\r\nWhen we reach the point of having an official BWA+MS Identity Web sample that I can write a new article from, I\u0027ll include steps ***in an article section***. I\u0027ll probably mirror the approach that the Azure sample takes with one or more fancy extension methods. I\u0027ll also add some Key Vault code via Managed Identity for the client secret when writing it up, and I\u0027ll back-port the new Key Vault coverage to the BWA+OIDC article.",
                                           "updatedAt":  "2024-09-05T16:50:25Z"
                                       }
                                   ],
                         "totalCount":  20
                     },
        "title":  "Bad Request - Request Too Long - IIS Server",
        "labels":  [
                       "Docs",
                       "area-auth",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/57603",
        "createdAt":  "2024-08-29T18:43:25Z",
        "number":  57603,
        "author":  "AliAjami2020",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-09-04T17:35:56Z",
        "body":  "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nIf you create a new Blazor server-side web application using Windows authentication, after publishing it, you will be prompted to authenticate twice when trying to access it. The issue seems to be related to _framework/blazor.server.js. I am unsure why the Edge browser on iPhone cannot pass credentials to blazor.server.js. After you log in the first time, you are prompted to authenticate again. You can skip the second prompt and navigate to the home page, but each time you click on another link, you are asked to enter your username and password again. This issue has started occurring after recent updates.\n\n### Expected Behavior\n\n_No response_\n\n### Steps To Reproduce\n\n_No response_\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n.NET 8\n\n### Anything else?\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOittZDQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde86KNCOP",
                                           "createdAt":  "2024-08-29T19:12:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AliAjami2020",
                                           "body":  "\r\nHere you can see that I was able to log in to the app, but immediately after, it prompts the challenge box again.\r\n\r\nPhone screenshot = \r\n![Iphone_edge_WindowAuth](https://github.com/user-attachments/assets/c071f2d6-6817-499c-a07c-bf71ad1b89b1)\r\n\r\nCode =\r\n![image](https://github.com/user-attachments/assets/16ff11fc-a9ff-48c3-be7f-150dd7da45f3)\r\n",
                                           "updatedAt":  "2024-08-29T19:12:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86KTd_x",
                                           "createdAt":  "2024-08-30T07:39:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "javiercn",
                                           "body":  "@AliAjami2020 thanks for contacting us.\r\n\r\nI\u0027m not an expert in this area, but I suspect that the problem is either:\r\n1) Your phone configuration.\r\n2) By design, since you are not logged in with your windows user on the iphone.\r\n\r\nThe two prompts you are getting are:\r\n1) During prerendering\r\n2) When the interactive connection is established.\r\n\r\nYou should strongly consider using a different means of authentication if you want to target other mobile devices.",
                                           "updatedAt":  "2024-08-30T07:39:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86KVneI",
                                           "createdAt":  "2024-08-30T11:28:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AliAjami2020",
                                           "body":  "Thank you for your response\r\n\r\nI cannot tell you exactly what the issue is, but my Blazor app was working\r\non the iPhone with one-time authentication before the recent Edge update.\r\nYou will not encounter this issue with an MVC web app that does not have\r\nBlazor.Server. Here are the steps to simulate the exact issue:\r\n\r\n 1. Open Visual Studio and create a new Blazor server app with Windows\r\nAuthentication.\r\n 2. Publish it on IIS and enable Windows Authentication in IIS.\r\n 3. Open your app on an iPhone using Edge.\r\n\r\n\r\nThank you\r\n\r\n\r\n\r\nOn Fri, Aug 30, 2024 at 3:39 AM Javier Calvarro Nelson \u003c\r\n***@***.***\u003e wrote:\r\n\r\n\u003e @AliAjami2020 \u003chttps://github.com/AliAjami2020\u003e thanks for contacting us.\r\n\u003e\r\n\u003e I\u0027m not an expert in this area, but I suspect that the problem is either:\r\n\u003e\r\n\u003e    1. Your phone configuration.\r\n\u003e    2. By design, since you are not logged in with your windows user on\r\n\u003e    the iphone.\r\n\u003e\r\n\u003e The two prompts you are getting are:\r\n\u003e\r\n\u003e    1. During prerendering\r\n\u003e    2. When the interactive connection is established.\r\n\u003e\r\n\u003e You should strongly consider using a different means of authentication if\r\n\u003e you want to target other mobile devices.\r\n\u003e\r\n\u003e —\r\n\u003e Reply to this email directly, view it on GitHub\r\n\u003e \u003chttps://github.com/dotnet/aspnetcore/issues/57603#issuecomment-2320359409\u003e,\r\n\u003e or unsubscribe\r\n\u003e \u003chttps://github.com/notifications/unsubscribe-auth/ALX7OQ2C62QFSIZD7TPEFHTZUAOTJAVCNFSM6AAAAABNLAMAMKVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDGMRQGM2TSNBQHE\u003e\r\n\u003e .\r\n\u003e You are receiving this because you were mentioned.Message ID:\r\n\u003e ***@***.***\u003e\r\n\u003e\r\n",
                                           "updatedAt":  "2024-08-30T11:28:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86K21kN",
                                           "createdAt":  "2024-09-04T17:35:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mkArtakMSFT",
                                           "body":  "UPDATE: I\u0027ve engaged with the Edge team internally and they have filed an internal ticket tracking this issue. At this point it\u0027s out of our control, so marking this as `external` and parking in the Backlog.",
                                           "updatedAt":  "2024-09-04T17:35:43Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "Blazor Server App on iPhone Repeatedly Prompts for Windows Authentication",
        "labels":  [
                       "bug",
                       "External",
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/58786",
        "createdAt":  "2024-11-04T21:25:31Z",
        "number":  58786,
        "author":  "mkArtakMSFT",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC8aNYA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "MarkusRodler",
                                            "createdAt":  "2024-11-05T11:17:23Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2025-08-22T18:01:59Z",
        "body":  "Leftover work from https://github.com/dotnet/aspnetcore/issues/27384",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "Make authentication libraries trimmable",
        "labels":  [
                       "enhancement",
                       "area-auth",
                       "triaged",
                       "feature-trimming"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/58812",
        "createdAt":  "2024-11-06T10:29:44Z",
        "number":  58812,
        "author":  "voroninp",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC-VoDQ==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "cryocz",
                                            "createdAt":  "2025-01-16T14:12:20Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "vad873",
                                            "createdAt":  "2025-01-21T19:51:16Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2024-11-06T17:45:24Z",
        "body":  "## Background and Motivation\n\nI\u0027d like to run custom actions after authentication succeeds or fails. While some authentication options allow me to define callbacks for various events, there\u0027s no generic way to react to authentication process unless I implement `IClaimsTransformation` which has other intent.\nIn theory, custom middleware could work but authentication can be performed both by Authentication and Authorization middleware, so it must be enabled at correct place.\n\n## Proposed API\n\nI\u0027d like to be able to register a custom implementation of `IAuthneticationEvents` (maybe multiple implementations):\n```\npublic interface IAuthneticationEvents\n{\n    // Always executed after authentication phase.\n    ValueTask AuthenticationCompleted(IReadOnlyDictionary\u003cstring, AuthenticationResult\u003e resultByScheme);\n\n    // Executed if at least one scheme from the effective policy is successfully authenticated.\n    ValueTask AuthenticationSucceeded(IReadOnlySet\u003cstring\u003e succededSchemes, ClaimsPrincipal principal);\n\n    // Executed if neither of the schemes from effective policy was successfully authenticated.\n    ValueTask AuthenticationFailed(IReadOnlyDictionary\u003cstring, AuthenticationResult\u003e resultByScheme);\n}\n```\n\n## Risks\n\nIf I am not mistaken, the current architecture of authentication and authorization process makes implementing this functionality a bit hard. For example, authentication middleware always attempts to authenticate default scheme, but it is not aware of other authentications which will be executed by policy evaluator which belongs to authorization middleware.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "Event-like extensions for authentication.",
        "labels":  [
                       "enhancement",
                       "area-auth",
                       "api-suggestion"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/58826",
        "createdAt":  "2024-11-07T08:54:57Z",
        "number":  58826,
        "author":  "BenJags",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODBVVHw==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "menees",
                                            "createdAt":  "2025-04-17T20:49:26Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2025-08-25T17:33:29Z",
        "body":  "### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Describe the bug\n\nI am using the Blazor 8 BlazorWebAppOidc sample to authenticate and authorize using OpenIdConnect with keycloak. I am seeing an issue where role claims from the userinfo endpoint do not propogate to the client. My setup is as follows:\n\n```csharp\nbuilder.Services.AddAuthentication(MS_OIDC_SCHEME)\n    .AddOpenIdConnect(MS_OIDC_SCHEME, oidcOptions =\u003e\n    {\n        oidcOptions.SignInScheme = CookieAuthenticationDefaults.AuthenticationScheme;\n\n        oidcOptions.Authority = \"https://host.docker.internal/keycloak/realms/Autostore/\";\n\n        oidcOptions.ClientId = \"WMSServiceCalendar\";\n\n        oidcOptions.ResponseType = OpenIdConnectResponseType.Code;\n\n        oidcOptions.MapInboundClaims = false;\n        oidcOptions.TokenValidationParameters = new TokenValidationParameters\n        {\n            NameClaimType = JwtRegisteredClaimNames.Name,\n            RoleClaimType = \"role\"\n        };\n\n        oidcOptions.UsePkce = true;\n        oidcOptions.GetClaimsFromUserInfoEndpoint = true;\n\n        oidcOptions.Events.OnUserInformationReceived = ctx =\u003e\n        {\n            Console.WriteLine();\n            Console.WriteLine(\"Claims from the ID token\");\n            foreach (var claim in ctx.Principal.Claims)\n            {\n                Console.WriteLine($\"{claim.Type} - {claim.Value}\");\n            }\n            Console.WriteLine();\n            Console.WriteLine(\"Claims from the UserInfo endpoint\");\n            foreach (var property in ctx.User.RootElement.EnumerateObject())\n            {\n                Console.WriteLine($\"{property.Name} - {property.Value}\");\n            }\n            return Task.CompletedTask;\n        };\n    })\n    .AddCookie(CookieAuthenticationDefaults.AuthenticationScheme, options =\u003e\n    {\n        options.Events.OnSigningIn = ctx =\u003e\n        {\n            Console.WriteLine();\n            Console.WriteLine(\"Claims received by the Cookie handler\");\n            foreach (var claim in ctx.Principal.Claims)\n            {\n                Console.WriteLine($\"{claim.Type} - {claim.Value}\");\n            }\n            Console.WriteLine();\n\n            return Task.CompletedTask;\n        };\n    });\n```\n\nWith the OnUserInformationReceived logging I can see the claims coming from Keycloak:\n\n```\nClaims from the ID token\nexp - 1730968528\niat - 1730968228\nauth_time - 1730968228\njti - 1801bcab-dfd5-463f-9bf6-7cf84ded884a\niss - https://host.docker.internal/keycloak/realms/Autostore\naud - WMSServiceCalendar\nsub - c5f3046c-b1b7-497d-b12e-a3f29afc5d11\ntyp - ID\nazp - WMSServiceCalendar\nnonce - 638665650239925001.M2YxOGZlNDMtMzkxYi00MDhkLWJmZTEtYzM1Y2QwNjI3NjAxODBkODhmZDAtMjE3OC00ZDYyLWEwZjktZGM0MjI5MzZkNjA1\nsid - 654b19df-4dcf-405b-9d34-27bffd126968\nat_hash - iCCj0tkd2HpoJZRclzph-w\nacr - 1\nemail_verified - true\nname - manager name\npreferred_username - manager\ngiven_name - manager\nfamily_name - name\n\nClaims from the UserInfo endpoint\nsub - c5f3046c-b1b7-497d-b12e-a3f29afc5d11\nresource_access - {\"CommonClient\":{\"roles\":[\"CommonClient:GrafanaViewer\",\"CommonClient:MessagingAdmin\",\"CommonClient:GrafanaEditor\",\"CommonClient:GrafanaAdmin\",\"CommonClient:UserManagement\",\"CommonClient:Users\"]}}\nemail_verified - True\nrole - [\"WMSServiceCalendar:VehicleTypeDelete\",\"WMSServiceCalendar:VehicleDelete\",\"WMSServiceCalendar:VehicleExport\",\"WMSServiceCalendar:VehicleTypeView\",\"WMSServiceCalendar:VehicleView\",\"WMSServiceCalendar:Users\"]\nname - manager name\npreferred_username - manager\ngiven_name - manager\nfamily_name - name\n\nClaims received by the Cookie handler\nauth_time - 1730968228\njti - 1801bcab-dfd5-463f-9bf6-7cf84ded884a\nsub - c5f3046c-b1b7-497d-b12e-a3f29afc5d11\ntyp - ID\nsid - 654b19df-4dcf-405b-9d34-27bffd126968\nemail_verified - true\nname - manager name\npreferred_username - manager\ngiven_name - manager\nfamily_name - name\nrole - WMSServiceCalendar:VehicleTypeDelete\nrole - WMSServiceCalendar:VehicleDelete\nrole - WMSServiceCalendar:VehicleExport\nrole - WMSServiceCalendar:VehicleTypeView\nrole - WMSServiceCalendar:VehicleView\nrole - WMSServiceCalendar:Users\n```\n\nI have amended UserInfo as follows:\n\n```csharp\npublic sealed class UserInfo\n{\n    public required string UserId { get; init; }\n    public required string Name { get; init; }\n    public required string[] Roles { get; init; }\n\n    public const string UserIdClaimType = \"sub\";\n    public const string NameClaimType = \"name\";\n    public const string RoleClaimType = \"role\";\n\n    public static UserInfo FromClaimsPrincipal(ClaimsPrincipal principal) =\u003e\n        new()\n        {\n            UserId = GetRequiredClaim(principal, UserIdClaimType),\n            Name = GetRequiredClaim(principal, NameClaimType),\n            Roles = principal.FindAll(RoleClaimType).Select(c =\u003e c.Value).ToArray(),\n        };\n\n    public ClaimsPrincipal ToClaimsPrincipal() =\u003e\n        new(new ClaimsIdentity(\n            Roles.Select(role =\u003e new Claim(RoleClaimType, role))\n                .Concat([\n                    new Claim(UserIdClaimType, UserId),\n                    new Claim(NameClaimType, Name),\n                ]),\n            authenticationType: nameof(UserInfo),\n            nameType: NameClaimType,\n            roleType: RoleClaimType));\n\n    private static string GetRequiredClaim(ClaimsPrincipal principal, string claimType) =\u003e\n        principal.FindFirst(claimType)?.Value ?? throw new InvalidOperationException($\"Could not find required \u0027{claimType}\u0027 claim.\");\n}\n```\n\nIn my client I then have the following in my page:\n\n`@attribute [Authorize(Roles = \"WMSServiceCalendar:Users\")]`\n\nAs a result of the issue I see the following error:\n\n`info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[2]\n      Authorization failed. These requirements were not met:\n      RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (WMSServiceCalendar:Users)`\n\nNote: If I add the claims to the id token in keycloak then all works but that feels like it defeats the point of using GetClaimsFromUserInfoEndpoint?\n\n### Expected Behavior\n\nUsing GetClaimsFromUserInfoEndpoint = true should flow the claims from server to client side and allow the roles to be used during authorization\n\n### Steps To Reproduce\n\nI am using the above setup with no further modifications to the sample application.\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n8.0.403\n\n### Anything else?\n\nID Token:\n```\n{\n  \"exp\": 1730967440,\n  \"iat\": 1730967140,\n  \"jti\": \"aab08d01-1d37-4d87-9c73-7f9f95aa103c\",\n  \"iss\": \"https://host.docker.internal/keycloak/realms/Autostore\",\n  \"aud\": \"WMSServiceCalendar\",\n  \"sub\": \"c5f3046c-b1b7-497d-b12e-a3f29afc5d11\",\n  \"typ\": \"ID\",\n  \"azp\": \"WMSServiceCalendar\",\n  \"sid\": \"0bf27112-0271-4ce1-9d97-9e1d18cc9214\",\n  \"acr\": \"1\",\n  \"email_verified\": true,\n  \"name\": \"manager name\",\n  \"preferred_username\": \"manager\",\n  \"given_name\": \"manager\",\n  \"family_name\": \"name\"\n}\n```\n\nUser Info:\n```\n{\n  \"sub\": \"c5f3046c-b1b7-497d-b12e-a3f29afc5d11\",\n  \"email_verified\": true,\n  \"role\": [\n    \"WMSServiceCalendar:VehicleTypeDelete\",\n    \"WMSServiceCalendar:VehicleDelete\",\n    \"WMSServiceCalendar:VehicleExport\",\n    \"WMSServiceCalendar:VehicleTypeView\",\n    \"WMSServiceCalendar:VehicleView\",\n    \"WMSServiceCalendar:Users\"\n  ],\n  \"name\": \"manager name\",\n  \"preferred_username\": \"manager\",\n  \"given_name\": \"manager\",\n  \"family_name\": \"name\"\n}\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOn4tvww==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde86TBFEc",
                                           "createdAt":  "2024-11-10T01:11:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEHXNrQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "WeihanLi",
                                                                               "createdAt":  "2025-02-24T12:40:38Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "halter73",
                                           "body":  "Does it work if you map the \"role\" json key to the \"role\" claim type using [MapJsonKey](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authentication.claimactioncollectionmapextensions.mapjsonkey?view=aspnetcore-8.0)?\n\n```csharp\nbuilder.Services.AddAuthentication(MS_OIDC_SCHEME)\n    .AddOpenIdConnect(MS_OIDC_SCHEME, oidcOptions =\u003e\n    {\n        // ...\n        oidcOptions.GetClaimsFromUserInfoEndpoint = true;\n        oidcOptions.ClaimActions.MapJsonKey(\"role\", \"role\");\n        // ...\n```\n\n\u003e Another way to get the user claims is to use the OpenID Connect User Info API. The ASP.NET Core client app uses the `GetClaimsFromUserInfoEndpoint` property to configure this. One important difference from the first settings, is that you must specify the claims you require using the `MapUniqueJsonKey` method, otherwise only the `name`, `given_name` and `email` standard claims will be available in the client app. The claims included in the `id_token` are mapped per default. This is the major difference to the first option. You must explicitly define some of the claims you require.\n\nhttps://learn.microsoft.com/aspnet/core/security/authentication/claims?view=aspnetcore-8.0#mapping-claims-using-openid-connect-authentication\n\nThe difference from the docs is that a \"role\" is not unique, so we want to use `MapJsonKey` rather than `MapUniqueJsonKey`.",
                                           "updatedAt":  "2024-11-10T01:16:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86TEr7_",
                                           "createdAt":  "2024-11-11T08:05:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BenJags",
                                           "body":  "No, I have added the MapJsonKey call and the role claims show in my logging but they are still not available on the claimsprincipal client side or at the minimal api server side to able to use them for authorization. The only claims that are in the principal identity are the ones from the ID token.",
                                           "updatedAt":  "2024-11-11T08:05:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86TL8ea",
                                           "createdAt":  "2024-11-12T01:07:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "halter73",
                                           "body":  "It\u0027s really surprising to me that the claims you see in a minimal API are different than what you\u0027re logging in `CookieAuthenticationOptions.Events.OnSigningIn`. That event is called almost immediately before setting the cookie. Maybe you could check again in `OnSignedIn` to verify nothing else is messing with the `ClaimsPrincipal`.\n\nWhat do you see if you add the following minimal API endpoint?\n\n```csharp\napp.MapGet(\"/claims\", (ClaimsPrincipal user) =\u003e user.Claims.Select(c =\u003e new { c.Type, c.Value }));\n```\n\nSince the minimal API is relying purely on the cookie authentication handler and not the Blazor `AuthenticationStateProvider`, it should match exactly what you see in the `OnSigningIn` and `OnSignedIn` callbacks. If it\u0027s not exactly the same, what\u0027s different? Just the roles? Is `ClaimsIdentity.RoleClaimType` \"role\" as expected in both the callbacks and the minimal endpoint?\n\nThe `ClaimsIdentity` should be [created](https://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/blob/40ab6a944118b215e8c5780334df8bb103feb48e/src/Microsoft.IdentityModel.Tokens/TokenValidationParameters.cs#L245) with the `RoleClaimType` you specify in `ValidationParameters` and the default cookie serializer should [serialize](https://github.com/dotnet/aspnetcore/blob/036ec9ec2ffbfe927f9eb7622dfff122c634ccbb/src/Security/Authentication/Core/src/TicketSerializer.cs#L86-L87) and deserialize it.\n\nIf you cannot figure out what\u0027s going on based on inspecting the `ClaimsPrincipal` in the events and a minimal API, we will need a repro project hosted on GitHub to take a look at. I know that you\u0027re trying to make only minor changes to the BlazorWebAppOidc sample, but I\u0027m not seeing the issue you are when I try it myself, and I cannot easily guess what the differences may be. Don\u0027t worry about the OIDC server bits. I can fake a userinfo response to match what you\u0027re seeing.",
                                           "updatedAt":  "2024-11-12T01:07:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86TOD9v",
                                           "createdAt":  "2024-11-12T08:52:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BenJags",
                                           "body":  "I\u0027ve added the `/claims` endpoint which outputs the following:\n\n```\n[\n  {\n    \"type\": \"exp\",\n    \"value\": \"1731400359\"\n  },\n  {\n    \"type\": \"iat\",\n    \"value\": \"1731400059\"\n  },\n  {\n    \"type\": \"auth_time\",\n    \"value\": \"1731400051\"\n  },\n  {\n    \"type\": \"jti\",\n    \"value\": \"6a14407a-a1b1-416b-b9d7-cc4d784d7305\"\n  },\n  {\n    \"type\": \"iss\",\n    \"value\": \"https://host.docker.internal/keycloak/realms/Autostore\"\n  },\n  {\n    \"type\": \"aud\",\n    \"value\": \"WMSServiceCalendar\"\n  },\n  {\n    \"type\": \"sub\",\n    \"value\": \"c5f3046c-b1b7-497d-b12e-a3f29afc5d11\"\n  },\n  {\n    \"type\": \"typ\",\n    \"value\": \"ID\"\n  },\n  {\n    \"type\": \"azp\",\n    \"value\": \"WMSServiceCalendar\"\n  },\n  {\n    \"type\": \"sid\",\n    \"value\": \"bbc98c8b-a536-4255-a3d2-595750e90d8e\"\n  },\n  {\n    \"type\": \"at_hash\",\n    \"value\": \"5rH5HNNhgTmaE_Sg2pdaQw\"\n  },\n  {\n    \"type\": \"acr\",\n    \"value\": \"1\"\n  },\n  {\n    \"type\": \"email_verified\",\n    \"value\": \"true\"\n  },\n  {\n    \"type\": \"name\",\n    \"value\": \"manager name\"\n  },\n  {\n    \"type\": \"preferred_username\",\n    \"value\": \"manager\"\n  },\n  {\n    \"type\": \"given_name\",\n    \"value\": \"manager\"\n  },\n  {\n    \"type\": \"family_name\",\n    \"value\": \"name\"\n  }\n]\n```\n\nThe output of my logging in the `OnSigningIn` callback is:\n\n```\nClaims received by the Cookie handler\nauth_time - 1731400580\njti - ef2430e9-bd4a-401f-a88f-8794f59d306e\nsub - c5f3046c-b1b7-497d-b12e-a3f29afc5d11\ntyp - ID\nsid - 3ad70098-979f-4c42-8958-b66cf2592fd2\nemail_verified - true\nname - manager name\npreferred_username - manager\ngiven_name - manager\nfamily_name - name\nrole - WMSServiceCalendar:VehicleTypeDelete\nrole - WMSServiceCalendar:VehicleDelete\nrole - WMSServiceCalendar:VehicleExport\nrole - WMSServiceCalendar:VehicleTypeView\nrole - WMSServiceCalendar:VehicleView\nrole - WMSServiceCalendar:Users\n```\n\nAnd adding logging to the `/weather-forecast` endpoint results in:\n\n```\nClaims received by the weather minimal api\nexp - 1731400887\niat - 1731400587\nauth_time - 1731400580\njti - 91fea84a-7258-41e4-ad21-a3b15bb74c38\niss - https://host.docker.internal/keycloak/realms/Autostore\naud - WMSServiceCalendar\nsub - c5f3046c-b1b7-497d-b12e-a3f29afc5d11\ntyp - ID\nazp - WMSServiceCalendar\nsid - 3ad70098-979f-4c42-8958-b66cf2592fd2\nat_hash - ZMCKk1NT_u0h_QH_hSNkzQ\nacr - 1\nemail_verified - true\nname - manager name\npreferred_username - manager\ngiven_name - manager\nfamily_name - name\n```\n\nSo, I am only missing the role claims. The `ClaimsIdentity.RoleClaimType` is set to `role` in both the callback and the minimal api identities.\n\nI am at a loss the same as you. So I have uploaded the repo to the following location:\n\nhttps://github.com/BenJags/BlazorWebAppOidc\n\nLet me know if you need more details about the keycloak responses to be able to fake them.",
                                           "updatedAt":  "2024-11-12T08:52:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86UlCpe",
                                           "createdAt":  "2024-11-22T02:18:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEcecaw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "menees",
                                                                               "createdAt":  "2025-04-18T13:27:55Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "3breadt",
                                                                               "createdAt":  "2025-07-30T11:31:44Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "halter73",
                                           "body":  "Thanks for the repro. I tried it out myself with Keycloak, and I discovered that the issue is that the `CookieOidcRefresher` (which is [part of the BlazorWebAppOidc sample](https://github.com/dotnet/blazor-samples/blob/ba593024d1bcdf1bb775fef081def5153efb74f0/8.0/BlazorWebAppOidc/BlazorWebAppOidc/CookieOidcRefresher.cs)) refreshes the cookie using claims from just the ID token and not the `/userinfo` endpoint.\n\nThis \"refresher\" is only supposed to have an effect as the access token nears expiration, so that the cookie always contains an unexpired access token, but it winds up reissuing a cookie just about every request is because Keycloak\u0027s default access token timeout is 5 minutes, and the `CookieOidcRefresher` tries to refresh the cookie whenever the access token is within 5 minutes of expiration.\n\nIf you don\u0027t need the access token (see [here](https://github.com/dotnet/blazor-samples/blob/ba593024d1bcdf1bb775fef081def5153efb74f0/9.0/BlazorWebAppOidcBff/BlazorWebAppOidc/Program.cs#L199-L200) for how it can be used to make requests to another server using `AddJwtBearer` as explained in the [BFF variant of the Blazor Web OIDC documentation](https://learn.microsoft.com/en-us/aspnet/core/blazor/security/blazor-web-app-with-oidc?view=aspnetcore-9.0\u0026pivots=with-bff-pattern#sample-app-code-1)), you can remove the call to `ConfigureCookieOidcRefresh` from `Program.cs`, and delete the `CookieOidcRefresher.cs` and `CookieOidcServiceCollectionExtensions.cs` files from your project.\n\nOtherwise, if you decide to keep the cookie/token refreshing logic, I think the first step is to reduce [this 5 minute interval in `CookieOidcRefresher`](https://github.com/dotnet/blazor-samples/blob/ba593024d1bcdf1bb775fef081def5153efb74f0/8.0/BlazorWebAppOidc/BlazorWebAppOidc/CookieOidcRefresher.cs#L34), to something smaller like 1 minute. As long as it doesn\u0027t take longer than that to process a request and there isn\u0027t too much clock drift, it should still be fine to use the access token with a smaller interval. Another option is to adjust Keycloak\u0027s \"Access Token Lifespan” configuration under the \"Realm settings\" to something larger like 15 minutes. Or you could adjust both.\n\n![Keycloak\u0027s \"Access Token Lifespan” configuration](https://github.com/user-attachments/assets/f5c128b2-73f3-44c1-a4b0-5c81f6410a26)\n\nOf course, even after we fix the refreshing logic to not run every request, we\u0027d still want to get claims from the `/userinfo` endpoint while refreshing the cookie. You can do so by applying the following patch to your `CookieOidcRefresher.cs` file. I mostly copied the logic from [`OpenIdConnectHandler.GetUserInformationAsync`](https://github.com/dotnet/aspnetcore/blob/8d0f798cc4de54a2851748be635a58eadbf79593/src/Security/Authentication/OpenIdConnect/src/OpenIdConnectHandler.cs#L1040-L1107), but left out bits like calling the `OnUserInformationReceived` event. Feel free to add that back if it\u0027s important.\n\n```diff\ndiff --git a/BlazorWebAppOidc/CookieOidcRefresher.cs b/BlazorWebAppOidc/CookieOidcRefresher.cs\nindex c832924..af33cd7 100644\n--- a/BlazorWebAppOidc/CookieOidcRefresher.cs\n+++ b/BlazorWebAppOidc/CookieOidcRefresher.cs\n@@ -1,6 +1,8 @@\n using System.Globalization;\n using System.IdentityModel.Tokens.Jwt;\n+using System.Net.Http.Headers;\n using System.Security.Claims;\n+using System.Text.Json;\n using Microsoft.AspNetCore.Authentication;\n using Microsoft.AspNetCore.Authentication.Cookies;\n using Microsoft.AspNetCore.Authentication.OpenIdConnect;\n@@ -86,6 +88,12 @@ internal sealed class CookieOidcRefresher(IOptionsMonitor\u003cOpenIdConnectOptions\u003e\n             ValidatedIdToken = validatedIdToken,\n         });\n \n+        if (oidcOptions.GetClaimsFromUserInfoEndpoint \u0026\u0026 !string.IsNullOrEmpty(oidcConfiguration.UserInfoEndpoint))\n+        {\n+            await AddClaimsFromUserInfoEndpointAsync(oidcConfiguration.UserInfoEndpoint, message.AccessToken, oidcScheme,\n+                validatedIdToken, validationResult.ClaimsIdentity, oidcOptions, validateContext.HttpContext.RequestAborted);\n+        }\n+\n         validateContext.ShouldRenew = true;\n         validateContext.ReplacePrincipal(new ClaimsPrincipal(validationResult.ClaimsIdentity));\n \n@@ -99,4 +107,43 @@ internal sealed class CookieOidcRefresher(IOptionsMonitor\u003cOpenIdConnectOptions\u003e\n             new() { Name = \"expires_at\", Value = expiresAt.ToString(\"o\", CultureInfo.InvariantCulture) },\n         ]);\n     }\n+\n+    private static async Task AddClaimsFromUserInfoEndpointAsync(string userInfoEndpoint, string accessToken, string oidcScheme,\n+        JwtSecurityToken validatedIdToken, ClaimsIdentity identity, OpenIdConnectOptions options, CancellationToken cancellationToken)\n+    {\n+        var requestMessage = new HttpRequestMessage(HttpMethod.Get, userInfoEndpoint);\n+        requestMessage.Headers.Authorization = new AuthenticationHeaderValue(\"Bearer\", accessToken);\n+        requestMessage.Version = options.Backchannel.DefaultRequestVersion;\n+        var responseMessage = await options.Backchannel.SendAsync(requestMessage, cancellationToken);\n+        responseMessage.EnsureSuccessStatusCode();\n+        var userInfoResponse = await responseMessage.Content.ReadAsStringAsync(cancellationToken);\n+\n+        string userInfoJson;\n+        var contentType = responseMessage.Content.Headers.ContentType;\n+        if (contentType?.MediaType?.Equals(\"application/json\", StringComparison.OrdinalIgnoreCase) ?? false)\n+        {\n+            userInfoJson = userInfoResponse;\n+        }\n+        else if (contentType?.MediaType?.Equals(\"application/jwt\", StringComparison.OrdinalIgnoreCase) ?? false)\n+        {\n+            var userInfoEndpointJwt = new JwtSecurityToken(userInfoResponse);\n+            userInfoJson = userInfoEndpointJwt.Payload.SerializeToJson();\n+        }\n+        else\n+        {\n+            return;\n+        }\n+\n+        using var user = JsonDocument.Parse(userInfoJson);\n+        options.ProtocolValidator.ValidateUserInfoResponse(new OpenIdConnectProtocolValidationContext()\n+        {\n+            UserInfoEndpointResponse = userInfoResponse,\n+            ValidatedIdToken = validatedIdToken,\n+        });\n+\n+        foreach (var action in options.ClaimActions)\n+        {\n+            action.Run(user.RootElement, identity, options.ClaimsIssuer ?? oidcScheme);\n+        }\n+    }\n }\n```",
                                           "updatedAt":  "2024-11-22T02:25:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86fi2_D",
                                           "createdAt":  "2025-02-23T08:55:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "WeihanLi",
                                           "body":  "I seemed have same issue when I configured the aspire dashboard with OIDC, I could not get the role claims at aspire-dashboard side\n\n\n```\noidcOptions.GetClaimsFromUserInfoEndpoint = true;\noidcOptions.ClaimActions.MapJsonKey(\"role\", \"role\");\n```\n\nThis helped for me",
                                           "updatedAt":  "2025-02-23T09:09:48Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "BlazorWebAppOidc AddOpenIdConnect with GetClaimsFromUserInfoEndpoint = true doesn\u0027t propogate role claims to client",
        "labels":  [
                       "Docs",
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/59290",
        "createdAt":  "2024-12-03T18:17:13Z",
        "number":  59290,
        "author":  "mkArtakMSFT",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODDQjwg==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "mikeholczer",
                                            "createdAt":  "2025-01-21T23:48:37Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "andoband",
                                            "createdAt":  "2025-01-23T19:12:40Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "justinasmussen",
                                            "createdAt":  "2025-02-27T06:49:36Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Frulfump",
                                            "createdAt":  "2025-02-27T10:02:17Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "AslanAmca",
                                            "createdAt":  "2025-02-28T22:19:37Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "nyamuda",
                                            "createdAt":  "2025-03-11T17:40:09Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "boukenka",
                                            "createdAt":  "2025-06-04T10:58:58Z"
                                        }
                                    ],
                          "totalCount":  7
                      },
        "updatedAt":  "2025-08-25T17:31:36Z",
        "body":  "We plan to spend some time as a team to drive improvements in this area during .NET 10 timeframe.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOnp7zRw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde86bVA7P",
                                           "createdAt":  "2025-01-21T23:53:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mikeholczer",
                                           "body":  "This would be great! I was recently trying to get authentication and authorization setup and working in a Blazor standalone webassembly app. I was founding various docs that were inconsistent with each other. I\u0027ll see if I can find the various doc links I found and post them here, but please include cleaning up existing docs in the effort, not just adding new docs on top of what\u0027s there. ",
                                           "updatedAt":  "2025-01-21T23:53:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86bXkpS",
                                           "createdAt":  "2025-01-22T09:00:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ahelland",
                                           "body":  "If you are a .NET developer looking for docs on identity and auth you invariably end up in different places:\n- The .NET documentation\n- The Entra ID documentation\n- Specific library documentation (like Identity.Web and MSAL)\n\nSome pieces clearly belong in one place or the other, but then there\u0027s some overlap. For instance Entra needs to offer code samples in multiple languages meaning that they offer .NET samples in parallell with what the .NET docs have in the same area. Concepts that are strongly tied to Entra features might be explained better than what can be expected by a .NET generalist, but you can also run across samples still using `startup.cs `which is confusing for a dev who\u0027ve only been around for `program.cs`. The .NET docs in turn might approach the syntactical part differently.\n\n(And you can also come across things like samples for identity related functionality leveraging Azure Functions where the in-proc model is used instead of isolated worker. But I guess that might be slightly out of scope in this discussion.)\n\nThis confusion extends further when you dive into the complete samples which are usually hosted in GitHub - should I look under `github.com/azure/xyz `or `github.com/dotnet/xyz`?\n\nI guess this in part echoes what @mikeholczer said.\n\n**Best Practices**\nSample code illustrating specific things should be clearly marked with \"this is not production grade\" when that is the case. (When I create samples I also skip non-essential things so it\u0027s not a concern in itself that some code is dev grade.) But what if I want to have production grade? If I want .NET code that uses a clientId and a clientSecret I can find a sample in no time. What if I want to use a certificate instead? Those samples are much harder to find.\n\nOr let\u0027s say I\u0027m real nerdy about identity and come across something like the RFC draft \"OAuth 2.0 for Browser-Based Applications\". How do I translate that into .NET code? There is an official .NET 9 BFF sample (which is good by the way) - can I assume the finer details was also considered in making that or is that something I am expected to figure out on my own? (I understand that most of the development will always be the dev\u0027s responsibility and MSFT cannot provide exact samples for every conceivable use case, but where secure defaults can be supplied they should.)\n\n**\"Missing pieces\"**\nHave you tried typing builder.Services.AddAuthentication(). and see the number of options IntelliSense provides? Should I use builder.Services.AddAuthentication().AddMicrosoftIdentityWebApp, or builder.Services.AddAuthentication().AddOpenIdConnect - what\u0027s the difference? And how does this relate to .AddCookie, .AddBearerToken and .AddJwtBearer? It\u0027s a rabbit hole of testing, debugging, searching the web for info and pulling your hair :)\n\n**\"The bigger picture\"**\nWhen living in dotnet-land (great place, btw) you can do fancy things like passing the auth state from Blazor server to Blazor WASM and everyone\u0027s happy. But at some point in time some frontend dev will say they want to do React and Next.js and the story falls apart. Also something that quickly extends past what the .NET team can solve, but how do I make the .NET backend bits right here? Should I just expose API endpoints, validate incoming JWTs and be happy? Or can I easily implement the B in BFF in .NET and have a \"plug-in here\" integration point to mediate tokens/sessions/what-have-you?\n\nI can see how this comes across more ranty than concrete implementation tips, but currently I\u0027m just trying to get the discussion going :)",
                                           "updatedAt":  "2025-01-22T09:00:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86bXpgZ",
                                           "createdAt":  "2025-01-22T09:09:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "There\u0027s lots of work to do here and the space is complex, but from my POV we need to \"teach people how to fish\". That is, teach you general auth concepts and relate them to various ASP.NET APIs. Once that part is done then you have a solid foundation in understanding how to begin to ask the right set of questions that will help you validate choices for your auth architecture. This is no different from any other part of your application and we can provide the building blocks for your understanding and some samples, but it is your job to design the auth system (putting all of the building blocks together) to accomplish your scenarios.\n\nThat said, we will definitely provide samples for the *MOST* popular patterns, explicitly calling out which ones \"need more work\" to be production ready and what that would entail.\n\nPS: I want to acknowledge that the auth system is complex, even when you understand the general auth concepts, but we don\u0027t do a great job today mapping those 2 things together.",
                                           "updatedAt":  "2025-01-22T09:09:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86bYGAG",
                                           "createdAt":  "2025-01-22T09:58:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ahelland",
                                           "body":  "Auth is hard and it\u0027s definitely not an area where I would give a junior dev access to the \"push directly to prod\" button. It\u0027s a full-time job keeping track of it all. Which applies to other areas of .NET as well. Who hasn\u0027t been burned by a migration gone wrong when getting started with Entity Framework? ;)\n\nThe job of understanding when to acquire a token and when to validate said token is best left to the developer/architect, and it\u0027s not necessarily the  .NET team that should be explaining all the intricacies of different OAuth flows either. I do think however that Microsoft are better suited to provide correct implementations of the flows than a non-specialist dev. (If this is best handled by the .NET team or Entra teams internally isn\u0027t top of mind for most people on the outside.) Even good tools might require a user manual though.\n\nI agree the approach should be teaching people to fish - the hard part is figuring out what is needed in addition to giving them driving directions to the nearest lake :) (And to be clear; there is also a distinction between what is suited for official docs and what works better as informal blog posts by the team and various community members.)",
                                           "updatedAt":  "2025-01-22T09:58:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86bYIz8",
                                           "createdAt":  "2025-01-22T10:03:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "\u003e The job of understanding when to acquire a token and when to validate said token is best left to the developer/architect, and it\u0027s not necessarily the .NET team that should be explaining all the intricacies of different OAuth flows either. I do think however that Microsoft are better suited to provide correct implementations of the flows than a non-specialist dev. (If this is best handled by the .NET team or Entra teams internally isn\u0027t top of mind for most people on the outside.) Even good tools might require a user manual though.\n\nI\u0027ll be frank and I don\u0027t think the .NET team is going to solve this problem. People build entire careers and companies around this specific domain. \n\nThere is no free lunch here. We\u0027re not going to turn you into an auth expert, if you want that guarantee then pay for a hosted service, otherwise, there will be lots of gap filling to do.",
                                           "updatedAt":  "2025-01-22T10:03:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86bYRwW",
                                           "createdAt":  "2025-01-22T10:18:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ahelland",
                                           "body":  "No, no, to be clear - I don\u0027t expect the .NET team to turn me (or anyone else) into an identity expert or a database ninja or an SME in other coding related fields for that matter. That requires effort and time from the individual.\n\nWhat I\u0027m trying to highlight is that even if you know both C# and OAuth it can be daunting to go from `builder.Services.AddAuthentication().` to a working web app if you\u0027re not able to find the docs and samples to nudge you along the way. (I\u0027m not hung up on that particular line of code - that\u0027s just to exemplify.)\n",
                                           "updatedAt":  "2025-01-22T10:18:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86dVYcl",
                                           "createdAt":  "2025-02-06T11:59:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "guardrex",
                                           "body":  "@mikeholczer ... Instead of discussing your findings here, can you open the issue for me on the docs repo? Use the **Open a documentation issue** link/feedback form at the bottom of the article ...\n\nhttps://learn.microsoft.com/aspnet/core/blazor/security/webassembly/",
                                           "updatedAt":  "2025-02-06T11:59:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86envNH",
                                           "createdAt":  "2025-02-16T03:23:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEGf-RQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "guardrex",
                                                                               "createdAt":  "2025-02-16T13:06:02Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "mikeholczer",
                                           "body":  "\u003e [@mikeholczer](https://github.com/mikeholczer) ... Instead of discussing your findings here, can you open the issue for me on the docs repo? Use the **Open a documentation issue** link/feedback form at the bottom of the article ...\n\u003e \n\u003e https://learn.microsoft.com/aspnet/core/blazor/security/webassembly/\n\nI created https://github.com/dotnet/AspNetCore.Docs/issues/34743",
                                           "updatedAt":  "2025-02-16T03:23:20Z"
                                       }
                                   ],
                         "totalCount":  8
                     },
        "title":  "ASP.NET Core Identity and Auth documentation improvements",
        "labels":  [
                       "Docs",
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/59462",
        "createdAt":  "2024-12-12T19:46:26Z",
        "number":  59462,
        "author":  "bigred8982",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-04T15:40:05Z",
        "body":  "### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Describe the bug\n\n`OpenIdConnectHandler.cs`\n\nWhen a validation failure occurs during a PAR request (ex. the request includes an invalid client_id), an `OpenIdConnectProtocolException` is thrown.  This exception bubbles up as an unhandled middleware exception.\n\nThis happens during `HandleChallengeAsync()`, but that method does not catch this (or any other) exception and call the `OnAuthenticationFailed()` event.\n\n\n\n\n\n\n### Expected Behavior\n\nI would expect this type of error to trigger the `OnAuthenticationFailed()` event so that it can be specifically handled.\n\nBefore PAR, the user is redirected to the IDP for login. That redirect request carried with it the client app\u0027s configuration (client_id, redirect_uri, etc). If that information was not valid, the IDP itself would handle presentation of the error to the end user.\n\nWith PAR, we are moving the validation response handling to the client application.\n\n### Steps To Reproduce\n\n_No response_\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n9.0.101\n\n### Anything else?\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOwdEvtw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde86XY32v",
                                           "createdAt":  "2024-12-12T19:49:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bigred8982",
                                           "body":  "Would love an opinion from @josephdecock if this is desired behavior.",
                                           "updatedAt":  "2024-12-12T19:49:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86XZHVh",
                                           "createdAt":  "2024-12-12T20:21:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "halter73",
                                           "body":  "I\u0027m also interested in @josephdecock\u0027s opinion here. My gut is that it should be handled similarly to what we\u0027d do if we got an invalid response from the token or userinfo endpoints. And since `HandleRemoteAuthenticateAsync` calls into those endpoints in a big try/catch block that turns all exceptions into `AuthenticationFailed` events, I think we should probably do something similar for PAR requests.\n\nThat said, looking a bit deeper at the `AuthenticationFailed` event, I see that the `AuthenticationFailedContext` is a `HandleRequestContext` which doesn\u0027t make much sense for error that happen even before redirecting to the identity provider. At that point the `OpenIdConnectHandler` hasn\u0027t handled any requests to \"handle\" or \"skip\" or whatever.\n\nWe could create a new event, but is that worth it if the only time that event would likely fire is when there\u0027s a misconfiguration or the provider is down? Is an event that much easier to deal with than throwing directly out of `ChallengeAsync()`? And even if we did have an event, wouldn\u0027t it be better to continue to throw out of `ChallengeAsync()` if we can to ensure the error isn\u0027t missed?",
                                           "updatedAt":  "2024-12-12T20:24:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86XZNX0",
                                           "createdAt":  "2024-12-12T20:36:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEHOa0w==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "halter73",
                                                                               "createdAt":  "2025-02-21T20:25:56Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "bigred8982",
                                           "body":  "For what it\u0027s worth, when using PAR, you are now communicating with the IDP prior to redirecting. You\u0027re basically initiating protocol behavior with the IDP at that point, not just gearing up to redirect. It _feels_ like `AuthenticationFailed` events are appropriate here, even from `ChallengeAsync()`.\n",
                                           "updatedAt":  "2024-12-12T20:36:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86yLGx9",
                                           "createdAt":  "2025-06-19T22:17:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bigred8982",
                                           "body":  "@halter73 What can I do to get traction on this issue and the PR I submitted to fix it? If there are additional processes or actions I need to take here or in my PR, please let me know.",
                                           "updatedAt":  "2025-06-19T23:21:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde87B0S-3",
                                           "createdAt":  "2025-09-04T03:45:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "josephdecock",
                                           "body":  "I commented in the linked PR, but I\u0027ll repeat myself here in case people are tracking this convo but not the PR:\n\nI\u0027m terribly sorry for a late reply to this issue. I think it\u0027s a good idea, and ultimately the way it is implemented in the linked PR seems good to me.\n\nIn particular, a separate event seems good because the context in which the AuthenticationFailed event is raised is so different than a pushed authorization failure.\n\nThe other nice thing is that the existing behavior of an exception bubbling up will keep happening unless someone opts in to handling the event.\n\nI think it looks like a really good improvement and I hope it can land in .NET 10.",
                                           "updatedAt":  "2025-09-04T15:40:05Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "OIDC - Validation failure during PAR does not trigger OnAuthenticationFailed() event",
        "labels":  [
                       "area-auth",
                       "feature-oidc"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/59680",
        "createdAt":  "2025-01-01T18:15:02Z",
        "number":  59680,
        "author":  "ahmeteid7",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC-RGzw==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "lartusi",
                                            "createdAt":  "2025-01-03T10:47:38Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Capella87",
                                            "createdAt":  "2025-01-19T08:52:31Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2025-01-06T17:42:19Z",
        "body":  "### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nCurrently, developers need to manually generate JWT tokens by creating a custom method that includes the necessary claims and signing credentials. This process can be repetitive and prone to errors if not done correctly.\n\n### Describe the solution you\u0027d like\n\nIntroduce a `GenerateJwtTokenAsync` method in the `SignInManager` class that automatically generates a JWT token with the necessary claims and signing credentials. The method should take parameters similar to `SignInManager.SignInAsync`, such as the user object and additional claims.\n\n**Example Code:**\n\n```csharp\npublic class JwtService\n{\n    private readonly UserManager\u003cApplicationUser\u003e _userManager;\n    private readonly IConfiguration _configuration;\n\n    public JwtService(UserManager\u003cApplicationUser\u003e userManager, IConfiguration configuration)\n    {\n        _userManager = userManager;\n        _configuration = configuration;\n    }\n\n    public async Task\u003cstring\u003e GenerateJwtTokenAsync(ApplicationUser user, IList\u003cClaim\u003e additionalClaims = null)\n    {\n        var userClaims = await _userManager.GetClaimsAsync(user);\n        var claims = new List\u003cClaim\u003e\n        {\n            new Claim(JwtRegisteredClaimNames.Sub, user.UserName),\n            new Claim(JwtRegisteredClaimNames.Jti, Guid.NewGuid().ToString()),\n            new Claim(ClaimTypes.NameIdentifier, user.Id)\n        };\n        claims.AddRange(userClaims);\n        if (additionalClaims != null)\n        {\n            claims.AddRange(additionalClaims);\n        }\n\n        var key = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(_configuration[\"Jwt:Key\"]));\n        var creds = new SigningCredentials(key, SecurityAlgorithms.HmacSha256);\n\n        var token = new JwtSecurityToken(\n            issuer: _configuration[\"Jwt:Issuer\"],\n            audience: _configuration[\"Jwt:Audience\"],\n            claims: claims,\n            expires: DateTime.Now.AddMinutes(30),\n            signingCredentials: creds);\n\n        return new JwtSecurityTokenHandler().WriteToken(token);\n    }\n}\n```\n\n### Additional context\n\n*Benefits:**\n\n- Simplifies the process of generating JWT tokens by providing a built-in method.\n- Ensures consistency and security in JWT token generation across applications.\n- Reduces the likelihood of misconfiguration and potential security vulnerabilities.\n- Provides a similar level of convenience as the `SignInManager.SignInAsync` method for cookie-based authentication.\n\n**Additional Context:**\n\nThis feature request is inspired by the convenience and security provided by the `SignInManager.SignInAsync` method for cookie-based authentication. Having a similar method for JWT authentication would provide a consistent and secure experience for developers.\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOmRFZ0w==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde86ZDcHw",
                                           "createdAt":  "2025-01-02T13:57:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "See https://learn.microsoft.com/en-us/aspnet/core/security/authentication/identity-api-authorization?view=aspnetcore-9.0#use-token-based-authentication",
                                           "updatedAt":  "2025-01-02T13:57:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86ZEVnT",
                                           "createdAt":  "2025-01-02T16:35:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ahmeteid7",
                                           "body":  "\u003e See https://learn.microsoft.com/en-us/aspnet/core/security/authentication/identity-api-authorization?view=aspnetcore-9.0#use-token-based-authentication\n\ni read it,ok let\u0027s focous only on createing prepared generatjwttoken , instead of let users make it full manually, i think it\u0027s better to provide it prepared and provide options for it as params or optiotion to enable user to control it without error",
                                           "updatedAt":  "2025-01-02T16:35:29Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "suggested feature:Prepared `GenerateJwtToken` Method",
        "labels":  [
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/60094",
        "createdAt":  "2025-01-29T17:18:44Z",
        "number":  60094,
        "author":  "danroth27",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODLeHAA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "milkyjoe90",
                                            "createdAt":  "2025-01-30T18:18:07Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "boukenka",
                                            "createdAt":  "2025-01-30T19:23:26Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "bachratyg",
                                            "createdAt":  "2025-02-03T12:15:00Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "codymullins",
                                            "createdAt":  "2025-02-12T21:22:01Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "joewashear007",
                                            "createdAt":  "2025-02-13T03:29:23Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "wiktor-golonka",
                                            "createdAt":  "2025-04-06T23:33:09Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Vlaaaaaaad",
                                            "createdAt":  "2025-08-16T18:06:29Z"
                                        }
                                    ],
                          "totalCount":  7
                      },
        "updatedAt":  "2025-07-01T21:10:11Z",
        "body":  "The [oidc-client-js library](https://github.com/IdentityModel/oidc-client-js) library was archived, but we continue to ship it. This means we are currently responsible for supporting the library ourselves. We need to decide if we want to replace the library with a different implementation.\n\nSome options:\n\n- Switch to https://github.com/authts/oidc-client-ts\n- Switch to a .NET implementation like https://www.nuget.org/packages/OpenIddict.Client\n    - We are limited by lack of .NET crypto support when running in browsers\n- Keep shipping oidc-client.js and continue to support it\n\nRelated discussion: https://github.com/dotnet/aspnetcore/issues/40764#issue-1172904259\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOpeIFgQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde86lzodD",
                                           "createdAt":  "2025-04-07T00:46:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEehevg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Vlaaaaaaad",
                                                                               "createdAt":  "2025-08-16T18:07:10Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "wiktor-golonka",
                                           "body":  "@danroth27: In my opinion, switching to a .NET implementation would be best.\n\n1. As part of Microsoft\u0027s security push this year, choosing a tested solution (assuming OpenIddict.Client) is the obvious choice.\n2. Authentication doesn\u0027t need to be scary or difficult, but relying heavily on JS/TS‑based libraries behind the scenes adds unnecessary complexity.\n3. Since the core logic resides in AuthenticationService.js and oidc‑client, we are forced into using obscure workarounds in both C# and JS if we want to implement scenarios beyond the basic ones.\n4. It would be great to handle all advanced cases entirely in C#, which fits nicely with Blazor\u0027s spirit of C# development in the browser.\n\nIn the perfect scenario, we could use the WASM-ready OpenIddict.Client from @kevinchalet, since the non‑WASM‑ready client has already proven itself in battle, is trusted, and is very flexible. Speaking for myself, OpenIddict.Client would be my first choice because of the trust built behind the project. At the same time, I\u0027m not sure how the limitations of the Cryptography library in browsers affect OpenIddict.Client at the moment.\n\nAdditionally, looking at the big picture, using a .NET solution from the community would strengthen the ecosystem and hopefully encourage more such great projects in .NET.",
                                           "updatedAt":  "2025-04-07T00:46:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86l4gWB",
                                           "createdAt":  "2025-04-07T11:48:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEehevQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "Vlaaaaaaad",
                                                                               "createdAt":  "2025-08-16T18:07:08Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "\u003e In the perfect scenario, we could use the WASM-ready OpenIddict.Client from @kevinchalet, since the non‑WASM‑ready client has already proven itself in battle, is trusted, and is very flexible. Speaking for myself, OpenIddict.Client would be my first choice because of the trust built behind the project. At the same time, I\u0027m not sure how the limitations of the Cryptography library in browsers affect OpenIddict.Client at the moment.\n\nFYI, the OpenIddict client works fine with Blazor Hybrid on mobile/desktop platforms but it isn\u0027t usable in web browsers. If it\u0027s something we wanted to support, we\u0027d need an `OpenIddict.Client.BlazorWebAssembly` companion package - or `OpenIddict.Client.BrowserIntegration` for something \"generic\" that doesn\u0027t depend on Blazor and directly uses JS interop instead - to deal with the browser-specific aspects, including:\n  - Storing the request forgery protection claim (`rfp`) OpenIddict generates to prevent session fixation attacks in the local/session storage or IndexedDB. AFAIK, Blazor still doesn\u0027t offer storage APIs to deal with that so it would require depending on an existing library (e.g https://github.com/Blazored/LocalStorage) or using JS interop.\n  - Redirecting the user agent to the authorization server when a login or logout demand is being processed (or opening a popup if a popup-based approach is preferred).\n  - Handling the login/logout callback request and validating the `rfp` value to ensure the reply is solicited (and prevent CSRF/session fixation attacks).\n\n(note: I didn\u0027t include web or service workers in that list - tho\u0027 they have quite interesting advantages for increasing security in browser apps - as [the recent drafts of the OAuth 2.0 for Browser-Based Apps RFC now treat this approach as a discouraged pattern](https://www.ietf.org/archive/id/draft-ietf-oauth-browser-based-apps-24.html#name-handling-the-oauth-flow-in-)).\n\n\u003e At the same time, I\u0027m not sure how the limitations of the Cryptography library in browsers affect OpenIddict.Client at the moment.\n\nLast time I tried (i.e a few years ago 😄), both RSA and ECDSA - that are commonly used to sign identity tokens - were not supported in browser apps. Assuming https://learn.microsoft.com/en-us/dotnet/standard/security/cross-platform-cryptography is up-to-date, these asymmetric algorithms are still unsupported. It could probably be worked around by calling SubtleCrypto via JS interop, but it would need to be implemented in the MSFT IdentityModel library, since it\u0027s what OpenIddict uses to validate tokens.\n\nThat said, it\u0027s not a deal-breaker: the OIDC specification allows not checking the signature of identity tokens if (and only if) they were retrieved using a TLS-protected back channel, as the identity of the authorization server can be validated using the X.509 certificate authority. In practice, that would mean you\u0027d only be able to use the authorization code flow and not the OIDC implicit or hybrid flows, which is a very reasonable compromise since the code flow is the recommended option anyway.\n\nIf it\u0027s really an approach the Blazor team is considering, I don\u0027t mind spending some time building a new prototype.",
                                           "updatedAt":  "2025-04-07T11:48:12Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Decide if we want to replace the Blazor dependency on oidc-client.js",
        "labels":  [
                       "area-auth",
                       "area-blazor"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/60467",
        "createdAt":  "2025-02-18T17:59:11Z",
        "number":  60467,
        "author":  "MackinnonBuck",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-25T17:30:28Z",
        "body":  "When authentication fails, the `aspnetcore.authentication.request.duration` histogram only includes the type of the exception that resulted in the failure. This doesn\u0027t provide very useful information about _why_ authentication failed.\n\nWe should consider updating the `error.type` tag or adding a new tag (maybe `aspnetcore.authentication.failure_reason`) to specify a well-known reason why the authentication handler failed to authenticate. This tag would only apply to the `aspnetcore.authentication.request.duration` histogram.\n\nSee also: https://github.com/dotnet/aspnetcore/pull/59557#issuecomment-2593768863",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "Add authentication failure reason to AuthN metrics",
        "labels":  [
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/61817",
        "createdAt":  "2025-05-07T00:48:20Z",
        "number":  61817,
        "author":  "halter73",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-25T17:31:15Z",
        "body":  "Google already ships its own [official Google.Apis.Auth.AspNetCore3 NuGet package](https://www.nuget.org/packages/Google.Apis.Auth.AspNetCore3/) which has more features and is generally more up to date. As of a few months ago, https://github.com/dotnet/AspNetCore.Docs/pull/33710 updated https://learn.microsoft.com/aspnet/core/security/authentication/social/google-logins to document using Google.Apis.Auth.AspNetCore3 rather than the [Microsoft.AspnetCore.Authentication.Google](https://www.nuget.org/packages/Microsoft.AspnetCore.Authentication.Google/) NuGet package we ship.\n\nUnlike the GoogleHandler we ship as part of Microsoft.AspNetCore.Authentication.Google which derives from OAuthHandler, the GoogleOpenIdConnectHandler handler implements the more modern OpenIdConnectHandler base type like Entra does in Microsoft.IdentityWeb. And in general, as with Entra and Microsoft.Identity.Web, we\u0027d rather the teams behind the IdP provide their own integration packages built on top of OpenIdConnectHandler.\n\nThis also better sets it up refresh token support which is being tracked by #8175, because it probably makes sense to only add refresh token support to the OpenIdConnectHandler and not the OAuthHandler. While OIDC is not a prerequisite for refresh token support which is defined as part of the general OAuth 2 spec as part of RFC 6749, I think that OAuth implementations that do not include OIDC are less likely to support refresh tokens in general. @mkArtak @mikekistler \n\nAs you can see [here in AddGoogleOpenIdConnect](https://github.com/googleapis/google-api-dotnet-client/blob/4eeee7498fac0dd1bd5c5e81d85e0a4a9cf0c6f0/Src/Support/Google.Apis.Auth.AspNetCore3/GoogleOpenIdConnectExtensions.cs#L101-L102), [here in GoogleOpenIdConnectHandler](https://github.com/googleapis/google-api-dotnet-client/blob/4eeee7498fac0dd1bd5c5e81d85e0a4a9cf0c6f0/Src/Support/Google.Apis.Auth.AspNetCore3/GoogleOpenIdConnectHandler.cs#L46-L47), and [here in GetCredentialAsync](https://github.com/googleapis/google-api-dotnet-client/blob/4eeee7498fac0dd1bd5c5e81d85e0a4a9cf0c6f0/Src/Support/Google.Apis.Auth.AspNetCore3/GoogleAuthProvider.cs#L88-L117) the official Google package already handles token refresh, but it could probably be updated to leverage the work we\u0027re doing for #8175. At the very least we will want to make sure that our built-in token refresh doesn\u0027t interfere with what google is doing. I don\u0027t think it will because I think refresh will be opt-in and run during OnValidatePrincipal similar to how the [ConfigureCookieOidc method in the BlazorWebAppOidc sample](https://github.com/dotnet/blazor-samples/blob/de446b7077b71961c02d55cae745ca1d5a319aa2/9.0/BlazorWebAppOidc/BlazorWebAppOidc/CookieOidcServiceCollectionExtensions.cs#L15) wires up the [CookieOidcRefresher](https://github.com/dotnet/blazor-samples/blob/main/9.0/BlazorWebAppOidcServer/BlazorWebAppOidcServer/CookieOidcRefresher.cs#L24), and this would occur before calls to GetCredentialAsync which should always have fresh tokens.\n\nIt does make me wonder if we should have a design where we lazily refresh the token when acquiring it for a downstream call similar to Microsoft.Identity.Web\u0027s AcquireTokenAsync() or Google\u0027s GetCredentialAsync(), but that risks issues trying to set the cookie when response headers have already been sent like when handling SignalR Hub invocations over WebSockets in a Blazor Server app. Still, we could guard against that by checking HttpResponse.HasStarted and just not updating the cookie if it has. At least you\u0027d still be able to get a fresh token for the ongoing request.\n\n@jskeet @amanda-tarafa @chrisdunelm I see all of you in [the commit history for the Google.Apis.Auth.AspNetCore3 package](https://github.com/googleapis/google-api-dotnet-client/commits/main/Src/Support/Google.Apis.Auth.AspNetCore3). Feel free to leave a comment if you have any opinions on us dropping the Microsoft.AspNetCore.Authentication.Google package or our plans to build in refresh token support to the OpenIdConnectHandler.\n\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOrLyuUg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde86qRgiR",
                                           "createdAt":  "2025-05-07T00:56:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "halter73",
                                           "body":  "We could also stop shipping Microsoft.AspNetCore.Authentication.MicrosoftAccount which is probably best replaced by Microsoft.Identity.Web.\n\nThe two remaining provider-specific packages we maintain (outside of https://github.com/aspnet-contrib/AspNet.Security.OAuth.Providers which are maintained by external contributors) are Microsoft.AspNetCore.Authentication.Facebook and Microsoft.AspNetCore.Authentication.Twitter. It\u0027d be nice to drop everything, but I\u0027m not sure Facebook or Twitter have official AuthenticationHandlers that they ship. If so, we haven\u0027t documented it in https://learn.microsoft.com/aspnet/core/security/authentication/social/",
                                           "updatedAt":  "2025-05-07T00:56:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86qRvx1",
                                           "createdAt":  "2025-05-07T01:43:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOERM4Qg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "halter73",
                                                                               "createdAt":  "2025-05-07T17:12:49Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "\u003e outside of https://github.com/aspnet-contrib/AspNet.Security.OAuth.Providers which are maintained by external contributors\n\nIt\u0027s worth noting that while these providers are still supported, our recommendation is to migrate to the OpenIddict-based providers: they are a lot cheaper to add and maintain (since they are source-generated) and offer many more features (including refresh tokens support). See https://github.com/aspnet-contrib/AspNet.Security.OAuth.Providers/tree/dev?tab=readme-ov-file#migrating-to-openiddict for more information.\n\n\u003e  While OIDC is not a prerequisite for refresh token support which is defined as part of the general OAuth 2 spec as part of RFC 6749, I think that OAuth implementations that do not include OIDC are less likely to support refresh tokens in general.\n\nFWIW, that\u0027s not really true. Here\u0027s some concrete, actual numbers:\n  - OpenIddict supports 105 services (at the time of writing). You can find the complete list [here](https://documentation.openiddict.com/integrations/web-providers) or [here](https://github.com/openiddict/openiddict-core/blob/dev/src/OpenIddict.Client.WebIntegration/OpenIddictClientWebIntegrationProviders.xml) (it\u0027s the file the source generator leverages to create all the options/builder APIs).\n  - 40 of them support both OIDC and either OAuth 2.0 authorization server metadata or OIDC discovery.\n  - The other providers (105 - 40 = 65) don\u0027t support OIDC or discovery and use a static configuration.\n  - Exactly 41 of these 65 OAuth 2.0-only providers support refresh tokens, **which means ~63% of the OAuth 2.0-only providers do support token refreshing**.\n  - Amusingly, even when they claim to support OIDC discovery, many of the OIDC providers don\u0027t correctly return the list of grant types they support, which requires fixing up the dynamic server configuration to list `grant_type=refresh_token` as a supported value (and we\u0027re not talking about obscure services but big players like DocuSign, Asana or Slack 🤣).",
                                           "updatedAt":  "2025-05-07T01:43:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86qaY2-",
                                           "createdAt":  "2025-05-07T15:26:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOERNN9g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "halter73",
                                                                               "createdAt":  "2025-05-07T17:51:34Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "halter73",
                                                                               "createdAt":  "2025-05-07T17:51:43Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "jskeet",
                                           "body":  "Just to respond briefly at this point, @chrisdunelm is no longer at Google, but @amanda-tarafa and I are still working on .NET libraries and would welcome a chat about auth and more.",
                                           "updatedAt":  "2025-05-07T15:26:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86qa7T0",
                                           "createdAt":  "2025-05-07T16:11:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOERNN4g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "LAUGH",
                                                                               "user":  "amanda-tarafa",
                                                                               "createdAt":  "2025-05-07T16:25:49Z"
                                                                           },
                                                                           {
                                                                               "content":  "LAUGH",
                                                                               "user":  "halter73",
                                                                               "createdAt":  "2025-05-07T17:51:34Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "chrisdunelm",
                                           "body":  "👋 ",
                                           "updatedAt":  "2025-05-07T16:11:42Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86qbMhk",
                                           "createdAt":  "2025-05-07T16:36:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOERNN-w==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "halter73",
                                                                               "createdAt":  "2025-05-07T17:51:45Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "amanda-tarafa",
                                           "body":  "+1 to what @jskeet said. See https://github.com/googleapis/google-cloud-dotnet/issues/13815#issuecomment-2859251248 as well.",
                                           "updatedAt":  "2025-05-07T16:36:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86stR6E",
                                           "createdAt":  "2025-05-21T11:10:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SOHODeveloper",
                                           "body":  "@kevinchalet You say ,\"our recommendation is to migrate to the OpenIddict-based providers\".  I see from the generation file, that there is now a Google provider being built.  Are you recommending using OpenIddict Google provider vs the package that Google is supplying (google.apis.auth.aspnetcore3)?\n\nI am talking about ASP.NET Core 9.x web application in which I am trying to provide authentication/authorization via Microsoft Account (via Entra external application), Google, Facebook and my own OIDC server (probably Duende).",
                                           "updatedAt":  "2025-05-21T11:10:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86svK5S",
                                           "createdAt":  "2025-05-21T13:50:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "\u003e Are you recommending using OpenIddict Google provider vs the package that Google is supplying (google.apis.auth.aspnetcore3)?\n\nI haven\u0027t tried that package so I can\u0027t make any recommendation (and it would be a bit biased anyway 😄). Give them a try and keep the one you like?",
                                           "updatedAt":  "2025-05-21T13:50:25Z"
                                       }
                                   ],
                         "totalCount":  7
                     },
        "title":  "Stop shipping new versions of the Microsoft.AspnetCore.Authentication.Google package",
        "labels":  [
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/61991",
        "createdAt":  "2025-05-19T11:00:23Z",
        "number":  61991,
        "author":  "mueller-marcel",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-05-21T20:49:22Z",
        "body":  "### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Describe the bug\n\nIn .NET 9 a published blazor wasm standalone app seems to stuck during the \"Completing Login\" stage when logging in using MSAl to an Entra ID. This happens exclusively in published apps. I could not observe it during local development. Furthermore this issue only appears in mobile browsers such as Safari, Chrome \u0026 Edge and under their android versions.\n\nSometimes especially when after the cache has been cleared it seems to work one time. After logging out and trying to log in again it stucks again.\n\nI have seen the already resolved issue #52619 and pull request #54225 but this seems to be unresolved for .NET 9 using the latest MSAL nuget packages (9.0.5).\n\n### Expected Behavior\n\nThe login should complete and redirect to according page when trying to log in onb mobile browsers. I tested it with the Entra ID of my workplace \n\n### Steps To Reproduce\n\nRepository to reproduce the issue: https://github.com/mueller-marcel/AuthTest\n\n1. Add the TenantId and the ClientId to the appsettings.json\n2. Publish the app\n3. Access the app and login using a mobile Phone. (I tested it with iOS 18.5)\n\n### Exceptions (if any)\n\nIf the cache is cleared before the blazor wasm is openend it seems to work one time. The next time the page is openend or the user logs out and in again the login stucks again.\n\n### .NET Version\n\nHost:   Version:      9.0.5   Architecture: x64   Commit:       e36e4d1a8f  .NET SDKs installed:   9.0.300 [C:\\Program Files\\dotnet\\sdk]  .NET runtimes installed:   Microsoft.AspNetCore.App 6.0.36 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]   Microsoft.AspNetCore.App 7.0.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]   Microsoft.AspNetCore.App 8.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]   Microsoft.AspNetCore.App 8.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]   Microsoft.AspNetCore.App 9.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]   Microsoft.NETCore.App 6.0.36 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]   Microsoft.NETCore.App 7.0.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]   Microsoft.NETCore.App 8.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]   Microsoft.NETCore.App 8.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]   Microsoft.NETCore.App 9.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]   Microsoft.WindowsDesktop.App 6.0.36 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]   Microsoft.WindowsDesktop.App 7.0.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]   Microsoft.WindowsDesktop.App 8.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]   Microsoft.WindowsDesktop.App 9.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]  Other architectures found:   arm64 [C:\\Program Files\\dotnet]     registered at [HKLM\\SOFTWARE\\dotnet\\Setup\\InstalledVersions\\arm64\\InstallLocation]   x86   [C:\\Program Files (x86)\\dotnet]     registered at [HKLM\\SOFTWARE\\dotnet\\Setup\\InstalledVersions\\x86\\InstallLocation]  Environment variables:   Not set  global.json file:   Not found  Learn more:   https://aka.ms/dotnet/info  Download .NET:   https://aka.ms/dotnet/download\n\n### Anything else?\n\nEDIT: It looks like the issue is gone when the LoginMode is set to redirect.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOrM5Atw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde86sxw5r",
                                           "createdAt":  "2025-05-21T17:32:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MackinnonBuck",
                                           "body":  "Given that having `LoginMode` set to redirect works, we\u0027d recommend doing that since pop ups can be blocked. We should consider changing the default here.",
                                           "updatedAt":  "2025-05-21T17:32:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86szkC3",
                                           "createdAt":  "2025-05-21T20:49:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mueller-marcel",
                                           "body":  "@MackinnonBuck Thanks for the fast response! That sounds like a good idea to change the default to \"redirect\". Furthermore I was wondering why the `LoginMode` is a string. Would it be considerable to change it to a enum such as `LoginMode.Redirect` and `LoginMode.Popup`. I was just wondering about a string value to select between popup mode and redirect. Maybe an enum would make the use of the API less prone of errors due to capitalization errors, whitespaces and that stuff? ",
                                           "updatedAt":  "2025-05-21T20:49:21Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "MSAL login stucks during \"Completing Login\" in blazor wasm in .NET 9",
        "labels":  [
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/62156",
        "createdAt":  "2025-05-29T14:38:44Z",
        "number":  62156,
        "author":  "baynezy",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-06T12:55:02Z",
        "body":  "### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Describe the bug\n\nOn adding a `Dictionary\u003cstring, string\u003e` as a parameter as an AdditionalProperty on an `InteractiveRequestOptions` instance. If you pass that to `NavigationManager.NavigateToLogin` method. It will error.\n\n\n### Expected Behavior\n\nThe application will redirect to OIDC IdP with additional parameters passed in /authorize request.\n\n### Steps To Reproduce\n\n```csharp\nvar options = new InteractiveRequestOptions\n{\n    Interaction = InteractionType.SignIn,\n    ReturnUrl = Navigation.BaseUri\n};\nvar parameters = new Dictionary\u003cstring, string\u003e\n{\n    { \"ext-user-type\", \"PaidUser\" }\n};\n\noptions.TryAddAdditionalParameter(\"extraQueryParams\", parameters);\nNavigationManager.NavigateToLogin(\"authentication/login\", options);\n```\n\n\n\n### Exceptions (if any)\n\n```\nSystem.NotSupportedException: JsonTypeInfo metadata for type \u0027System.Collections.Generic.Dictionary`2[System.String,System.String]\u0027 was not provided by TypeInfoResolver of type \u0027Microsoft.AspNetCore.Components.WebAssembly.Authentication.InteractiveRequestOptionsSerializerContext\u0027. If using source generation, ensure that all root types passed to the serializer have been annotated with \u0027JsonSerializableAttribute\u0027, along with any types that might be serialized polymorphically. The unsupported member type is located on type \u0027System.Object\u0027. Path: $.\n ---\u003e System.NotSupportedException: JsonTypeInfo metadata for type \u0027System.Collections.Generic.Dictionary`2[System.String,System.String]\u0027 was not provided by TypeInfoResolver of type \u0027Microsoft.AspNetCore.Components.WebAssembly.Authentication.InteractiveRequestOptionsSerializerContext\u0027. If using source generation, ensure that all root types passed to the serializer have been annotated with \u0027JsonSerializableAttribute\u0027, along with any types that might be serialized polymorphically.\n   at System.Text.Json.ThrowHelper.ThrowNotSupportedException_NoMetadataForType(Type type, IJsonTypeInfoResolver resolver)\n   at System.Text.Json.JsonSerializerOptions.GetTypeInfoInternal(Type type, Boolean ensureConfigured, Nullable`1 ensureNotNull, Boolean resolveIfMutable, Boolean fallBackToNearestAncestorType)\n   at System.Text.Json.WriteStackFrame.InitializePolymorphicReEntry(Type runtimeType, JsonSerializerOptions options)\n   at System.Text.Json.Serialization.JsonConverter.ResolvePolymorphicConverter(Object value, JsonTypeInfo jsonTypeInfo, JsonSerializerOptions options, WriteStack\u0026 state)\n   at System.Text.Json.Serialization.JsonConverter`1[[System.Object, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].TryWrite(Utf8JsonWriter writer, Object\u0026 value, JsonSerializerOptions options, WriteStack\u0026 state)\n   at System.Text.Json.Serialization.Converters.DictionaryOfTKeyTValueConverter`3[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].OnWriteResume(Utf8JsonWriter writer, Dictionary`2 value, JsonSerializerOptions options, WriteStack\u0026 state)\n   at System.Text.Json.Serialization.JsonDictionaryConverter`3[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].OnTryWrite(Utf8JsonWriter writer, Dictionary`2 dictionary, JsonSerializerOptions options, WriteStack\u0026 state)\n   at System.Text.Json.Serialization.JsonConverter`1[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].TryWrite(Utf8JsonWriter writer, Dictionary`2\u0026 value, JsonSerializerOptions options, WriteStack\u0026 state)\n   at System.Text.Json.Serialization.JsonConverter`1[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].WriteCore(Utf8JsonWriter writer, Dictionary`2\u0026 value, JsonSerializerOptions options, WriteStack\u0026 state)\n   --- End of inner exception stack trace ---\n   at System.Text.Json.ThrowHelper.ThrowNotSupportedException(WriteStack\u0026 state, Exception innerException)\n   at System.Text.Json.Serialization.JsonConverter`1[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].WriteCore(Utf8JsonWriter writer, Dictionary`2\u0026 value, JsonSerializerOptions options, WriteStack\u0026 state)\n   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Serialize(Utf8JsonWriter writer, Dictionary`2\u0026 rootValue, Object rootValueBoxed)\n   at System.Text.Json.JsonSerializer.Serialize[Dictionary`2](Utf8JsonWriter writer, Dictionary`2 value, JsonTypeInfo`1 jsonTypeInfo)\n   at Microsoft.AspNetCore.Components.WebAssembly.Authentication.InteractiveRequestOptionsSerializerContext.OptionsRecordSerializeHandler(Utf8JsonWriter writer, OptionsRecord value)\n   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1[[Microsoft.AspNetCore.Components.WebAssembly.Authentication.InteractiveRequestOptions.Converter.OptionsRecord, Microsoft.AspNetCore.Components.WebAssembly.Authentication, Version=9.0.4.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]].Serialize(Utf8JsonWriter writer, OptionsRecord\u0026 rootValue, Object rootValueBoxed)\n   at System.Text.Json.JsonSerializer.Serialize[OptionsRecord](Utf8JsonWriter writer, OptionsRecord value, JsonTypeInfo`1 jsonTypeInfo)\n   at Microsoft.AspNetCore.Components.WebAssembly.Authentication.InteractiveRequestOptions.Converter.Write(Utf8JsonWriter writer, InteractiveRequestOptions value, JsonSerializerOptions options)\n   at System.Text.Json.Serialization.JsonConverter`1[[Microsoft.AspNetCore.Components.WebAssembly.Authentication.InteractiveRequestOptions, Microsoft.AspNetCore.Components.WebAssembly.Authentication, Version=9.0.4.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]].TryWrite(Utf8JsonWriter writer, InteractiveRequestOptions\u0026 value, JsonSerializerOptions options, WriteStack\u0026 state)\n   at System.Text.Json.Serialization.JsonConverter`1[[Microsoft.AspNetCore.Components.WebAssembly.Authentication.InteractiveRequestOptions, Microsoft.AspNetCore.Components.WebAssembly.Authentication, Version=9.0.4.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]].WriteCore(Utf8JsonWriter writer, InteractiveRequestOptions\u0026 value, JsonSerializerOptions options, WriteStack\u0026 state)\n   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1[[Microsoft.AspNetCore.Components.WebAssembly.Authentication.InteractiveRequestOptions, Microsoft.AspNetCore.Components.WebAssembly.Authentication, Version=9.0.4.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]].Serialize(Utf8JsonWriter writer, InteractiveRequestOptions\u0026 rootValue, Object rootValueBoxed)\n   at System.Text.Json.JsonSerializer.WriteString[InteractiveRequestOptions](InteractiveRequestOptions\u0026 value, JsonTypeInfo`1 jsonTypeInfo)\n   at System.Text.Json.JsonSerializer.Serialize[InteractiveRequestOptions](InteractiveRequestOptions value, JsonTypeInfo`1 jsonTypeInfo)\n   at Microsoft.AspNetCore.Components.WebAssembly.Authentication.InteractiveRequestOptions.ToState()\n   at Microsoft.AspNetCore.Components.WebAssembly.Authentication.NavigationManagerExtensions.NavigateToLogin(NavigationManager manager, String loginPath, InteractiveRequestOptions request)\n   at App.Shared.LoginOrRegister.ClickButton() in C:\\_development\\App\\src\\App\\Shared\\LoginOrRegister.razor:line 44\n```\n\n### .NET Version\n\n9.0.201\n\n### Anything else?\n\nI see #52291, which appears to be the same, but it is closed as resolved. Am I doing something wrong? \nI have also tried the workaround in #45028 and that did not work either.\n\n**Note** - I am using https://community.auth0.com/t/unable-to-add-parameters-to-login-request-using-blazor-remoteauthenticatorview-component/103763 as my reference implementation.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOvFqYHw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde868Wpgf",
                                           "createdAt":  "2025-08-06T12:55:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEdindw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "baynezy",
                                                                               "createdAt":  "2025-08-07T22:16:58Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "MertYacan",
                                           "body":  "Hi Simon,\n\nI\u0027m using the same stack and encountered this issue as well.\n\nI was able to resolve the issue by changing the dictionary type from Dictionary\u003cstring, string\u003e to Dictionary\u003cstring, object\u003e. \n\nHere\u0027s a working example:\n\n```\nvar options = new InteractiveRequestOptions\n{\n    Interaction = InteractionType.SignIn,\n    ReturnUrl = Navigation.BaseUri\n};\n\nvar parameters = new Dictionary\u003cstring, object\u003e\n{\n    { \"ext-user-type\", (object)\"PaidUser\" }\n};\n\noptions.TryAddAdditionalParameter(\"extraQueryParams\", parameters);\nNavigationManager.NavigateToLogin(\"authentication/login\", options);\n```",
                                           "updatedAt":  "2025-08-06T12:55:02Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "System.NotSupportedException when using Dictionary\u003cstring,string\u003e with InteractiveRequestOptions AdditionalProperties",
        "labels":  [
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/62658",
        "createdAt":  "2025-07-10T14:29:21Z",
        "number":  62658,
        "author":  "paulomorgado",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODGj4aA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "BrendanRidenour",
                                            "createdAt":  "2025-07-10T20:47:36Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2025-08-25T17:27:54Z",
        "body":  "### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nSometimes there are simple requires that can be achieved by overriding `HandleAuthenticateAsync` on `JwtBearerHandler`.\n\nBut getting all functionality is not possible because [`AddJwtBearer`](https://learn.microsoft.com/en-us/dotnet/api/microsoft.extensions.dependencyinjection.jwtbearerextensions.addjwtbearer) cannot be replicated because it uses a [`JwtBearerConfigureOptions`](https://source.dot.net/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerConfigureOptions.cs.html#d166882dc93bfcaa)` that is `internal`.\n\nTu use it, I\u0027ve been replacing the `JwtBearerHandler` registration:\n\n```csharp\n services\n     .AddAuthentication()\n     .AddJwtBearer(authenticationScheme)\n     ;\n\n // Replace JwtBearerHandler with MyTokenHandler\n services.RemoveAll\u003cJwtBearerHandler\u003e();\n services.AddTransient\u003cJwtBearerHandler, MyTokenHandler\u003e();\n```\n\nBecause it\u0027s registered with `services.AddTransient` instead of `services.TryAddTransient`.\n\n### Describe the solution you\u0027d like\n\n```csharp\n services\n     .AddAuthentication()\n     .AddJwtBearer\u003cMyTokenHandler\u003e(authenticationScheme)\n     ;\n```\n\n### Additional context\n\nOr just use `services.TryAddTransient` to register `JwtBearerHandler`.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOv_5yVQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde863AIPM",
                                           "createdAt":  "2025-07-14T16:47:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MackinnonBuck",
                                           "body":  "Thanks for reaching out, @paulomorgado.\n\nIs there a reason that adding handlers for the `OnMessageReceived` and `OnTokenValidated` events isn\u0027t sufficient, and extending `JwtBearerHandler` is required?",
                                           "updatedAt":  "2025-07-14T16:47:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde863BYWP",
                                           "createdAt":  "2025-07-14T18:39:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "paulomorgado",
                                           "body":  "\u003e Thanks for reaching out, [@paulomorgado](https://github.com/paulomorgado).\n\u003e \n\u003e Is there a reason that adding handlers for the `OnMessageReceived` and `OnTokenValidated` events isn\u0027t sufficient, and extending `JwtBearerHandler` is required?\n\n\nHi @MackinnonBuck, would you care to share examples on how would I do the same thing I\u0027m doing in `HandleAuthenticateAsync`? I need all the configuration and setup done in `AddJwtBearer`, but the token is not a JWT and I have call user info.",
                                           "updatedAt":  "2025-07-14T18:39:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde863VfKG",
                                           "createdAt":  "2025-07-15T22:01:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "halter73",
                                           "body":  "Outside of a few APIs like AddHostedService, AddSingleton, AddScoped, AddTransient, etc. which were designed specifically for adding user-defined service types, it\u0027s very unusual for us to expose an \"Add...\" service API that allows you to replace a default service with a custom one. And I don\u0027t think this custom JwtBearerHandler scenario is common enough or bad enough to introduce this kind of API. It could make things a little more confusing for the majority people trying to use JwtBearerHandler without overriding it. If we were to redesign it today, we might make JwtBearerHandler sealed and/or internal and just make sure any necessary extensibility can be done using the events.\n\nI get that the way AddJwtBearer adds some configuration helpers makes this hard if you want to reuse JwtBearerOptions and you want the functionality from JwtBearerConfigureOptions and/or JwtBearerPostConfigureOptions, but if we were to add anything I think it would be adding something along the lines of `ConfigureJwtBearer` which would still leave you responsible for calling `AddScheme` for you custom handler.\n\nYour workaround of just calling `services.AddTransient\u003cJwtBearerHandler, MyTokenHandler\u003e()` doesn\u0027t seem that bad to me. Since you\u0027re able to override the registration for JwtBearerHandler rather than creating a registration specifically for MyTokenHandler, you don\u0027t even need to worry about fixing up AuthenticationOptions.SchemeMap. You can probably even get away with not calling `services.RemoveAll\u003cJwtBearerHandler\u003e()` since the last registration should win. All said, I\u0027m surprised how easily this works already, and I don\u0027t think we need to do more to improve this scenario.\n\n\u003e would you care to share examples on how would I do the same thing I\u0027m doing in HandleAuthenticateAsync? I need all the configuration and setup done in AddJwtBearer, but the token is not a JWT and I have call user info.\n\nThis seems like a perfect fit for OnMessageReceived. [Here\u0027s an example of using it to retrieve the access token from the query string](https://learn.microsoft.com/en-us/aspnet/core/signalr/authn-and-authz?view=aspnetcore-9.0#built-in-jwt-authentication), but you could call a user info endpoint instead. It\u0027s async. https://medium.com/@sametkarademir244/jwtbearerevents-in-asp-net-core-managing-token-events-04cdeb9dc30d also has a pretty good overview of the events.\n\nYour best bet for a comprehensive understanding is probably to look at the [source for JwtBearerHandler.HandleAuthenticateAsync](https://source.dot.net/#Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerHandler.cs,56). You\u0027ll notice that it calls MessageReceived/OnMessageReceived before doing any validation and it will short circuit if you provide an AuthenticateResult. Combined, this allows you to effectively override all of JwtBearerHandler.HandleAuthenticateAsync using just the OnMessageReceived.",
                                           "updatedAt":  "2025-07-15T22:01:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde863bY9H",
                                           "createdAt":  "2025-07-16T07:49:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "paulomorgado",
                                           "body":  "\u003e I get that the way AddJwtBearer adds some configuration helpers makes this hard if you want to reuse JwtBearerOptions and you want the functionality from JwtBearerConfigureOptions and/or JwtBearerPostConfigureOptions, but if we were to add anything I think it would be adding something along the lines of `ConfigureJwtBearer` which would still leave you responsible for calling `AddScheme` for you custom handler.\n\n`JwtBearerPostConfigureOptions` is public. If `JwtBearerConfigureOptions` was also public, I could work with it.\n\nInvoking JwtBearerExtensions.AddJwtBearer to add a dummy scheme would register `JwtBearerConfigureOptions`.\n\nI might also get away with using reflection to register `JwtBearerConfigureOptions`.\n\nBut the best option would be \"adding something along the lines of `ConfigureJwtBearer` which would still leave you responsible for calling `AddScheme` for you custom handler\".\n\n\u003e Your workaround of just calling `services.AddTransient\u003cJwtBearerHandler, MyTokenHandler\u003e()` doesn\u0027t seem that bad to me. Since you\u0027re able to override the registration for JwtBearerHandler rather than creating a registration specifically for MyTokenHandler, you don\u0027t even need to worry about fixing up AuthenticationOptions.SchemeMap. You can probably even get away with not calling `services.RemoveAll\u003cJwtBearerHandler\u003e()` since the last registration should win. All said, I\u0027m surprised how easily this works already, and I don\u0027t think we need to do more to improve this scenario.\n\nBy the way, is it intended that `AuthenticationBuilder.AddSchemeHelper` registers the service all the time instead of registering with `TryAddTransient`?\n\n",
                                           "updatedAt":  "2025-07-16T07:49:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86__nJV",
                                           "createdAt":  "2025-08-25T17:27:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEfiPVQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "paulomorgado",
                                                                               "createdAt":  "2025-08-25T17:53:27Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "MackinnonBuck",
                                           "body":  "Thanks for the explanation, @paulomorgado. We\u0027re going to put this in the backlog for now, as this issue would require further API design before we can move forward with it.",
                                           "updatedAt":  "2025-08-25T17:27:49Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "Consider allowing a custom JwtBearerHandler implementation in AddJwtBearer",
        "labels":  [
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/63127",
        "createdAt":  "2025-08-05T09:31:44Z",
        "number":  63127,
        "author":  "CGessinger",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODQkr1w==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "CBeening",
                                            "createdAt":  "2025-08-05T10:01:19Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "dphogit",
                                            "createdAt":  "2025-09-15T12:04:00Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2025-08-11T17:31:11Z",
        "body":  "\u003c!--\nThis template is useful to build consensus about whether work should be done, and if so, the high-level shape of how it should be approached. Use this before fixating on a particular implementation.\n--\u003e\n\n## Summary\n\nMake [BearerTokenHandler](https://github.com/dotnet/aspnetcore/blob/fab448a153e8e2683a652f1fd1e8ef7d917c3110/src/Security/Authentication/BearerToken/src/BearerTokenHandler.cs) public (instead of internal sealed) to allow customization by overriding its behavior, particularly HandleSignInAsync.\n\nThe alternative is creating my own handler which inherits from [SignInAuthenticationHandler](https://github.com/dotnet/aspnetcore/blob/fab448a153e8e2683a652f1fd1e8ef7d917c3110/src/Security/Authentication/Core/src/SignInAuthenticationHandler.cs#L14) and implement token authorization myself. This has the possible benefit of allowing custom BearerTokenOptions but is otherwise mostly identical to the existing BearerTokenHandler.\n\n## Motivation and goals\n\nI am trying to use AspNetCore.Authentication in combination with ASP.NET Core Identity taking advantage of user and role management. However, in order to comply with company wide API specifications I want to customize the sign in token response.\n\nMy goal is to use given access and refresh tokens with all the claims that Asp automatically includes but customize the response body of my sign in endpoint. In other word serving the pregenerated tokens in a different package.\n\n## In scope\n\n- Add custom fields to response body on HandleSignInAsync\n- Services.AddBearerToken() using custom Handler\n\n## Out of scope\n\n- Custom BearerTokenOptions\n- Updating AspNetCore.Idenity.AddIdentityApiEndpoints\n\n## Risks / unknowns\n\n- Other devs might overcomplicate things by overriting the BearerTokenHandler instead of using existing configuration capabilities\n- Overwriting a crucial security class might encompass security risks by introduced by the developer. However, the other classes in Authentication are public as well.\n- Other authentication handlers in ASP.NET Core (like JwtBearerHandler, CookieAuthenticationHandler, etc.) are public and overridable. This consistency would support advanced customization scenarios while maintaining the intended structure of the authentication system.\n\n## Examples\n\n```\n// ApplicationBearerTokenHandler.cs\npublic class ApplicationBearerTokenHandler(\n    IOptionsMonitor\u003cBearerTokenOptions\u003e optionsMonitor,\n    ILoggerFactory loggerFactory, UrlEncoder urlEncoder\n    ) : BearerTokenHandler (optionsMonitor, loggerFactory, urlEncoder)\n{\n...\n}\n\n// Program.cs\nbuilder.Services.AddAuthentication(IdentityConstants.BearerScheme)\n    .AddBearerToken\u003cApplicationBearerTokenHandler\u003e(IdentityConstants.BearerScheme);\n\n```\n\n\u003c!--\n# Detailed design\n\nIt\u0027s often best not to fill this out until you get basic consensus about the above. When you do, consider adding an implementation proposal with the following headings:\n\nDetailed design\nDrawbacks\nConsidered alternatives\nOpen questions\nReferences\n\nIf there\u0027s one clear design you have consensus on, you could do that directly in a PR.\n--\u003e\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOvU5pQQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde869TmlB",
                                           "createdAt":  "2025-08-11T17:31:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MackinnonBuck",
                                           "body":  "Thanks, we\u0027ll consider this. As it stands, this is a fairly simple handler, so feel free to copy its source.",
                                           "updatedAt":  "2025-08-11T17:31:11Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Expose BearerTokenHandler from Microsoft.AspNetCore.Authentication",
        "labels":  [
                       "area-auth",
                       "design-proposal"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/63218",
        "createdAt":  "2025-08-11T13:00:19Z",
        "number":  63218,
        "author":  "davhdavh",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODLUQ6A==",
                          "nodes":  [
                                        {
                                            "content":  "EYES",
                                            "user":  "Copilot",
                                            "createdAt":  "2025-08-13T17:25:19Z"
                                        },
                                        {
                                            "content":  "EYES",
                                            "user":  "rogihee",
                                            "createdAt":  "2025-08-15T00:26:09Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2025-08-25T17:20:12Z",
        "body":  "### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\n`AntiforgeryValidationException: The provided antiforgery token was meant for a different claims-based user than the current user` is incrediable annoying because it gives you very little actual information about what is going on...\n\nA VERY common issue is that someone put `.UseAntiforgery()` before `.UseAuth...`, and it would be really if the error message could catch this very common case.\n\n\n\n### Describe the solution you\u0027d like\n\nhttps://github.com/dotnet/aspnetcore/blob/58c3b48573de403c9d78f43f472caa97d1f89b87/src/Antiforgery/src/Internal/DefaultAntiforgeryTokenGenerator.cs#L161\n\nshould report a different error if `httpContext.User.IsAuthenticated == false`, example `AntiforgeryValidationException: The provided antiforgery token was meant for an authenticated user, but current user is not authenticated. Did you put .UseAntiforgery() after .UseAuthentication()?`.\n\n### Additional context\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOvdRffQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde8691FrH",
                                           "createdAt":  "2025-08-13T17:24:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MackinnonBuck",
                                           "body":  "Seems like a good idea. I wonder if we can add that detail in the `AntiforgeryMiddleware` by catching and re-throwing with a more detailed exception message.",
                                           "updatedAt":  "2025-08-13T17:24:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde8691F99",
                                           "createdAt":  "2025-08-13T17:25:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Looks like this issue has been identified as a candidate for community contribution. If you\u0027re considering sending a PR for this issue, look for the `Summary Comment` link in the issue description. That comment has been left by an engineer on our team to help you get started with handling this issue. You can learn more about our Help Wanted process [here](https://aka.ms/aspnet/processes/help-wanted)\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-08-13T17:25:16Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Better error message for AntiforgeryValidationException: The provided antiforgery token was meant for a different claims-based user than the current user",
        "labels":  [
                       "area-auth",
                       "feature-antiforgery"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/63365",
        "createdAt":  "2025-08-21T19:03:47Z",
        "number":  63365,
        "author":  "halter73",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODMMmVQ==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "BrennanConroy",
                                            "createdAt":  "2025-08-21T20:47:44Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "desjoerd",
                                            "createdAt":  "2025-08-21T21:24:04Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2025-08-25T17:28:16Z",
        "body":  "#41153 and #44342 added support for `AuthorizationPolicy ` and [`IAuthorizationRequirementData`](https://source.dot.net/#Microsoft.AspNetCore.Authorization/IAuthorizationRequirementData.cs,3ece6ed1c91c74f9,references) as endpoint metadata, but only if the policy is evaluated by `AuthorizationMiddleware` despite the `// IMPORTANT: Changes to authorization logic should be mirrored in MVC\u0027s AuthorizeFilter` comment at the top of the method.\n\nIt\u0027s not just MVC and Razor Pages that\u0027s inconsistent here though. SignalR (`DefaultHubDispatcher.IsHubMethodAuthorized`) and Blazor (`AuthorizeViewCore.IsAuthorizedAsync`) also make similar authorization decisions to the `AuthorizationMiddleware` but completely ignore any `AuthorizationPolicy ` or `IAuthorizationRequirementData` instances specified as metadata.\n\nGiven the complexity this adds to making authentication decisions, I wonder if we should add a higher level authz API that takes all the metadata associated with the endpoint and returns an effective policy. This would also be helpful outside of the aspnetcore repo. https://github.com/modelcontextprotocol/csharp-sdk could leverage this for example.\n\n```diff\n# Microsoft.AspNetCore.Authorization.dll\n\nnamespace Microsoft.AspNetCore.Authorization;\n\npublic class AuthorizationPolicy\n{\n    public static async Task\u003cAuthorizationPolicy?\u003e CombineAsync(IAuthorizationPolicyProvider policyProvider,\n        IEnumerable\u003cIAuthorizeData\u003e authorizeData,\n        IEnumerable\u003cAuthorizationPolicy\u003e policies);\n\n+    public static async Task\u003cAuthorizationPolicy?\u003e CombineAsync(IAuthorizationPolicyProvider policyProvider,\n+        IEnumerable\u003cobject\u003e endpointMetadata);\n}\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOv3TSLA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde86_dNIs",
                                           "createdAt":  "2025-08-21T21:18:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "desjoerd",
                                           "body":  "This would also be great for Openapi when you want to extract specific Authorization requirements around scopes.",
                                           "updatedAt":  "2025-08-21T21:18:50Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Support AuthorizationPolicy and IAuthorizationRequirementData endpoint metadata everywhere not just AuthorizationMiddleware",
        "labels":  [
                       "area-auth",
                       "api-suggestion"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/63566",
        "createdAt":  "2025-09-05T16:12:25Z",
        "number":  63566,
        "author":  "bigred8982",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-17T17:18:20Z",
        "body":  "## Background and Motivation\n\nIn reference to https://github.com/dotnet/aspnetcore/issues/59462, there is a new scenario during OIDC PAR login flow where a configuration would result in an error. The optimal solution would be to add a new OIDC event to the API to make it easier to handle this error.\n\n## Proposed API\n\nIn reference to https://github.com/dotnet/aspnetcore/pull/61947, add new event to `OpenIdConnectEvents` class. Event name would be `OnPushAuthorizationFailed`.\n\n\n## Usage Examples\n\nExample originally documented in https://github.com/dotnet/aspnetcore/pull/61947\n\n```csharp\nbuilder.Services.AddAuthentication(...)\n  .AddOpenIdConnect(\"oidc\", options =\u003e \n  {\n    ...\n    options.Events.OnPushAuthorizationFailed = (ctx) =\u003e {\n        var logger = ctx.HttpContext.RequestServices.GetRequiredService\u003cILogger\u003cProgram\u003e\u003e();\n        logger.LogError(ctx.Exception, \"Received error while sending PAR request.\");\n        \n        ctx.Response.Redirect(\"FriendlyErrorPage\");\n        ctx.Handled = true;\n        return Task.CompletedTask;\n    };\n  });\n```\n\n## Alternative Designs\n\nNo. I attempted to follow the existing API event design.\n\n## Risks\n\nNo exceptional risks identified. \n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOxO2kFQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde87E7aQV",
                                           "createdAt":  "2025-09-17T17:18:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MackinnonBuck",
                                           "body":  "FYI @halter73 ",
                                           "updatedAt":  "2025-09-17T17:18:20Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Add new event to OpenIdConnectEvents to handle specific error scenario",
        "labels":  [
                       "area-auth",
                       "api-suggestion"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/63667",
        "createdAt":  "2025-09-13T07:46:37Z",
        "number":  63667,
        "author":  "ptffr",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODR0a0A==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "boukenka",
                                            "createdAt":  "2025-09-19T05:54:13Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2025-09-18T16:18:44Z",
        "body":  "### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nI am currently issuing an additional cookie based on the authenticated user when they sign in, but the problem is that I can\u0027t reliably know when the authentication cookie is refresh to issue the additional cookie again.\n\nI checked the `CookieAuthenticationHandler` and seems like the refresh happens in `FinishResponseAsync` which can be overridden, but doesn\u0027t really provide the information when/if the refresh happened. Might be possible to detect it by checking the response `Set-Cookie` but that way I don\u0027t know the `AuthenticationProperties` of the new cookie.\n\n\n### Describe the solution you\u0027d like\n\nA new event `OnRefresh`/`OnRenew` in `CookieAuthenticationEvents` that is fired with the new principal+properties somewhere after `AppendResponseCookie` in `FinishResponseAsync`\n\n### Additional context\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOxTHtBw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde87EASFX",
                                           "createdAt":  "2025-09-13T14:01:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "krisbiradar",
                                           "body":  "Hi , @wtgodbe if this seems worth going forward with , i\u0027m happy to pick this up.",
                                           "updatedAt":  "2025-09-13T14:01:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde87FMe0H",
                                           "createdAt":  "2025-09-18T16:18:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "wtgodbe",
                                           "body":  "CC @BrennanConroy ",
                                           "updatedAt":  "2025-09-18T16:18:44Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "New event for CookieAuthenticationEvents when authentication cookie is renewed/refreshed",
        "labels":  [
                       "area-auth",
                       "api-needs-work"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/63688",
        "createdAt":  "2025-09-15T18:26:19Z",
        "number":  63688,
        "author":  "danroth27",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-17T17:23:42Z",
        "body":  "It looks like we\u0027re currently [shipping](https://github.com/dotnet/aspnetcore/blob/main/src/Components/WebAssembly/Authentication.Msal/src/Interop/package.json#L12) the latest 2.x of msal.js to support Blazor WebAssembly apps, but the [latest version](https://www.npmjs.com/package/@azure/msal-browser) is 4.22.1. We should consider updating.\n\n@joperezr @jmprieur",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOxO04Sg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde87E7ThK",
                                           "createdAt":  "2025-09-17T17:08:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MackinnonBuck",
                                           "body":  "As part of addressing this, we should check if https://github.com/dotnet/aspnetcore/issues/61960 is fixed.",
                                           "updatedAt":  "2025-09-17T17:08:50Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Update to the latest msal.js version",
        "labels":  [
                       "area-auth"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/63744",
        "createdAt":  "2025-09-19T12:07:07Z",
        "number":  63744,
        "author":  "djfoxer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-19T18:39:34Z",
        "body":  "### Describe the bug\nMy YARP Config has two Routes one with JWT Bearer token authorization and second one with AuthorizationPolicy sets to \"anonymous\". Everything runs great. \n\nWhen I pass to anonymous route data without Bearer token it returns 200 (correct). \nWhen I pass Bearer token that is not correct it returns 200 (correct - it\u0027s anonymous  route, we don\u0027t care).\nWhen I pass Bearer token that is correct and up to date it returns 200  (correct - it\u0027s anonymous  route, we don\u0027t care).\n\nWhen I pass Bearer token that is correct but life time ended it returns 200  (correct - it\u0027s anonymous  route, we don\u0027t care) but also throws excpetion `Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC)....` and fire JwtBearerEvents - OnAuthenticationFailed (but still pass request down). \n\nIt\u0027s not bug that stopped flow but throws unwanted exceptions and also shows that in background validation token for anonymous requests still occurs. Fix could clear unwanted exceptions and speedup anonymous flow.\n\n### To Reproduce\n\n- YARP config has two Routes one with JWT Bearer token authorization and second one with AuthorizationPolicy sets to \"anonymous\".\n-  pass Bearer token to anonymous route that is correct but life time ended\n- request is passed but exception accurs: \"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired\"\n\n\n### Further technical details\n\n- YARP 2.3.0\n- The platform (Linux)",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "Anonymous AuthorizationPolicy still validates JWT token\u0027s lifetime and throws exceptions (but pass request down)",
        "labels":  [
                       "area-auth"
                   ]
    }
]
