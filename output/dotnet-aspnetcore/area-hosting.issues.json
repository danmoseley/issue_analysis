[
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/5898",
        "createdAt":  "2017-06-29T14:46:17Z",
        "number":  5898,
        "author":  "davidfowl",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC_cBYg==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "LorenzCK",
                                            "createdAt":  "2019-01-05T17:17:44Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "sfmskywalker",
                                            "createdAt":  "2019-01-28T17:21:33Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "nsmithdev",
                                            "createdAt":  "2019-02-06T16:28:57Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "asbjornu",
                                            "createdAt":  "2019-03-20T10:55:15Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "hypervtechnics",
                                            "createdAt":  "2019-05-06T06:45:29Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "davetheunissen",
                                            "createdAt":  "2019-05-15T03:50:55Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "rasidr",
                                            "createdAt":  "2020-09-04T08:43:10Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "yzorg",
                                            "createdAt":  "2020-10-15T03:50:54Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "penenkel",
                                            "createdAt":  "2021-01-08T18:10:24Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "athinboy",
                                            "createdAt":  "2021-06-28T08:11:31Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Trivivium",
                                            "createdAt":  "2021-10-17T13:46:47Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "cslovell",
                                            "createdAt":  "2022-02-04T10:00:59Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "bachratyg",
                                            "createdAt":  "2022-02-04T10:18:48Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "yodasad",
                                            "createdAt":  "2022-04-07T05:38:10Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "dreamair",
                                            "createdAt":  "2022-04-11T09:18:54Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "alexzaugarov",
                                            "createdAt":  "2022-04-25T05:49:22Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "adrien-constant",
                                            "createdAt":  "2022-06-20T15:00:38Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "pantosha",
                                            "createdAt":  "2023-02-19T19:26:00Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "rajadain",
                                            "createdAt":  "2023-08-08T20:58:38Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "khayes",
                                            "createdAt":  "2023-08-16T08:20:14Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "McGiogen",
                                            "createdAt":  "2023-12-18T13:43:30Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "WeihanLi",
                                            "createdAt":  "2024-07-26T07:12:02Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "0xfeeddeadbeef",
                                            "createdAt":  "2025-02-24T05:01:27Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Abrynos",
                                            "createdAt":  "2025-02-25T08:54:36Z"
                                        }
                                    ],
                          "totalCount":  24
                      },
        "updatedAt":  "2025-07-31T12:59:54Z",
        "body":  "As a follow up from https://github.com/aspnet/Hosting/issues/815, we want to allow specifying the path base as a host setting. Hosting should use this to call `UsePathBase` as the first middleware in the pipeline. IISIntegration does something similar with the `APPL_PATH ` env variable : https://github.com/aspnet/IISIntegration/blob/51554566532237ef76cb105ec5b3f7a5050b9ba4/src/Microsoft.AspNetCore.Server.IISIntegration/WebHostBuilderIISExtensions.cs#L19.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOuybepQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDMxNDM5NzcwOQ==",
                                           "createdAt":  "2017-07-11T10:06:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bklooste",
                                           "body":  "You want to be able to switch between WebListener ( or any host) and Kestrel  which share the same startup before startup is loaded..    Having If (KestralLoaded) in startup is pretty damn ugly .. and makes testing a pain  , i dont think there should be any Host ( including Kestrel)  specific stuff in Startup .",
                                           "updatedAt":  "2017-07-11T10:06:39Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDMxNzkwMjc3Mg==",
                                           "createdAt":  "2017-07-25T23:30:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bklooste",
                                           "body":  "\r\nUsing IStartupFilter is pretty ugly and having  2 methods for the 2 web hosts is pretty poor .   As I mentioned before other systems may do a lot of work before startup eg console hosts , hosted by SF etc etc .  Core and web listener supports this nicely  but Kestrel does not. eg Hosting is a ASP.Net concept in startup I think the port/url hosting needs to be done before  Startup ..  Sure Startup should have access to this but it should be set before. ",
                                           "updatedAt":  "2017-07-25T23:30:21Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDMxNzkzMjE4Nw==",
                                           "createdAt":  "2017-07-26T02:50:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "I\u0027m not sure what you\u0027re referring to but there will be a use path base on the IWebHostBuilder like the method suggests. I don\u0027t know what more you\u0027re asking for.",
                                           "updatedAt":  "2017-07-26T02:50:26Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDMyMjYyNDg2Mg==",
                                           "createdAt":  "2017-08-16T00:26:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotalik",
                                           "body":  "@davidfowl For testing this change, I believe I need to send a request to the application to verify that the HttpContext properly contains the PathBase. \r\n \r\nFirstly, is there a better way to test this?\r\n\r\nIf this is correct, what type of test would this be? It seems to extend past the WebHosts tests because it requires that a request be sent to a server.",
                                           "updatedAt":  "2017-08-16T00:26:09Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDMyMjY4MjQ4NA==",
                                           "createdAt":  "2017-08-16T06:52:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "@jkotalik Whats the issue with sending a request?",
                                           "updatedAt":  "2017-08-16T06:52:04Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDMyMzg3MzE1Ng==",
                                           "createdAt":  "2017-08-21T22:53:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "I assume you\u0027d just be calling UsePathBase. https://github.com/aspnet/HttpAbstractions/blob/87cd79d6fc54bb4abf07c1e380cd7a9498a78612/src/Microsoft.AspNetCore.Http.Abstractions/Extensions/UsePathBaseExtensions.cs#L21\r\nYou can mimic existing hosting and UsePathBase tests.",
                                           "updatedAt":  "2017-08-21T22:53:17Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM2MjgyOTIzNQ==",
                                           "createdAt":  "2018-02-03T16:25:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCNF3Zw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "bklooste",
                                                                               "createdAt":  "2018-03-07T02:29:59Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "soynerdito",
                                                                               "createdAt":  "2018-03-12T12:34:53Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "seanterry",
                                                                               "createdAt":  "2021-02-23T15:48:33Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "cslovell",
                                                                               "createdAt":  "2022-02-04T10:01:46Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  4
                                                         },
                                           "author":  "ygoe",
                                           "body":  "Maybe it\u0027s a good idea to also make the use of proxy forwarding HTTP headers configurable for the hosting environment. Because these headers are provided by the hosting environment and could be different per host. The application shouldn\u0027t need to care about what headers the proxy provides.\r\n\r\nMy applications currently draw the application path base from an environment variable provided by my own hosting environment and put it into UsePathBase, and they also call UseForwardedHeaders because the hosting environment works that way.\r\n\r\nBut I can\u0027t influence third-party applications. They might stop working in some hosting environments.",
                                           "updatedAt":  "2018-02-03T16:25:11Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM3NTg3OTEwNQ==",
                                           "createdAt":  "2018-03-24T11:54:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOAhJLLw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "billbogaiv",
                                                                               "createdAt":  "2018-03-24T13:01:56Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "LorenzCK",
                                                                               "createdAt":  "2019-01-05T17:20:40Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "poke",
                                           "body":  "I just stumbled on this issue again; what is the actual goal of this? To move the configuration of the path base into the `WebHostBuilder`, to ensure that it is always done at the very beginning of the middleware pipeline? And so that people can configure it through the host builder configuration (e.g. using environment variables, command line arguments, etc.?)",
                                           "updatedAt":  "2018-03-24T11:54:25Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM3NTg4MDI0Ng==",
                                           "createdAt":  "2018-03-24T12:02:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "@poke yes that was the intent",
                                           "updatedAt":  "2018-03-24T12:02:13Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM3NTg4MTQ0Nw==",
                                           "createdAt":  "2018-03-24T12:10:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODCqa7g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "cslovell",
                                                                               "createdAt":  "2022-02-04T10:02:24Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "forrestab",
                                                                               "createdAt":  "2023-08-04T01:27:24Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "poke",
                                           "body":  "I see, I might have the chance to work on this then, seeing that this is not planned by someone else at this point.\r\n\r\nDoes the solution include any support for allowing to dynamically set the path base when sitting behaind a reverse proxy? In one of my applications, I currently use a custom `X-Forwarded-Path` HTTP header to dynamically configure the path base (along with the other X-Forwarded headers) to completely uncouple the configuration from the application, moving it into the reverse proxy configuration. \r\n\r\nI don’t assume that we would want to move such a functionality into the webhost but keep it as custom middleware then, right (Just like the UseForwardedHeaders middleware)? In that case, we would have to make sure that the stuff in the webhost will not conflict here and that you could still overwrite the path base *properly* in user middleware.",
                                           "updatedAt":  "2018-03-24T12:10:07Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM3NTg5MjU3OQ==",
                                           "createdAt":  "2018-03-24T14:17:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "X-Forwarded-Path would be an interesting add to UseForwardedHeaders, though it appears to be far less common.\r\n\r\nThe ask for Hosting is only for a static config based mapping for basic reverse proxy scenarios.",
                                           "updatedAt":  "2018-03-24T14:17:25Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM3NTg5MzIxOA==",
                                           "createdAt":  "2018-03-24T14:26:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODkB6pw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "fume",
                                                                               "createdAt":  "2019-05-02T12:45:08Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "irperez",
                                                                               "createdAt":  "2020-10-13T17:26:07Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jovton",
                                                                               "createdAt":  "2021-07-28T11:33:50Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Angelinsky7",
                                                                               "createdAt":  "2024-02-08T13:32:10Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "epsitec",
                                                                               "createdAt":  "2024-05-31T12:50:31Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  5
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "That said, I\u0027ve seen some variants of this request in forums that UsePathBase does not cover. If the proxy trims or prepends the path then UsePathBase doesn\u0027t work, it relies on an unchanged path.\r\n\r\nExamples:\r\n\r\nA basic pass through:\r\nPublic Path: /foo/api/1\r\nProxy forwards: /foo/api/1\r\nFixup needed: UsePathBase(/foo), Path becomes: /api/1 and PathBase becomes: /foo\r\n\r\nVariant 1: Proxy trims the path\r\nPublic Path: /foo/api/1\r\nProxy forwards /api/1\r\nFixup needed: Set PathBase to /foo, leave Path alone\r\n\r\nVariant 2: Proxy prepends path\r\nPublic Path: /api/1\r\nProxy forwards /foo/api/1\r\nFixup needed: Remove /foo from Path, don\u0027t set PathBase\r\n\r\nUsePathBase might need some overloads to handle these: Transfer, Set, Trim. I don\u0027t know how easily we could get those all into hosting config unless they were all separate parameters.",
                                           "updatedAt":  "2018-03-24T14:26:35Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQyMDk4MTcwNg==",
                                           "createdAt":  "2018-09-13T12:00:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC0zeNg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "TheSned",
                                                                               "createdAt":  "2018-09-14T22:47:33Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "xivk",
                                                                               "createdAt":  "2019-01-05T12:56:32Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "LorenzCK",
                                                                               "createdAt":  "2019-01-05T17:21:06Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "gAdrev",
                                                                               "createdAt":  "2019-02-18T13:54:22Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "hammypants",
                                                                               "createdAt":  "2019-02-25T04:14:33Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "fume",
                                                                               "createdAt":  "2019-05-02T12:44:58Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "StasPerekrestov",
                                                                               "createdAt":  "2019-05-14T14:44:18Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "0x53A",
                                                                               "createdAt":  "2019-10-15T15:00:16Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "cslovell",
                                                                               "createdAt":  "2022-02-04T10:02:58Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "0xfeeddeadbeef",
                                                                               "createdAt":  "2023-01-25T16:46:57Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  10
                                                         },
                                           "author":  "damianh",
                                           "body":  "Just got burned by this, specifically proxy trimming the path. Sorry I have nothing more valuable to add other than feedback from the wild.",
                                           "updatedAt":  "2018-09-13T12:00:38Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwNzg3NTQ1Mw==",
                                           "createdAt":  "2019-07-02T23:01:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC0zeYA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "farlop",
                                                                               "createdAt":  "2019-07-09T20:33:38Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "donaldgray",
                                                                               "createdAt":  "2019-07-24T12:32:40Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jonny64bit",
                                                                               "createdAt":  "2019-11-21T14:17:56Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Noksa",
                                                                               "createdAt":  "2020-04-28T13:58:03Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "dluciano",
                                                                               "createdAt":  "2020-06-01T19:52:11Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "msanfilippo85",
                                                                               "createdAt":  "2021-03-06T18:05:20Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jovton",
                                                                               "createdAt":  "2021-07-28T11:34:14Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ericis",
                                                                               "createdAt":  "2021-07-30T00:14:07Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "errezz",
                                                                               "createdAt":  "2021-08-06T15:31:06Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "0xfeeddeadbeef",
                                                                               "createdAt":  "2023-01-25T16:47:27Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  10
                                                         },
                                           "author":  "shanselman",
                                           "body":  "I\u0027m pretty sure this is the inverse of PathBase. I\u0027m having to add it back in order to get ~ to work.\r\n\r\nI\u0027m taking http://staging.hanselman.com/blog and pointing it to http://hanselmanblog.azurewebsites.net so I need to add it BACK not strip it. Per https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/proxy-load-balancer?view=aspnetcore-2.2#deal-with-path-base-and-proxies-that-change-the-request-path \r\n\r\n```\r\napp.Use((context, next) =\u003e\r\n{\r\n     context.Request.PathBase = new PathString(/blog);\r\n     return next.Invoke();\r\n});\r\n```",
                                           "updatedAt":  "2019-07-02T23:01:41Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwODYxNDYxMg==",
                                           "createdAt":  "2019-07-05T03:05:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "robertlestak",
                                           "body":  "I don\u0027t have a solution for the underlying AspNetCore issue, however I found a viable server-side workaround until a DotNet Core solution is found.\r\n\r\nIf a unique proxy_pass location block is created in the proxy server for every single DotNet Route, DotNet will be able to respond as expected.\r\n\r\nThis of course requires close coordination between server admins and app devs, or a script which dynamically modifies location blocks with each iterative update of the backing DotNet application.\r\n\r\nWhile certainly is not a viable long-term solution, it does ensure that in the interim, while this bug is being addressed, DotNet APIs will \"play nice\" behind path-rewriting proxies.",
                                           "updatedAt":  "2019-07-05T03:05:25Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYzMzUyODQ1Mw==",
                                           "createdAt":  "2020-05-25T11:35:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCjCKGA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Ruikuan",
                                                                               "createdAt":  "2022-06-22T06:39:37Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "Andreas-Hjortland",
                                           "body":  "I encountered this issue today, and I solved it by adding a custom middleware which looks at the `X-Path-Base` header that I configured my reverse proxy to set, which sets the PathBase and Path based on the value in that header (shamelessly copied the implementation from [UsePathBaseMiddleware.cs](https://github.com/dotnet/aspnetcore/blob/master/src/Http/Http.Abstractions/src/Extensions/UsePathBaseMiddleware.cs)). Would it be possible to extend the [ForwardedHeadersMiddleware](https://github.com/dotnet/aspnetcore/blob/master/src/Middleware/HttpOverrides/src/ForwardedHeadersMiddleware.cs) and its corresponding Options class with something like this? I can create a pull request if this looks like a sound solution to the problem.\r\n\r\n```c#\r\napp.Use(async (context, next) =\u003e\r\n{\r\n    // TODO Check if host is valid based on hosts in ForwardedHeadersOptions\r\n    if (context.Request.Headers.TryGetValue(\"X-Path-Base\", out var pathBase) \u0026\u0026\r\n        context.Request.Path.StartsWithSegments(pathBase.Last(), out var matchedPath, out var remainingPath))\r\n    {\r\n        try\r\n        {\r\n            var originalPath = context.Request.Path;\r\n            var originalPathBase = context.Request.PathBase;\r\n            context.Request.PathBase = matchedPath;\r\n            context.Request.Path = remainingPath;\r\n            await next();\r\n        }\r\n        finally\r\n        {\r\n            context.Request.PathBase = new PathString(matchedPath);\r\n            context.Request.Path = new PathString(remainingPath);\r\n        }\r\n    }\r\n    else\r\n    {\r\n        await next();\r\n    }\r\n});\r\n```",
                                           "updatedAt":  "2020-05-25T11:40:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde841BVd9",
                                           "createdAt":  "2021-07-30T00:25:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCNF4tw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "naartjie",
                                                                               "createdAt":  "2021-07-30T17:53:07Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "cslovell",
                                                                               "createdAt":  "2022-02-04T10:03:39Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "ericis",
                                           "body":  "Just spent a few hours toward discovering this issue.\r\n\r\nI\u0027m using Kubernetes + Traefik reverse proxy, which strips the prefix path for two dockerized .NET sample apps. Of course, the static assets are attempting to use absolute paths at the root path, but when those URLs bounce through the proxy, they\u0027re not recognized.\r\n\r\ne.g. \"/app-1\" on traefik strips the prefix to \"/\" for .NET and the sample app loves it, so it responds with a 200, but pukes out absolute URLs to the root \"/\", because it doesn\u0027t understand that it\u0027s running behind a proxy.\r\n\r\n**Naturally, I thought... \"this is a ubiquitous problem that has been solved using environment variables!\" ...**\r\n\r\nI \"could\" start coding, but why should we have to code this? I want to demo the awesome work of .NET Core teams out-of-the-box! 😉\r\n\r\nIs there support yet for something like `ASPNETCORE_APPL_PATH` that I can pass to the docker container or for a header that I can inject using Traefik?\r\n\r\np.s. (rant) no solution for reverse-proxy path rewrites since 2017?! Posted by @davidfowl and high-fived by @shanselman in 2019 ?? I\u0027m so confused why this isn\u0027t solved with an environment variable, configuration and or command line argument...",
                                           "updatedAt":  "2021-08-02T13:23:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde841BWPN",
                                           "createdAt":  "2021-07-30T00:35:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericis",
                                           "body":  "I\u0027d love to see this:\r\n`docker run --name aspnet-sample -d -p 8080:80 -e ASPNETCORE_APPL_PATH=/dotnet mcr.microsoft.com/dotnet/sample\r\ns:aspnetapp`\r\n\r\n... result in:\r\n\r\n- 200: http://localhost:8080/dotnet *with static assets referenced at the URL \"/dotnet\"\r\n- 404: http://localhost:8080/",
                                           "updatedAt":  "2021-07-30T00:35:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde841Bhe1",
                                           "createdAt":  "2021-07-30T03:00:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "nsmithdev",
                                           "body":  "https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/proxy-load-balancer?view=aspnetcore-3.1#deal-with-path-base-and-proxies-that-change-the-request-path\r\n\r\n```\r\nvar appPath = Environment.GetEnvironmentVariable(\"ASPNETCORE_APPL_PATH\");\r\nif (!string.IsNullOrEmpty(appPath))\r\n{\r\n    app.Use((context, next) =\u003e\r\n    {\r\n        context.Request.PathBase = new PathString(appPath);\r\n        return next();\r\n    });\r\n}\r\n```",
                                           "updatedAt":  "2021-07-30T03:00:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde849YfA0",
                                           "createdAt":  "2022-02-04T10:09:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODDEt8A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "rajadain",
                                                                               "createdAt":  "2023-08-08T20:54:51Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "cslovell",
                                           "body":  "I\u0027m genuinely surprised this isn\u0027t implemented. This is standard [12 factor app](https://12factor.net/config) stuff and for those of us in decoupled settings, where software built by one team is deployed internally in several locations, we need to be able to configure this from the environment in a self-service manner without rebuilding the application or asking another team to rewrite their software to look for the environment variable. In other words, if the app is already pulling environment variables in, there should be a standard environment variable that we can use to set the base path. For instance: \r\n\r\nA .NET application built by Team One is set to receive traffic at the root path, example.com. However, Team Two will deploy this application at example.com/team1/app, so they set up a proxy that forwards traffic and set the environment variable that instructs the application to preface all requests with this base path. Team Two does not need to bother Team One about ensuring that the code to look for environment variables to set Base Path is set in all their applications, since this would be a standard part of the .NET library. ",
                                           "updatedAt":  "2022-02-04T10:14:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde849YgZs",
                                           "createdAt":  "2022-02-04T10:17:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCXZIJw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ericis",
                                                                               "createdAt":  "2022-02-16T00:19:39Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "dreamair",
                                                                               "createdAt":  "2022-04-11T09:19:27Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "cslovell",
                                           "body":  "\u003e https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/proxy-load-balancer?view=aspnetcore-3.1#deal-with-path-base-and-proxies-that-change-the-request-path\r\n\u003e \r\n\u003e ```\r\n\u003e var appPath = Environment.GetEnvironmentVariable(\"ASPNETCORE_APPL_PATH\");\r\n\u003e if (!string.IsNullOrEmpty(appPath))\r\n\u003e {\r\n\u003e     app.Use((context, next) =\u003e\r\n\u003e     {\r\n\u003e         context.Request.PathBase = new PathString(appPath);\r\n\u003e         return next();\r\n\u003e     });\r\n\u003e }\r\n\u003e ```\r\n\r\nYes - but this will need to be done for every application, despite being a standard component of 12 factor app development. The nature of organizational bureaucracy may imply that this change is not possible by the team deploying the software. Setting this through an environment variable that .NET recognizes by default is much more appropriate.",
                                           "updatedAt":  "2022-02-04T10:17:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde84-iKrg",
                                           "createdAt":  "2022-02-23T19:38:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCZdeUQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "rob3c",
                                                                               "createdAt":  "2022-02-23T20:20:22Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ericis",
                                                                               "createdAt":  "2022-04-23T03:32:33Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "adityamandaleeka",
                                           "body":  "Cleared the milestone so this shows up in our next triage discussion.",
                                           "updatedAt":  "2022-02-23T19:38:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde84-ib6v",
                                           "createdAt":  "2022-02-23T21:04:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODlWi7Q==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "wscherphof",
                                                                               "createdAt":  "2024-06-12T06:11:52Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "adityamandaleeka",
                                           "body":  "Related: https://github.com/dotnet/aspnetcore/issues/23263 (doing that would give people another way to set the path base)",
                                           "updatedAt":  "2022-02-23T21:04:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde84-ib_y",
                                           "createdAt":  "2022-02-23T21:04:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCieM-Q==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "ROCKET",
                                                                               "user":  "ericis",
                                                                               "createdAt":  "2022-04-23T03:30:42Z"
                                                                           },
                                                                           {
                                                                               "content":  "EYES",
                                                                               "user":  "ericis",
                                                                               "createdAt":  "2022-04-23T03:30:46Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "JiriZidek",
                                                                               "createdAt":  "2022-06-16T00:18:56Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "TahirAhmadov",
                                                                               "createdAt":  "2022-06-17T15:49:19Z"
                                                                           },
                                                                           {
                                                                               "content":  "ROCKET",
                                                                               "user":  "TahirAhmadov",
                                                                               "createdAt":  "2022-06-17T15:49:23Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  5
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `.NET 7 Planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2022-02-23T21:04:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85HX62A",
                                           "createdAt":  "2022-07-27T22:44:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2022-07-27T22:44:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86flNsp",
                                           "createdAt":  "2025-02-24T02:53:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEHVDoQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "0xfeeddeadbeef",
                                                                               "createdAt":  "2025-02-24T05:03:01Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "epsitec",
                                                                               "createdAt":  "2025-02-24T06:56:14Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "adityamandaleeka",
                                           "body":  "Looks like this ancient issue could use some follow up... we added support for X-Forwarded-Prefix in the ForwardedHeadersMiddleware in .NET 8 (https://github.com/dotnet/aspnetcore/issues/23263), which allows specifying a path base for forwarded requests. If your application is running behind infrastructure that modifies the request path, you can configure the middleware to process this header using something like this:\n\n```csharp\nbuilder.Services.Configure\u003cForwardedHeadersOptions\u003e(options =\u003e\n{\n    options.ForwardedHeaders = ForwardedHeaders.XForwardedFor |\n                               ForwardedHeaders.XForwardedProto |\n                               ForwardedHeaders.XForwardedHost |\n                               ForwardedHeaders.XForwardedPrefix;\n});\n\napp.UseForwardedHeaders();\n```\n\nWith this, Request.PathBase will be correctly set based on X-Forwarded-Prefix. This resolves the issue for forwarded requests, which was the primary scenario discussed here.\n\nIf you\u0027ve tried this out and it doesn\u0027t solve the issue for your scenario, please let us know.",
                                           "updatedAt":  "2025-02-24T02:53:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86fleh3",
                                           "createdAt":  "2025-02-24T04:16:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "Do all proxies set this? (it is the norm in nginx etc)",
                                           "updatedAt":  "2025-02-24T04:16:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86flgOS",
                                           "createdAt":  "2025-02-24T04:24:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "shanselman",
                                           "body":  "Yes @davidfowl this is the standard and has been for years https://www.hanselman.com/blog/dealing-with-application-base-urls-and-razor-link-generation-while-hosting-aspnet-web-apps-behind-reverse-proxies and https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For and https://www.loadbalancer.org/blog/nginx-and-x-forwarded-for-header/",
                                           "updatedAt":  "2025-02-24T04:24:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86fltOb",
                                           "createdAt":  "2025-02-24T05:22:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "I\u0027m specifically talking about `X-Forwarded-Prefix`.",
                                           "updatedAt":  "2025-02-24T05:22:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86flu3G",
                                           "createdAt":  "2025-02-24T05:29:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "shanselman",
                                           "body":  "@davidfowl my bad, yes X-Forwarded-Prefix is common for this reason https://josef.codes/using-the-x-forwarded-prefix-header-to-prefix-your-hateoas-links/ and is used to manage URL prefixes in reverse proxy setups, and is been around a while",
                                           "updatedAt":  "2025-02-24T05:29:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86flwPj",
                                           "createdAt":  "2025-02-24T05:34:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEHYq0w==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "epsitec",
                                                                               "createdAt":  "2025-02-24T06:55:41Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "0xfeeddeadbeef",
                                                                               "createdAt":  "2025-02-24T15:32:18Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "I think closing the loop here might be updating our docs with how to configure this on popular reverse proxies (I\u0027m not sure it\u0027s set by default in all the places). Doing a cursory glance I don\u0027t see top matches anywhere.\n\nAlso it seems like there are still cases where [explicit configuration is preferred](https://learn.microsoft.com/en-us/aspnet/core/host-and-deploy/proxy-load-balancer?view=aspnetcore-9.0#work-with-path-base-and-proxies-that-change-the-request-path)",
                                           "updatedAt":  "2025-02-24T05:34:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde867Jt6l",
                                           "createdAt":  "2025-07-31T12:59:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidglassborow",
                                           "body":  "Just having the same issue, agree the docs might need an update.  In my case, we have a production site running in IIS using multiple app pools under a single unified url space, but want to be able to spin up the same code inside Azure Container Apps for staging, testing etc. \n\nUsing nginix I used the following, and the asp ForwardedHeaders middleware then sorted out all the urls correctly\n\n```\n        location /admin/ {\n            proxy_pass http://admin/;\n            proxy_set_header Host $host;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            proxy_set_header X-Forwarded-Proto $scheme;\n            # nginx doesn\u0027t have a variable for the path, so need to hardcode\n            proxy_set_header X-Forwarded-Prefix \"/admin/\";\n        }\n```\n\n",
                                           "updatedAt":  "2025-07-31T12:59:54Z"
                                       }
                                   ],
                         "totalCount":  32
                     },
        "title":  "Add support for specifying the PathBase for all requests",
        "labels":  [
                       "enhancement",
                       "affected-few",
                       "severity-minor",
                       "area-hosting",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/5902",
        "createdAt":  "2017-08-01T19:27:07Z",
        "number":  5902,
        "author":  "halter73",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-10-28T14:10:11Z",
        "body":  "This should probably have a low priority, because I don\u0027t know of any real assemblies that define multiple hosting startup classes.\r\n\r\nHowever, the order of attributes returned by `Assembly.GetCustomAttributes\u003cHostingStartupAttribute\u003e()` can affect whether or not a hosting startup class gets executed or not. It should also be trivial to fix.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOMnifYA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM0MjY0NjU0OQ==",
                                           "createdAt":  "2017-11-07T22:34:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "muratg",
                                           "body":  "@pakrym I think we either need to fix this or seperate AppService/KeyVault hostingstartup into two assemblies.",
                                           "updatedAt":  "2017-11-07T22:34:37Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg0Njc2NTkyMA==",
                                           "createdAt":  "2021-05-24T05:56:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "collinstevens",
                                           "body":  "If I\u0027m understanding this correctly, the intent is to capture the exceptions from creating all the startup classes instead of failing on the first one and report them all in the aggregate exception.\r\n\r\nI believe the relevant sections are below; If so, I would like to take this and make the changes.\r\n\r\nhttps://github.com/dotnet/aspnetcore/blob/main/src/Hosting/Hosting/src/GenericHost/GenericWebHostBuilder.cs#L138-L161\r\n\r\nhttps://github.com/dotnet/aspnetcore/blob/main/src/Hosting/Hosting/src/WebHostBuilder.cs#L235-L258",
                                           "updatedAt":  "2021-05-24T05:58:32Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "If one hosting startup class fails to execute, subsequent hosting startup classes defined in the assembly won\u0027t be executed.",
        "labels":  [
                       "bug",
                       "severity-minor",
                       "affected-very-few",
                       "area-hosting",
                       "area-networking",
                       "help candidate"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/5909",
        "createdAt":  "2017-12-08T05:21:00Z",
        "number":  5909,
        "author":  "Tratcher",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOB4K1qw==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ladenedge",
                                            "createdAt":  "2021-08-28T22:17:05Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2023-08-24T22:49:48Z",
        "body":  "RE: https://github.com/Microsoft/ApplicationInsights-aspnetcore/issues/278\r\n\r\nHTTP/1.0 requests do not provide Host headers, and HTTP/1.1 requests are required to provide it but it may be empty. This causes failures for components like loggers that want to describe the request with a Uri, or middleware that create absolute links like redirect-to-https. This is a protocol level problem that applies to supported servers.\r\n\r\nProposal: Hosting can provide a default host setting (from config) and apply it whenever the host header is missing or empty. This would happen right when the request is received and before any diagnostics take place:\r\nhttps://github.com/aspnet/Hosting/blob/9f1e6607dd1b3d15bc6c42146629677c6b455fd0/src/Microsoft.AspNetCore.Hosting/Internal/HostingApplication.cs#L35-L37\r\n\r\n*Updated proposal*\r\nIn the absence of config, inspect IServerAddresses for a url that matches the request scheme and port. The new Https redirect middleware does something similar:\r\nhttps://github.com/aspnet/BasicMiddleware/blob/dd038387285bf9fa8dc52910ef762b9843ff22e4/src/Microsoft.AspNetCore.HttpsPolicy/HttpsRedirectionMiddleware.cs#L122-L139\r\n\r\nWorkarounds:\r\n- The same logic could be applied via middleware but it wouldn\u0027t help these early diagnostic code paths.\r\n- All consumers would need to be aware of the possibility of a missing host and provide some fallback logic. For loggers this isn\u0027t too bad, they could leave it out or substitute \"unspecified\", but redirect-to-https would have no default recourse.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOV79IGA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM1MjE1Mjc4OA==",
                                           "createdAt":  "2017-12-16T02:03:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "charlessolar",
                                           "body":  "As noted in other thread this would fix issues related to using HaProxy and aspnetcore - would like to have a fix sooner rather than later as its a slightly big problem for me right now.\r\n\r\nAll health checks from HaProxy are failing by default - currently investigating workarounds.. including having haproxy use http/1.1 or disabling logging somehow\r\n\r\nWorkaround for HaProxy is like so:\r\n\r\n```\r\noption  httpchk GET /health HTTP/1.1\\r\\nHost:\\ www\r\n```\r\n\r\nor if like me you are using `marathon-lb` as part of DCOS then you should label your service like this:\r\n\r\n```\r\n\"HAPROXY_0_BACKEND_HTTP_HEALTHCHECK_OPTIONS\": \"  option  httpchk GET {healthCheckPath} HTTP/1.1\\\\r\\\\nHost:\\\\ www\\n  timeout check {healthCheckTimeoutSeconds}s\\n\"\r\n```",
                                           "updatedAt":  "2017-12-16T05:51:20Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM1MjE3NjkwMA==",
                                           "createdAt":  "2017-12-16T11:13:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "@volak you can work around the issue right now by implementing your own `IHttpContextFactory` and setting the host header same as the above is proposing.\r\n\r\n",
                                           "updatedAt":  "2017-12-16T11:13:34Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM1OTA1Nzg2NQ==",
                                           "createdAt":  "2018-01-19T18:58:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "muratg",
                                           "body":  "cc @glennc ",
                                           "updatedAt":  "2018-01-19T18:58:25Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM1OTA3NjIwNA==",
                                           "createdAt":  "2018-01-19T20:10:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Note to self, Host includes a port that\u0027s scheme specific. In a reverse proxy scenario we would not know what that port would be, nor would Hosting be aware of the public scheme as forwarders would not be applied yet. Should apps rely on x-forwarded-host to override the default value in that scenario?\r\n\r\nIf the config value does not include a port then Hosting can add one by looking at the local port.",
                                           "updatedAt":  "2018-01-19T20:10:50Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM1OTA3ODk0Mw==",
                                           "createdAt":  "2018-01-19T20:22:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Drawaes",
                                           "body":  "Note to you. Any 1/2 decent reverse proxy with rewrite said header if it\u0027s\nan issue\n",
                                           "updatedAt":  "2018-01-19T20:22:51Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM2MTMyMTkwOQ==",
                                           "createdAt":  "2018-01-29T17:30:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "@glennc I found a way to provide an default host value. See the updated proposal above.",
                                           "updatedAt":  "2018-01-29T17:30:28Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM2MTMyMjczNg==",
                                           "createdAt":  "2018-01-29T17:33:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "Would that happen on every request?",
                                           "updatedAt":  "2018-01-29T17:33:16Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM2MTMyMzIyNQ==",
                                           "createdAt":  "2018-01-29T17:34:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Only requests without a host header, and there\u0027d be room for caching.",
                                           "updatedAt":  "2018-01-29T17:34:57Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM2NjA5MDExNQ==",
                                           "createdAt":  "2018-02-15T22:57:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "muratg",
                                           "body":  "Bringing back to triage",
                                           "updatedAt":  "2018-02-15T22:57:04Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQwNTY1Njg4Mg==",
                                           "createdAt":  "2018-07-17T17:10:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "@glennc @shirhatti this feature is more relevant for HTTP/2 where the Host/Authority is optional.",
                                           "updatedAt":  "2018-07-17T17:10:10Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg0OTgxOTA4Mw==",
                                           "createdAt":  "2021-05-27T17:43:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB4K1rg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ladenedge",
                                                                               "createdAt":  "2021-08-28T22:17:25Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Kestrel is getting used more as an edge server. Bumping from backlog for re-triage.\r\n\r\nWhat do IIS/Http.Sys do? I assume they require a host for routing.",
                                           "updatedAt":  "2021-05-27T17:43:02Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1MzM1NjAyOA==",
                                           "createdAt":  "2021-06-02T20:19:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `Next sprint planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2021-06-02T20:19:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842GmFw",
                                           "createdAt":  "2021-08-28T22:39:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ladenedge",
                                           "body":  "Just ran into this with a pretty basic Kestrel server on our VMs:\r\n\r\n```\r\nMicrosoft.AspNetCore.Server.Kestrel: Connection id \"0HMB4B4V678A2\", Request id \"0HMB4B4V678A2:00000002\": An unhandled exception was thrown by the application. System.UriFormatException: Invalid URI: The hostname could not be parsed.\r\n at System.Uri.CreateThis(String uri, Boolean dontEscape, UriKind uriKind)\r\n at Microsoft.AspNetCore.Components.NavigationManager.set_BaseUri(String value)\r\n at Microsoft.AspNetCore.Components.NavigationManager.Initialize(String baseUri, String uri)\r\n ...\r\n```\r\n\r\nFiddler confirms this occurs due to requests without a Host header.  Eg:\r\n\r\n```\r\nGET https:///?healthcheck HTTP/1.0\r\nUser-Agent: Fiddler\r\n```\r\n\r\nMy new workaround, in case it helps anyone, is a small piece of middleware:\r\n\r\n```cs\r\n// Usage: app.UseMiddleware\u003cAddHostHeader\u003e();\r\npublic class AddHostHeader\r\n{\r\n    public AddHostHeader(RequestDelegate next)\r\n    {\r\n        Next = next;\r\n    }\r\n\r\n    RequestDelegate Next { get; }\r\n\r\n    public async Task Invoke(HttpContext httpContext)\r\n    {\r\n        if (!httpContext.Request.Headers.ContainsKey(\"Host\"))\r\n            httpContext.Request.Headers[\"Host\"] = \"UNKNOWN-HOST\";\r\n\r\n        await Next(httpContext);\r\n    }\r\n}\r\n```\r\n\r\n\"UNKNOWN-HOST\" is what the AppInsights team used in their issue [Requests with the url http:/// causes the exception](https://github.com/microsoft/ApplicationInsights-aspnetcore/issues/278).",
                                           "updatedAt":  "2021-08-28T22:39:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85KP-AZ",
                                           "createdAt":  "2022-09-13T17:07:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2022-09-13T17:07:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85XVlZD",
                                           "createdAt":  "2023-03-12T19:08:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericsampson",
                                           "body":  "For the empty case, isn\u0027t the required behavior [called out in the HTTP RFCs](https://www.rfc-editor.org/rfc/rfc9112#section-3.2.2-7) as copied below?\r\nOtherwise there are security issues.\r\n\r\n\u003eWhen a proxy receives a request with an absolute-form of request-target, the proxy MUST ignore the received Host header field (if any) and instead replace it with the host information of the request-target. A proxy that forwards such a request MUST generate a new Host field value based on the received request-target rather than forward the received Host field value.\r\n\r\n\u003e When an origin server receives a request with an absolute-form of request-target, the origin server MUST ignore the received Host header field (if any) and instead use the host information of the request-target. Note that if the request-target does not have an authority component, an empty Host header field will be sent in this case.",
                                           "updatedAt":  "2023-03-12T19:08:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85XVliA",
                                           "createdAt":  "2023-03-12T19:11:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericsampson",
                                           "body":  "Also fwiw, the RFCs also call out that compliant implementations [MUST reject http/https URIs without a specified authority](https://www.rfc-editor.org/rfc/rfc9110#section-4.2.1-4), like in the `GET http:///` example originally linked to:\r\n\r\n\u003eA sender MUST NOT generate an \"http\" URI with an empty host identifier. \r\n\u003e A recipient that processes such a URI reference MUST reject it as invalid.\r\n",
                                           "updatedAt":  "2023-03-12T19:11:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85XqaM2",
                                           "createdAt":  "2023-03-15T19:44:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Those are referring to requests formatted like this:\r\n\r\nGET http://host:port/path HTTP/1.1\r\n\r\nbut the more common format looks like this:\r\n\r\nGET /path HTTP/1.1\r\nHost: host:port\r\n\r\nIn this case the Host header is required to be present, but it\u0027s allowed to be empty:\r\n\r\nGET /path HTTP/1.1\r\nHost: \r\n\r\nLuckily few clients actually do this.",
                                           "updatedAt":  "2023-03-15T19:44:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Xvv8_",
                                           "createdAt":  "2023-03-16T14:54:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericsampson",
                                           "body":  "Ah OK, the original post in that appinsights thread was misleading - they initially mentioned that it was doing something like `GET http:///`, which is invalid according to the RFC. \n\nSo that\u0027s why I was confused, I thought they were talking about an absolute-type request.\n\nIn a later comment that I missed reading, they clarified that the actual call was more like what you showed. \nThanks",
                                           "updatedAt":  "2023-03-16T14:55:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Xv0gY",
                                           "createdAt":  "2023-03-16T15:03:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericsampson",
                                           "body":  "Just for my own education I went looking, and it seems that the RFC covers the actual scenario that you\u0027re talking about, including substituting a default when the Host header is empty (if that\u0027s safe in the given situation)\nCheers\n\n\u003e If the target URI\u0027s authority component is empty and its URI scheme requires a non-empty authority (as is the case for \"http\" and \"https\"), the server can reject the request or determine whether a configured default applies that is consistent with the incoming connection\u0027s context. (snip)\n\n\u003e An empty authority is replaced with the configured default before further processing of the request.\n\n\u003e Supplying a default name for authority within the context of a secured connection is inherently unsafe if there is any chance that the user agent\u0027s intended authority might differ from the default. A server that can uniquely identify an authority from the request context MAY use that identity as a default without this risk. Alternatively, it might be better to redirect the request to a safe resource that explains how to obtain a new client.\n\n",
                                           "updatedAt":  "2023-03-16T15:03:13Z"
                                       }
                                   ],
                         "totalCount":  19
                     },
        "title":  "Provide a default Host header when it\u0027s missing/empty",
        "labels":  [
                       "Needs: Design",
                       "enhancement",
                       "severity-nice-to-have",
                       "affected-very-few",
                       "area-hosting",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/5915",
        "createdAt":  "2018-03-15T19:16:22Z",
        "number":  5915,
        "author":  "pakrym",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-08-24T22:50:01Z",
        "body":  "Enables us to test gracefull shutdown scenarios in functional tests.\r\nSend `Q` to IIS Express and `Ctrl+C` to other servers.\r\nPossibly throw if the server doesn\u0027t stop after a timeout.\r\n\r\nRequired for https://github.com/aspnet/IISIntegration/issues/672",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOFpfrVQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM3OTA1NDkzMw==",
                                           "createdAt":  "2018-04-05T19:46:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pakrym",
                                           "body":  "@muratg consider for MQ work",
                                           "updatedAt":  "2018-04-05T19:46:23Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Add graceful shutdown feature to deployers",
        "labels":  [
                       "task",
                       "affected-few",
                       "severity-minor",
                       "area-hosting",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/5916",
        "createdAt":  "2018-03-15T19:16:57Z",
        "number":  5916,
        "author":  "cwe1ss",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-08-24T22:50:02Z",
        "body":  "[I\u0027m writing an OpenTracing instrumentation library](https://github.com/opentracing-contrib/csharp-netcore) that uses the BeginRequest/RequestEnd `DiagnosticSource` events and I\u0027d like to use `TestHost` to write some unit/integration tests.\r\n\r\nHowever, it seems like the HttpClient currently only awaits the response and it doesn\u0027t wait until _application.DisposeContext() is called (which then creates the DiagnosticSource events). \r\n\r\nhttps://github.com/aspnet/Hosting/blob/a041b368bb18a00e4c05c6de36928cf0174a6f60/src/Microsoft.AspNetCore.TestHost/HttpContextBuilder.cs#L70-L71\r\n\r\nAs `TestHost` is for testing the server, it would be great if the client would wait until the request is 100% processed on the server. I currently have to wait/poll a little bit until the underlying task is actually finished.\r\n\r\nWould you accept a PR for this?",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOGjIrww==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM3MzUwMTY4OA==",
                                           "createdAt":  "2018-03-15T19:50:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "This matches the behavior of a real server, I\u0027d hesitate to change it. There are always events that can take place after the client receives the response. Logging has to account for delayed actions such as this.",
                                           "updatedAt":  "2018-03-15T19:50:39Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM3MzUwMzg2MA==",
                                           "createdAt":  "2018-03-15T19:58:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "cwe1ss",
                                           "body":  "Thx for the quick response. I understand, but isn\u0027t the main use case for `TestHost` to give developers a way to test the **server code**?\r\n\r\nHow about providing an option so that developers could choose the behavior?",
                                           "updatedAt":  "2018-03-15T19:58:38Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM3MzUzNDAwNA==",
                                           "createdAt":  "2018-03-15T21:49:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "TestHost was designed to facilitate testing individual or sets of middleware and up-stack components, and for those we try to mimic normal host/server behavior. What you\u0027re tying to test is part of the Hosting infrastructure itself. To test something inside Hosting I suggest targeting it directly like in https://github.com/aspnet/Hosting/blob/e7541e99a7c125f29d30c1454d463df65d6eab98/test/Microsoft.AspNetCore.Hosting.Tests/HostingApplicationTests.cs",
                                           "updatedAt":  "2018-03-15T21:50:02Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM3Mzc0MTcwNg==",
                                           "createdAt":  "2018-03-16T15:05:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "cwe1ss",
                                           "body":  "I changed my tests but this is a lot more complex than using TestHost because I need to set up request parameters etc as well. So I\u0027m now fiddling around with types from your `Internal` namespace and I had to copy some code from TestHost as well. 😞 \r\n\r\nIdeally, it shouldn\u0027t be necessary to use types from the `Internal` namespace to test public functionality.\r\n\r\nUsing `TestHost` would also make it much easier for me to write some benchmarks that compare \"a reasonably real\" minimal pipeline with vs. without my instrumentation. The test code I\u0027m using now is not really useful for that IMO.\r\n\r\nAnyway, I still don\u0027t think that the current behavior of `TestHost` is required/useful for tests. What difference would it make for unit tests if the client waits until `hostingApplication.DisposeContext()` is called? It wouldn\u0027t matter for the scenarios you\u0027ve described (e.g. testing middleware), would it?\r\n\r\nAre there any other scenarios where this behavior is useful?\r\n\r\nThanks for taking the time to think about this @Tratcher ! I appreciate it!",
                                           "updatedAt":  "2018-03-16T15:05:18Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM3Mzg2MzIyNg==",
                                           "createdAt":  "2018-03-16T22:35:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOAUUBQA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "cwe1ss",
                                                                               "createdAt":  "2018-03-23T15:23:38Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "We\u0027ll discuss this in triage and get back to you.\r\n\r\n@muratg @glennc ",
                                           "updatedAt":  "2018-03-16T22:35:55Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQzOTQ5NTYxOQ==",
                                           "createdAt":  "2018-11-16T19:09:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "muratg",
                                           "body":  "@davidfowl What\u0027s the bug? What\u0027s your proposed fix for it?",
                                           "updatedAt":  "2018-11-16T19:09:45Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "Requests to TestHost do not await the `RequestEnd` diagnostic events.",
        "labels":  [
                       "bug",
                       "severity-minor",
                       "affected-very-few",
                       "area-hosting",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/5938",
        "createdAt":  "2018-09-17T13:30:05Z",
        "number":  5938,
        "author":  "jgiacomini",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC8AV2w==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "alppalmsens",
                                            "createdAt":  "2023-11-03T17:38:23Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ArkadiyShuvaev",
                                            "createdAt":  "2024-10-21T13:20:51Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2023-10-28T14:09:48Z",
        "body":  "Hello,\r\n\r\nI just found a nasty bug on HttpClient created from TestServer.\r\nWhen I call a request which took 2 seconds if I cancel it after one second.\r\nThe client created by test server didn\u0027t throw an OperationCancelledException.\r\n\r\nHere the code with real httpClient :\r\n\r\n\r\n```\r\nvar httpClient = new HttpClient();\r\nusing (var cts = new CancellationTokenSource(TimeSpan.FromSeconds(1)))\r\n{\r\n    var request = new HttpRequestMessage\r\n    {\r\n        Method = HttpMethod.Get,\r\n        RequestUri = new Uri(\"http://localhost:4242/TimeoutTest/Action2Secs\")\r\n     };\r\n     await httpClient.SendAsync(request, HttpCompletionOption.ResponseContentRead, cts.Token);\r\n}\r\n```\r\n\r\nThe same code with client created by the class TestServer. \r\n\r\n\r\n```\r\nvar httpClient = new testServer.CreateClient();\r\nusing (var cts = new CancellationTokenSource(TimeSpan.FromSeconds(1)))\r\n{\r\n    var request = new HttpRequestMessage\r\n    {\r\n        Method = HttpMethod.Get,\r\n        RequestUri = new Uri(\"http://localhost:4242/TimeoutTest/Action2Secs\")\r\n     };\r\n     await httpClient.SendAsync(request, HttpCompletionOption.ResponseContentRead, cts.Token);\r\n}\r\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOMDej4w==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQyMjAxNzkwOA==",
                                           "createdAt":  "2018-09-17T13:33:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jgiacomini",
                                           "body":  "It\u0027s seem the \u0027StreamContent\u0027 didn\u0027t use the CancellationToken to read the response.\r\n(Thx Thomas to find the explanation) \r\n\r\nhttps://github.com/aspnet/Hosting/blob/b195e36cc35fbae20842440b47baafe1f5270886/src/Microsoft.AspNetCore.TestHost/ClientHandler.cs#L119\r\n",
                                           "updatedAt":  "2018-09-17T19:30:05Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQyMjE0MTU2OQ==",
                                           "createdAt":  "2018-09-17T19:33:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOD3Xc-Q==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jgiacomini",
                                                                               "createdAt":  "2021-04-09T13:53:24Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ArkadiyShuvaev",
                                                                               "createdAt":  "2024-10-21T13:21:09Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Interesting, that could be addressed. One catch with passing the CT to StreamContent is that CT is only supposed to be enforced for the duration of the HttpClient.SendAsync call. E.g. If you were using HttpCompletionOption.ResponseHeadersRead it should never apply the CT to the response stream. Ideally HttpContent.LoadIntoBufferAsync would have taken a CT.",
                                           "updatedAt":  "2018-09-17T19:33:01Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgwODk1MjgwMw==",
                                           "createdAt":  "2021-03-28T20:14:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "@jgiacomini do you want to take a stab at this? HttpContent now supports cancellation tokens in the latest version of .NET Core.",
                                           "updatedAt":  "2021-03-28T20:14:53Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "TestServer.CreateClient :  the HttpClient created didn\u0027t support well the cancellation.",
        "labels":  [
                       "bug",
                       "affected-few",
                       "severity-minor",
                       "area-hosting",
                       "area-networking",
                       "help candidate"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/5939",
        "createdAt":  "2018-09-29T06:34:16Z",
        "number":  5939,
        "author":  "davidikin45",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-08-24T22:50:47Z",
        "body":  "When the setting CaptureStartupErrors is set to True and you do Db initialization after building the WebHost there is no way to tell if an exception has occured during configuration. In my case I am getting a service from WebHost.Services which throws an exception because it doesn\u0027t exist. The end result is not seeing the configuration exception",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOGV7_og==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQyNTYyMDk0Mg==",
                                           "createdAt":  "2018-09-29T06:38:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "@divega @ajcvickers This is a result of doing more things in Program.Main instead of Startup. That change that we made to the pattern in 2.1 means that you don\u0027t catch these errors anymore. Do you guys have any thoughts on this?",
                                           "updatedAt":  "2018-09-29T06:38:24Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQyNTYyMTAxMw==",
                                           "createdAt":  "2018-09-29T06:39:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidikin45",
                                           "body":  "```\r\n                public static IWebHostBuilder CreateWebHostBuilder(string[] args) =\u003e\r\n                WebHost.CreateDefaultBuilder(args)\r\n                .UseSetting(\"detailedErrors\", \"true\")\r\n                .CaptureStartupErrors(true)\r\n                .UseKestrel(options =\u003e\r\n                {\r\n                    options.AddServerHeader = false;\r\n                }\r\n                )\r\n                .UseAutofac()\r\n                .UseConfiguration(Configuration)\r\n                .UseSerilog()\r\n                .UseStartup\u003cTStartup\u003e();\r\n                \r\n                var host = CreateWebHostBuilder(args).Build();\r\n\r\n                //Db initialization\r\n                using (var scope = host.Services.CreateScope())\r\n                {\r\n                    var services = scope.ServiceProvider;\r\n                     //Throws Exception\r\n                    var taskRunner = services.GetRequiredService\u003cTaskRunner\u003e();\r\n                   \r\n                }\r\n\r\n                host.Run();\r\n```",
                                           "updatedAt":  "2018-09-29T06:39:51Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQyNTYyMjUwNw==",
                                           "createdAt":  "2018-09-29T07:06:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidikin45",
                                           "body":  "For the time being will use services.GetService instead and check for null but would be nice to have a flag",
                                           "updatedAt":  "2018-09-29T07:06:01Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQyNTY0OTY1Nw==",
                                           "createdAt":  "2018-09-29T14:33:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "@davidfowl he\u0027s not asking about catching the EF error but being able to see the underlying Startup error, or at least see that there was one captured.",
                                           "updatedAt":  "2018-09-29T14:33:53Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQyNTY1Mjg3MQ==",
                                           "createdAt":  "2018-09-29T15:19:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "I see, I misunderstood. We could store the exception and expose it on a service I guess. Is that what you\u0027re asking for? Why are you using CaptureStartupErrors in the first place? Why not let it throw and catch yourself.",
                                           "updatedAt":  "2018-09-29T15:19:35Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQyNTY1NTE4NA==",
                                           "createdAt":  "2018-09-29T15:53:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidikin45",
                                           "body":  "@davidfowl I do that for unhandled exceptions while the host is running but I like the idea of displaying the error page for startup configuration exceptions",
                                           "updatedAt":  "2018-09-29T15:53:45Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQyNTY1NjA2Ng==",
                                           "createdAt":  "2018-09-29T16:06:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "So you just want access to the exception so you can log it again? (The web host already logs it). Or do you just want to use it so you can avoid the EF code ?",
                                           "updatedAt":  "2018-09-29T16:07:08Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQyNTY1NjIyNg==",
                                           "createdAt":  "2018-09-29T16:09:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidikin45",
                                           "body":  "Use it to avoid EF Code",
                                           "updatedAt":  "2018-09-29T16:09:15Z"
                                       }
                                   ],
                         "totalCount":  8
                     },
        "title":  "WebHost needs an error flag",
        "labels":  [
                       "enhancement",
                       "affected-few",
                       "severity-minor",
                       "area-hosting",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/7077",
        "createdAt":  "2019-01-28T23:25:10Z",
        "number":  7077,
        "author":  "Tratcher",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOAxPpcQ==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "halter73",
                                            "createdAt":  "2019-01-29T04:09:14Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "olivier-spinelli",
                                            "createdAt":  "2019-09-24T15:11:59Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2023-08-24T22:53:17Z",
        "body":  "There\u0027s a short list of services that can be injected by the generic web host into Startup\u0027s constructor.\r\nhttps://github.com/aspnet/AspNetCore/blob/9f71e602837b164e6f525ae33821d1d95ea29f6b/src/Hosting/Hosting/src/GenericHost/GenericWebHostBuilder.cs#L361-L375\r\n\r\nIApplicationLifetime is a common host service that should also be available. Maybe it should also be available on Web/HostBuilderContext.\r\n\r\n@davidfowl @glennc ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOJe8pmA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ1OTY5MTUxOQ==",
                                           "createdAt":  "2019-02-01T11:22:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "Dunno feels like IApplicationLifetime callbacks should mostly be replaced with hosted services ",
                                           "updatedAt":  "2019-02-01T11:22:19Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3MDY0NzY3MA==",
                                           "createdAt":  "2019-03-07T18:49:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Backloging this pending external feedback.",
                                           "updatedAt":  "2019-03-07T18:49:28Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4NDE5NTcyMw==",
                                           "createdAt":  "2019-04-17T17:54:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "willportnoy",
                                           "body":  "@davidfowl how can you gracefully shutdown the process (from within a controller, for example) without an injected IApplicationLifetime?",
                                           "updatedAt":  "2019-04-17T17:54:03Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4NDIwMTcwNA==",
                                           "createdAt":  "2019-04-17T18:10:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "@willportnoy This issue is about the Startup constructor specifically, not controllers.",
                                           "updatedAt":  "2019-04-17T18:10:18Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4NDIwMjU2OQ==",
                                           "createdAt":  "2019-04-17T18:12:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "willportnoy",
                                           "body":  "@davidfowl Sorry, controllers were a bad example.  I have a custom debug adapter for Visual Studio Code running within my ASP.NET Core service and I\u0027d like to gracefully exit.  I set up my TCP listener service within the Startup.ConfigureServices.  Is there a method to gracefully exit from services constructed within Startup?",
                                           "updatedAt":  "2019-04-17T18:12:48Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4NDIwNjYwMA==",
                                           "createdAt":  "2019-04-17T18:24:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "@willportnoy can you show us how that works today?\r\n\r\nI\u0027d expect it to be a service that you\u0027d inject IApplicationLifetime into directly.",
                                           "updatedAt":  "2019-04-17T18:24:35Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4NDIxMzc4Mg==",
                                           "createdAt":  "2019-04-17T18:44:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "willportnoy",
                                           "body":  "@Tratcher I need to be able to gracefully shut down the process within the DebugAdapter here within Startup.ConfigureServices:\r\n\r\nhttps://github.com/Microsoft/botbuilder-dotnet/blob/4.next/samples/Microsoft.Bot.Builder.TestBot.Json/Startup.cs#L73\r\n\r\n",
                                           "updatedAt":  "2019-04-17T18:44:06Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4NDIyMzEwOA==",
                                           "createdAt":  "2019-04-17T19:11:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "@willportnoy that example doesn\u0027t use IApplicationLifetime? Only IHostingEnvironment and IConfiguration which still work.",
                                           "updatedAt":  "2019-04-17T19:11:35Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4NDIyNjc3Nw==",
                                           "createdAt":  "2019-04-17T19:22:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "willportnoy",
                                           "body":  "@Tratcher I was unable to obtain IApplicationLifetime from the startup constructor (this GitHub issue) so that I could pass it to DebugAdapter and use it when VSCode terminates the debug session.\r\n\r\nI need to be able to gracefully shut down the process - IApplicationLifetime seemed like the correct method, but it does not seem to be available in Startup.  Is there another method I should use?\r\n",
                                           "updatedAt":  "2019-04-17T19:22:35Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4NDIzMjQ2Ng==",
                                           "createdAt":  "2019-04-17T19:40:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "@willportnoy This issue was initially about 3.0 behavior, but I checked 2.x and realized IApplicationLifetime was never available in the Startup constructor, it was only ever added to the application level container.\r\nhttps://github.com/aspnet/AspNetCore/blob/dd655bcc9a94b63cc9f1a60585ae9e1f2d08668f/src/Hosting/Hosting/src/Internal/WebHost.cs#L79\r\n\r\nBack to your example. I\u0027d say the real question is how do you inject any services into any BotFrameworkOptions.Middleware instances.\r\nhttps://github.com/Microsoft/botbuilder-dotnet/blob/11b8a27909943eaed3f5052de135c2fcd86ebc04/samples/Microsoft.Bot.Builder.TestBot.Json/Startup.cs#L102-L124\r\n@HaoK isn\u0027t there a `Configure\u003cTOptions\u003e` pattern that gives you access to services for your callback?\r\n\r\nhttps://github.com/Microsoft/botbuilder-dotnet/blob/8ec0da2852c0d8565d3d49c35ee963b818fe29ba/libraries/integration/Microsoft.Bot.Builder.Integration.AspNet.Core/ServiceCollectionExtensions.cs#L41",
                                           "updatedAt":  "2019-04-17T19:40:13Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4NDY4NDI3Mw==",
                                           "createdAt":  "2019-04-18T20:47:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "willportnoy",
                                           "body":  "@Tratcher Thank you for the hint - I was able to use a custom implementation of the IConfigureOptions\u003cT\u003e interface and inject IApplicationLifetime into the constructor.",
                                           "updatedAt":  "2019-04-18T20:47:07Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUzNDYwODUwNg==",
                                           "createdAt":  "2019-09-24T15:19:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "olivier-spinelli",
                                           "body":  "Since this issue is still alive, I\u0027m eager to insist and push for it:\r\n\r\n\u003e IApplicationLifetime is a common host service that should also be available. Maybe it should also be available on Web/HostBuilderContext.\r\n\r\nThis, IMHO, is still totally a good idea: the fact that a thing named **IApplicationLifetime** be injectable in the constructor of a beast named **Startup** seems just... right. \r\n(I tried hard and cannot imagine any counter arguments at all.)",
                                           "updatedAt":  "2019-09-24T15:19:49Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYzNjQzMDc0NA==",
                                           "createdAt":  "2020-05-31T06:45:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ordinaryorange",
                                           "body":  "My 2c since landing here. (my comments are from the viewpoint of v3.1, I\u0027ve not explored whether they are relevant to other versions)\r\n\r\n1. `IApplicationLifetime` appears to obselete with the recommended alternative `IHostApplicationLifetime`\r\n2. Whist one cannot get a `IHostApplicationLifetime` in the Startup constructor it is available in the `Configure()` method simply by adding to the signature.\r\n3. Third alternative is to Inject it into the ctor of the Service that need to know about the host application life, which work just fine and agrees with @davidfowl\u0027s comment",
                                           "updatedAt":  "2020-05-31T06:45:31Z"
                                       }
                                   ],
                         "totalCount":  13
                     },
        "title":  "IApplicationLifetime no longer injected into generic Startup",
        "labels":  [
                       "enhancement",
                       "severity-minor",
                       "affected-very-few",
                       "area-hosting",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/7315",
        "createdAt":  "2019-02-06T19:54:41Z",
        "number":  7315,
        "author":  "YogiBear52",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC2FTYQ==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "n9",
                                            "createdAt":  "2020-01-07T15:33:00Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "hellfirehd",
                                            "createdAt":  "2020-05-17T18:07:15Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "rcollette",
                                            "createdAt":  "2020-05-18T13:12:34Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "alberto-chiesa",
                                            "createdAt":  "2020-11-06T09:23:37Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "iiibbbmmm",
                                            "createdAt":  "2020-12-19T01:59:18Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Nefcanto",
                                            "createdAt":  "2021-08-01T18:14:24Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "rgwood",
                                            "createdAt":  "2021-08-25T05:37:30Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "dferretti",
                                            "createdAt":  "2022-05-26T22:24:55Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Zoxive",
                                            "createdAt":  "2023-09-27T12:49:22Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "giulianob",
                                            "createdAt":  "2024-02-23T20:30:55Z"
                                        }
                                    ],
                          "totalCount":  10
                      },
        "updatedAt":  "2023-08-24T22:53:45Z",
        "body":  "### Describe the bug\r\nHey,\r\n\r\nI am trying to use a Startup class like that\r\n`WebHost.CreateDefaultBuilder(args).UseStartup\u003cStartup\u003e().Build().Run()`\r\nWhen the Startup class is located in the execution assembly everything works fine.\r\nWhen the Startup class is located in a different assembly, the service runs but things go wrong during requests - the service throws a 404 without any explanation.\r\n\r\nWhy is it important for me to put my Startup class in a different assembly?\r\nBecause I have many services that are using the exact same Startup configuration and I want to prevent duplication.\r\n\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Creating new template of Asp.net core 2.2 WebApi\r\n2. Request is working\r\n3. Creating new Project of .Net Standard 2.0\r\n4. Moved the Startup class from the Asp.net Core project to the .Net Standard Project\r\n5. Added these two nugets to the .Net Standard project : \u0027Microsoft.AspNetCore.Mvc\u0027 and \u0027Microsoft.AspNetCore.Diagnostics\u0027 Nugets.\r\n6. Add Reference from the Asp.net core project the .Net Standard project\r\n7. Request is not working\r\n\r\nThank you :)\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOVDXfhw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4MjQ1Mzc0Nw==",
                                           "createdAt":  "2019-04-12T06:26:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "analogrelay",
                                           "body":  "Can you share a runnable sample that reproduces the problem? That way we get an exact repro and can investigate in depth.",
                                           "updatedAt":  "2019-04-12T06:26:41Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4MjQ1ODA3OA==",
                                           "createdAt":  "2019-04-12T06:45:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC1QtiQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "iiibbbmmm",
                                                                               "createdAt":  "2020-12-19T02:07:07Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Nefcanto",
                                                                               "createdAt":  "2021-08-01T18:15:15Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "MeTitus",
                                                                               "createdAt":  "2022-06-20T13:56:52Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "akonyer",
                                                                               "createdAt":  "2023-02-01T21:37:26Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  4
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "It might be worth looking at this issue again but I don\u0027t know if we\u0027ll have time to fix it. The workaround is to do something like this:\r\n\r\n```C#\r\npublic class Program\r\n{\r\n    public static void Main(string[] args)\r\n    {\r\n        CreateWebHostBuilder(args).Build().Run();\r\n    }\r\n\r\n    public static IWebHostBuilder CreateWebHostBuilder(string[] args) =\u003e\r\n        WebHost.CreateDefaultBuilder(args)\r\n            .UseStartup\u003cStartup\u003e()\r\n            // Ignore the startup class assembly as the \"entry point\" and instead point it to this app\r\n            .UseSetting(WebHostDefaults.ApplicationKey, typeof(Program).GetTypeInfo().Assembly.FullName); \r\n}\r\n```\r\n\r\nWe\u0027ve had this come up a number of times and it might make sense to handle this somehow.\r\n\r\nhttps://github.com/aspnet/Hosting/issues?q=is%3Aissue+ApplicationKey+is%3Aclosed",
                                           "updatedAt":  "2019-04-12T06:45:49Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4MjQ2MjEzMQ==",
                                           "createdAt":  "2019-04-12T07:02:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "We could clean this up a bit by adding a `UseEntryPoint` method that sets the entry point assembly. Another thing we should consider doing is splitting application name and entrypoint (but this would be a breaking change for people that originally worked around this issue via the above). The application entry point is used by MVC today to figure out where controllers are so it doubles as both the \"application name\" and the \"entrypoint\" assembly.",
                                           "updatedAt":  "2019-04-12T07:02:12Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4MjYxNTg5OQ==",
                                           "createdAt":  "2019-04-12T15:23:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "analogrelay",
                                           "body":  "Seems reasonable. Any reason we can\u0027t default the entry point to the assembly containing the Startup type? Also the name `UseEntryPoint` is a bit overloaded (especially with some of the generic host stuff I\u0027ve talked about with @glennc). Perhaps `UsePrimaryAssembly` or `UseApplicationAssembly`?\r\n\r\nAlso, does MVC have options to add/change the assembly that\u0027s scanned?",
                                           "updatedAt":  "2019-04-12T15:23:48Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4MjYyNjA2MA==",
                                           "createdAt":  "2019-04-12T15:51:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOAm1xUQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "analogrelay",
                                                                               "createdAt":  "2019-04-12T17:35:59Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "\u003e Any reason we can\u0027t default the entry point to the assembly containing the Startup type? \r\n\r\nWe do and that\u0027s the bug. The Startup class is in the class library and controllers are in the main application.\r\n\r\n\u003e Also the name UseEntryPoint is a bit overloaded (especially with some of the generic host stuff I\u0027ve talked about with @glennc). Perhaps UsePrimaryAssembly or UseApplicationAssembly?\r\n\r\nYea, lets bikeshed the name. @khellang Proposed a PR a while back with similar functionality. We could even decide that this doesn\u0027t belong in hosting.\r\n\r\n\u003e Also, does MVC have options to add/change the assembly that\u0027s scanned?\r\n\r\nNot the primary assembly. This happens very early (during DI setup) https://github.com/aspnet/AspNetCore/blob/258d34e3828a1870a16d13cd3c62d1b7a65acc4a/src/Mvc/Mvc.Core/src/DependencyInjection/MvcCoreServiceCollectionExtensions.cs#L81-L88",
                                           "updatedAt":  "2019-04-12T15:51:36Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4MjY2MDE1MA==",
                                           "createdAt":  "2019-04-12T17:37:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "analogrelay",
                                           "body":  "\u003e We do and that\u0027s the bug.\r\n\r\nGotcha, just re-read the issue.\r\n",
                                           "updatedAt":  "2019-04-12T17:37:04Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4MjY2OTcyOQ==",
                                           "createdAt":  "2019-04-12T18:07:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB3p-Rw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "n9",
                                                                               "createdAt":  "2020-01-07T15:34:03Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "davidalpert",
                                                                               "createdAt":  "2020-01-30T20:44:44Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "JamesQMurphy",
                                                                               "createdAt":  "2020-05-17T17:30:50Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "rgwood",
                                                                               "createdAt":  "2021-08-25T05:41:41Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  4
                                                         },
                                           "author":  "khellang",
                                           "body":  "What makes it super confusing is that it\u0027s called `ApplicationName` with no reference to assemblies.\r\n\r\nI remember a couple of issues where people got tripped up because things stopped working by just changing the application name. Giving an instance of your app a pet name is a perfectly valid scenario, and so is changing the \"entry point assembly\" (not to be confused with an IL entrypoint). I think both should be allowed.\r\n\r\nIt\u0027s also kinda ironic that we\u0027re on the third breaking iteration of the IHostingEnvironment/IWebHostEnvironment and haven\u0027t used the opportunity to correct the naming mistake 😅",
                                           "updatedAt":  "2019-04-12T18:07:03Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4MjY3MTA0NA==",
                                           "createdAt":  "2019-04-12T18:11:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "khellang",
                                           "body":  "And, for reference: https://github.com/aspnet/Hosting/pull/1180. It\u0027s 3.0 season - time to break someone! 😉",
                                           "updatedAt":  "2019-04-12T18:11:22Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4Mjc3NDAxMQ==",
                                           "createdAt":  "2019-04-13T04:04:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "\u003e It\u0027s also kinda ironic that we\u0027re on the third breaking iteration of the IHostingEnvironment/IWebHostEnvironment and haven\u0027t used the opportunity to correct the naming mistake 😅\r\n\r\nWe\u0027re not though. We haven\u0027t broken anything until now. We added new interfaces and it\u0027s time to add the new property while we still can (during 3.0).",
                                           "updatedAt":  "2019-04-13T04:04:17Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU4MDQ4MTg3MQ==",
                                           "createdAt":  "2020-01-30T22:01:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBEi63g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "JamesQMurphy",
                                                                               "createdAt":  "2020-05-17T17:31:44Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "rcollette",
                                                                               "createdAt":  "2020-05-18T13:01:56Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "davidalpert",
                                           "body":  "I\u0027m confused why dotnet/aspnetcore#14183 was closed as \"no work to do\" - can anyone shed light on that decision? This is the closest issue I can find.\r\n\r\nI spent some time digging through the code in this repo trying to figure out why my ASPNETCORE 3.x app was not respecting the `APPLICATION_NAME` set up in my app configuration and learned that using the `DefaultWebHostBuilder` and configuring a `Startup` class injects an additional configuration provider (last so that it _overrides_ my app configuration) and forces the app name to the AssemblyName of the DLL containing the `Startup` class.\r\n\r\nI\u0027m curious why it does not simply respect the `APPLICATION_NAME` as configured by `IConfigurationBuilder` instance returned from the `ConfigureAppConfiguration` method?\r\n\r\nI\u0027m using a Generic Host and then calling `ConfigureWebHostDefaults`, so maybe this is a holdover behavior in the Web Host from before the Generic Host was created?\r\n\r\nIt appears to place the [Generic Host guidance for setting `ApplicationName`](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/host/generic-host?view=aspnetcore-3.1#application-key-name) in conflict with the [Web Host guidance for setting `ApplicationName`](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/host/web-host?view=aspnetcore-3.1#application-key-name)\r\n\r\nEventually I\u0027m hoping that the responsibility of overriding the `ApplicationName` config setting can be removed from the web host responsibility and handled in a consistent way by the Generic Host\r\n\r\n[This line](https://github.com/dotnet/aspnetcore/blob/v3.1.1/src/Hosting/Hosting/src/WebHostBuilderExtensions.cs#L75) seems to be the unexpected (to me) behavior after reading [this guidance on configuring the ApplicationName in the Generic Host docs](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/host/generic-host?view=aspnetcore-3.1#applicationname) - maybe I can reproduce that in a unit test\r\n",
                                           "updatedAt":  "2020-01-31T01:44:13Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyOTgzODM2NQ==",
                                           "createdAt":  "2020-05-17T18:12:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB59FHg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "hosseinitabar",
                                                                               "createdAt":  "2021-09-12T06:57:17Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "hellfirehd",
                                           "body":  "What makes this worse is that the [Identity Templates](https://github.com/dotnet/aspnetcore/blob/master/src/Identity/UI/src/Areas/Identity/Pages/V4/_Layout.cshtml) are using `@Environment.ApplicationName`.  So the Title and Copyright are now the name of my assembly, not the actual Application Name that I want the public to see.\r\n\r\nIt\u0027s really a shame that this wasn\u0027t addressed in 3.0.  Maybe 5.0?",
                                           "updatedAt":  "2020-05-17T18:12:34Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyMjk2NTc1Mw==",
                                           "createdAt":  "2020-11-06T09:07:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBl2QZw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "gimlichael",
                                                                               "createdAt":  "2021-04-02T18:51:56Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "alberto-chiesa",
                                           "body":  "Question (and proposal): why are we not using directly Assembly.GetEntryAssembly() as a first choice?\r\n\r\nIn my case (I don\u0027t use a startup class), I just put a line after calling Configure with:\r\n```\r\n        protected override IHostBuilder CreateHostBuilder()\r\n            =\u003e new HostBuilder()\r\n                .UseServiceProviderFactory(ctx =\u003e ServiceProviderFactory)\r\n                .ConfigureWebHost(webHostBuilder =\u003e webHostBuilder\r\n                    .UseKestrel(options =\u003e { })\r\n                    .UseContentRoot(Directory.GetCurrentDirectory())\r\n                    .ConfigureServices(ConfigureServices)\r\n                    .Configure(ConfigureWebHost)\r\n                    .UseSetting(WebHostDefaults.ApplicationKey, Assembly.GetEntryAssembly().FullName));\r\n```\r\nAnd everything works again.\r\nSeems to me it\u0027s a pretty reasonable default.\r\nMaybe it\u0027s not when a Framework launcher is used? I\u0027m on Windows, and using self contained exe, so the whole \"deploy a dll\" is something I never played with.\r\nMaybe a fallback logic could be in place.",
                                           "updatedAt":  "2020-11-06T09:07:31Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2NjU3MjM4Nw==",
                                           "createdAt":  "2021-06-23T06:40:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hillin",
                                           "body":  "\u003e Question (and proposal): why are we not using directly Assembly.GetEntryAssembly() as a first choice?\r\n\u003e \r\n\u003e In my case (I don\u0027t use a startup class), I just put a line after calling Configure with:\r\n\u003e \r\n\u003e ```\r\n\u003e         protected override IHostBuilder CreateHostBuilder()\r\n\u003e             =\u003e new HostBuilder()\r\n\u003e                 .UseServiceProviderFactory(ctx =\u003e ServiceProviderFactory)\r\n\u003e                 .ConfigureWebHost(webHostBuilder =\u003e webHostBuilder\r\n\u003e                     .UseKestrel(options =\u003e { })\r\n\u003e                     .UseContentRoot(Directory.GetCurrentDirectory())\r\n\u003e                     .ConfigureServices(ConfigureServices)\r\n\u003e                     .Configure(ConfigureWebHost)\r\n\u003e                     .UseSetting(WebHostDefaults.ApplicationKey, Assembly.GetEntryAssembly().FullName));\r\n\u003e ```\r\n\u003e \r\n\u003e And everything works again.\r\n\u003e Seems to me it\u0027s a pretty reasonable default.\r\n\u003e Maybe it\u0027s not when a Framework launcher is used? I\u0027m on Windows, and using self contained exe, so the whole \"deploy a dll\" is something I never played with.\r\n\u003e Maybe a fallback logic could be in place.\r\n\r\nUsing `Assembly.GetEntryAssembly().FullName` does not work for us, but `Assembly.GetEntryAssembly().GetName().Name` does work. Thanks!",
                                           "updatedAt":  "2021-06-23T06:40:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde841DlQn",
                                           "createdAt":  "2021-07-30T20:17:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "Entry assembly would break things like tests where the test process is the entry assembly and your code is hosted as a library inside of the test process.",
                                           "updatedAt":  "2021-07-30T20:17:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde846faj1",
                                           "createdAt":  "2021-11-29T05:56:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidalpert",
                                           "body":  "\u003e Entry assembly would break things like tests where the test process is the entry assembly and your code is hosted as a library inside of the test process.\r\n\r\nWhat kind of a test might be broken by this scenario?",
                                           "updatedAt":  "2021-11-29T05:56:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85UNd-H",
                                           "createdAt":  "2023-02-01T22:19:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "akonyer",
                                           "body":  "I am running into this issue using the pact contract testing framework.\r\n\r\nI am spinning up a separate web server for API contract testing, and I\u0027m spinning it up from a unit testing assembly.\r\n\r\nI spent a couple of days trying to figure out why I was only getting 404\u0027s when I wrap my test startup class in another one to add some middleware for testing.\r\n\r\n@davidfowl\u0027s solution above helped me resolve this issue. Thanks a lot :)",
                                           "updatedAt":  "2023-02-01T22:19:01Z"
                                       }
                                   ],
                         "totalCount":  16
                     },
        "title":  "Using Startup class not from the execution Assembly",
        "labels":  [
                       "enhancement",
                       "severity-minor",
                       "affected-medium",
                       "area-hosting",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/7507",
        "createdAt":  "2019-02-12T20:14:58Z",
        "number":  7507,
        "author":  "Tratcher",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-08-24T22:54:18Z",
        "body":  "Docker logs are duplicated in VS when you run under the debugger (F5). The two loggers are the console logger and the debug logger. Both logs are routed to the VS Debug output window. We should find a way to detect this and suppress the console logger.\r\n\r\n Generic host 3.0.0-preview3:\r\n```\r\nMicrosoft.Hosting.Lifetime: Information: Application started. Press Ctrl+C to shut down.\r\n\u001b[40m\u001b[32minfo\u001b[39m\u001b[22m\u001b[49m: Microsoft.Hosting.Lifetime[0]\r\n      Application started. Press Ctrl+C to shut down.\r\n\u001b[40m\u001b[32minfo\u001b[39m\u001b[22m\u001b[49m: Microsoft.Hosting.Lifetime[0]\r\n      Hosting environment: Production\r\nMicrosoft.Hosting.Lifetime: Information: Hosting environment: Production\r\n\u001b[40m\u001b[32minfo\u001b[39m\u001b[22m\u001b[49m: Microsoft.Hosting.Lifetime[0]\r\n      Content root path: /app\r\nMicrosoft.Hosting.Lifetime: Information: Content root path: /app\r\nThe program \u0027[314] dotnet\u0027 has exited with code 0 (0x0).\r\nThe program \u0027dotnet\u0027 has exited with code 0 (0x0).\r\n```\r\n\r\nSide note: the control characters are the console color markers. https://github.com/aspnet/Extensions/issues/673\r\n\r\nWebHost (3.0.0-preview1):\r\n```\r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost:Information: Request starting HTTP/1.1 GET https://localhost:44330/  \r\n\u001b[40m\u001b[32minfo\u001b[39m\u001b[22m\u001b[49m: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]\r\n      Request starting HTTP/1.1 GET https://localhost:44330/  \r\nLoaded \u0027/usr/share/dotnet/shared/Microsoft.AspNetCore.App/2.2.2/Microsoft.AspNetCore.WebUtilities.dll\u0027. Skipped loading symbols. Module is optimized and the debugger option \u0027Just My Code\u0027 is enabled.\r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost:Information: Request finished in 116.2878ms 200 \r\n\u001b[40m\u001b[32minfo\u001b[39m\u001b[22m\u001b[49m: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]\r\n      Request finished in 116.2878ms 200 \r\n\u001b[40m\u001b[32minfo\u001b[39m\u001b[22m\u001b[49m: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]\r\n      Request starting HTTP/1.1 GET https://localhost:44330/favicon.ico  \r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost:Information: Request starting HTTP/1.1 GET https://localhost:44330/favicon.ico  \r\n\u001b[40m\u001b[32minfo\u001b[39m\u001b[22m\u001b[49m: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]\r\n      Request finished in 15.0096ms 200 \r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost:Information: Request finished in 15.0096ms 200 \r\n```\r\n\r\n@glennc ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "Docker log duplication in VS",
        "labels":  [
                       "enhancement",
                       "severity-nice-to-have",
                       "affected-very-few",
                       "area-hosting",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/8247",
        "createdAt":  "2019-03-06T20:41:26Z",
        "number":  8247,
        "author":  "HaoK",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-29T14:01:44Z",
        "body":  "Enable the following functional tests on helix:\r\n\r\nHosting/test/FunctionalTests/Microsoft.AspNetCore.Hosting.FunctionalTests.csproj\r\nServers/test/FunctionalTests/ServerComparison.FunctionalTests.csproj\r\nServers/Kestrel/test/Interop.FunctionalTests/Interop.FunctionalTests.csproj\r\nDefaultBuilder/test/Microsoft.AspNetCore.FunctionalTests/Microsoft.AspNetCore.FunctionalTests.csproj\r\nMvc/test/Mvc.FunctionalTests/Microsoft.AspNetCore.Mvc.FunctionalTests.csproj\r\n\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHObTb-0Q==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5NDU0MzY1OA==",
                                           "createdAt":  "2019-05-21T20:22:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "natemcmaster",
                                           "body":  "Looks like this is one of many tests which will need to be refactored to work in Helix. cref https://github.com/aspnet/AspNetCore/issues/10268",
                                           "updatedAt":  "2019-05-21T20:22:00Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1MjY1NTUwOQ==",
                                           "createdAt":  "2020-07-01T21:27:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Pilchie",
                                           "body":  "@halter73 - we talked about you taking a look at this at some point, right?",
                                           "updatedAt":  "2020-07-01T21:27:59Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1Mjc1MDU3Ng==",
                                           "createdAt":  "2020-07-02T02:55:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "halter73",
                                           "body":  "We did. I haven\u0027t got a chance to look deeply into this yet, but it looks like #10268 is the current blocker.\n\nMy plate is already full for preview8, but I moved this out if the backlog into next spring planning. Is there any sort of deadline for this?",
                                           "updatedAt":  "2020-07-02T02:55:51Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1Mjc1MzUyMQ==",
                                           "createdAt":  "2020-07-02T03:05:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Pilchie",
                                           "body":  "No, that sounds good to me.",
                                           "updatedAt":  "2020-07-02T03:05:56Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg4MDI2OTQ4OQ==",
                                           "createdAt":  "2021-07-14T23:12:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2021-07-14T23:12:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85sfOUr",
                                           "createdAt":  "2023-11-21T02:42:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "amcasey",
                                           "body":  "Well, #10268 is still open, but I think we\u0027re as migrated to Helix as we\u0027re planning to get.  @wtgodbe?",
                                           "updatedAt":  "2023-11-21T02:42:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85tNv7R",
                                           "createdAt":  "2023-11-29T16:48:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "wtgodbe",
                                           "body":  "Let\u0027s leave this open, our eventual goal has always been to get every test running on Helix.",
                                           "updatedAt":  "2023-11-29T16:48:50Z"
                                       }
                                   ],
                         "totalCount":  7
                     },
        "title":  "[Helix] Enable Hosting.FunctionalTests",
        "labels":  [
                       "task",
                       "test-failure",
                       "severity-minor",
                       "affected-very-few",
                       "area-hosting",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/9258",
        "createdAt":  "2019-04-10T19:00:23Z",
        "number":  9258,
        "author":  "zamzowd",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOAuNlfA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "VladimirAkopyan",
                                            "createdAt":  "2019-07-22T16:12:31Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "v-zabavsky",
                                            "createdAt":  "2019-08-09T12:47:55Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2023-08-24T22:57:17Z",
        "body":  "### Describe the bug\r\nThe Request Body stream is disposed at some point before the `Microsoft.AspNetCore.Hosting.EndRequest` diagnostic event is fired.  That means any diagnostic listener on the end request - including Application Insight\u0027s telemetry for requests - cannot read the body.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core \u00272.2.4\u0027\r\n2. Run this code\r\n\r\nRequestDiagnosticListener:\r\n```csharp\r\npublic class RequestDiagnosticListener\r\n{\r\n  [DiagnosticName(\"Microsoft.AspNetCore.Hosting.BeginRequest\")]\r\n  public virtual void OnRequestBeginning(HttpContext httpContext)\r\n  {\r\n    httpContext.Request.EnableBuffering();\r\n    if (httpContext.Request.Body.CanSeek)\r\n    {\r\n      var position = httpContext.Request.Body.Position;\r\n    }\r\n  }\r\n\r\n  [DiagnosticName(\"Microsoft.AspNetCore.Hosting.EndRequest\")]\r\n  public virtual void OnRequestEnding(HttpContext httpContext)\r\n  {\r\n    if (httpContext.Request.Body.CanSeek)\r\n    {\r\n      var position = httpContext.Request.Body.Position;\r\n    }\r\n  }\r\n}\r\n```\r\nStartup:\r\n```csharp\r\npublic void Configure(DiagnosticListener diagnosticListener)\r\n{\r\n  diagnosticListener.SubscribeWithAdapter(new RequestDiagnosticListener());\r\n}\r\n```\r\n3. With any HTTP request to the application\r\n4. Getting the position in `OnRequestBeginning` works as desired.  See error `System.ObjectDisposedException: \u0027Cannot access a closed Stream.\u0027` on `OnRequestEnding` access to the `Position` property.\r\n\r\n### Expected behavior\r\nRequest Body should be able to be read in the `Microsoft.AspNetCore.Hosting.EndRequest` diagnostic event.  If the Body is to be disposed, that should happen after the EndRequest event.\r\n\r\n### Additional context\r\nThis is a continuation of an issue reported on Application Insights: https://github.com/Microsoft/ApplicationInsights-aspnetcore/issues/686\r\n\r\nIn .NET Framework, an Application Insights Telemetry Initializer for RequestTelemetry is able to read the content of the request.  That functionality has been lost in AspNetCore.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOH53P1g==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4MTgyMzIzOA==",
                                           "createdAt":  "2019-04-10T19:08:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "zamzowd",
                                           "body":  "Possibly related - it seems like the disposing of `Response.RegisterForDispose` should get fired _after_ the `EndRequest` event for similar reasons.  I couldn\u0027t figure out where in the request lifecycle that happens.",
                                           "updatedAt":  "2019-04-10T19:08:21Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4MjQ5NzM2Mw==",
                                           "createdAt":  "2019-04-12T09:02:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "You really cannot safely touch the HttpContext outside of the request pipeline. This is way too late to do anything safely. We maybe need to add some new events that live within the request pipeline before control goes back to the server to do something like this safely.",
                                           "updatedAt":  "2019-04-12T09:02:01Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4MzgwODg3NQ==",
                                           "createdAt":  "2019-04-16T19:21:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "zamzowd",
                                           "body":  "@davidfowl I would figure either the End Request get moved to fire from within the pipeline, or as you mentioned a new event is added for the same goal.  I\u0027m not familiar with the reasons for having the End Request event get fired outside of the request pipeline.",
                                           "updatedAt":  "2019-04-16T19:21:04Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUzMDQzNjA1NA==",
                                           "createdAt":  "2019-09-11T15:33:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "zamzowd",
                                           "body":  "My particular use case can be neatly resolved with middleware rather than DiagnosticListener:\r\n\r\nhttps://github.com/microsoft/ApplicationInsights-aspnetcore/issues/686#issuecomment-530353448",
                                           "updatedAt":  "2019-09-11T15:33:34Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "Request Body disposed in EndRequest diagnostic event",
        "labels":  [
                       "enhancement",
                       "severity-nice-to-have",
                       "affected-very-few",
                       "area-hosting",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/9594",
        "createdAt":  "2019-04-20T07:10:16Z",
        "number":  9594,
        "author":  "davidfowl",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-08-24T22:58:07Z",
        "body":  "With the default settings and a hello world middleware, we go from 0 allocations to ~12 (some objects are pretty large as well). The following is a memory profile of 10,000 requests with logging turned on at the \"Warning\" level:\r\n\r\n![image](https://user-images.githubusercontent.com/95136/56454076-9572f680-6300-11e9-985c-5dbbac1cd6cf.png)\r\n\r\ncc @benaadams @noahfalk ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "Improve performance of ASP.NET Core with logging on ",
        "labels":  [
                       "enhancement",
                       "Perf",
                       "severity-minor",
                       "affected-medium",
                       "area-hosting",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/9904",
        "createdAt":  "2019-05-01T23:09:42Z",
        "number":  9904,
        "author":  "MarioHewardt",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOAousdw==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "dcarr42",
                                            "createdAt":  "2019-05-15T22:36:50Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2023-08-24T22:58:50Z",
        "body":  ".net core supports generating core dumps when an application crashes as a result of unhandled exceptions (https://github.com/dotnet/coreclr/blob/master/Documentation/botr/xplat-minidump-generation.md). This does not however work for asp.net core as unhandled exceptions (from a users code perspective) are handled down the stack. There should be a mechanism by which I can enable core dump generation in asp.net core applications. \r\n\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOUEy4kA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4ODUzNzU1NQ==",
                                           "createdAt":  "2019-05-02T02:41:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "This isn\u0027t ASP.NET Core specific. We should move this to the .NET Core diagnostics repository.",
                                           "updatedAt":  "2019-05-02T02:41:47Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4ODc3MzA2Nw==",
                                           "createdAt":  "2019-05-02T18:05:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Eilon",
                                           "body":  "@davidfowl what repo is that?",
                                           "updatedAt":  "2019-05-02T18:05:07Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4ODc3MzQxMw==",
                                           "createdAt":  "2019-05-02T18:06:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "https://github.com/dotnet/diagnostics, we just need to make sure we fire an event where there\u0027s a user unhandled exception. Which we do in some cases (we need to figure out what to do with the ExceptionHandler middleware and DeveloperExceptionPAge middlewae)",
                                           "updatedAt":  "2019-05-02T18:06:09Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5Mjg0ODQ2Mw==",
                                           "createdAt":  "2019-05-15T22:32:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tommcdon",
                                           "body":  "cc @noahfalk @mikem8361",
                                           "updatedAt":  "2019-05-15T22:32:31Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5Mjg0OTY1Nw==",
                                           "createdAt":  "2019-05-15T22:37:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "analogrelay",
                                           "body":  "When we\u0027ve looked at this before things got messy because by the time we\u0027ve caught the exception (and could produce the dump) the stack had already been unwound well beyond the user code.",
                                           "updatedAt":  "2019-05-15T22:37:21Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5MjkxMzA4OQ==",
                                           "createdAt":  "2019-05-16T04:35:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOAoyIxg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "tommcdon",
                                                                               "createdAt":  "2019-05-16T15:11:20Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "I’m going to do a prototype for this, no timeline yet but we discussed a strawman ",
                                           "updatedAt":  "2019-05-16T04:35:20Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5MzExODkyMw==",
                                           "createdAt":  "2019-05-16T15:36:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Eilon",
                                           "body":  "@davidfowl would you say this is more of a \u0027hosting\u0027 thing or more of a \u0027servers\u0027 thing? Where would the integration happen?",
                                           "updatedAt":  "2019-05-16T15:36:10Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5MzE0NzU1NA==",
                                           "createdAt":  "2019-05-16T16:53:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "Hosting.",
                                           "updatedAt":  "2019-05-16T16:53:06Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5MzE3NTU2Mw==",
                                           "createdAt":  "2019-05-16T18:13:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "\u003e unhandled exceptions (from a users code perspective) are handled down the stack. \r\n\r\nAre you talking about exceptions that happen on the request thread and are caught by middleware and/or the server? Or exceptions on background threads? If it\u0027s the former you can implement this in middleware. If the latter, what\u0027s catching those?",
                                           "updatedAt":  "2019-05-16T18:13:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde844_AdV",
                                           "createdAt":  "2021-11-01T08:41:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCAqung==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "davidfowl",
                                                                               "createdAt":  "2021-11-01T14:25:59Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "shirhatti",
                                           "body":  "@dotnet/dotnet-monitor I assume this should be possible via the `Microsoft.AspNetCore.Hosting.UnhandledException` diagnostic source event + ICorProfiler based synchronous trigger? If so, can we close this issue and create a separate tracking issue for this request in the dotnet-monitor repo?",
                                           "updatedAt":  "2021-11-01T08:41:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85QTLiQ",
                                           "createdAt":  "2022-12-12T19:56:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODgcpFA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "jamespack",
                                                                               "createdAt":  "2024-05-03T00:08:49Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "MarioHewardt",
                                           "body":  "We added this capability to ProcDump 1.4 for Linux along with specifying the exceptions to trigger on. \r\n\r\nhttps://github.com/Sysinternals/ProcDump-for-Linux",
                                           "updatedAt":  "2022-12-12T19:56:24Z"
                                       }
                                   ],
                         "totalCount":  11
                     },
        "title":  "Add the capability to generate a dump file for unhandled exceptions in asp.net core applications. ",
        "labels":  [
                       "enhancement",
                       "severity-minor",
                       "affected-medium",
                       "area-hosting",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/10424",
        "createdAt":  "2019-05-21T20:32:33Z",
        "number":  10424,
        "author":  "natemcmaster",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-08-24T23:00:28Z",
        "body":  "src/DefaultBuilder/test/Microsoft.AspNetCore.FunctionalTests/Microsoft.AspNetCore.FunctionalTests.csproj\r\n\r\nThis test project does not work in Helix and is currently disabled because it has a dependency on the layout of the source code in this repo.\r\n\r\nRecommendation for updating: see aspnet/Extensions#1697 and #10268 ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "[Helix] enable Microsoft.AspNetCore.FunctionalTests",
        "labels":  [
                       "task",
                       "affected-few",
                       "severity-minor",
                       "area-hosting",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/11085",
        "createdAt":  "2019-06-11T11:53:54Z",
        "number":  11085,
        "author":  "Chakrygin",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC2xtzw==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "n9",
                                            "createdAt":  "2020-01-07T15:32:41Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "JamesQMurphy",
                                            "createdAt":  "2020-05-17T17:29:38Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "hellfirehd",
                                            "createdAt":  "2020-05-17T18:06:31Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "hillin",
                                            "createdAt":  "2021-06-23T06:13:42Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Trivivium",
                                            "createdAt":  "2021-10-17T13:48:48Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "dferretti",
                                            "createdAt":  "2022-05-26T22:25:34Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "carlin-q-scott",
                                            "createdAt":  "2024-03-25T22:04:20Z"
                                        }
                                    ],
                          "totalCount":  7
                      },
        "updatedAt":  "2025-02-05T16:20:15Z",
        "body":  "Currently it not possible to change IHostingEnvironment.ApplicationName property via environment variables. \r\n\r\nAlthough the variable is correctly read in the WebHostBuilder class, it is overwritten in the UseStartup method.\r\n\r\nhttps://github.com/aspnet/AspNetCore/blob/d24ec01224726fa85dc7683d0f70a94d9172bc94/src/Hosting/Hosting/src/WebHostBuilder.cs#L45\r\nhttps://github.com/aspnet/AspNetCore/blob/d24ec01224726fa85dc7683d0f70a94d9172bc94/src/Hosting/Hosting/src/WebHostBuilderExtensions.cs#L75\r\n\r\n### Describe the solution you\u0027d like\r\nMaybe this fix in UseStartup method will solve the problem:\r\n\r\n```cs\r\npublic static IWebHostBuilder UseStartup(this IWebHostBuilder hostBuilder, Type startupType)\r\n{\r\n    if (string.IsNullOrEmpty(hostBuilder.GetSetting(WebHostDefaults.ApplicationKey)))\r\n    {\r\n        var startupAssemblyName = startupType.GetTypeInfo().Assembly.GetName().Name;\r\n\r\n        hostBuilder.UseSetting(WebHostDefaults.ApplicationKey, startupAssemblyName);\r\n    }\r\n\r\n    // ...\r\n}\r\n```\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOHduYiQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwMDg4MTg3Ng==",
                                           "createdAt":  "2019-06-11T15:01:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "analogrelay",
                                           "body":  "Thoughts @davidfowl @Tratcher ? It does seem odd that the assembly name would clobber the environment variable since it makes the env-var useless.",
                                           "updatedAt":  "2019-06-11T15:01:13Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwMDkxOTg3OA==",
                                           "createdAt":  "2019-06-11T16:28:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Why are you trying to change it? I\u0027m told MVC stops working if you do. @rynowak ",
                                           "updatedAt":  "2019-06-11T16:28:08Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwMDkzMDY5Nw==",
                                           "createdAt":  "2019-06-11T16:53:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "We should have resolved this with the introduction of the new interface but we dropped the ball here. We need another property here, EntryPoint, see https://github.com/aspnet/AspNetCore/issues/7315",
                                           "updatedAt":  "2019-06-11T16:53:41Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Changing IHostingEnvironment.ApplicationName using ASPNETCORE_APPLICATIONNAME env variable",
        "labels":  [
                       "enhancement",
                       "affected-few",
                       "severity-minor",
                       "area-hosting",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/11598",
        "createdAt":  "2019-06-26T15:52:05Z",
        "number":  11598,
        "author":  "Tratcher",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCzjtiA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "jkone27",
                                            "createdAt":  "2023-06-15T09:04:31Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "shaunpearsondev",
                                            "createdAt":  "2023-10-09T20:28:01Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "billybraga",
                                            "createdAt":  "2023-10-25T17:18:55Z"
                                        }
                                    ],
                          "totalCount":  3
                      },
        "updatedAt":  "2025-02-05T16:16:09Z",
        "body":  "gRPC depends on pipes and a few other features only implemented by Kestrel such as StartAsync and CompleteAsync. Missing those features in TestServer makes it hard to test gRPC and related components.\r\n\r\n- [x] BodyWriter\r\n- [x] Reset (HTTP2)\r\n- [x] StartAsync\r\n- [ ] CompleteAsync\r\n\r\nTestServer already uses a pipe internally for its response data, but exposing it turns out to be complicated because we add lots of semantics on top such as the first flush sending headers, content-length verification, etc..\r\n\r\nhttps://github.com/aspnet/AspNetCore/issues/11305\r\nhttps://github.com/aspnet/AspNetCore/issues/11194\r\n\r\n@JamesNK ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOLN0sqQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwNTk4MTE0Ng==",
                                           "createdAt":  "2019-06-26T17:57:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tornhoof",
                                           "body":  "May I ask why it is hard to test, does gRPC not work with the TestServer?\r\n\r\nI\u0027m asking for my HttpBatchHandler middleware, which is very similar to the TestServer from ASP.NET Core 2.x, it still works in 3.0 (atleast the current tests do), but I\u0027m not sure if I want to add the Pipe complexity to my middleware, so it would be nice to know which features might rely on new RequestFeature/ResponseFeature functionality (like that IHttpResponseCompletionFeature.CompleteAsync thing).",
                                           "updatedAt":  "2019-06-26T17:57:08Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwNTk5MTgyNA==",
                                           "createdAt":  "2019-06-26T18:26:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "JamesNK",
                                           "body":  "I\u0027ve just changed gRPC integration tests to use Kestrel instead of test server. HTTP/2 support in HttpClient is rather hot and I wanted more testing with it and gRPC.\r\n\r\nhttps://github.com/grpc/grpc-dotnet/pull/349\r\n\r\nThese TestServer improves are Good, but they don\u0027t need to be a priority because of gRPC.",
                                           "updatedAt":  "2019-06-26T18:42:14Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwNTk5NjE2Nw==",
                                           "createdAt":  "2019-06-26T18:37:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "FYI running too many network tests can cause things like socket exhaustion, especially on Mac. Yes we need integration tests with HttpClient, but most unit tests should use TestServer or similar mocks. ",
                                           "updatedAt":  "2019-06-26T18:37:58Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwNzgzMzIyMw==",
                                           "createdAt":  "2019-07-02T20:31:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Note to self, Abort was only half implemented. It would fire RequestAborted, but not surface any errors to the client.",
                                           "updatedAt":  "2019-07-02T20:31:07Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUxNDc3NjAzOQ==",
                                           "createdAt":  "2019-07-24T19:54:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "analogrelay",
                                           "body":  "@Tratcher is this happening as part of your big Response Body Feature thing?",
                                           "updatedAt":  "2019-07-24T19:54:03Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUxNDc3OTczNg==",
                                           "createdAt":  "2019-07-24T20:05:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Only sortof. All servers (including TestServer) will now have a standard set of APIs (Stream, PipeWriter, StartAsync, CompleteAsync, SendFileAsync), but for this first pass we\u0027re polyfilling the implementations. We\u0027ll keep this item open fully implement CompleteAsync.",
                                           "updatedAt":  "2019-07-24T20:05:28Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUxNDc4MTQ4MQ==",
                                           "createdAt":  "2019-07-24T20:10:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "analogrelay",
                                           "body":  "Ok, I\u0027ll backlog it given that then.",
                                           "updatedAt":  "2019-07-24T20:10:53Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0NTI2MzYxMQ==",
                                           "createdAt":  "2020-12-15T12:41:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kparkov",
                                           "body":  "Is CompleteAsync still missing in .NET 5? I am seeing integration tests fail that worked before, because the exception seems to bubble out of an exception middleware that were supposed to intercept and handle it.",
                                           "updatedAt":  "2020-12-15T12:41:49Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0NTQ1OTQyNA==",
                                           "createdAt":  "2020-12-15T17:54:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "@kparkov Yes, CompleteAsync is still a known gap. However, exception handlers should be based on the response starting, not ending. Are you using the built-in exception handler or something else?",
                                           "updatedAt":  "2020-12-15T17:54:02Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc1MjQ0NDgzNw==",
                                           "createdAt":  "2020-12-30T11:35:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kparkov",
                                           "body":  "I have a custom built exception handler that is added to the end of the middleware chain. Like this:\r\n\r\n```csharp\r\n    public static class GlobalExceptionHandler\r\n    {\r\n        public static void ConfigureGlobalExceptionHandler(this IApplicationBuilder app)\r\n        {\r\n            app.UseExceptionHandler(configure =\u003e\r\n            {\r\n                configure.Use((context, next) =\u003e\r\n                {\r\n                    var exception = context.Features.Get\u003cIExceptionHandlerFeature\u003e()?.Error;\r\n\r\n                    if (exception is null)\r\n                    {\r\n                        return next();\r\n                    }\r\n                    else\r\n                    {\r\n                        Feedback result;\r\n                        HttpStatusCode httpStatusCode = HttpStatusCode.InternalServerError;\r\n\r\n                        if (exception is ClientException ce)\r\n                        {\r\n                            result = Feedback.Create(code: ce.InternalStatusCode, message: ce.Message, handled: true);\r\n                            httpStatusCode = ce.HttpStatusCode;\r\n                        }\r\n                        else\r\n                        {\r\n#if DEBUG\r\n                            result = Feedback.Create(code: InternalStatusCode.UnhandledServerException, message: exception.Message, handled: false, details: new ExceptionDetails(exception), trace: exception.StackTrace);\r\n#else\r\n                            result = Feedback.Create(code: InternalStatusCode.UnhandledServerException, message: $\"An unknown exception of type {exception.GetType().Name} occured.\", handled: false);\r\n#endif\r\n                        }\r\n\r\n                        var settings = new JsonSerializerSettings();\r\n                        settings.Converters.Add(new StringEnumConverter());\r\n\r\n                        var json = JsonConvert.SerializeObject(result, Formatting.Indented, settings);\r\n\r\n                        context.Response.StatusCode = (int) httpStatusCode;\r\n                        return context.Response.WriteAsync(json);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n```\r\n\r\nHowever, the test server throws an `HttpRequestException` exception, even though any exception is caught here. This was not the behaviour before .NET 5, and I don\u0027t really understand why.\r\n\r\nEDIT: I considered modifying it using `CompleteAsync` to make sure it was completed normally (not in an error state), but couldn\u0027t find the method available, hence why I posted here.",
                                           "updatedAt":  "2020-12-30T11:37:08Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc1MjY5MjM5Mw==",
                                           "createdAt":  "2020-12-30T17:06:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "That looks fine. UseExceptionHandler shouldn\u0027t re-throw exceptions after you\u0027ve called Response.WriteAsync. However, it will log and rethrow the original exception if your exception handler throws. Have you checked the logs and/or stepped through your exception handler in the debugger?",
                                           "updatedAt":  "2020-12-30T17:06:30Z"
                                       }
                                   ],
                         "totalCount":  11
                     },
        "title":  "Implement response BodyWriter, CompleteAsync for TestServer",
        "labels":  [
                       "enhancement",
                       "affected-few",
                       "severity-minor",
                       "area-hosting",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/11884",
        "createdAt":  "2019-07-04T01:25:37Z",
        "number":  11884,
        "author":  "johncrim",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOBuSDLA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "WhitWaldo",
                                            "createdAt":  "2021-06-10T23:24:39Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2023-08-24T23:03:12Z",
        "body":  "### Problem statement\r\nI\u0027m trying to help on this issue: https://github.com/microsoft/service-fabric-aspnetcore/issues/48\r\nin addition to private integration of ASP.NET Core 3.0 + kestrel hosting within Service Fabric. Consider a basic kestrel web server, exposing http and https endpoints, within a SF node.\r\n\r\nWe\u0027d like to add support for using a generic host within Service Fabric ASP.NET Core 3.0 apps. The advantages of using a generic host are:\r\n* Use a single configuration instance, DI container, and web pipeline across multiple SF endpoints (eg 1 endpoint for http, 1 endpoint for https, perhaps another for gRPC) in a host\r\n* WebHostBuilder is deprecated, so we want to avoid investing in that if possible\r\n\r\nThe current ASP.NET Core hosting model within SF is mostly dictated by this project:\r\nhttps://github.com/microsoft/service-fabric-aspnetcore\r\nWhich is documented here:\r\nhttps://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-reliable-services-communication-aspnetcore\r\n\r\nIf you follow the documentation literally (see https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-reliable-services-communication-aspnetcore#kestrel-in-reliable-services), you end up with separate kestrel pipelines, DI containers, etc per endpoint. It\u0027s possible to work around this, but it\u0027s not trivial and many developers struggle with it, per Stack Overflow.\r\n\r\nIn order to implement a better, generic host-based hosting model for Service Fabric, it would be great to be able to re-use much of `GenericWebHostBuilder` and `GenericWebHostService` without copying + maintaining all the classes. Also note that `ISupportsStartup` and `ISupportsUseDefaultServiceProvider` are internal, so they can\u0027t be implemented. \r\n\r\n### Describe the solution you\u0027d like\r\nI\u0027d like to see a separation + make public of the portions of GenericWebHost that should be re-used in scenarios like this.\r\n\r\nIf it\u0027s helpful I can provide an implementation of a ServiceFabric host builder, with details on what the sticking points are.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOHmSedw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwODM2NjAxMQ==",
                                           "createdAt":  "2019-07-04T07:05:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "@davidfowl ",
                                           "updatedAt":  "2019-07-04T07:05:03Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwODUyNjI3MA==",
                                           "createdAt":  "2019-07-04T15:55:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "I\u0027d need to understand the proposed solution before we expose anything.",
                                           "updatedAt":  "2019-07-04T15:55:17Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwOTM1Njk2Nw==",
                                           "createdAt":  "2019-07-08T19:20:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "johncrim",
                                           "body":  "Sure - I provided a more detailed analysis of the issues in https://github.com/microsoft/service-fabric-aspnetcore/issues/48#issuecomment-509346009  - but here\u0027s the crux of the problem as it relates to ASP.NET Core code. Sorry if my initial request wasn\u0027t clear enough:\r\n\r\nLooking at [GenericHostWebHostBuilderExtensions](https://github.com/aspnet/AspNetCore/blob/e31813b9cd47968f4ec7348dc363d6276b98cbdf/src/Hosting/Hosting/src/GenericHostWebHostBuilderExtensions.cs#L9-L15):\r\n```c#\r\n        public static IHostBuilder ConfigureWebHost(this IHostBuilder builder, Action\u003cIWebHostBuilder\u003e configure)\r\n        {\r\n            var webhostBuilder = new GenericWebHostBuilder(builder);\r\n            configure(webhostBuilder);\r\n            builder.ConfigureServices((context, services) =\u003e services.AddHostedService\u003cGenericWebHostService\u003e());\r\n            return builder;\r\n        }\r\n```\r\n\r\nIf I call this method today, it sets up the `IWebHostBuilder` and adds the WebHost `IHostedService`. But what if I want or need to run the webhost within a separate `IHostedService`? The service fabric hosting use-case requires a different `IHostedService` which starts and stops the web host.\r\n\r\nShould it be possible to use the `GenericWebHostBuilder` functionality without registering the `GenericWebHostService` as an `IHostedService`? The 2 classes appear separate at least conceptually, and they both provide useful and standard functionality that probably shouldn\u0027t be duplicated. I would like to be able to call `ConfigureWebHost(Action\u003cIWebHostBuilder\u003e)` or a similar method and not get the `IHostedService` registered; and separately re-use the GenericWebHostService within a custom `IHostedService`.\r\n\r\nIt may be possible to do what I want by creating a wrapper `IHostBuilder` with a local `IServiceCollection` and pass that to `ConfigureWebHost()`, then pull the `IHostedService` registration out and put it in a separate `IServiceProvider` that is only used to create the `GenericWebHostService` within my custom `IHostedService`. But this seems a bit hacky and likely to break with changes, which is why I opened this issue.",
                                           "updatedAt":  "2019-07-08T19:20:09Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwOTgyOTcyNA==",
                                           "createdAt":  "2019-07-09T22:13:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "\u003e But what if I want or need to run the webhost within a separate IHostedService? The service fabric hosting use-case requires a different IHostedService which starts and stops the web host.\r\n\r\nPlease expand on this, why does it have to be another IHostedService? What is that service adding or doing differently?",
                                           "updatedAt":  "2019-07-09T22:14:08Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwOTgzNzAwNw==",
                                           "createdAt":  "2019-07-09T22:42:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "johncrim",
                                           "body":  "You can find more info in https://github.com/microsoft/service-fabric-aspnetcore/issues/48, and the diagram on this page should help conceptually:\r\nhttps://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-reliable-services-communication-aspnetcore\r\nAs the diagram shows, service fabric activates SF service objects, which create webhosts.\r\n\r\nCurrently, [service-fabric-aspnetcore](https://github.com/microsoft/service-fabric-aspnetcore) creates 1 WebHost per SF service type, and the WebHost lives within the SF service object, [as explained in my comment](https://github.com/microsoft/service-fabric-aspnetcore/issues/48#issuecomment-509346009). The code for this is here: [AspNetCoreCommunicationListener.cs line 115](https://github.com/microsoft/service-fabric-aspnetcore/blob/6ab30c2150a67b59db791d58321147f8d6d5dc76/src/Microsoft.ServiceFabric.AspNetCore/AspNetCoreCommunicationListener.cs#L115).\r\n\r\nFor this model to work within a generic host there would have to be a new `IHostedService` (eg a `ServiceFabricHostedService`) that manages SF registration and contains the SF service objects. For the new IHostedService to create and start/stop the WebHost(s) correctly, the setup code needs to be able to create an `IWebHostBuilder` without registering the `GenericWebHostService` to run directly within the `IHost`. \r\n\r\nIdeally, a new version of the service-fabric-aspnetcore libs would support disassociating the SF service lifecycle from the webhost lifecycle. In other words, a webhost pipeline and DI container could be shared by multiple SF services (currently not supported), or each SF service could have its own webhost pipeline and DI container (the only case that\u0027s supported today).\r\n\r\nHope that helps...",
                                           "updatedAt":  "2019-07-09T22:42:41Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwOTg5NjE3Mg==",
                                           "createdAt":  "2019-07-10T03:48:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "If it was creating multiple web hosts before then it should create multiple generic hosts now, not multiple IHostedService instances in one host. Yes we were able to re-platform WebHostBuilder onto HostBuilder, but you still can\u0027t have more than one IServer instance per Host, there would be too many conflicting services.",
                                           "updatedAt":  "2019-07-10T03:50:20Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwOTkxMDY0Nw==",
                                           "createdAt":  "2019-07-10T05:12:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "johncrim",
                                           "body":  "I\u0027m not surprised/makes sense that you can\u0027t have more than one IServer instance per IHost, though technically that\u0027s about the shared DI container in the IHost, right? With a separate IServiceProvider one could create a new webhost in the IHostedService. There would still be a benefit from putting that within a generic host, eg shared environment, configuration, and lifecycle management.\r\n\r\nFor this scenario, I suppose it could work to create a new IHostBuilder + IHost within the IHostedService that needs its own WebHost, and still use the top level IHostBuilder + IHost for global configuration and lifecycle management. That seems incorrect from a purist standpoint, but wouldn\u0027t require any changes to GenericWebHostBuilder. Let me look into that.",
                                           "updatedAt":  "2019-07-10T05:19:45Z"
                                       }
                                   ],
                         "totalCount":  7
                     },
        "title":  "Support re-using GenericWebHostBuilder and GenericWebHostService",
        "labels":  [
                       "enhancement",
                       "severity-nice-to-have",
                       "affected-very-few",
                       "area-hosting",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/13343",
        "createdAt":  "2019-08-22T13:38:01Z",
        "number":  13343,
        "author":  "kevinchalet",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOBJbQ8A==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "KrzysztofBranicki",
                                            "createdAt":  "2020-07-06T06:40:00Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2023-08-24T23:05:58Z",
        "body":  "https://github.com/aspnet/AspNetCore/issues/12918 was specific to Blazor but I suspect there are a few other places where `IServiceScope` is used with just `using` in ASP.NET Core:\r\n  - https://github.com/aspnet/AspNetCore/blob/master/src/DataProtection/EntityFrameworkCore/src/EntityFrameworkCoreXmlRepository.cs#L43\r\n\r\n  - https://github.com/aspnet/AspNetCore/blob/master/src/Hosting/Hosting/src/Internal/ConfigureBuilder.cs#L26\r\n\r\nShould someone do a global search to detect and address them?",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOJoOk8w==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUyMzkxMTE1NA==",
                                           "createdAt":  "2019-08-22T13:40:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kevinchalet",
                                           "body":  "Also, @davidfowl mentioned adding a switch in DI to allow disabling the exception thrown when using `Dispose` instead of `DisposeAsync` but I don\u0027t think it was implemented. `ServiceProviderOptions` would likely be the right place for that.",
                                           "updatedAt":  "2019-08-22T13:40:39Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY0NTg4NDk5MA==",
                                           "createdAt":  "2020-06-18T09:03:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBJbTMg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "KrzysztofBranicki",
                                                                               "createdAt":  "2020-07-06T06:47:44Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "AdamWillden",
                                           "body":  "There should be some guidance on what to do when using an IServiceScope with IAsyncDisposable services.\r\n\r\nWe have come across an instance of this within our code-base. Given the lack of guidance I went to see how this is handled for the HttpContext request services to find the switch case statement: https://github.com/dotnet/aspnetcore/blob/8efcca43ceaaf72281e17f25d759844f488914ac/src/Http/Http/src/Features/RequestServicesFeature.cs\r\n\r\nThis feels **really** smelly to me so some guidance would be appreciated. I feel there should be a service created and exposed to contain this odd behaviour and handle the disposal of an IServiceScope.",
                                           "updatedAt":  "2020-06-18T09:03:10Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY0NjAxODkzNw==",
                                           "createdAt":  "2020-06-18T13:31:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBJbTOw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "KrzysztofBranicki",
                                                                               "createdAt":  "2020-07-06T06:47:46Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "I think a helper extension method would suffice ",
                                           "updatedAt":  "2020-06-18T13:31:33Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY0NjE2MTY1MQ==",
                                           "createdAt":  "2020-06-18T16:46:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AdamWillden",
                                           "body":  "I agree! That would be great.",
                                           "updatedAt":  "2020-06-18T16:46:41Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "Review uses of IServiceScope to ensure registering IAsyncDisposable services doesn\u0027t cause exceptions",
        "labels":  [
                       "enhancement",
                       "affected-few",
                       "severity-minor",
                       "area-hosting",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/14907",
        "createdAt":  "2019-10-10T23:56:36Z",
        "number":  14907,
        "author":  "alefranz",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODAvtnQ==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "GODBS",
                                            "createdAt":  "2019-10-25T19:38:39Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Greg-Smulko",
                                            "createdAt":  "2019-12-31T13:49:33Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Pvlerick",
                                            "createdAt":  "2020-01-07T12:33:05Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "pdevito3",
                                            "createdAt":  "2020-02-27T20:53:57Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "oleksii-pi",
                                            "createdAt":  "2020-03-04T11:58:23Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ybeauchamph",
                                            "createdAt":  "2020-04-02T19:28:09Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "rchamorro",
                                            "createdAt":  "2020-04-16T07:57:26Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "chlillelund",
                                            "createdAt":  "2020-07-22T15:46:19Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "cocowalla",
                                            "createdAt":  "2020-08-19T11:42:12Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "johnnyreilly",
                                            "createdAt":  "2020-10-02T04:52:16Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "hahn-kev",
                                            "createdAt":  "2020-10-06T01:36:33Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "willemda",
                                            "createdAt":  "2020-10-20T09:36:19Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "adraut",
                                            "createdAt":  "2020-10-20T15:19:49Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Trivivium",
                                            "createdAt":  "2020-10-23T21:46:30Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "creste",
                                            "createdAt":  "2020-11-05T14:42:09Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "NickJosevski",
                                            "createdAt":  "2020-11-12T04:42:38Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "dcs3spp",
                                            "createdAt":  "2020-11-27T12:27:13Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "CobeLapierre",
                                            "createdAt":  "2020-12-28T01:45:57Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "lvermeulen",
                                            "createdAt":  "2021-02-12T16:45:15Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Beagle1986",
                                            "createdAt":  "2021-03-08T08:06:44Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "jvitor83",
                                            "createdAt":  "2021-03-28T18:47:06Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "EdvardasDlugauskas",
                                            "createdAt":  "2021-04-13T12:45:13Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "mknet3",
                                            "createdAt":  "2021-04-14T14:15:08Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "tmort93",
                                            "createdAt":  "2021-04-30T16:27:51Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "r-ising",
                                            "createdAt":  "2021-05-10T13:17:16Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "matthias-schuchardt",
                                            "createdAt":  "2021-05-20T14:15:27Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "JamieKeeling",
                                            "createdAt":  "2021-07-07T15:51:43Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Driedas",
                                            "createdAt":  "2021-07-08T08:33:38Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "mihben",
                                            "createdAt":  "2021-07-14T14:02:43Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "migsalazar",
                                            "createdAt":  "2021-08-08T23:37:19Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "toftware",
                                            "createdAt":  "2021-08-20T15:18:49Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "YarekTyshchenko",
                                            "createdAt":  "2021-09-22T07:08:28Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "richtea",
                                            "createdAt":  "2021-09-25T11:20:59Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "lonix1",
                                            "createdAt":  "2021-10-08T13:05:29Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "mariomeyrelles",
                                            "createdAt":  "2021-11-02T20:12:16Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "hurtonypeter",
                                            "createdAt":  "2022-01-29T20:16:37Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ngrahovac",
                                            "createdAt":  "2022-04-08T13:18:02Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "WGroenestein",
                                            "createdAt":  "2022-05-04T20:21:14Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "karelkral",
                                            "createdAt":  "2022-05-31T11:30:11Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "disshishkov",
                                            "createdAt":  "2022-06-17T13:27:02Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "mhjelmseth",
                                            "createdAt":  "2023-01-13T13:15:32Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "jehrenzweig-pi",
                                            "createdAt":  "2023-06-21T20:20:19Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "izhovkin",
                                            "createdAt":  "2023-08-04T01:32:25Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "OleksiiZuiev",
                                            "createdAt":  "2023-09-19T07:23:18Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "paulomorgado",
                                            "createdAt":  "2023-11-01T20:05:21Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "gerikvv",
                                            "createdAt":  "2023-12-29T13:47:19Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ggmueller",
                                            "createdAt":  "2024-05-30T20:11:41Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "rioka",
                                            "createdAt":  "2024-10-03T09:52:57Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "szyszak",
                                            "createdAt":  "2024-12-22T18:54:27Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "chase-miller",
                                            "createdAt":  "2025-04-02T01:46:01Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "scbeek",
                                            "createdAt":  "2025-04-08T20:06:21Z"
                                        }
                                    ],
                          "totalCount":  51
                      },
        "updatedAt":  "2025-07-07T21:09:53Z",
        "body":  "### Describe the bug\r\nWhen using `GenericHost`, in tests `ConfigureTestContainer` is not executed.\r\n\r\n### To Reproduce\r\nI\u0027ve added a test in https://github.com/alefranz/AspNetCore/commit/282c153cfd343498928636780558031f0ab940b2#diff-589b0cebe9e796b47e521f0318393df2R194-R208 to reproduce\r\n\r\n### Expected behavior\r\nThe delegate provided with `ConfigureTestContainer` should be executed\r\n\r\n### Additional context\r\nThis happen in 3.x\r\n\r\nI\u0027m looking at providing a fix for this but I would probably need some hint on the right place to address this.\r\nCould you also confirm the behavior is not intentional?\r\n\r\n@Tratcher I\u0027ve seen you have worked to add support to `ConfigureTestServices` with `GenericHost` in https://github.com/aspnet/AspNetCore/pull/6585/files#diff-48af505b9d348e7e52da534c4590aef1R36 - Do you think it would need a similar logic to address this as well?\r\n\r\nThank you,\r\n Alessio\r\n\r\n\r\n\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOKdvSew==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU0MDg0NzM3MA==",
                                           "createdAt":  "2019-10-11T00:07:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "There were reasons... I don\u0027t think ConfigureTestContainer was compatible. @javiercn might remember.",
                                           "updatedAt":  "2019-10-11T00:07:58Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU0MTAxMTc4Ng==",
                                           "createdAt":  "2019-10-11T10:35:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "javiercn",
                                           "body":  "@alefranz thanks for contacting us.\r\n\r\nIn previous versions the reason we had `ConfigureTest(Services|Container)` was due to the fact that the `Configure(Services|Container)` in Startup ran **after** all the `ConfigureTest(Services|Container)` methods applied to the host builder and we needed a way to run a `Configure(Services|Container)` callback after that happened to ensure services could be overriden for testing purposes.\r\n\r\nWhen we moved to generic host, we changed that behavior and now the callbacks are queued in the order in which you register them, so when you do UseStartup the callback gets immediately queued. For that reason, if you are using generic host you shouldn\u0027t need the ConfigureTestContainer overload, you can simply call `hostBuilder.ConfigureContainer` after the call to UseStartup to tweak the container configuration.\r\n\r\nI don\u0027t know what work @Tratcher did to make it work for ConfigureTestServices. I think the main reason we didn\u0027t do it is because we might have thought it was a much less common use case.\r\n\r\nIf ConfigureTestServices is supported on generic host, @Tratcher is ok with it, and it\u0027s not a big change, I\u0027m supportive of a PR to make ConfigureTestContainer work too, if you want to give it a try.\r\n\r\nI don\u0027t think we will fix ourselves as it\u0027s not a common scenario and there is an alternative way to achieve the same thing as described above, so this only helps you in migration scenarios.\r\n\r\nOtherwise, I simply recommend closing the issue.\r\n\r\nHope this helps.",
                                           "updatedAt":  "2019-10-11T10:35:48Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU0MTg1MjU2Ng==",
                                           "createdAt":  "2019-10-14T18:46:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alefranz",
                                           "body":  "I will investigate the scope of a change to make it work.\r\nIf this is too big of a change, what do you think about throwing an exception that clearly indicates that it is not supported in this scenario and what to use instead?\r\nWith the current behavior there is a risk to spend time in trying to understand why you don\u0027t have the expected services in the container (talking from experience 😅).",
                                           "updatedAt":  "2019-10-14T18:46:43Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU0MjMxMDE1NA==",
                                           "createdAt":  "2019-10-15T17:00:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "roend83",
                                           "body":  "@javiercn I\u0027m having a similar issue and have tried to make the updates that you suggested above.  However, I\u0027m having an issue because my Startup.ConfigureContainer method is always being called after my call to IHostBuilder.ConfigureContainer.  It doesn\u0027t seem to matter what order I set them up with.",
                                           "updatedAt":  "2019-10-15T17:00:25Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU0MjMxMzQ5MQ==",
                                           "createdAt":  "2019-10-15T17:09:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "roend83",
                                           "body":  "@javiercn I did confirm that if I remove Startup.ConfigureContainer and instead put that code into a call to IHostBuilder.ConfigureContainer then it does appear to all get executed in the right order.",
                                           "updatedAt":  "2019-10-15T17:09:09Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU0MjMxNTE4MQ==",
                                           "createdAt":  "2019-10-15T17:13:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "javiercn",
                                           "body":  "@roend83 It\u0027s impossible for us to diagnose what\u0027s going on in your case without a minimal repro project. How DI works with the new container is explained a bit better here:\r\nhttps://github.com/aspnet/AspNetCore.Docs/issues/14973",
                                           "updatedAt":  "2019-10-15T17:13:41Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU0MjMyMTAxOQ==",
                                           "createdAt":  "2019-10-15T17:28:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "roend83",
                                           "body":  "[AspNetCoreConfigurationIssue.zip](https://github.com/aspnet/AspNetCore/files/3730649/AspNetCoreConfigurationIssue.zip)\r\n@javiercn  Here\u0027s a minimal repro of what I\u0027m seeing.",
                                           "updatedAt":  "2019-10-15T17:28:22Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU0MjMzMDUxMw==",
                                           "createdAt":  "2019-10-15T17:52:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "javiercn",
                                           "body":  "@roend83 Thanks for the repro.\r\n\r\n@Tratcher I took a quick look at the repro and @roend83 seems legit. Can you take a look?\r\n\r\n```csharp\r\n        public static IHostBuilder CreateHostBuilder(string[] args) =\u003e\r\n            Host.CreateDefaultBuilder(args)\r\n                .UseServiceProviderFactory(new AutofacServiceProviderFactory())\r\n                .ConfigureWebHostDefaults(webBuilder =\u003e { webBuilder.UseStartup\u003cStartup\u003e(); })\r\n                .ConfigureContainer\u003cContainerBuilder\u003e(builder =\u003e\r\n                {\r\n                    if (!Startup.IsContainerConfigured)\r\n                    {\r\n                        throw new Exception(\"Startup.ConfigureContainer hasn\u0027t been called yet\u0027\");\r\n                    }\r\n                });\r\n```\r\n\r\nMy understanding is that that should never throw as Startup.ConfigureContainer should run before the ConfigureContainer after it, isn\u0027t that the case?",
                                           "updatedAt":  "2019-10-15T17:52:29Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU0MjM4ODIwMQ==",
                                           "createdAt":  "2019-10-15T20:22:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "This gets hit first:\r\n```\r\n\u003e\tAspNetCoreConfigurationIssue.dll!AspNetCoreConfigurationIssue.Program.CreateHostBuilder.AnonymousMethod__1_1(Autofac.ContainerBuilder builder) Line 27\tC#\r\n \tMicrosoft.Extensions.Hosting.dll!Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.ConfigureContainer.AnonymousMethod__0(Microsoft.Extensions.Hosting.HostBuilderContext context, System.__Canon builder)\tUnknown\r\n \tMicrosoft.Extensions.Hosting.dll!Microsoft.Extensions.Hosting.Internal.ConfigureContainerAdapter\u003cAutofac.ContainerBuilder\u003e.ConfigureContainer(Microsoft.Extensions.Hosting.HostBuilderContext hostContext, object containerBuilder)\tUnknown\r\n \tMicrosoft.Extensions.Hosting.dll!Microsoft.Extensions.Hosting.HostBuilder.CreateServiceProvider()\tUnknown\r\n \tMicrosoft.Extensions.Hosting.dll!Microsoft.Extensions.Hosting.HostBuilder.Build()\tUnknown\r\n \tAspNetCoreConfigurationIssue.dll!AspNetCoreConfigurationIssue.Program.Main(string[] args) Line 18\tC#\r\n```\r\nAnd this second:\r\n```\r\n\u003e\tAspNetCoreConfigurationIssue.dll!AspNetCoreConfigurationIssue.Startup.ConfigureContainer(Autofac.ContainerBuilder builder) Line 56\tC#\r\n \t[Native to Managed Transition]\t\r\n \t[Managed to Native Transition]\t\r\n \tMicrosoft.AspNetCore.Hosting.dll!Microsoft.AspNetCore.Hosting.ConfigureContainerBuilder.InvokeCore(object instance, object container)\tUnknown\r\n \tMicrosoft.AspNetCore.Hosting.dll!Microsoft.AspNetCore.Hosting.ConfigureContainerBuilder.Invoke.__StartupConfigureContainer|0(object containerBuilder)\tUnknown\r\n \tMicrosoft.AspNetCore.Hosting.dll!Microsoft.AspNetCore.Hosting.ConfigureContainerBuilder.Invoke(object instance, object container)\tUnknown\r\n \tMicrosoft.AspNetCore.Hosting.dll!Microsoft.AspNetCore.Hosting.ConfigureContainerBuilder.Build.AnonymousMethod__0(object container)\tUnknown\r\n \tMicrosoft.AspNetCore.Hosting.dll!Microsoft.AspNetCore.Hosting.GenericWebHostBuilder.ConfigureContainer\u003cSystem.__Canon\u003e(Microsoft.Extensions.Hosting.HostBuilderContext context, System.__Canon container)\tUnknown\r\n \tMicrosoft.Extensions.Hosting.dll!Microsoft.Extensions.Hosting.Internal.ConfigureContainerAdapter\u003cAutofac.ContainerBuilder\u003e.ConfigureContainer(Microsoft.Extensions.Hosting.HostBuilderContext hostContext, object containerBuilder)\tUnknown\r\n \tMicrosoft.Extensions.Hosting.dll!Microsoft.Extensions.Hosting.HostBuilder.CreateServiceProvider()\tUnknown\r\n \tMicrosoft.Extensions.Hosting.dll!Microsoft.Extensions.Hosting.HostBuilder.Build()\tUnknown\r\n \tAspNetCoreConfigurationIssue.dll!AspNetCoreConfigurationIssue.Program.Main(string[] args) Line 18\tC#\r\n```\r\n\r\nConfigureContainer actions are called in the order registered:\r\nhttps://github.com/aspnet/Extensions/blob/b3a158ac055f1f8f76ed4a1a1c6ef860068cf63e/src/Hosting/Hosting/src/HostBuilder.cs#L228-L231\r\nThis is where generic web host finds and calls ConfigureContainer:\r\nhttps://github.com/aspnet/AspNetCore/blob/c7972d45f83aab461d23616a9c17fe5fe3ad2226/src/Hosting/Hosting/src/GenericHost/GenericWebHostBuilder.cs#L260-L263\r\nWhich is called inline...\r\n```\r\n\u003e\tAspNetCoreConfigurationIssue.dll!AspNetCoreConfigurationIssue.Program.CreateHostBuilder.AnonymousMethod__1_0(Microsoft.AspNetCore.Hosting.IWebHostBuilder webBuilder) Line 24\tC#\r\n \tMicrosoft.AspNetCore.dll!Microsoft.Extensions.Hosting.GenericHostBuilderExtensions.ConfigureWebHostDefaults.AnonymousMethod__0(Microsoft.AspNetCore.Hosting.IWebHostBuilder webHostBuilder)\tUnknown\r\n \tMicrosoft.AspNetCore.Hosting.dll!Microsoft.Extensions.Hosting.GenericHostWebHostBuilderExtensions.ConfigureWebHost(Microsoft.Extensions.Hosting.IHostBuilder builder, System.Action\u003cMicrosoft.AspNetCore.Hosting.IWebHostBuilder\u003e configure)\tUnknown\r\n \tMicrosoft.AspNetCore.dll!Microsoft.Extensions.Hosting.GenericHostBuilderExtensions.ConfigureWebHostDefaults(Microsoft.Extensions.Hosting.IHostBuilder builder, System.Action\u003cMicrosoft.AspNetCore.Hosting.IWebHostBuilder\u003e configure)\tUnknown\r\n \tAspNetCoreConfigurationIssue.dll!AspNetCoreConfigurationIssue.Program.CreateHostBuilder(string[] args) Line 22\tC#\r\n \tAspNetCoreConfigurationIssue.dll!AspNetCoreConfigurationIssue.Program.Main(string[] args) Line 18\tC#\r\n```\r\nAh, but UseStartup is delayed until ConfigureServices runs. \r\nhttps://github.com/aspnet/AspNetCore/blob/c7972d45f83aab461d23616a9c17fe5fe3ad2226/src/Hosting/Hosting/src/GenericHost/GenericWebHostBuilder.cs#L203-L209\r\nThat explains the order inversion. Here\u0027s how it works out:\r\n- Program: ConfigureWebHostDefaults, UseStartup\r\n- Program: ConfigureContainer (register callback)\r\n- Build, CreateServiceProvider\r\n- [ConfigureServices](https://github.com/aspnet/Extensions/blob/b3a158ac055f1f8f76ed4a1a1c6ef860068cf63e/src/Hosting/Hosting/src/HostBuilder.cs#L221-L224)\r\n  - UseStartup registers Startup.ConfigureContainer callback\r\n- ConfigureContainer\r\n  - Program ConfigureContainer callback\r\n  - Startup ConfigureContainer callback\r\n\r\nTrying to fix this would likely require moving the delayed call to UseStartup out of ConfigureServices. Not sure what other consequences that would have.",
                                           "updatedAt":  "2019-10-15T20:24:55Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU0NjQ4NjgyNw==",
                                           "createdAt":  "2019-10-25T19:41:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEHq_IA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "botondbotos",
                                                                               "createdAt":  "2019-11-08T13:22:41Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "cdibbs",
                                                                               "createdAt":  "2019-11-08T18:21:11Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Ebram-Tharwat",
                                                                               "createdAt":  "2019-12-14T13:22:27Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "forktrucka",
                                                                               "createdAt":  "2019-12-18T05:24:18Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Greg-Smulko",
                                                                               "createdAt":  "2019-12-31T13:52:00Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Pvlerick",
                                                                               "createdAt":  "2020-01-07T09:20:41Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "0xorial",
                                                                               "createdAt":  "2021-02-02T12:57:58Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Kludgy4",
                                                                               "createdAt":  "2025-02-26T05:38:01Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  8
                                                         },
                                           "author":  "GODBS",
                                           "body":  "I have the exact same issue. Is there a workaround that would allow us to bypass this issue?",
                                           "updatedAt":  "2019-10-25T19:41:41Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU1MTk0MTk4Mg==",
                                           "createdAt":  "2019-11-08T18:36:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOA3heKQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "GODBS",
                                                                               "createdAt":  "2019-11-08T19:14:05Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "botondbotos",
                                                                               "createdAt":  "2019-11-08T19:14:34Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "hjerpbakk",
                                                                               "createdAt":  "2019-11-13T11:56:18Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "forktrucka",
                                                                               "createdAt":  "2019-12-18T05:24:10Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  4
                                                         },
                                           "author":  "cdibbs",
                                           "body":  "@GODBS I ended up going the super-hacky route, for now. I hope this is fixed in 3.1.\r\n\r\n```c#\r\ninternal static Action\u003cContainerBuilder\u003e IntegTestOverrides = null;\r\npublic void ConfigureContainer(ContainerBuilder cb)\r\n{\r\n    cb.RegisterModule(new ApiRootModule());\r\n    cb.RegisterType\u003cStartupHttpPipeline\u003e().As\u003cIStartupHTTPPipeline\u003e();\r\n    IntegTestOverrides?.Invoke(cb);\r\n}\r\n```",
                                           "updatedAt":  "2019-11-08T18:36:41Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU1MTk0MzAyMQ==",
                                           "createdAt":  "2019-11-08T18:39:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEHq_UA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "forktrucka",
                                                                               "createdAt":  "2019-12-18T05:26:10Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "Pvlerick",
                                                                               "createdAt":  "2020-01-07T09:20:51Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "ybeauchamph",
                                                                               "createdAt":  "2020-04-02T17:50:06Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "FirePho",
                                                                               "createdAt":  "2020-06-04T07:21:15Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "samjetski",
                                                                               "createdAt":  "2020-09-15T04:22:40Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "bartecargo",
                                                                               "createdAt":  "2022-07-04T20:00:58Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "IanKemp",
                                                                               "createdAt":  "2024-03-22T13:11:27Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "Kludgy4",
                                                                               "createdAt":  "2025-02-26T05:38:22Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  8
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "@cdibbs no changes are planned for 3.1.",
                                           "updatedAt":  "2019-11-08T18:39:50Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU1MTk0NTMyMA==",
                                           "createdAt":  "2019-11-08T18:46:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "cdibbs",
                                           "body":  "Will a fix come with a later patch to 3.1? Requiring hacks to override dependencies in your tests seems like a pretty undesirable thing to enter LTS with.",
                                           "updatedAt":  "2019-11-08T18:46:52Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU1MTk0NzIyNw==",
                                           "createdAt":  "2019-11-08T18:52:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Unlikely. Patching is risky and anything with a viable workaround is unlikely to be patched.",
                                           "updatedAt":  "2019-11-08T18:52:24Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MTM2OTUxMg==",
                                           "createdAt":  "2019-12-03T21:41:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "seesharper",
                                           "body":  "Take a look at this article for more information about AspNet Core 3.0 integration tests \r\nhttps://andrewlock.net/converting-integration-tests-to-net-core-3/",
                                           "updatedAt":  "2019-12-03T21:41:22Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MTc1NjAyMg==",
                                           "createdAt":  "2019-12-04T17:31:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "seesharper",
                                           "body":  "As @roend83 mentioned it works when adding third party DI registrations at the time the `IHostBuilder` is bein set up.\r\nTake a look here for an example \r\n\r\nhttps://github.com/seesharper/heatkeeper/blob/master/src/HeatKeeper.Server.Host/Program.cs\r\n\r\nAnd the customization of the container during test is here \r\n\r\nhttps://github.com/seesharper/heatkeeper/blob/master/src/HeatKeeper.Server.WebApi.Tests/TestBase.cs",
                                           "updatedAt":  "2019-12-04T17:31:27Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MjIzNjU5OA==",
                                           "createdAt":  "2019-12-05T17:43:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dahovey",
                                           "body":  "The resolution I am using is below. \r\n\r\n```csharp\r\n          public class TestApplicationFactory : WebApplicationFactory\u003cStartup\u003e\r\n        {\r\n            protected override IHost CreateHost(IHostBuilder builder)\r\n            {\r\n                builder.ConfigureContainer\u003cContainerBuilder\u003e(containerBuilder =\u003e\r\n                    {\r\n           \r\n                    });\r\n\r\n                return base.CreateHost(builder);\r\n            }\r\n        }\r\n```\r\n\r\nThe `ConfigureContainer` registered inside `WebApplicationFactory` is called after `ConfigureContainer` by the generic host builder inside `Program.cs`.",
                                           "updatedAt":  "2019-12-05T17:43:51Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2Njg3MzI1MA==",
                                           "createdAt":  "2019-12-18T05:25:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOA65Hbg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Pvlerick",
                                                                               "createdAt":  "2020-01-07T09:53:35Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "timswiggers",
                                                                               "createdAt":  "2020-01-07T10:58:23Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "karelkral",
                                                                               "createdAt":  "2020-02-06T10:51:23Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "forktrucka",
                                           "body":  "\u003e The resolution I am using is below.\r\n\u003e \r\n\u003e ```cs\r\n\u003e           public class TestApplicationFactory : WebApplicationFactory\u003cStartup\u003e\r\n\u003e         {\r\n\u003e             protected override IHost CreateHost(IHostBuilder builder)\r\n\u003e             {\r\n\u003e                 builder.ConfigureContainer\u003cContainerBuilder\u003e(containerBuilder =\u003e\r\n\u003e                     {\r\n\u003e            \r\n\u003e                     });\r\n\u003e \r\n\u003e                 return base.CreateHost(builder);\r\n\u003e             }\r\n\u003e         }\r\n\u003e ```\r\n\u003e \r\n\u003e The `ConfigureContainer` registered inside `WebApplicationFactory` is called after `ConfigureContainer` by the generic host builder inside `Program.cs`.\r\n\r\nI tried this. Seemed to face the same problem in my implementation... What am i missing? \r\n\r\nUsing 3.1, we\u0027re using autofac and calling  ConfigureContainer(ContainerBuilder builder) from startup. This seems to execute in the same order...",
                                           "updatedAt":  "2019-12-18T05:28:05Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU3MTU2NzUxNA==",
                                           "createdAt":  "2020-01-07T12:31:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEHq_6g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "javicrespo",
                                                                               "createdAt":  "2020-01-07T12:36:05Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "MaxDeg",
                                                                               "createdAt":  "2020-01-07T12:43:53Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ammarchal",
                                                                               "createdAt":  "2020-01-07T13:17:21Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "grinay",
                                                                               "createdAt":  "2020-02-22T12:11:24Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "stephenthrelfall",
                                                                               "createdAt":  "2020-07-07T06:20:02Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "samjetski",
                                                                               "createdAt":  "2020-09-15T04:24:33Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "0xorial",
                                                                               "createdAt":  "2021-02-02T12:57:37Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "satrapu",
                                                                               "createdAt":  "2021-05-31T20:49:15Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "rmemon-bunnings",
                                                                               "createdAt":  "2021-11-09T04:40:27Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "darman96",
                                                                               "createdAt":  "2022-06-20T09:58:12Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "bartecargo",
                                                                               "createdAt":  "2024-02-21T18:53:24Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "szyszak",
                                                                               "createdAt":  "2024-12-23T10:34:15Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Kludgy4",
                                                                               "createdAt":  "2025-02-26T05:39:35Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  13
                                                         },
                                           "author":  "Pvlerick",
                                           "body":  "All due respect, I am sorry but the provided answers to this issues are simply not satisfactory.\r\n\r\n\u003e When we moved to generic host, we changed that behavior and now the callbacks are queued in the order in which you register them, so when you do UseStartup the callback gets immediately queued. For that reason, if you are using generic host you shouldn\u0027t need the ConfigureTestContainer overload, you can simply call `hostBuilder.ConfigureContainer` after the call to UseStartup to tweak the container configuration.\r\n\r\nThis does not work, as demonstrated in Tratcher\u0027s post here: https://github.com/aspnet/AspNetCore/issues/14907#issuecomment-542388201\r\n\r\n@javiercn \u0027s description in https://github.com/aspnet/AspNetCore/issues/14907#issuecomment-541011786 implies to be the intended behaviour is that ```Startup.ConfigureContainer``` should be called after ```Program.ConfigureContainer``` if the later is called after ```UseStarup```. This is not the case which means it is a plain **bug**.\r\n\r\nNone of the technique above are working, meaning that there is no apparent nor easy workaround. I\u0027m excluding @cdibbs \u0027s techniques which prevents testing in parallel.\r\n\r\nThis issue prevents from having a proper way for tests to override dependencies, which is a huge issue for us (and I suspect many other). We have tons of tests doing exactly that and this bug prevents us from moving from 2.1 to 3.1\r\n\r\nThis is a big show-stopper for anyone who wants to properly test his application.",
                                           "updatedAt":  "2020-01-07T12:32:21Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU3MTU3MzM3NQ==",
                                           "createdAt":  "2020-01-07T12:51:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alefranz",
                                           "body":  "I have investigated a fix but unfortunately, as well explained by @Tratcher , to fix this would have potential side effects so I parked my work.\r\n@anurse would a PR be considered or it is to risky to do change this behavior as 3.1 has already been released?\r\nShould the effort instead be in documenting a working hack?\r\nThank you!",
                                           "updatedAt":  "2020-01-07T12:51:19Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU3MTcyMzUyNg==",
                                           "createdAt":  "2020-01-07T18:59:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOA4iOYg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Pvlerick",
                                                                               "createdAt":  "2020-01-08T07:36:56Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "cdibbs",
                                           "body":  "I agree with @Pvlerick that my workaround doesn\u0027t work when you run the tests in parallel (which is the norm). So, is my workaround really \"viable?\" Maybe not.\r\n\r\nIt sounds like any fix would have side effects, but perhaps that just builds a case for doubling up on the normal amount of testing done for a patch like this.",
                                           "updatedAt":  "2020-01-07T18:59:56Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU3MTkyOTY4Mw==",
                                           "createdAt":  "2020-01-08T07:44:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Pvlerick",
                                           "body":  "@cdibbs exactly. It\u0027s an ugly fix to try to make things work temporarily, this is not a solution that will be implemented across projects; I don\u0027t see myself explaining to other developers that this is how they should inject theirs mocks from now on, moving from a super-clean solution in 2.1 to a hack in 3.1.\r\n\r\nWe need this addressed badly :-( ",
                                           "updatedAt":  "2020-01-08T07:44:51Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU3MzA2ODQwMA==",
                                           "createdAt":  "2020-01-10T14:58:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBPGJNw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "litichevskiydv",
                                                                               "createdAt":  "2020-01-12T20:03:27Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "vmeln",
                                                                               "createdAt":  "2020-02-05T13:35:20Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jlwalkerlg",
                                                                               "createdAt":  "2020-09-01T16:52:02Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "ssunkari",
                                           "body":  "I got it working by implementing custom factory for my container setup. In my case its Autofac. I have tweaked the IServiceProviderFacotry\u003cContainerBuilder\u003e implementation of Autofac library.\r\n###  Code\r\n    public class CustomAutofacServiceProviderFactory : IServiceProviderFactory\u003cContainerBuilder\u003e\r\n    {\r\n        private readonly Action\u003cContainerBuilder\u003e _configurationOverride;\r\n        private readonly Action\u003cContainerBuilder\u003e _configurationAction;\r\n        /// \u003csummary\u003e\r\n        /// Initializes a new instance of the \u003csee cref=\"AutofacServiceProviderFactory\"/\u003e class.\r\n        /// \u003c/summary\u003e\r\n        /// \u003cparam name=\"testStartup\"\u003e\u003c/param\u003e\r\n        /// \u003cparam name=\"configurationAction\"\u003eAction on a \u003csee cref=\"ContainerBuilder\"/\u003e that adds component registrations to the conatiner.\u003c/param\u003e\r\n        public CustomAutofacServiceProviderFactory(Action\u003cContainerBuilder\u003e configurationAction = null, Action\u003cContainerBuilder\u003e configurationOverride = null)\r\n        {\r\n            _configurationOverride = configurationOverride;\r\n            _configurationAction = configurationAction ?? (builder =\u003e { });\r\n        }\r\n\r\n \r\n\r\n        /// \u003csummary\u003e\r\n        /// Creates a container builder from an \u003csee cref=\"IServiceCollection\" /\u003e.\r\n        /// \u003c/summary\u003e\r\n        /// \u003cparam name=\"services\"\u003eThe collection of services.\u003c/param\u003e\r\n        /// \u003creturns\u003eA container builder that can be used to create an \u003csee cref=\"IServiceProvider\" /\u003e.\u003c/returns\u003e\r\n        public ContainerBuilder CreateBuilder(IServiceCollection services)\r\n        {\r\n            var builder = new ContainerBuilder();\r\n\r\n            builder.Populate(services);\r\n\r\n            _configurationAction(builder);\r\n\r\n            return builder;\r\n        }\r\n\r\n        /// \u003csummary\u003e\r\n        /// Creates an \u003csee cref=\"IServiceProvider\" /\u003e from the container builder.\r\n        /// \u003c/summary\u003e\r\n        /// \u003cparam name=\"containerBuilder\"\u003eThe container builder.\u003c/param\u003e\r\n        /// \u003creturns\u003eAn \u003csee cref=\"IServiceProvider\" /\u003e.\u003c/returns\u003e\r\n        public IServiceProvider CreateServiceProvider(ContainerBuilder containerBuilder)\r\n        {\r\n            if (containerBuilder == null) throw new ArgumentNullException(nameof(containerBuilder));\r\n\r\n            _configurationOverride(containerBuilder); // Added this to override container overrides\r\n            var container = containerBuilder.Build();\r\n\r\n            return new AutofacServiceProvider(container);\r\n        }\r\n    }\r\n### Test Setup\r\n   public class CustomWebApplicationFactory\u003cTStartup\u003e : WebApplicationFactory\u003cTStartup\u003e where \r\n   TStartup:class\r\n    { \r\n\r\n        protected override IHost CreateHost(IHostBuilder builder)\r\n        {\r\n            builder.ConfigureContainer\u003cContainerBuilder\u003e(cb =\u003e\r\n            {\r\n            }).UseServiceProviderFactory(\r\n                new CustomAutofacServiceProviderFactory(\r\n                    b =\u003e { },\r\n                    OverrideContainer));\r\n     \r\n\r\n            return base.CreateHost(builder);\r\n        }\r\n}\r\nRefer to Autofac docs https://autofaccn.readthedocs.io/en/latest/integration/aspnetcore.html for service registration",
                                           "updatedAt":  "2020-01-10T15:01:03Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU3MzU2NTQyMA==",
                                           "createdAt":  "2020-01-13T09:01:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Pvlerick",
                                           "body":  "@ssunkari I haven\u0027t tried this yet, but again I don\u0027t see this as a viable workaround.\r\n\r\n@anurse @davidfowl @DamianEdwards   any views on this, do you think this can/will be patched?",
                                           "updatedAt":  "2020-01-13T10:16:19Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU3OTQ4MzY4MA==",
                                           "createdAt":  "2020-01-28T22:11:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jzabroski",
                                           "body":  "https://github.com/dotnet/aspnetcore/issues/11050#issuecomment-579468803\r\n\r\n",
                                           "updatedAt":  "2020-01-28T22:11:58Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU4MDkyNDk5Nw==",
                                           "createdAt":  "2020-01-31T21:47:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "analogrelay",
                                           "body":  "@Pvlerick This has enough of a breaking impact (by changing the ordering) that it\u0027s generally not suitable for patching. It could break existing apps that were dependent on the ordering. We\u0027ll be looking at ordering changes for 5.0, but I don\u0027t expect this is something we could patch.",
                                           "updatedAt":  "2020-01-31T21:47:20Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU4MTIyNjI3NQ==",
                                           "createdAt":  "2020-02-03T03:56:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "forktrucka",
                                           "body":  "\u003e @Pvlerick This has enough of a breaking impact (by changing the ordering) that it\u0027s generally not suitable for patching. It could break existing apps that were dependent on the ordering. We\u0027ll be looking at ordering changes for 5.0, but I don\u0027t expect this is something we could patch.\r\n\r\nWouldn\u0027t that imply that someone has actually got this to work for it be be broken by a patch? Looking at the comments it seems like people aren\u0027t able to do their jobs, as the workaround just don\u0027t work.",
                                           "updatedAt":  "2020-02-03T03:56:57Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU4MTI5NTg5Ng==",
                                           "createdAt":  "2020-02-03T08:33:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEHrAJw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "karelkral",
                                                                               "createdAt":  "2020-02-05T16:47:06Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "grinay",
                                                                               "createdAt":  "2020-02-22T12:15:10Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "stephenthrelfall",
                                                                               "createdAt":  "2020-07-07T06:20:12Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Kludgy4",
                                                                               "createdAt":  "2025-02-26T05:40:22Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  4
                                                         },
                                           "author":  "Pvlerick",
                                           "body":  "@anurse this is really unfortunate... We have a lot of [narrow integration tests](https://martinfowler.com/bliki/IntegrationTest.html) that are redefining some of the dependencies and swapping them with mocks - calls to services. This bug prevents us from migrating as-is and implies a lot of refactoring, starting with something clean and ending with something ugly. I\u0027m puzzled that something like that was overlooked, after all DI and testing are supposed to be an integral part of this product.\r\n\r\nThis is a pickle, I agree with @forktrucka that nobody seems to have this working. On the other hand I can see why you don\u0027t want to patch and possible break hypothetical implementations, but here we are with all the 2.x implementations irremediably breaking when going to 3.x\r\n",
                                           "updatedAt":  "2020-02-03T08:33:05Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU4OTE0NzU1NQ==",
                                           "createdAt":  "2020-02-20T15:48:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBFECOA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "ROCKET",
                                                                               "user":  "RehanSaeed",
                                                                               "createdAt":  "2020-02-20T17:12:17Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "RehanSaeed",
                                                                               "createdAt":  "2020-02-20T17:12:19Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "pdevito3",
                                                                               "createdAt":  "2020-02-27T17:44:47Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "LZIde",
                                                                               "createdAt":  "2020-04-16T13:13:26Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "RehanSaeed",
                                                                               "createdAt":  "2020-05-22T08:50:33Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  5
                                                         },
                                           "author":  "tjrobinson",
                                           "body":  "This workaround\\* of creating a derived `TestStartup` from @RehanSaeed is working for us: https://rehansaeed.com/asp-net-core-integration-testing-mocking-using-moq/\r\n\r\n*\\*I describe it as a workaround as it would be nicer not to have to make `Configure` and `ConfigureServices` on `Startup` `virtual`.*",
                                           "updatedAt":  "2020-02-20T15:48:06Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU4OTk1MzQ0OA==",
                                           "createdAt":  "2020-02-22T12:54:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "grinay",
                                           "body":  "Agreed with @Pvlerick and unfortunately we have already migrate, and now looking for a solution to fix our tests. All suggested workarounds will not work for us, as we override services per test case. Any way to solve this in nearest future? ",
                                           "updatedAt":  "2020-02-22T12:54:24Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU5MjEwMjE0NQ==",
                                           "createdAt":  "2020-02-27T18:15:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBw9I0w==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "jzabroski",
                                                                               "createdAt":  "2020-02-27T18:17:16Z"
                                                                           },
                                                                           {
                                                                               "content":  "ROCKET",
                                                                               "user":  "jzabroski",
                                                                               "createdAt":  "2020-02-27T18:17:17Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "pdevito3",
                                                                               "createdAt":  "2020-02-27T20:54:38Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "alefranz",
                                                                               "createdAt":  "2020-02-28T12:16:27Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "otto-gebb",
                                                                               "createdAt":  "2020-03-02T20:05:41Z"
                                                                           },
                                                                           {
                                                                               "content":  "ROCKET",
                                                                               "user":  "oleksii-pi",
                                                                               "createdAt":  "2020-03-04T10:50:07Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "oleksii-pi",
                                                                               "createdAt":  "2020-03-04T10:50:11Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "ybeauchamph",
                                                                               "createdAt":  "2020-04-02T19:25:59Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "johnnyreilly",
                                                                               "createdAt":  "2020-05-03T12:23:38Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "DouglasHammon",
                                                                               "createdAt":  "2020-05-04T22:57:36Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "DouglasHammon",
                                                                               "createdAt":  "2020-05-04T22:57:38Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "cocowalla",
                                                                               "createdAt":  "2020-08-19T11:04:44Z"
                                                                           },
                                                                           {
                                                                               "content":  "ROCKET",
                                                                               "user":  "cocowalla",
                                                                               "createdAt":  "2020-08-19T11:04:45Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "tomasz-podolak",
                                                                               "createdAt":  "2020-09-03T12:19:44Z"
                                                                           },
                                                                           {
                                                                               "content":  "ROCKET",
                                                                               "user":  "samjetski",
                                                                               "createdAt":  "2020-09-15T04:33:12Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "matthias-schuchardt",
                                                                               "createdAt":  "2020-09-30T08:52:24Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "OmarMohammad",
                                                                               "createdAt":  "2020-10-08T14:04:34Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ilievici",
                                                                               "createdAt":  "2020-12-03T17:24:23Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "tmort93",
                                                                               "createdAt":  "2021-04-30T16:27:42Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "DavidPx",
                                                                               "createdAt":  "2021-07-01T18:40:05Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  20
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "OK waking up and re-reading this issue. IT does seem like a bug that should be fixed and potentially patched though it is risky (maybe it\u0027ll need to be quirked). I will follow up with some people.",
                                           "updatedAt":  "2020-02-27T18:15:38Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU5MjEwMzUzNg==",
                                           "createdAt":  "2020-02-27T18:18:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "Is everyone using ConfigureTestContainer here? ConfigureTestServices works fine right?",
                                           "updatedAt":  "2020-02-27T18:18:32Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU5MjQ4ODE4OA==",
                                           "createdAt":  "2020-02-28T12:15:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alefranz",
                                           "body":  "@davidfowl yes, the issue is when using a 3rd party container, e.g. Autofac\r\nI\u0027ve been busy moving moving many services to the Microsoft DI, but we still have some using Autofac, so I would be happy to look at this again if now there is a chance of this change to be considered for a patch release",
                                           "updatedAt":  "2020-02-28T12:15:55Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU5MjUyOTkyMQ==",
                                           "createdAt":  "2020-02-28T14:12:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pdevito3",
                                           "body":  "@davidfowl my original issue that forwarded me here (#19404) is how to handle ConfigureServices getting called twice during integration tests.\r\n\r\nAs @javiercn suggested in #12360, I am able to do something like the below, but this is obviously not ideal, so I wanted to see if there a better solution established for this.\r\n\r\nFor example:\r\n**Integration Test**\r\n````\r\npublic class WeatherForecastIntegTest : IClassFixture\u003cWebApplicationFactory\u003cStartup\u003e\u003e\r\n    {\r\n\r\n        [Fact]\r\n        public async Task PostForecastReturnsSuccessCodeAndResourceWithAccurateFields() \r\n        {\r\n            var appFactory = new ServerFactory\u003cStartup\u003e { };\r\n            var client = appFactory.CreateClient();\r\n            var fakeWeatherForecast = new WeatherForecast { Id = 1 };\r\n\r\n            // Act\r\n            var httpResponse = await client.PostAsJsonAsync(\"/weatherforecast\", fakeWeatherForecast)\r\n                .ConfigureAwait(false);\r\n            httpResponse.EnsureSuccessStatusCode();\r\n\r\n            var resultDto = JsonConvert.DeserializeObject\u003cWeatherForecast\u003e(await httpResponse.Content.ReadAsStringAsync()\r\n                .ConfigureAwait(false));\r\n\r\n            // Assert\r\n            httpResponse.StatusCode.Should().Be(201);\r\n        }\r\n    }\r\n````\r\n\r\n\r\n**ServerFactory (simple POC)**\r\n````\r\n    public class ServerFactory\u003cTStartup\u003e : WebApplicationFactory\u003cTStartup\u003e\r\n        where TStartup : class\r\n    {       \r\n        public ServerFactory()\r\n        {\r\n            ClientOptions.AllowAutoRedirect = false;\r\n            ClientOptions.BaseAddress = new Uri(\"https://localhost\");\r\n        }\r\n\r\n        protected override IHostBuilder CreateHostBuilder()\r\n        {\r\n            return Program.CreateHostBuilder(new[] { \"--use-startup=false\" });\r\n        }\r\n\r\n        protected override void ConfigureWebHost(IWebHostBuilder builder)\r\n        {\r\n            base.ConfigureWebHost(builder);\r\n            builder.UseStartup\u003cTStartup\u003e();\r\n        }\r\n    }\r\n````\r\n\r\n**Program.cs**\r\n````\r\n.ConfigureWebHostDefaults(webBuilder =\u003e\r\n                {\r\n                    if (!args.Contains(\"--use-startup=false\"))\r\n                    {\r\n                        webBuilder.UseStartup(typeof(Startup).GetTypeInfo().Assembly.FullName)\r\n                        .UseContentRoot(Directory.GetCurrentDirectory())\r\n                        .UseKestrel()\r\n                        .UseNLog();\r\n                    }\r\n                });\r\n````",
                                           "updatedAt":  "2020-02-28T14:12:38Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYxOTU3OTg3OA==",
                                           "createdAt":  "2020-04-26T16:25:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Lobosque",
                                           "body":  "Got hit by this very problem while migrating a 2.2 codebase to 3.x",
                                           "updatedAt":  "2020-04-26T16:25:53Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyMDc1MDg0MQ==",
                                           "createdAt":  "2020-04-28T17:34:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBR9UzQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "DouglasHammon",
                                                                               "createdAt":  "2020-05-04T22:57:10Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "aviita",
                                                                               "createdAt":  "2020-05-07T08:49:11Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "starkcolin",
                                                                               "createdAt":  "2020-05-19T04:01:21Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "krajek",
                                                                               "createdAt":  "2020-07-01T12:21:50Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "matthias-schuchardt",
                                                                               "createdAt":  "2020-09-30T08:31:48Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  5
                                                         },
                                           "author":  "jr01",
                                           "body":  "Here is a workaround for Autofac that will call any `ConfigureTestContainer(...)` method, also in `.WithWebHostBuilder(...)` calls.\r\n\r\nIt builds on @ssunkari\u0027s [workaround](https://github.com/dotnet/aspnetcore/issues/14907#issuecomment-573068400)\r\n\r\n```\r\npublic class CustomWebApplicationFactory\u003cTStartup\u003e : WebApplicationFactory\u003cTStartup\u003e\r\n        where TStartup : class\r\n{\r\n\tprotected override void ConfigureWebHost(IWebHostBuilder webHostBuilder)\r\n\t{\r\n\t\twebHostBuilder.ConfigureTestContainer\u003cAutofac.ContainerBuilder\u003e(builder =\u003e\r\n\t\t{\r\n\t\t\t// called after Startup.ConfigureContainer\r\n\t\t});\r\n\t}\r\n\r\n\tprotected override IHost CreateHost(IHostBuilder builder)\r\n\t{\r\n\t\tbuilder.UseServiceProviderFactory(new CustomServiceProviderFactory());\r\n\t\treturn base.CreateHost(builder);\r\n\t}\r\n}\r\n\r\npublic class CustomServiceProviderFactory : IServiceProviderFactory\u003cCustomContainerBuilder\u003e\r\n{\r\n\tpublic CustomContainerBuilder CreateBuilder(IServiceCollection services) =\u003e new CustomContainerBuilder(services);\r\n\r\n\tpublic IServiceProvider CreateServiceProvider(CustomContainerBuilder containerBuilder) =\u003e\r\n\t\tnew AutofacServiceProvider(containerBuilder.CustomBuild());\r\n}\r\n\r\npublic class CustomContainerBuilder : Autofac.ContainerBuilder\r\n{\r\n\tprivate readonly IServiceCollection services;\r\n\r\n\tpublic CustomContainerBuilder(IServiceCollection services)\r\n\t{\r\n\t\tthis.services = services;\r\n\t\tthis.Populate(services);\r\n\t}\r\n\r\n\tpublic Autofac.IContainer CustomBuild()\r\n\t{\r\n\t\tvar sp = this.services.BuildServiceProvider();\r\n#pragma warning disable CS0612 // Type or member is obsolete\r\n\t\tvar filters = sp.GetRequiredService\u003cIEnumerable\u003cIStartupConfigureContainerFilter\u003cAutofac.ContainerBuilder\u003e\u003e\u003e();\r\n#pragma warning restore CS0612 // Type or member is obsolete\r\n\r\n\t\tforeach (var filter in filters)\r\n\t\t{\r\n\t\t\tfilter.ConfigureContainer(b =\u003e { })(this);\r\n\t\t}\r\n\r\n\t\treturn this.Build();\r\n\t}\r\n}\r\n```\t\r\n\r\n\r\nUsage\r\n\r\n```\r\nvar factory = new CustomWebApplicationFactory\u003cStartup\u003e();\r\n\r\nvar client1 = factory.CreateClient();\r\n\r\n\r\nvar client2 = factory.WithWebHostBuilder(b =\u003e\r\n{\r\n\tb.ConfigureTestContainer\u003cAutofac.ContainerBuilder\u003e(builder =\u003e\r\n\t{\r\n\t\t// Called after Startup.ConfigureContainer and after CustomWebApplicationFactory\u0027s ConfigureTestContainer\r\n\t});\r\n}).CreateClient();\r\n```\r\n\r\n",
                                           "updatedAt":  "2020-04-28T17:34:18Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyMzEwOTE5OA==",
                                           "createdAt":  "2020-05-03T13:19:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "johnnyreilly",
                                           "body":  "Thanks @jr01 - from one JR to another 😉 \r\n\r\nI do hope this gets resolved through changes to ASP.Net Core.  I was starting to consider if it was worth attempting to remove Autofac from my (not small) application.  That would have been a lot of work, so I\u0027m glad there\u0027s a workaround that will allow me to still face myself in the mirror. ❤️ ",
                                           "updatedAt":  "2020-05-03T13:19:41Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYzMjEwMTEyMg==",
                                           "createdAt":  "2020-05-21T13:57:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBE94nA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "pdevito3",
                                                                               "createdAt":  "2020-05-21T14:00:56Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "johnnyreilly",
                                           "body":  "It\u0027s been twice in three weeks that I\u0027ve found myself coming back to this post to try and remember the workaround for this issue. I\u0027ll try and turn it into a blog post so people can have a reference for how to remedy the situation until it\u0027s fixed. I wouldn\u0027t want people to not write tests 😉",
                                           "updatedAt":  "2020-05-21T13:57:29Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYzMjEwMzk3NA==",
                                           "createdAt":  "2020-05-21T14:02:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBJFH5Q==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "voroninp",
                                                                               "createdAt":  "2020-07-01T13:23:49Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jzabroski",
                                           "body":  "This issue always makes me facepalm... love ASP.NET Core but I can\u0027t figure out why this is such a painful experience.  Feel like we\u0027re so close to being the number one web framework.  Especially with Blazor RTM.",
                                           "updatedAt":  "2020-05-21T14:02:43Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYzMjI2NDI0Ng==",
                                           "createdAt":  "2020-05-21T18:18:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "johnnyreilly",
                                           "body":  "One blog post that I hope to be irrelevant one day 🤗\r\n\r\nhttps://blog.johnnyreilly.com/2020/05/autofac-webapplicationfactory-and.html",
                                           "updatedAt":  "2020-05-21T18:18:22Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1MjM5Nzg4NQ==",
                                           "createdAt":  "2020-07-01T12:48:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "krajek",
                                           "body":  "Just one more vote to fix the issue from my side.\r\nAfter a full day of work, I have not yet been able to set up a workaround.\r\nEDIT: After updating `Autofac` and `Autofac.Extensions.DependencyInjection` the workaround worked.",
                                           "updatedAt":  "2020-07-01T15:58:55Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcwMTI5Njg2Ng==",
                                           "createdAt":  "2020-09-30T10:10:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODS_QEg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "hasancemcerit",
                                                                               "createdAt":  "2020-10-16T20:16:12Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "pburrows",
                                                                               "createdAt":  "2020-12-07T13:37:45Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "feng1pan",
                                                                               "createdAt":  "2024-01-17T18:24:23Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "matthias-schuchardt",
                                           "body":  "@jr01\u0027s workaround prevents update to Autofac 6.0.0 because they [sealed](https://github.com/autofac/Autofac/issues/1120) their `ContainerBuilder`. Therefore a fix would still be appreciated here.",
                                           "updatedAt":  "2020-09-30T15:09:50Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcwMTQwNjQ5NA==",
                                           "createdAt":  "2020-09-30T13:55:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jzabroski",
                                           "body":  "@matthias-schuchardt Did you open an issue with Autofac?  They asked people to speak up and offer reasons not to do this.",
                                           "updatedAt":  "2020-09-30T13:55:03Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcwMTQ1NDQ5MQ==",
                                           "createdAt":  "2020-09-30T15:11:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "matthias-schuchardt",
                                           "body":  "\u003e @matthias-schuchardt Did you open an issue with Autofac? They asked people to speak up and offer reasons not to do this.\r\n\r\nPersonally I think their reasoning is valid. And I wouldn\u0027t want them to keep open this source of unintended usage just to work around an issue with the WebApplicationFactory that @davidfowl will hopefully tackle.",
                                           "updatedAt":  "2020-09-30T15:11:33Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcwMTUzMjk2Mw==",
                                           "createdAt":  "2020-09-30T17:27:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jzabroski",
                                           "body":  "Yeah, but, we\u0027ve been waiting for a fix for this for a year.  Seems much easier to just ask Autofac to compromise (or help thinking of another workaround, but Travis is pretty busy so probably reverting is easier).",
                                           "updatedAt":  "2020-09-30T17:27:30Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcwMTU1MjIwNQ==",
                                           "createdAt":  "2020-09-30T18:04:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "johnnyreilly",
                                           "body":  "I\u0027ve put a comment on the issue @matthias-schuchardt linked appealing to @tillig to unseal Autofac\u0027s `ContainerBuilder`. Here\u0027s hoping 🤞\r\n\r\nhttps://github.com/autofac/Autofac/issues/1120#issuecomment-701550921",
                                           "updatedAt":  "2020-09-30T18:04:27Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcwMTU2NjM3Mw==",
                                           "createdAt":  "2020-09-30T18:30:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tillig",
                                           "body":  "This is the first I\u0027m hearing of any of this. I\u0027ll likely not chime in here too much on the Autofac-specific side of things since we\u0027ll handle it in issues over there, but my first thought is to _not_ unseal `ContainerBuilder` to work around something like this if it can be avoided. I\u0027d like to gather some options and determine what\u0027s the most supportable thing we might be able to do going forward.\r\n\r\nFor example, I see the custom service provider factory addresses a lot, maybe that\u0027s a better answer. I also saw a blog article earlier about using a `TestStartup` that drives from `Startup` and uses a `virtual` on `ConfigureContainer` to handle test registration. That seems like a pretty reasonable workaround to me and doesn\u0027t even require Autofac changes.\r\n\r\nI will say, I\u0027m not super interested in doing things to Autofac that will specifically work around trying to get a method called `ConfigureTestContainer` to be called due to a change in the base framework. If we can find something that will work to allow test overrides to be provided - even if it\u0027s not literally \"it\u0027ll still call `ConfigureTestContainer`!\" - then that\u0027ll be good enough on the Autofac end.",
                                           "updatedAt":  "2020-09-30T18:32:51Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcwMTU4MzA2MQ==",
                                           "createdAt":  "2020-09-30T19:01:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jzabroski",
                                           "body":  "@tillig Thanks, wasn\u0027t expecting you to say yes, but thought it was worth people asking.",
                                           "updatedAt":  "2020-09-30T19:01:24Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcwMjI3MTgzNA==",
                                           "createdAt":  "2020-10-01T17:03:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBTx8NA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "hasancemcerit",
                                                                               "createdAt":  "2020-10-16T20:21:20Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "matthias-schuchardt",
                                           "body":  "To wrap this up, [Alistair tweaked the workaround](https://github.com/autofac/Autofac/issues/1207#issuecomment-701961371) provided by @jr01 to also work with the sealed `ContainerBuilder` of Autofac \u003e= 6.0.0. So we can await .NET 5.0 without having to worry that it would break our integration tests.",
                                           "updatedAt":  "2020-10-01T17:03:52Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcwMjI3MjEyMw==",
                                           "createdAt":  "2020-10-01T17:04:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "johnnyreilly",
                                           "body":  "It\u0027s worth checking out the issue below if you\u0027re an Autofac user for a suggestion by @alistairjevans which supports a way to work with `ConfigureTestContainer` which will work with Autofac 6:\r\n\r\nhttps://github.com/autofac/Autofac/issues/1207#issuecomment-701961371\r\n\r\nHowever, as he pointed out, this depends upon the deprecated `IStartupConfigureContainerFilter` and so this may not represent a long-term solution\r\n\r\nSee also: https://blog.johnnyreilly.com/2020/10/02/autofac-6-integration-tests-and-generic-hosting/",
                                           "updatedAt":  "2021-05-26T10:56:34Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcwMjI3NzA3OA==",
                                           "createdAt":  "2020-10-01T17:13:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "johnnyreilly",
                                           "body":  "Haha @matthias-schuchardt you had the same thought as I did! Do you happen to know if `IStartupConfigureContainerFilter` is part of .NET 5? I don\u0027t see it in the docs and so actually there may still be an issue.\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.hosting.istartupconfigurecontainerfilter-1.configurecontainer?view=aspnetcore-3.1",
                                           "updatedAt":  "2020-10-01T17:14:45Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcwMjI3OTAyOQ==",
                                           "createdAt":  "2020-10-01T17:17:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "matthias-schuchardt",
                                           "body":  "Good point, @johnnyreilly, I missed that. Then let\u0027s hope that this issue will be fixed in .NET 5.",
                                           "updatedAt":  "2020-10-01T17:17:22Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcwMjI4NzcxNw==",
                                           "createdAt":  "2020-10-01T17:32:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  ".NET 5.0 is effectively complete at this point, it\u0027s unlikely we\u0027ll be able to address this.\r\n\r\nPlease try your workarounds with the RC1 build to make sure they still work.",
                                           "updatedAt":  "2020-10-01T17:34:06Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyMDc3MzQwMg==",
                                           "createdAt":  "2020-11-02T23:00:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\nWe\u0027re moving this issue to the `Next sprint planning` milestone for future evaluation / consideration. We will evaluate the request when we are planning the work for the next milestone. To learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2020-11-02T23:00:42Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc2MTIzMzg0Mw==",
                                           "createdAt":  "2021-01-15T22:37:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\nWe\u0027re moving this issue to the `Next sprint planning` milestone for future evaluation / consideration. We will evaluate the request when we are planning the work for the next milestone. To learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2021-01-15T22:37:45Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgxODM2MTIyNA==",
                                           "createdAt":  "2021-04-13T01:20:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\nWe\u0027re moving this issue to the `Next sprint planning` milestone for future evaluation / consideration. Because it\u0027s not immediately obvious that this is a bug in our framework, we would like to keep this around to collect more feedback, which can later help us determine the impact of it. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2021-04-13T01:20:14Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1MDQwNzEwNA==",
                                           "createdAt":  "2021-05-28T13:08:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODHKLgg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "satrapu",
                                                                               "createdAt":  "2021-06-01T19:53:11Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "rmemon-bunnings",
                                                                               "createdAt":  "2021-11-09T06:09:40Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ppXD",
                                                                               "createdAt":  "2022-12-13T15:24:06Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "OleksiiZuiev",
                                                                               "createdAt":  "2023-09-19T07:41:38Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  4
                                                         },
                                           "author":  "oliverhanappi",
                                           "body":  "You can override container registrations in the following way, using Autofac as example:\r\n\r\nConfigure your container in `Program` instead of `Startup.ConfigureContainer(ContainerBuilder)`:\r\n\r\n```csharp\r\npublic static IHostBuilder CreateHostBuilder (string[] args)\r\n{\r\n  return Host.CreateDefaultBuilder (args)\r\n    .UseServiceProviderFactory (new AutofacServiceProviderFactory())\r\n    .ConfigureContainer\u003cContainerBuilder\u003e(b =\u003e { /* configure container here */ })\r\n    .ConfigureWebHostDefaults(builder =\u003e builder.UseStartup\u003cStartup\u003e());\r\n}\r\n```\r\n\r\nOverride container registrations using ContainerBuilder in a derived WebApplicationFactory:\r\n\r\n```csharp\r\npublic class TestWebApplicationFactory : WebApplicationFactory\u003cStartup\u003e\r\n{\r\n  protected override IHost CreateHost(IHostBuilder builder)\r\n  {\r\n    builder.ConfigureContainer\u003cContainerBuilder\u003e(b =\u003e { /* test overrides here */ });\r\n    return base.CreateHost(builder);\r\n  }\r\n}\r\n```",
                                           "updatedAt":  "2021-05-28T13:08:50Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1MjQwMzc4NQ==",
                                           "createdAt":  "2021-06-01T19:52:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODS_yXw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "nigelmassey-payroc",
                                                                               "createdAt":  "2022-02-24T16:46:21Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "hinchcmark",
                                                                               "createdAt":  "2023-04-17T15:53:03Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "feng1pan",
                                                                               "createdAt":  "2024-01-17T19:27:52Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "satrapu",
                                           "body":  "\u003e \r\n\u003e \r\n\u003e You can override container registrations in the following way, using Autofac as example:\r\n\u003e ...\r\n\u003e\r\n\r\nI would replace overriding `TestWebApplicationFactory` class with an action for added flexibility, like this:\r\n```cs\r\npublic class TestWebApplicationFactory : WebApplicationFactory\u003cStartup\u003e\r\n{\r\n    ....\r\n    private Action\u003cContainerBuilder\u003e setupMockServicesAction;\r\n\r\n    public TestWebApplicationFactory WithMockServices(Action\u003cContainerBuilder\u003e setupMockServices)\r\n    {\r\n        setupMockServicesAction = setupMockServices;\r\n        return this;\r\n    }\r\n\r\n    protected override IHost CreateHost(IHostBuilder builder)\r\n    {\r\n        builder.ConfigureContainer\u003cContainerBuilder\u003e(containerBuilder =\u003e\r\n        {\r\n            setupMockServicesAction?.Invoke(containerBuilder);\r\n        });\r\n\r\n        return base.CreateHost(builder);\r\n   }\r\n    ....\r\n}\r\n```\r\n\r\nThen, my test method which resides inside an NUnit test fixture which needs to instantiate `TestWebApplicationFactory ` class looks like this:\r\n```cs\r\n[TestFixture]\r\npublic class CustomExceptionHandlerTests\r\n{\r\n    [Test]\r\n    public async Task HandleException_WhenApiThrowsException_MustConvertExceptionToInstanceOfProblemDetailsClass()\r\n    {\r\n         // Arrange phase\r\n         ...\r\n         using var testWebApplicationFactory =\r\n                new TestWebApplicationFactory(...)\r\n                    .WithMockServices(containerBuilder =\u003e\r\n                    {\r\n                        // Ensure a mock implementation will be injected whenever a service requires an instance of the\r\n                        // IGenerateJwtFlow interface.\r\n                        containerBuilder\r\n                            .RegisterType\u003cGenerateJwtFlowWhichThrowsException\u003e()\r\n                            .As\u003cIGenerateJwtFlow\u003e()\r\n                            .InstancePerLifetimeScope();\r\n                    });\r\n\r\n         using HttpClient httpClient = testWebApplicationFactory.CreateClient();\r\n         ...\r\n    }\r\n}\r\n```\r\nOne can employ `WithMockServices` only when needing to replace a registered service with something else, e.g. a class which will throw an exception whenever one of its methods are called, like in my above example.\r\n\r\nThe full source code can be found [here](https://github.com/satrapu/aspnet-core-logging/blob/36abf9ee09e5bda1ca1cdbad3ee974faa28284d3/Tests/IntegrationTests/Todo.WebApi.IntegrationTests/ExceptionHandling/CustomExceptionHandlerTests.cs) .\r\n\r\n",
                                           "updatedAt":  "2021-06-03T19:51:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85CZTOA",
                                           "createdAt":  "2022-04-30T06:23:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jsdevtom",
                                           "body":  "Hi @jr01. That solution doesn\u0027t work for me:\r\n\r\n\u003e Here is a workaround for Autofac that will call any `ConfigureTestContainer(...)` method, also in `.WithWebHostBuilder(...)` calls.\r\n\u003e \r\n\u003e It builds on @ssunkari\u0027s [workaround](https://github.com/dotnet/aspnetcore/issues/14907#issuecomment-573068400)\r\n\u003e \r\n\u003e ```\r\n\u003e public class CustomWebApplicationFactory\u003cTStartup\u003e : WebApplicationFactory\u003cTStartup\u003e\r\n\u003e         where TStartup : class\r\n\u003e {\r\n\u003e \tprotected override void ConfigureWebHost(IWebHostBuilder webHostBuilder)\r\n\u003e \t{\r\n\u003e \t\twebHostBuilder.ConfigureTestContainer\u003cAutofac.ContainerBuilder\u003e(builder =\u003e\r\n\u003e \t\t{\r\n\u003e \t\t\t// called after Startup.ConfigureContainer\r\n\u003e \t\t});\r\n\u003e \t}\r\n\u003e \r\n\u003e \tprotected override IHost CreateHost(IHostBuilder builder)\r\n\u003e \t{\r\n\u003e \t\tbuilder.UseServiceProviderFactory(new CustomServiceProviderFactory());\r\n\u003e \t\treturn base.CreateHost(builder);\r\n\u003e \t}\r\n\u003e }\r\n\u003e \r\n\u003e public class CustomServiceProviderFactory : IServiceProviderFactory\u003cCustomContainerBuilder\u003e\r\n\u003e {\r\n\u003e \tpublic CustomContainerBuilder CreateBuilder(IServiceCollection services) =\u003e new CustomContainerBuilder(services);\r\n\u003e \r\n\u003e \tpublic IServiceProvider CreateServiceProvider(CustomContainerBuilder containerBuilder) =\u003e\r\n\u003e \t\tnew AutofacServiceProvider(containerBuilder.CustomBuild());\r\n\u003e }\r\n\u003e \r\n\u003e public class CustomContainerBuilder : Autofac.ContainerBuilder\r\n\u003e {\r\n\u003e \tprivate readonly IServiceCollection services;\r\n\u003e \r\n\u003e \tpublic CustomContainerBuilder(IServiceCollection services)\r\n\u003e \t{\r\n\u003e \t\tthis.services = services;\r\n\u003e \t\tthis.Populate(services);\r\n\u003e \t}\r\n\u003e \r\n\u003e \tpublic Autofac.IContainer CustomBuild()\r\n\u003e \t{\r\n\u003e \t\tvar sp = this.services.BuildServiceProvider();\r\n\u003e #pragma warning disable CS0612 // Type or member is obsolete\r\n\u003e \t\tvar filters = sp.GetRequiredService\u003cIEnumerable\u003cIStartupConfigureContainerFilter\u003cAutofac.ContainerBuilder\u003e\u003e\u003e();\r\n\u003e #pragma warning restore CS0612 // Type or member is obsolete\r\n\u003e \r\n\u003e \t\tforeach (var filter in filters)\r\n\u003e \t\t{\r\n\u003e \t\t\tfilter.ConfigureContainer(b =\u003e { })(this);\r\n\u003e \t\t}\r\n\u003e \r\n\u003e \t\treturn this.Build();\r\n\u003e \t}\r\n\u003e }\r\n\u003e ```\r\n\u003e \r\n\u003e Usage\r\n\u003e \r\n\u003e ```\r\n\u003e var factory = new CustomWebApplicationFactory\u003cStartup\u003e();\r\n\u003e \r\n\u003e var client1 = factory.CreateClient();\r\n\u003e \r\n\u003e \r\n\u003e var client2 = factory.WithWebHostBuilder(b =\u003e\r\n\u003e {\r\n\u003e \tb.ConfigureTestContainer\u003cAutofac.ContainerBuilder\u003e(builder =\u003e\r\n\u003e \t{\r\n\u003e \t\t// Called after Startup.ConfigureContainer and after CustomWebApplicationFactory\u0027s ConfigureTestContainer\r\n\u003e \t});\r\n\u003e }).CreateClient();\r\n\u003e ```\r\n\r\nIn AutoFac version 6.2.0 I get `Cannot inherit from sealed class \u0027ContainerBuilder\u0027`. Do you have any ideas?\r\n\r\nUPDATE: Solved through [this comment](https://github.com/autofac/Autofac/issues/1207#issuecomment-1018327682)",
                                           "updatedAt":  "2022-04-30T12:01:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85KP-Uu",
                                           "createdAt":  "2022-09-13T17:08:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `.NET 8 Planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2022-09-13T17:08:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85qgd0O",
                                           "createdAt":  "2023-10-31T10:05:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEHqqyQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jr01",
                                                                               "createdAt":  "2023-11-28T15:31:15Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "gerikvv",
                                                                               "createdAt":  "2023-12-29T14:43:47Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "hasancemcerit",
                                                                               "createdAt":  "2025-02-16T20:42:51Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Kludgy4",
                                                                               "createdAt":  "2025-02-26T04:41:39Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  4
                                                         },
                                           "author":  "tuskajozsef",
                                           "body":  "Cleanest solution I could achieve based on previous answers:\r\n\r\nCreate overrides:\r\n\r\n```csharp\r\npublic class TestAutofacModule : Module\r\n{\r\n    protected override void Load(ContainerBuilder builder)\r\n    {\r\n        builder.RegisterType\u003cTestService\u003e().As\u003cIService\u003e();\r\n    }\r\n}\r\n```\r\n\r\nCreate new ServiceProviderFactory:\r\n\r\n```csharp\r\npublic class TestServiceProviderFactory\u003cT\u003e : IServiceProviderFactory\u003cContainerBuilder\u003e where T: Module, new()\r\n{\r\n    private readonly AutofacServiceProviderFactory _factory = new();\r\n\r\n    public ContainerBuilder CreateBuilder(IServiceCollection services)\r\n    {\r\n        return _factory.CreateBuilder(services);\r\n    }\r\n\r\n    public IServiceProvider CreateServiceProvider(ContainerBuilder containerBuilder)\r\n    {\r\n        containerBuilder.RegisterModule(new T());\r\n        return _factory.CreateServiceProvider(containerBuilder);\r\n    }\r\n}\r\n```\r\n\r\nUse new Factory:\r\n\r\n```csharp\r\nvar builder = new HostBuilder()\r\n                .UseServiceProviderFactory(new TestServiceProviderFactory\u003cTestAutofacModule\u003e())\r\n                ...\r\n```\r\n",
                                           "updatedAt":  "2023-10-31T10:14:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85qqM8i",
                                           "createdAt":  "2023-11-01T18:27:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "halter73",
                                           "body":  "Based on #51381, this unsurprisingly also affects `WebApplicationBuilder`. We should make sure WAB works too when we fix this.",
                                           "updatedAt":  "2023-11-01T18:27:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86ZLzzb",
                                           "createdAt":  "2025-01-04T02:21:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "peterberkman",
                                           "body":  "so, did this get lost in the noise or did someone find a reasonable solution? on .Net Core 8 and still a problem with Autofac ....",
                                           "updatedAt":  "2025-01-04T02:21:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86ZL0Hy",
                                           "createdAt":  "2025-01-04T02:25:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEHqp6Q==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "EYES",
                                                                               "user":  "Kludgy4",
                                                                               "createdAt":  "2025-02-26T04:39:14Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "peterberkman",
                                           "body":  "\u003e Cleanest solution I could achieve based on previous answers:\n\u003e \n\u003e Create overrides:\n\u003e \n\u003e public class TestAutofacModule : Module\n\u003e {\n\u003e     protected override void Load(ContainerBuilder builder)\n\u003e     {\n\u003e         builder.RegisterType\u003cTestService\u003e().As\u003cIService\u003e();\n\u003e     }\n\u003e }\n\u003e Create new ServiceProviderFactory:\n\u003e \n\u003e public class TestServiceProviderFactory\u003cT\u003e : IServiceProviderFactory\u003cContainerBuilder\u003e where T: Module, new()\n\u003e {\n\u003e     private readonly AutofacServiceProviderFactory _factory = new();\n\u003e \n\u003e     public ContainerBuilder CreateBuilder(IServiceCollection services)\n\u003e     {\n\u003e         return _factory.CreateBuilder(services);\n\u003e     }\n\u003e \n\u003e     public IServiceProvider CreateServiceProvider(ContainerBuilder containerBuilder)\n\u003e     {\n\u003e         containerBuilder.RegisterModule(new T());\n\u003e         return _factory.CreateServiceProvider(containerBuilder);\n\u003e     }\n\u003e }\n\u003e Use new Factory:\n\u003e \n\u003e var builder = new HostBuilder()\n\u003e                 .UseServiceProviderFactory(new TestServiceProviderFactory\u003cTestAutofacModule\u003e())\n\u003e                 ...\n\n@tuskajozsef I was hopeful with this elegant solution, but I must be missing something. when I do this in my CustomWebApplicationFactory in my test setup, when the client is created, it fails because none of the main Program\u0027s dependencies are loaded any longer.  what am I missing?\n\n",
                                           "updatedAt":  "2025-01-04T02:25:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86uaMbk",
                                           "createdAt":  "2025-06-01T00:25:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ForteUnited",
                                           "body":  "How is this still not fixed?",
                                           "updatedAt":  "2025-06-01T00:25:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde861llzf",
                                           "createdAt":  "2025-07-07T21:09:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "toftware",
                                           "body":  "I managed to create an updated solution. I think the `IStartupConfigureContainerFilter` part is only for those of use who are still using Startup.cs. \n\nIs this also broken when using the new WebHostBuilder?\n\n```csharp\npublic class TestServiceProviderFactory : IServiceProviderFactory\u003cContainerBuilder\u003e\n{\n    private IServiceCollection _services;\n    public ContainerBuilder CreateBuilder(IServiceCollection services)\n    {\n        _services = services;\n\n        var builder =  new ContainerBuilder();\n\n        builder.Populate(services);\n\n        return builder;\n    }\n\n    public IServiceProvider CreateServiceProvider(ContainerBuilder containerBuilder)\n    {\n        var sp = _services.BuildServiceProvider();\n\n#pragma warning disable CS0612 // Type or member is obsolete\n        var filters = sp.GetRequiredService\u003cIEnumerable\u003cIStartupConfigureContainerFilter\u003cContainerBuilder\u003e\u003e\u003e();\n#pragma warning restore CS0612 // Type or member is obsolete\n\n        foreach (var filter in filters)\n        {\n            filter.ConfigureContainer(_ =\u003e { }).Invoke(containerBuilder);\n        }\n\n        return new AutofacServiceProvider(containerBuilder.Build());\n    }\n}\n```",
                                           "updatedAt":  "2025-07-07T21:09:53Z"
                                       }
                                   ],
                         "totalCount":  66
                     },
        "title":  "ConfigureTestContainer not working with GenericHost",
        "labels":  [
                       "bug",
                       "severity-major",
                       "affected-medium",
                       "area-hosting",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/16702",
        "createdAt":  "2019-10-31T17:45:49Z",
        "number":  16702,
        "author":  "pranavkm",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOA0FSTw==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "timheuer",
                                            "createdAt":  "2019-10-31T17:50:58Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Postlagerkarte",
                                            "createdAt":  "2019-11-01T12:38:25Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2023-08-24T23:10:48Z",
        "body":  "Having a `ConfigureServices` like `public void ConfigureServices(IServiceCollection services, IWebHostEnvironment env)` results in a runtime error. A startup analyzer could additionally flag this as an error.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOINxrBA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU1MTMxNjIyOA==",
                                           "createdAt":  "2019-11-07T23:38:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "analogrelay",
                                           "body":  "Seems like a good idea.",
                                           "updatedAt":  "2019-11-07T23:38:26Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Consider an analyzer that warns if ConfigureServices contains parameters other than IServiceCollection",
        "labels":  [
                       "enhancement",
                       "severity-minor",
                       "affected-medium",
                       "area-hosting",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/17854",
        "createdAt":  "2019-12-13T13:39:50Z",
        "number":  17854,
        "author":  "JasonBock",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOBXHG3A==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Tratcher",
                                            "createdAt":  "2019-12-13T17:09:09Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "rcollina",
                                            "createdAt":  "2019-12-13T22:56:12Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "yzorg",
                                            "createdAt":  "2020-10-15T04:50:39Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "CarlosHAraujo",
                                            "createdAt":  "2020-11-17T21:36:53Z"
                                        }
                                    ],
                          "totalCount":  4
                      },
        "updatedAt":  "2025-02-05T16:22:20Z",
        "body":  "### Is your feature request related to a problem? Please describe.\r\nIt\u0027s related to an issue with the `Configure()` method in `Startup`.\r\n\r\n### Describe the solution you\u0027d like\r\nRecently a developer on a project I\u0027m on created a `Configure()` method like this:\r\n```\r\npublic async Task Configure(IApplicationBuilder app, IConfiguration config)\r\n```\r\nThis will compile just fine, but when you run it, you get this exception:\r\n\r\n\u003e System.InvalidOperationException : The \u0027Configure\u0027 method in the type \u0027XYZ\u0027 must have a return type of \u0027Void\u0027.\r\n\r\nNow, there are ways to get around this (https://andrewlock.net/running-async-tasks-on-app-startup-in-asp-net-core-part-1/), but the point is, if an analyzer was in place to make sure methods in `Startup` are defined correctly, we wouldn\u0027t have to wait until we ran the code to know there\u0027s a problem.\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "Provide an analyzer for Configure() in Startup",
        "labels":  [
                       "enhancement",
                       "analyzer",
                       "severity-minor",
                       "affected-medium",
                       "area-hosting",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/18605",
        "createdAt":  "2020-01-27T20:41:50Z",
        "number":  18605,
        "author":  "benaadams",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOB9XkgQ==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "SoftwareDreamer",
                                            "createdAt":  "2020-01-27T23:10:44Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "alex-jitbit",
                                            "createdAt":  "2021-10-07T11:39:13Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2023-08-24T23:15:30Z",
        "body":  "Default host should use ProfileOptimization ([docs](https://docs.microsoft.com/en-us/dotnet/api/system.runtime.profileoptimization?view=netcore-3.1)) for faster startup on after first run.\r\n\r\ne.g. it should run something like as follows as early as possible during startup:\r\n```csharp\r\nProfileOptimization.SetProfileRoot( \u003cexisting directory\u003e );\r\nProfileOptimization.StartProfile(\"startup.pgo\");\r\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOY-dIBQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU3OTAyNzg4Mw==",
                                           "createdAt":  "2020-01-28T00:51:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AndyAyersMS",
                                           "body":  "Should look into whether this eagerly jits at Tier1. If so, you might win at startup but miss out on some optimizations, and so end up with lower steady state perf.",
                                           "updatedAt":  "2020-01-28T00:51:31Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU3OTA2NDI0OQ==",
                                           "createdAt":  "2020-01-28T03:37:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "benaadams",
                                           "body":  "Raised issue https://github.com/dotnet/runtime/issues/2273",
                                           "updatedAt":  "2020-01-28T03:37:22Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU3OTk2OTM2MQ==",
                                           "createdAt":  "2020-01-29T21:31:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "analogrelay",
                                           "body":  "Should hosting do this for you automatically though? Does it have a negative impact on your app at all?",
                                           "updatedAt":  "2020-01-29T21:31:48Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU3OTk3NDk5Mw==",
                                           "createdAt":  "2020-01-29T21:47:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "benaadams",
                                           "body":  "\u003e Should hosting do this for you automatically though?\r\n\r\nStandard for vintage ASP.NET?\r\n\r\n\u003e [ASP.NET Performance: Prefetch and Multi-Core Jitting](https://devblogs.microsoft.com/aspnet/asp-net-performance-prefetch-and-multi-core-jitting/)\r\n\u003e\r\n\u003e ### Multi-Core Jitting feature.\r\n\u003e\r\n\u003e The multi-core jitting feature is enabled by default, and work on all OS where ASP.NET 4.5 is available. You can disable it by setting the profileGuidedOptimizations enumerated value on the `\u003csystem.web/compilation\u003e` section on the web.config, to `None`.\r\n\u003e\r\n\u003e ### Multi-Core Jitting Implementation.\r\n\u003e\r\n\u003e The feature uses the new class ProfileOptimization class of the System.Runtime namespace. The class is called the first time the app domain is created. First, we set the profile root to the codegen directory, which by default is something like:\r\n\u003e\r\n\u003e `“%windir%Microsoft.NETFramework64v4.0.30319Temporary ASP.NET Filesmyappweirdhash1weirdhash2″`\r\n\u003e\r\n\u003e Remember that the temporary files folder value can be changed on tempDirectory attribute of the `\u003csystem.web/compilation\u003e` section of the web.config.\r\n\u003e \r\n\u003e After setting the profile root, we call `StartProfile()` with the filename `“profileoptimization.prof”`. The CLR code underneath handles all the magic. If you examine the contents of the temporary ASP.NET file folder, you will see the file there:\r\n\u003e    \r\n\u003e    ...\r\n\u003e  ### Conclusion \r\n\u003e\r\n\u003e ... \r\n\u003e\r\n\u003e The multi-core jitting feature is available in more operating systems and is on by default. It uses a new CLR feature for profile base optimization.\r\n\r\n",
                                           "updatedAt":  "2020-01-29T21:47:01Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU3OTk3NTA2OQ==",
                                           "createdAt":  "2020-01-29T21:47:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "benaadams",
                                           "body":  "\u003e Does it have a negative impact on your app at all?\r\n\r\nNo idea",
                                           "updatedAt":  "2020-01-29T21:47:13Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU4MzU2NjA1NQ==",
                                           "createdAt":  "2020-02-07T19:27:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "rynowak",
                                           "body":  "The hard part is this (which you kinda glossed over 😆 )\r\n\r\n```C#\r\nProfileOptimization.SetProfileRoot( \u003cexisting directory\u003e );\r\n``` \r\n\r\nWhen we\u0027ve done investigations of MCJ in the past the benefit was *really* minimal in the best case, like 5%. There\u0027s a high amount of complexity in us being able to compute a stable directory to use for MCG as well as understanding when it\u0027s applicable or worth it. If we add this code (inside hosting) it has to work **everywhere** without any drawbacks.\r\n\r\nThat combined with the low benefit is why we haven\u0027t done this.\r\n\r\nMost of the places where you\u0027d care about the benefit of MCJ are where you\u0027d want to configure the directory yourself (for production scenarios) or where the impact in a very small part of the whole (inner loop, where app\u0027s startup is a small factor compared to build/debugger).\r\n\r\n@davidfowl @DamianEdwards in case they have extra special thoughts.",
                                           "updatedAt":  "2020-02-07T19:29:08Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU4MzY0NzY1OQ==",
                                           "createdAt":  "2020-02-07T22:41:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "IIRC, most of the benefit we saw for the app and environment we were testing with was that it parallelized the file I/O to load assemblies, rather than a huge benefit for the actual JIT itself.\r\n\r\nLike @rynowak said, the idea of a universally safe place to write to in order to get the benefit (required to do this in the host) was where we tend to get stuck on this. I agree that supporting it for apps themselves to profile and set is interesting though.",
                                           "updatedAt":  "2020-02-07T22:41:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85j4Qql",
                                           "createdAt":  "2023-08-12T04:42:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "rampaa",
                                           "body":  "\u003e Should look into whether this eagerly jits at Tier1. If so, you might win at startup but miss out on some optimizations, and so end up with lower steady state perf.\r\n\r\nBased on https://github.com/dotnet/runtime/issues/2273, am I correct in understanding that MultiCore JIT does NOT cause us to miss out on optimizations?\r\n",
                                           "updatedAt":  "2023-08-12T04:42:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85j5hCU",
                                           "createdAt":  "2023-08-12T17:32:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AndyAyersMS",
                                           "body":  "\u003e \u003e Should look into whether this eagerly jits at Tier1. If so, you might win at startup but miss out on some optimizations, and so end up with lower steady state perf.\r\n\u003e \r\n\u003e Based on [dotnet/runtime#2273](https://github.com/dotnet/runtime/issues/2273), am I correct in understanding that MultiCore JIT does NOT cause us to miss out on optimizations?\r\n\r\nYes, if the MCJ initial jitting really produces Tier0 methods. Should be easy enough to check.",
                                           "updatedAt":  "2023-08-12T17:32:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85j50gF",
                                           "createdAt":  "2023-08-12T21:09:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "rampaa",
                                           "body":  "\u003e Yes, if the MCJ initial jitting really produces Tier0 methods. Should be easy enough to check.\r\n\r\nI\u0027m not sure how I can do this. I tried to inspect the profile file but the human-readable parts of it doesn\u0027t seem to include anything about the JIT tier. Would you point me to right direction so that I can check whether the MCJ initial jitting really produces Tier0 methods?",
                                           "updatedAt":  "2023-08-12T21:09:52Z"
                                       }
                                   ],
                         "totalCount":  10
                     },
        "title":  "Use System.Runtime.ProfileOptimization for faster startup",
        "labels":  [
                       "enhancement",
                       "Perf",
                       "severity-nice-to-have",
                       "affected-few",
                       "area-hosting",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/19303",
        "createdAt":  "2020-02-24T22:48:52Z",
        "number":  19303,
        "author":  "pranavkm",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOA8vjUw==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "rcollina",
                                            "createdAt":  "2020-02-27T20:53:37Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2023-08-24T23:16:56Z",
        "body":  "This came up as part of https://github.com/dotnet/aspnetcore/issues/17272. Rather than relying on semi-colons to separate multiple listing, it would be convenient if multiple hosting startup assemblies could be keyed off a common prefix rather than requiring the `ASPNETCORE_HOSTINGSTARTUPASSEMBLIES` key. Consider:\r\n\r\n```\r\nASPNETCORE_HOSTINGSTARTUPASSEMBLIES = \"AssemblyA;AssemblyB\"\r\n\r\nvs\r\n\r\nASPNETCORE_HOSTINGSTARTUPASSEMBLIES_KeyA = \"AssemblyA\"\r\nASPNETCORE_HOSTINGSTARTUPASSEMBLIES_KeyB = \"AssemblyB\"\r\n```\r\n\r\nIn particular when authoring templates, this avoids the accidentally stomping over an existing value or writing complicated if-elses.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOI2kxgw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU5MTY1MTk1NQ==",
                                           "createdAt":  "2020-02-26T21:25:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "analogrelay",
                                           "body":  "@pranavkm what\u0027s the problem with `;`? All the other similar lists (in the .NET Core host, etc.) use `;`-separated lists. It\u0027s a pretty standard practice so I\u0027m not sure why we would deviate from it.",
                                           "updatedAt":  "2020-02-26T21:25:39Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU5MTY1MjM4OQ==",
                                           "createdAt":  "2020-02-26T21:26:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "analogrelay",
                                           "body":  "~~Also, maybe we should have a chat about how runtime compilation is plugging in. In general, we\u0027d prefer to use Startup Hooks (the feature built-in to the .NET host) instead of hosting startup.~~ Actually this is probably fine. Startup hooks don\u0027t fully replace hosting startup here and you\u0027d probably need both.",
                                           "updatedAt":  "2020-02-26T21:27:15Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU5MTY3NTM5Mg==",
                                           "createdAt":  "2020-02-26T22:23:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pranavkm",
                                           "body":  "@anurse the problem was that if you need to enable two hosting startup assemblies, you have to be careful to write code that appends rather than overwriting content. \r\n\r\nAuthoring conditions in our template is problematic since you\u0027d have to riddle it with ifdefs. Similarly if values came from two different sources, such as file + environment, you\u0027re it\u0027s difficult to combine these values.",
                                           "updatedAt":  "2020-02-26T22:23:16Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU5MjY5MDEwMw==",
                                           "createdAt":  "2020-02-28T19:32:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "analogrelay",
                                           "body":  "\u003e the problem was that if you need to enable two hosting startup assemblies, you have to be careful to write code that appends rather than overwriting content.\r\n\r\nThis is true for a lot of variables that affect us, not just `HOSTINGSTARTUPASSEMBLIES`. Startup hooks work this way, `PATH`, etc. Also, the value is ordered, which can matter, so I\u0027m not sure how we\u0027d do that in the prefix model you propose.\r\n",
                                           "updatedAt":  "2020-02-28T19:32:20Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU5MzY1MTg5NA==",
                                           "createdAt":  "2020-03-02T22:16:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOA9AvXA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "pranavkm",
                                                                               "createdAt":  "2020-03-02T22:36:28Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "analogrelay",
                                           "body":  "We talked about this last week but I don\u0027t remember *exactly* what we landed on. I think we were suggesting that it would be better to have the places that specify values for these support \"recursive\" expansion, for example:\r\n\r\n```json\r\n{\r\n\t\"ASPNETCORE_HOSTINGSTARTUPASSEMBLIES\": \"A.dll;%ASPNETCORE_HOSTINGSTARTUPASSEMBLIES%;B.dll\"\r\n}\r\n```\r\n\r\ncc @DamianEdwards @pranavkm ",
                                           "updatedAt":  "2020-03-02T22:16:46Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU5MzY1OTc3NA==",
                                           "createdAt":  "2020-03-02T22:37:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pranavkm",
                                           "body":  "Do we have room to squeeze this in 5.0? If we were, I\u0027d like to make sure we update the MVC templates to account for this",
                                           "updatedAt":  "2020-03-02T22:37:07Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU5NDA5NjUxNQ==",
                                           "createdAt":  "2020-03-03T18:24:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "analogrelay",
                                           "body":  "\u003e Do we have room to squeeze this in 5.0?\r\n\r\nWell, the suggested change in my previous comment isn\u0027t something we\u0027d do, it would be in VS (if it doesn\u0027t actually work now, which it actually might...).\r\n\r\nMaking a change to how hosting reads this variable is not in scope for 5.0 at this time, we don\u0027t have resources.",
                                           "updatedAt":  "2020-03-03T18:24:38Z"
                                       }
                                   ],
                         "totalCount":  7
                     },
        "title":  "Allow multiple hosting startup assemblies to be specified without requiring semi-colon shenanigans",
        "labels":  [
                       "enhancement",
                       "affected-few",
                       "severity-minor",
                       "area-hosting",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/21246",
        "createdAt":  "2020-04-27T17:50:16Z",
        "number":  21246,
        "author":  "halter73",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-08-24T23:20:47Z",
        "body":  "### Is your feature request related to a problem? Please describe.\r\n\r\nThis is a followup to #19376. HttpSys and now Kestrel both support reconfiguring endpoints at runtime. When an endpoint is added or removed, the IServerAddressesFeature is updated to reflect this changes. Unfortunately there is no way to observe when the IServerAddressesFeature changes today.\r\n\r\n### Describe the solution you\u0027d like\r\n\r\nWe should add an IChangeToken to IServerAddressesFeature so app developers can have a way to react to server endpoint reconfiguration.\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOQ2gUFQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyMTQxOTY4Mw==",
                                           "createdAt":  "2020-04-29T19:36:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "analogrelay",
                                           "body":  "Or just a `CancellationToken`. As part of the extensions migration we had a discussion about change tokens and while we can\u0027t justify removing them, it\u0027s probably not necessary to keep them. Unless we need to compose with one from config (which I guess we might have to)",
                                           "updatedAt":  "2020-04-29T19:36:39Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyMTQzMjUxMg==",
                                           "createdAt":  "2020-04-29T20:02:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "CancellationTokens don\u0027t have convetions for firing multiple times, which we would need here. ",
                                           "updatedAt":  "2020-04-29T20:02:33Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyMTQ0MzAxNQ==",
                                           "createdAt":  "2020-04-29T20:24:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "analogrelay",
                                           "body":  "I seem to remember we had discussed ways to handle that. Adding @stephentoub and @davidfowl \r\n\r\nRegardless of that, I\u0027m supportive of the general idea (signalling changes to addresses). We just need to figure out the right primitive to use.",
                                           "updatedAt":  "2020-04-29T20:24:00Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyMTQ0NDAxNg==",
                                           "createdAt":  "2020-04-29T20:26:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "I wouldn’t stop using IChangeToken as yet. I’d hate to bring inconsistency here especially since the config system already exposes it. Either we expose an event or an IChangeToken",
                                           "updatedAt":  "2020-04-29T20:26:02Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyMTQ1ODIyMw==",
                                           "createdAt":  "2020-04-29T20:53:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "analogrelay",
                                           "body":  "Fair enough. Just wanted to raise the issue.",
                                           "updatedAt":  "2020-04-29T20:53:49Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyMjU0NjAwMw==",
                                           "createdAt":  "2020-05-01T20:10:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "analogrelay",
                                           "body":  "Triage: Backlogging until we have a motivating scenario (from customer, YARP, etc.)",
                                           "updatedAt":  "2020-05-01T20:10:55Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyMjU0Njk4OQ==",
                                           "createdAt":  "2020-05-01T20:13:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "analogrelay",
                                           "body":  "One example of a change that might be needed here: HttpsRedirectionMiddleware only reads `IServerAddressesFeature` once. If it changes, the middleware will need to know to re-read it.",
                                           "updatedAt":  "2020-05-01T20:13:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85DaBQV",
                                           "createdAt":  "2022-05-19T01:04:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "halter73",
                                           "body":  "In light of my thoughts in https://github.com/dotnet/aspnetcore/pull/41737, maybe it should be a new service type that has a read-only list of addresses and an IChangeToken. This would have the additional benefit of being able to consume from application code.",
                                           "updatedAt":  "2022-05-19T01:04:12Z"
                                       }
                                   ],
                         "totalCount":  8
                     },
        "title":  "Add an IChangeToken to IServerAddressesFeature",
        "labels":  [
                       "enhancement",
                       "api-suggestion",
                       "affected-few",
                       "severity-minor",
                       "area-hosting",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/21658",
        "createdAt":  "2020-05-07T09:58:45Z",
        "number":  21658,
        "author":  "rosenbjerg",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-08-24T23:21:32Z",
        "body":  "\u003c!-- Describe what isn\u0027t working as expected --\u003e\r\nI\u0027m working on a solution with several projects, one of them being the application host and another being the database project, containing databasecontext and migrations.\r\n\r\nWhen trying to create a new migration using, with the database project root being the current working directory.\r\n```\r\ndotnet-ef migrations add Init -s ..\\..\\ApplicationHost\\MyApplicationHost\r\n```\r\nIt gives the following output: \r\n```csharp\r\nBuild started...\r\nBuild succeeded.\r\nSystem.Reflection.AmbiguousMatchException: Ambiguous match found.\r\n   at System.DefaultBinder.FindMostDerivedNewSlotMeth(MethodBase[] match, Int32 cMatches)\r\n   at System.RuntimeType.GetMethodImplCommon(String name, Int32 genericParameterCount, BindingFlags bindingAttr, Binder binder, CallingConventions callConv, Type[] types, ParameterModifier[] modifiers)\r\n   at System.RuntimeType.GetMethodImpl(String name, BindingFlags bindingAttr, Binder binder, CallingConventions callConv, Type[] types, ParameterModifier[] modifiers)\r\n   at System.Type.GetMethod(String name, BindingFlags bindingAttr)\r\n   at System.Reflection.TypeInfo.GetDeclaredMethod(String name)\r\n   at Microsoft.Extensions.Hosting.HostFactoryResolver.ResolveFactory[T](Assembly assembly, String name)\r\n   at Microsoft.Extensions.Hosting.HostFactoryResolver.ResolveHostBuilderFactory[THostBuilder](Assembly assembly)\r\n   at Microsoft.Extensions.Hosting.HostFactoryResolver.ResolveServiceProviderFactory(Assembly assembly)\r\n   at Microsoft.EntityFrameworkCore.Design.Internal.AppServiceProviderFactory.CreateFromHosting(String[] args)\r\n   at Microsoft.EntityFrameworkCore.Design.Internal.AppServiceProviderFactory.Create(String[] args)\r\n   at Microsoft.EntityFrameworkCore.Design.Internal.DbContextOperations.FindContextTypes()\r\n   at Microsoft.EntityFrameworkCore.Design.Internal.DbContextOperations.FindContextType(String name)\r\n   at Microsoft.EntityFrameworkCore.Design.Internal.DbContextOperations.CreateContext(String contextType)\r\n   at Microsoft.EntityFrameworkCore.Design.Internal.MigrationsOperations.AddMigration(String name, String outputDir, String contextType)\r\n   at Microsoft.EntityFrameworkCore.Design.OperationExecutor.AddMigrationImpl(String name, String outputDir, String contextType)\r\n   at Microsoft.EntityFrameworkCore.Design.OperationExecutor.AddMigration.\u003c\u003ec__DisplayClass0_0.\u003c.ctor\u003eb__0()\r\n   at Microsoft.EntityFrameworkCore.Design.OperationExecutor.OperationBase.\u003c\u003ec__DisplayClass3_0`1.\u003cExecute\u003eb__0()\r\n   at Microsoft.EntityFrameworkCore.Design.OperationExecutor.OperationBase.Execute(Action action)\r\nAmbiguous match found.\r\n```\r\nI quickly figured out the problem, but only because I had just experimented with only having a generic `CreateHostBuilder` which gave the semi-clear error `Late bound operations cannot be performed on types or methods for which ContainsGenericParameters is true`.\r\n\r\n\r\n### Steps to reproduce\r\n\r\nHave multiple overloads of \r\n```csharp\r\npublic static IHostBuilder CreateHostBuilder(string[] args)\r\n```\r\nI.e., I also had\r\n```csharp\r\npublic static IHostBuilder CreateHostBuilder\u003cTStartup\u003e(string[] args) where TStartup : class\r\n```\r\nSo I just renamed the generic overload and that fixed the problem.\r\n\r\nThis bug report is about either supporting overloads of `CreateHostBuilder`, which I think could be possible, or just give a more clear error message. Perhaps include what it is, that is ambigous, f.x. the name of the function.\r\n\r\n\r\n### Further technical details\r\nEF Core version: 3.1.3\r\nDatabase provider: Npgsql.EntityFrameworkCore.PostgreSQL\r\nTarget framework: .NET Core 3.1\r\nOperating system: Windows 10 Enterprise\r\nIDE: Rider 2020.1.1\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOJVN_6w==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyNjIxOTEyMA==",
                                           "createdAt":  "2020-05-09T18:43:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ajcvickers",
                                           "body":  "Moving to aspnet since HostFactoryResolver lives there.",
                                           "updatedAt":  "2020-05-09T18:43:58Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyNjIyOTIyNw==",
                                           "createdAt":  "2020-05-09T20:10:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "Better error sounds good.",
                                           "updatedAt":  "2020-05-09T20:10:49Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Creating migration w/ startup-project with multiple overloads of CreateHostBuilder gives \u0027Ambiguous match found.\u0027 error",
        "labels":  [
                       "enhancement",
                       "severity-nice-to-have",
                       "affected-very-few",
                       "area-hosting",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/22272",
        "createdAt":  "2020-05-27T13:37:19Z",
        "number":  22272,
        "author":  "rangav",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCyVzKw==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "0xorial",
                                            "createdAt":  "2021-10-11T14:52:45Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "simonsattinshell",
                                            "createdAt":  "2021-11-15T11:35:42Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "jansonjc",
                                            "createdAt":  "2022-12-07T12:49:08Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "AKomyshan",
                                            "createdAt":  "2023-04-07T00:33:54Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "danimobono",
                                            "createdAt":  "2023-09-02T08:33:53Z"
                                        }
                                    ],
                          "totalCount":  5
                      },
        "updatedAt":  "2025-02-19T14:51:01Z",
        "body":  "\u003c!--\r\n\r\nMore information on our issue management policies can be found here: https://aka.ms/aspnet/issue-policies\r\n\r\nPlease keep in mind that the GitHub issue tracker is not intended as a general support forum, but for reporting non-security bugs and feature requests.\r\n\r\nIf you believe you have an issue that affects the SECURITY of the platform, please do NOT create an issue and instead email your issue details to secure@microsoft.com. Your report may be eligible for our [bug bounty](https://www.microsoft.com/en-us/msrc/bounty-dot-net-core) but ONLY if it is reported through email.\r\nFor other types of questions, consider using [StackOverflow](https://stackoverflow.com).\r\n\r\n--\u003e\r\n\r\n### Describe the bug\r\nI published a worker service to azure app service. when I stop the web job the worker service StopAsync is not called.\r\n\r\nAlso When we publish an update to Worker Service the StopAync not called either.\r\n\r\nSo my question is when will StopAsync will be called?\r\n\r\n### To Reproduce\r\n1. Publish a worker service to Azure app service( Shared D1 Plan )\r\n2. From Azure web app \u003e webjobs section - \u003e stop the webjob.\r\n3. StopAysnc is not called\r\n\r\n### Further technical details\r\n- .Net Core:   3.1.300\r\n\r\n- Runtime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOOYvubw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYzNDg3MDE1Mg==",
                                           "createdAt":  "2020-05-27T18:52:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "That depends on how app service shuts down the app. You can check the app logs to see if there\u0027s any notice of a graceful shutdown.\r\n\r\nStopAsync is typically called when the application is closed gracefully like with CTL+C.\r\n\r\nThe code you have in Program.cs can also affect this. Did you change the default template? If so can you share it?",
                                           "updatedAt":  "2020-05-27T18:52:23Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYzNDkyMjMxNA==",
                                           "createdAt":  "2020-05-27T20:30:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "rangav",
                                           "body":  "Its a default template\r\n\r\nWhen i publish a new version the service is aborted without calling stop, is there an event when new version of app is published so we can stop a long running background job.\r\n\r\n```\r\npublic override Task StartAsync(CancellationToken cancellationToken)\r\n        {\r\n            _logger.LogInformation(\"Worker started...\");\r\n            return base.StartAsync(cancellationToken);\r\n        }\r\n\r\n        public override Task StopAsync(CancellationToken cancellationToken)\r\n        {\r\n            _logger.LogInformation(\"Worker stopping....\");\r\n            return base.StopAsync(cancellationToken);\r\n        }\r\n\r\n        protected override async Task ExecuteAsync(CancellationToken stoppingToken)\r\n        {\r\n            while (!stoppingToken.IsCancellationRequested)\r\n            {\r\n                _logger.LogInformation(\"Worker running at: {time}\", DateTimeOffset.Now);\r\n                await Task.Delay(30000, stoppingToken);\r\n            }\r\n\r\n            _logger.LogInformation(\"Worker shutdown...\");\r\n\r\n        }\r\n```",
                                           "updatedAt":  "2020-05-27T20:33:34Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYzNDkzMDk5Mw==",
                                           "createdAt":  "2020-05-27T20:48:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BrennanConroy",
                                           "body":  "Can you grab the logs from Azure App Service? We\u0027re looking for logs related to shutting down the app.",
                                           "updatedAt":  "2020-05-27T20:48:26Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYzNDk1OTA5OQ==",
                                           "createdAt":  "2020-05-27T21:45:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "rangav",
                                           "body":  "Shutdown -\u003e You mean stop the service from webjobs UI in the Azure app service and get logs? Or you are referring to something else.",
                                           "updatedAt":  "2020-05-27T21:45:28Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYzNDk2MTM3NA==",
                                           "createdAt":  "2020-05-27T21:50:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BrennanConroy",
                                           "body":  "\u003e when I stop the web job\r\n\r\nHowever you are stopping the job, do that again.\r\n\r\nAnd yes, logs from Azure App Service. We generally prefer debug when investigating issues.",
                                           "updatedAt":  "2020-05-27T21:50:34Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYzNDk2MjM0MA==",
                                           "createdAt":  "2020-05-27T21:52:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "rangav",
                                           "body":  "```\r\n2020-05-27T21:50:24  PID[11016] Information info: WorkerServiceTest.Worker[0]\r\n2020-05-27T21:50:24  PID[11016] Information       Worker running at: 05/27/2020 21:50:24 +00:00\r\n2020-05-27T21:50:54  PID[11016] Information info: WorkerServiceTest.Worker[0]\r\n2020-05-27T21:50:54  PID[11016] Information       Worker running at: 05/27/2020 21:50:54 +00:00\r\n2020-05-27T21:51:24  PID[11016] Information info: WorkerServiceTest.Worker[0]\r\n2020-05-27T21:51:24  PID[11016] Information       Worker running at: 05/27/2020 21:51:24 +00:00\r\n2020-05-27T21:51:35  PID[11016] Error       Thread was being aborted.\r\n```\r\n\r\nYou can see the last log -\u003e **Error       Thread was being aborted.** \r\nSame aborted log when i stop the service or publish a new version of app.",
                                           "updatedAt":  "2020-05-27T21:57:19Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYzNDk2MzYxMQ==",
                                           "createdAt":  "2020-05-27T21:55:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "rangav",
                                           "body":  "These are logs when I re-start the service - as you can see StopAync is not called.\r\n\r\n```\r\n2020-05-27T21:51:24  PID[11016] Information info: WorkerServiceTest.Worker[0]\r\n2020-05-27T21:51:24  PID[11016] Information       Worker running at: 05/27/2020 21:51:24 +00:00\r\n2020-05-27T21:51:35  PID[11016] Error       Thread was being aborted.\r\n2020-05-27T21:53:16  No new trace in the past 1 min(s).\r\n2020-05-27T21:54:16  No new trace in the past 2 min(s).\r\n2020-05-27T21:54:18  PID[11016] Information\r\n2020-05-27T21:54:18  PID[11016] Information ..\\WorkerServiceTest\\g5ssdp3f.2dh\u003edotnet WorkerServiceTest.dll\r\n2020-05-27T21:54:19  PID[11016] Information info: WorkerServiceTest.Worker[0]\r\n2020-05-27T21:54:19  PID[11016] Information       Worker started...\r\n2020-05-27T21:54:19  PID[11016] Information info: WorkerServiceTest.Worker[0]\r\n2020-05-27T21:54:19  PID[11016] Information       Worker running at: 05/27/2020 21:54:19 +00:00\r\n2020-05-27T21:54:19  PID[11016] Information info: Microsoft.Hosting.Lifetime[0]\r\n2020-05-27T21:54:19  PID[11016] Information       Application started. Press Ctrl+C to shut down.\r\n2020-05-27T21:54:19  PID[11016] Information info: Microsoft.Hosting.Lifetime[0]\r\n2020-05-27T21:54:19  PID[11016] Information       Hosting environment: Production\r\n2020-05-27T21:54:19  PID[11016] Information info: Microsoft.Hosting.Lifetime[0]\r\n2020-05-27T21:54:19  PID[11016] Information       Content root path: ...\\WorkerServiceTest\\g5ssdp3f.2dh\r\n```",
                                           "updatedAt":  "2021-03-02T09:35:33Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYzNTAzMDU1Mw==",
                                           "createdAt":  "2020-05-28T01:08:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BrennanConroy",
                                           "body":  "@bradygaster @shirhatti Who can we ping about Azure WebJobs? I don\u0027t think they close .NET Core apps gracefully.",
                                           "updatedAt":  "2020-05-28T01:08:25Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYzNTc2ODU4MA==",
                                           "createdAt":  "2020-05-29T05:31:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bradygaster",
                                           "body":  "myself and @btardif, and we\u0027ll figure it out from there. @btardif we\u0027ve inadvertently talked about WebJobs 3 times this week, I think we should figure this out so customers have a graceful path. I\u0027d actually like to make this one of our e2e items if you agree this has enough questions on it. ",
                                           "updatedAt":  "2020-05-29T05:31:33Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYzODQ0MzQ0Nw==",
                                           "createdAt":  "2020-06-03T20:27:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BrennanConroy",
                                           "body":  "@bradygaster lets talk?",
                                           "updatedAt":  "2020-06-03T20:27:27Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYzODY5NDQ4OA==",
                                           "createdAt":  "2020-06-04T08:26:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "rangav",
                                           "body":  "Hi It would be useful StopAync is called in the following scenarios.\r\n\r\n- When WebJobs is stopped manually from Azure\r\n- When new version of worker service in published to Azure App Service\r\n- When app settings is changed in Azure",
                                           "updatedAt":  "2020-06-04T08:26:53Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1ODQ1MTQwOQ==",
                                           "createdAt":  "2020-07-14T22:51:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bradygaster",
                                           "body":  "pinging @btardif on this one more time - we\u0027d like to know from App Service perspective how StopAsync calls are being averted/avoided, and if there is something we could do in partnership to research and resolve. No additional dev effort planned for this in the 5.0 wave, but that doesn\u0027t mean we don\u0027t want to fix any issues on our side if we uncover them. Curious if App Service devs have any insight here as to why StopAsync would be avoided. ",
                                           "updatedAt":  "2020-07-14T22:51:45Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1ODUxMTYyMg==",
                                           "createdAt":  "2020-07-15T02:41:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "btardif",
                                           "body":  "Sorry I missed this earlier, I think this is a question for folks in the Webjobs SDK, maybe @mathewc can shed some light?\r\n ",
                                           "updatedAt":  "2020-07-15T02:41:08Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2ODQ3OTcxNQ==",
                                           "createdAt":  "2020-08-04T09:07:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mars-boy",
                                           "body":  "HI Team, \r\n Working on background service in Azure Web app ( No Plans to go with WebJob for now). I have some logic with StopAsync that communicates with database. Since the WebApp is not stopping gracefully  I am unable to hit StopAsync Which completly breaks how my application works .\r\nPlease provide some work around for the same.\r\n\r\nThanks\r\n",
                                           "updatedAt":  "2020-08-04T09:07:48Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2ODU4MTk4Mg==",
                                           "createdAt":  "2020-08-04T13:01:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "chopranitin",
                                           "body":  "HI,\r\n\r\nI am experiencing same issue. StopAsync() never being called. is there any update on this?",
                                           "updatedAt":  "2020-08-04T13:01:02Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2ODc5OTY3OQ==",
                                           "createdAt":  "2020-08-04T20:07:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mars-boy",
                                           "body":  "@chopranitin  same and i have noticed in azure environment that Background service is getting stopped at some iteration with out any  exception. Like my background service is on infinite loop runs until stop is called works fine in iis but not in azure app service linux",
                                           "updatedAt":  "2020-08-04T20:07:40Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2ODk4NjA5MQ==",
                                           "createdAt":  "2020-08-05T05:20:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mars-boy",
                                           "body":  "@chopranitin  any update?\r\n",
                                           "updatedAt":  "2020-08-05T05:20:23Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2OTI5MTQ1OQ==",
                                           "createdAt":  "2020-08-05T16:20:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bradygaster",
                                           "body":  "Also adding @cecilphillip here as he and I were debugging something similar around this the other day, and we brought @Tratcher in on the conversation as well. Essentially you\u0027re both seeing `StopAsync` never fire, as well as potentially not seeing other \"the worker\u0027s stopping\"-type events fire. Right? Trying to get a few heads together to make sure we\u0027re seeing the same thing. ",
                                           "updatedAt":  "2020-08-05T16:20:40Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3MDcxNTk4NQ==",
                                           "createdAt":  "2020-08-07T21:14:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "cecilphillip",
                                           "body":  "@Tratcher @bradygaster Created a repo with a small repro https://github.com/cecilphillip/dotnet-worker-lifetime-repro\r\nShutting down with docker-compose behaves differently compared to Crtl+C ",
                                           "updatedAt":  "2020-08-07T21:14:14Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3MTg2MzA0MQ==",
                                           "createdAt":  "2020-08-11T10:22:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mars-boy",
                                           "body":  "Commenting to keep this thread alive @cecilphillip  @bradygaster ",
                                           "updatedAt":  "2020-08-11T10:22:16Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3NTAxODc5NA==",
                                           "createdAt":  "2020-08-17T17:42:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bradygaster",
                                           "body":  "Thanks, @mars-boy. @Tratcher and @BrennanConroy have you been able to peel at @cecilphillip\u0027s code sample to see if this is similar in how it exposes the Stop issues to what @mars-boy reported? ",
                                           "updatedAt":  "2020-08-17T17:42:47Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3NTA2MTMzNA==",
                                           "createdAt":  "2020-08-17T19:12:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "No. When we debugged the issue with cecil before there was no indication of an app issue, it looked like the environment was killing the app ungracefully. We need someone good with docker to investigate the shutdown process from the outside-in.",
                                           "updatedAt":  "2020-08-17T19:12:21Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5NjIzNDk0NQ==",
                                           "createdAt":  "2020-09-21T16:44:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotalik",
                                           "body":  "I verified this isn\u0027t an issue that reproduces locally with docker-compose.\r\n\r\nWhat happens when you do CTRL-C on docker-compose up is that it immediately removes the console handle, so you don\u0027t see logs in the output. However, if you run `docker logs workerLifetime` you\u0027ll see the logs from ApplicationStopping. [Here](https://github.com/docker/compose/issues/7135) is an issue that was filed and closed about `docker-compose up`.\r\n\r\nLogs with output from @cecilphillip sample via docker logs. As you can see, the log with \"ApplicationStopping\" and \"Application is shutting down\" are present.\r\n\r\n```\r\ninfo: WorkerLifetime.Worker[0]\r\n      Worker running at: 09/21/2020 15:51:56 +00:00\r\ninfo: Microsoft.Hosting.Lifetime[0]\r\n      Application started. Press Ctrl+C to shut down.\r\ninfo: Microsoft.Hosting.Lifetime[0]\r\n      Hosting environment: Production\r\ninfo: Microsoft.Hosting.Lifetime[0]\r\n      Content root path: /app\r\ninfo: WorkerLifetime.Worker[0]\r\n      Worker running at: 09/21/2020 15:52:02 +00:00\r\ninfo: WorkerLifetime.Worker[0]\r\n      Worker running at: 09/21/2020 15:52:08 +00:00\r\nConsole.WriteLine fired from IHostApplicationLifetime  ApplicationStopping\r\ninfo: Microsoft.Hosting.Lifetime[0]\r\n      Application is shutting down...\r\nConsole.WriteLine triggered from cancellation token in Worker\r\ninfo: WorkerLifetime.Worker[0]\r\n      Log triggered from cancellation token in Worker\r\nConsole.WriteLine fired from IHostApplicationLifetime  ApplicationStopped\r\n```\r\n\r\nI think I\u0027m seeing this issue reproduce on webjobs though. I published the app as a continuous webjob and stopped it, checking what the output is.\r\n\r\n```\r\n[09/21/2020 16:32:04 \u003e 87e531: SYS INFO] Status changed to Starting\r\n[09/21/2020 16:32:04 \u003e 87e531: SYS WARN] \u0027Always On\u0027 doesn\u0027t appear to be enabled for this Web App. To ensure your continuous job doesn\u0027t stop running when the SCM host is idle for too long, consider enabling \u0027Always On\u0027 in the configuration settings for your Web App. Note: \u0027Always On\u0027 is available only in Basic, Standard and Premium modes.\r\n[09/21/2020 16:32:04 \u003e 87e531: SYS INFO] WebJob singleton setting is False\r\n[09/21/2020 16:32:04 \u003e 87e531: SYS INFO] Run script \u0027run.cmd\u0027 with script host - \u0027WindowsScriptHost\u0027\r\n[09/21/2020 16:32:04 \u003e 87e531: SYS INFO] Status changed to Running\r\n[09/21/2020 16:32:04 \u003e 87e531: INFO] \r\n[09/21/2020 16:32:04 \u003e 87e531: INFO] D:\\local\\Temp\\jobs\\continuous\\WorkerLifetime\\m54k5qfn.lx1\u003edotnet WorkerLifetime.dll  \r\n[09/21/2020 16:32:05 \u003e 87e531: INFO] Test\r\n[09/21/2020 16:32:07 \u003e 87e531: INFO] info: WorkerLifetime.Worker[0]\r\n[09/21/2020 16:32:07 \u003e 87e531: INFO]       Worker running at: 09/21/2020 16:32:05 +00:00\r\n[09/21/2020 16:32:07 \u003e 87e531: INFO] info: Microsoft.Hosting.Lifetime[0]\r\n[09/21/2020 16:32:07 \u003e 87e531: INFO]       Application started. Press Ctrl+C to shut down.\r\n[09/21/2020 16:32:07 \u003e 87e531: INFO] info: Microsoft.Hosting.Lifetime[0]\r\n[09/21/2020 16:32:07 \u003e 87e531: INFO]       Hosting environment: Production\r\n[09/21/2020 16:32:07 \u003e 87e531: INFO] info: Microsoft.Hosting.Lifetime[0]\r\n[09/21/2020 16:32:07 \u003e 87e531: INFO]       Content root path: D:\\local\\Temp\\jobs\\continuous\\WorkerLifetime\\m54k5qfn.lx1\r\n[09/21/2020 16:32:09 \u003e 87e531: SYS INFO] Detected WebJob file/s were updated, refreshing WebJob\r\n[09/21/2020 16:32:09 \u003e 87e531: SYS INFO] Status changed to Stopping\r\n[09/21/2020 16:32:11 \u003e 87e531: INFO] info: WorkerLifetime.Worker[0]\r\n[09/21/2020 16:32:11 \u003e 87e531: INFO]       Worker running at: 09/21/2020 16:32:11 +00:00\r\n[09/21/2020 16:32:14 \u003e 87e531: ERR ] Thread was being aborted.\r\n[09/21/2020 16:32:14 \u003e 87e531: SYS INFO] WebJob process was aborted\r\n[09/21/2020 16:32:14 \u003e 87e531: SYS INFO] Status changed to Stopped\r\n[09/21/2020 16:32:15 \u003e 87e531: SYS INFO] Status changed to Starting\r\n[09/21/2020 16:32:15 \u003e 87e531: SYS INFO] Run script \u0027run.cmd\u0027 with script host - \u0027WindowsScriptHost\u0027\r\n[09/21/2020 16:32:15 \u003e 87e531: SYS INFO] Status changed to Running\r\n[09/21/2020 16:32:15 \u003e 87e531: INFO] \r\n[09/21/2020 16:32:15 \u003e 87e531: INFO] D:\\local\\Temp\\jobs\\continuous\\WorkerLifetime\\m54k5qfn.lx1\u003edotnet WorkerLifetime.dll  \r\n[09/21/2020 16:32:15 \u003e 87e531: INFO] Test\r\n[09/21/2020 16:32:16 \u003e 87e531: INFO] info: WorkerLifetime.Worker[0]\r\n[09/21/2020 16:32:16 \u003e 87e531: INFO]       Worker running at: 09/21/2020 16:32:16 +00:00\r\n[09/21/2020 16:32:16 \u003e 87e531: INFO] info: Microsoft.Hosting.Lifetime[0]\r\n[09/21/2020 16:32:16 \u003e 87e531: INFO]       Application started. Press Ctrl+C to shut down.\r\n[09/21/2020 16:32:16 \u003e 87e531: INFO] info: Microsoft.Hosting.Lifetime[0]\r\n[09/21/2020 16:32:16 \u003e 87e531: INFO]       Hosting environment: Production\r\n[09/21/2020 16:32:16 \u003e 87e531: INFO] info: Microsoft.Hosting.Lifetime[0]\r\n[09/21/2020 16:32:16 \u003e 87e531: INFO]       Content root path: D:\\local\\Temp\\jobs\\continuous\\WorkerLifetime\\m54k5qfn.lx1\r\n[09/21/2020 16:32:22 \u003e 87e531: INFO] info: WorkerLifetime.Worker[0]\r\n[09/21/2020 16:32:22 \u003e 87e531: INFO]       Worker running at: 09/21/2020 16:32:22 +00:00\r\n[09/21/2020 16:32:26 \u003e 87e531: SYS INFO] Status changed to Disabling\r\n[09/21/2020 16:32:28 \u003e 87e531: INFO] info: WorkerLifetime.Worker[0]\r\n[09/21/2020 16:32:28 \u003e 87e531: INFO]       Worker running at: 09/21/2020 16:32:28 +00:00\r\n[09/21/2020 16:32:31 \u003e 87e531: SYS INFO] Detected WebJob file/s were updated, refreshing WebJob\r\n[09/21/2020 16:32:31 \u003e 87e531: SYS INFO] Status changed to Stopping\r\n[09/21/2020 16:32:34 \u003e 87e531: INFO] info: WorkerLifetime.Worker[0]\r\n[09/21/2020 16:32:34 \u003e 87e531: INFO]       Worker running at: 09/21/2020 16:32:34 +00:00\r\n[09/21/2020 16:32:36 \u003e 87e531: ERR ] Thread was being aborted.\r\n[09/21/2020 16:32:36 \u003e 87e531: SYS INFO] WebJob process was aborted\r\n[09/21/2020 16:32:36 \u003e 87e531: SYS INFO] Status changed to Stopped\r\n```\r\n\r\nThe log for \"Application is shutting down\" isn\u0027t present. It\u0027s also odd that the process started and stopped twice, even though I only called Stop once. @btardif @mathewc this seems like an issue with WebJobs; what happens when Stop is called on a continuous WebJob? ",
                                           "updatedAt":  "2020-09-21T16:44:10Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5NjIzNTI1Ng==",
                                           "createdAt":  "2020-09-21T16:44:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2020-09-21T16:44:47Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc4NjM3NjczNg==",
                                           "createdAt":  "2021-02-26T02:59:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "This is the problem https://github.com/projectkudu/kudu/wiki/WebJobs#graceful-shutdown. The webjobs environment writes to a file to signal shutdown, it doesn\u0027t trigger ctrl+C. \n\nIf you use the webjobs sdk it will work.",
                                           "updatedAt":  "2021-02-26T02:59:02Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzMjExMDI4OA==",
                                           "createdAt":  "2021-05-04T17:22:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jez9999",
                                           "body":  "Does this ticket apply just to web jobs or to regular Azure-hosted web apps too?  I have an IHostedService on my web app and its StopAsync doesn\u0027t get called when I stop the app from the Azure portal.  IMHO this is a bug that should be fixed, developers rely on graceful shutdowns to tidy up, they\u0027re led to believe that StopAsync will get called unless there some kind of emergency shutdown, yet it isn\u0027t getting called when you click \"Stop\", which is surprising.",
                                           "updatedAt":  "2021-05-04T17:22:32Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzMjExMTU3Ng==",
                                           "createdAt":  "2021-05-04T17:24:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "@jez9999 are you using windows or linux hosting?",
                                           "updatedAt":  "2021-05-04T17:24:31Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzMjExMzU0Mg==",
                                           "createdAt":  "2021-05-04T17:27:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jez9999",
                                           "body":  "Linux.  .NET Core 3.1 stack.",
                                           "updatedAt":  "2021-05-04T17:27:34Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg0ODkwMTgyMg==",
                                           "createdAt":  "2021-05-26T16:05:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "walapa-nl",
                                           "body":  "I\u0027d also like to chip in on this issue; running .NET Core 3.1 on a Windows host.\r\n\r\n#### **All these events result in StopAsync** NOT **being triggered:**\r\n\r\n1.  Azure Portal -\u003e App Service -\u003e WebJobs -\u003e Stop\r\n2.  Azure Pipelines -\u003e Release -\u003e Deploy WebJob\r\n3.  Changing the  `WEBJOBS_STOPPED` environment variable to `1`\r\n\r\nAs others noticed, the only output is indeed **Thread Aborted** in the logs.\r\n\r\n\u003e **Note:** As per Davids comment, I am actually using the SDK and it still didn\u0027t respond as expected. However, on that page it also mentions that the default behavior is to move your WebJob to a generated folder under the **Temp** directory.\r\n\r\nVerifying the directories on my App Service I could indeed see these folders:\r\n\r\n*   WebJob Deploy directory: `D:\\home\\site\\wwwroot\\App_Data\\jobs\\continuous\\MyWebJob`\r\n*   WebJob Working directory: `D:\\local\\Temp\\jobs\\continuous\\MyWebJob\\bgrkyzdi.xpd`\r\n\r\nSo, I decided to set the `WEBJOBS_SHUTDOWN_FILE` variable to `D:\\local\\Temp\\jobs\\continuous\\MyWebJob\\shutdown.job` (as this variable is not present by default).\r\n\r\nI then issued a **Stop** from the Azure Portal under the **WebJobs** menu item and checked whether the file was indeed created in that folder: **Failed**! \r\n\r\nSo, I am lost, what is the expected behavior? Are my settings/assumptions wrong? I still only see `Thread was being aborted` in the logging output. Is there anyway to debug this process from Azure\u0027s point of view? Like an audit log where it shows that it tries to create that file and failed perhaps?",
                                           "updatedAt":  "2021-05-26T18:00:06Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1MjI0MzI4Mw==",
                                           "createdAt":  "2021-06-01T16:00:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bradygaster",
                                           "body":  "@Ashbjorn does your Worker have the WebJobs SDK installed into it? Apologies if you meant that when you cited \"SDK\" - just clarifying. ",
                                           "updatedAt":  "2021-06-01T16:00:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde840rfwc",
                                           "createdAt":  "2021-07-21T01:35:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bradygaster",
                                           "body":  "@Ashbjorn @davidfowl I went through the exercise today of creating a Worker that writes Start/Stop/Execute events to an App Insights telemetry area, keeping the code as basic as possible:\r\n\r\n```csharp\r\nusing Microsoft.ApplicationInsights;\r\nusing Microsoft.ApplicationInsights.DataContracts;\r\nusing Microsoft.Extensions.Hosting;\r\nusing Microsoft.Extensions.Logging;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Threading;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace BasicWebJob\r\n{\r\n    public class Worker : BackgroundService\r\n    {\r\n        private readonly ILogger\u003cWorker\u003e _logger;\r\n        private readonly TelemetryClient _telemetryClient;\r\n\r\n        public Worker(ILogger\u003cWorker\u003e logger, TelemetryClient tc)\r\n        {\r\n            _logger = logger;\r\n            _telemetryClient = tc;\r\n        }\r\n\r\n        public override async Task StartAsync(CancellationToken cancellationToken)\r\n        {\r\n            _logger.LogInformation($\"Worker Starting at {DateTimeOffset.UtcNow.ToString()}\");\r\n\r\n            _telemetryClient.TrackEvent(\"Worker Starting\", new Dictionary\u003cstring, string\u003e() {\r\n                  { \"StartedAt\", DateTimeOffset.UtcNow.ToString() }\r\n              });\r\n\r\n            await base.StartAsync(cancellationToken);\r\n        }\r\n\r\n        public override async Task StopAsync(CancellationToken cancellationToken)\r\n        {\r\n            _logger.LogInformation($\"Worker Stopping at {DateTimeOffset.UtcNow.ToString()}\");\r\n\r\n            _telemetryClient.TrackEvent(\"Worker Stopping\", new Dictionary\u003cstring, string\u003e() {\r\n                  { \"StoppedAt\", DateTimeOffset.UtcNow.ToString() }\r\n              });\r\n\r\n            await base.StopAsync(cancellationToken);\r\n        }\r\n\r\n        protected override async Task ExecuteAsync(CancellationToken stoppingToken)\r\n        {\r\n            while (!stoppingToken.IsCancellationRequested)\r\n            {\r\n                _telemetryClient.TrackEvent(\"Worker Executing\", new Dictionary\u003cstring, string\u003e() { \r\n                    { \"ExecutedAt\", DateTimeOffset.UtcNow.ToString() } \r\n                });\r\n\r\n                _logger.LogInformation($\"Worker executing at {DateTimeOffset.UtcNow.ToString()}\");\r\n\r\n                await Task.Delay(5000, stoppingToken);\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThe project just has the most basic WebJob reference I presumed you meant, @davidfowl, but let me know if you meant another one:\r\n\r\n```xml\r\n\u003cProject Sdk=\"Microsoft.NET.Sdk.Worker;Microsoft.NET.Sdk.Publish\"\u003e\r\n  \u003cPropertyGroup\u003e\r\n    \u003cTargetFramework\u003enet5.0\u003c/TargetFramework\u003e\r\n  \u003c/PropertyGroup\u003e\r\n  \u003cItemGroup\u003e\r\n    \u003cPackageReference Include=\"Microsoft.ApplicationInsights.WorkerService\" Version=\"2.17.0\" /\u003e\r\n    \u003cPackageReference Include=\"Microsoft.Azure.WebJobs.Extensions\" Version=\"4.0.1\" /\u003e\r\n    \u003cPackageReference Include=\"Microsoft.Extensions.Hosting\" Version=\"5.0.0\" /\u003e\r\n  \u003c/ItemGroup\u003e\r\n  \u003cItemGroup\u003e\r\n    \u003cNone Update=\"Settings.job\"\u003e\r\n      \u003cCopyToOutputDirectory\u003eAlways\u003c/CopyToOutputDirectory\u003e\r\n    \u003c/None\u003e\r\n  \u003c/ItemGroup\u003e\r\n\u003c/Project\r\n```\r\n\r\nI used VS to publish the Worker to an App Service, specifying the Continuous Type. After the job was published as a Web Job to an App Service, I started and stopped it a few times. Here\u0027s the result of the events logged to the App Insights database:\r\n\r\n![image](https://user-images.githubusercontent.com/41929050/126416453-3604e18a-3b54-4547-8025-778f71affb6d.png)\r\n\r\nIt doesn\u0027t look like adding a ref to the SDK \"just does it,\" but let me know if there\u0027s a different NuGet package to add and I\u0027ll give it another try. Hoping to figure out a solid workaround for folks who need to execute code on stop. \r\n",
                                           "updatedAt":  "2021-07-21T04:15:42Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde840rjai",
                                           "createdAt":  "2021-07-21T02:15:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bradygaster",
                                           "body":  "also cc @suwatch and @ahmelsayed as they\u0027d agreed in this linked issue https://github.com/projectkudu/kudu/issues/3273 that this seems like a good idea - it\u0027s essentially breaking an important scenario for .NET Core developers who want to use the Worker Service template with WebJobs. It\u0027d be great if they could make use of `StopAsync` to facilitate their own custom logic. ",
                                           "updatedAt":  "2021-07-21T02:15:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde840ro_F",
                                           "createdAt":  "2021-07-21T03:20:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "@bradygaster did you add a reference to the webjobs SDK and configure it as part of the host?",
                                           "updatedAt":  "2021-07-21T03:20:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde840rpNM",
                                           "createdAt":  "2021-07-21T03:22:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bradygaster",
                                           "body":  "as outlined in the code above, i referenced what i presumed was \"enough of the WebJobs SDK\" for it to work. I also added `.ConfigureWebJobs()` in the `Program.cs` and tried a few of the options but couldn\u0027t ascertain the precise combination to get it to start showing the stops in App Insights. ",
                                           "updatedAt":  "2021-07-21T03:22:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde840rpS5",
                                           "createdAt":  "2021-07-21T03:23:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "PS you can remove your calls to `Task.Run`",
                                           "updatedAt":  "2021-07-21T03:23:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde840rpw_",
                                           "createdAt":  "2021-07-21T03:29:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bradygaster",
                                           "body":  "Aye captain. Done. Result of forgetting calls to base and hacking backwards. ",
                                           "updatedAt":  "2021-07-21T03:29:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde840rtVt",
                                           "createdAt":  "2021-07-21T04:14:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bradygaster",
                                           "body":  "ps @davidfowl here\u0027s the wire-up in `program.cs`. \r\n\r\n```csharp\r\npublic static IHostBuilder CreateHostBuilder(string[] args) =\u003e\r\n  Host.CreateDefaultBuilder(args)\r\n      .ConfigureLogging(_ =\u003e\r\n      {\r\n          _.AddConsole();\r\n      })\r\n      .ConfigureServices((hostContext, services) =\u003e\r\n      {\r\n          services.AddHostedService\u003cWorker\u003e();\r\n          services.AddApplicationInsightsTelemetryWorkerService();\r\n      })\r\n      .ConfigureWebJobs(builder =\u003e\r\n      {\r\n          // what do do here? \r\n      })\r\n  ;\r\n```",
                                           "updatedAt":  "2021-07-21T04:16:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde840ru5e",
                                           "createdAt":  "2021-07-21T04:31:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "cc @mathewc ",
                                           "updatedAt":  "2021-07-21T04:31:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde840rviD",
                                           "createdAt":  "2021-07-21T04:39:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bradygaster",
                                           "body":  "cc @cijothomas JIC too",
                                           "updatedAt":  "2021-07-21T04:39:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde840sODt",
                                           "createdAt":  "2021-07-21T08:43:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCw2QRQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "DrorOzgaon",
                                                                               "createdAt":  "2021-10-27T12:03:04Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "JohnWeisz",
                                                                               "createdAt":  "2021-11-29T13:52:32Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "tdw-hughes",
                                                                               "createdAt":  "2022-01-25T12:55:53Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "wouterroos",
                                                                               "createdAt":  "2022-09-30T14:14:23Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "pridmorej",
                                                                               "createdAt":  "2022-11-13T15:19:50Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jansonjc",
                                                                               "createdAt":  "2022-12-07T12:56:09Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  6
                                                         },
                                           "author":  "jez9999",
                                           "body":  "@bradygaster Have you tried the equivalent with an `IHostedService` inside an Azure web app?  I\u0027ve found that `StopAsync` isn\u0027t called in those on shutdown either, which should also be fixed.",
                                           "updatedAt":  "2021-07-21T08:43:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde840sOk-",
                                           "createdAt":  "2021-07-21T08:46:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "This is the same problem.",
                                           "updatedAt":  "2021-07-21T08:46:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde840sSIy",
                                           "createdAt":  "2021-07-21T09:07:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jez9999",
                                           "body":  "Are web apps and web jobs implemented as the same thing internally then?",
                                           "updatedAt":  "2021-07-21T09:07:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde840tjQe",
                                           "createdAt":  "2021-07-21T17:17:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "Actually, it shouldn\u0027t be the same problem.",
                                           "updatedAt":  "2021-07-21T17:17:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde841P4u6",
                                           "createdAt":  "2021-08-05T10:44:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "supertx2",
                                           "body":  "Having the same issue.\r\nFor now I\u0027m using this class : \r\nhttps://github.com/Azure/azure-webjobs-sdk/blob/master/src/Microsoft.Azure.WebJobs.Host/WebjobsShutdownWatcher.cs\r\nAnd registering the cancellation logic in the provided token.\r\nAlso added:  \"stopping_wait_time\": 60 in Settings.job",
                                           "updatedAt":  "2021-08-05T10:48:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde844wBQ_",
                                           "createdAt":  "2021-10-26T16:32:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DrorOzgaon",
                                           "body":  "\u003e @bradygaster Have you tried the equivalent with an `IHostedService` inside an Azure web app? I\u0027ve found that `StopAsync` isn\u0027t called in those on shutdown either, which should also be fixed.\r\n\r\nI\u0027m facing the same issue - a few BackgroundServices running on an Azure App Service.\r\n\r\nI tried an array of solutions to get the \"Azure App Service Stop\" to initiate a graceful shutdown, but it\u0027s not working. Was anyone able to do this successfully?",
                                           "updatedAt":  "2021-10-26T18:07:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde844wNzd",
                                           "createdAt":  "2021-10-26T17:38:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC5bSUA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "DrorOzgaon",
                                                                               "createdAt":  "2021-10-27T00:38:09Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "wouterroos",
                                                                               "createdAt":  "2022-09-30T14:14:51Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "AKomyshan",
                                                                               "createdAt":  "2023-04-07T07:54:28Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "bradygaster",
                                           "body":  "I was able to replicate the issue, but my understanding is that, due to the way App Service shuts down the app, the `StopAsync` is never called. @davidfowl - i also tried your suggestion of adding the WebJobs SDK, to no avail.",
                                           "updatedAt":  "2021-10-26T17:38:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde844y5Fg",
                                           "createdAt":  "2021-10-27T12:16:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCw2Q3w==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "supertx2",
                                                                               "createdAt":  "2021-10-27T13:08:46Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jansonjc",
                                                                               "createdAt":  "2022-12-07T12:58:14Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "DrorOzgaon",
                                           "body":  "\u003e I was able to replicate the issue, but my understanding is that, due to the way App Service shuts down the app, the `StopAsync` is never called. @davidfowl - i also tried your suggestion of adding the WebJobs SDK, to no avail.\r\n\r\nThat seems like a bug to me - If you have an API you can use Deployment Slots as a workaround for this. But, if you\u0027re using a BackgroundService, you probably need to properly dispose of resources through a graceful shutdown.\r\n\r\nFor context, I use a Linux docker image and I\u0027m guessing that the \"App Service Stop\" doesn\u0027t actually call \"Docker stop\" which triggers a SIGTERM. Since there is no SIGTERM being sent to the app, there\u0027s no graceful shutdown.",
                                           "updatedAt":  "2021-10-27T12:16:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde844zyg0",
                                           "createdAt":  "2021-10-27T16:32:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "Applications waiting for graceful shutdown typically use SIGINT/Ctrl+C or SIGTERM (this is what the generic host looks for by default). AFAIK app service does not do this for worker services and that is what is causing the problems seen here.\r\n\r\nThe WebJobsSDK [handles this](https://github.com/Azure/azure-webjobs-sdk/blob/master/src/Microsoft.Azure.WebJobs.Host/WebjobsShutdownWatcher.cs) by listening to a file change but I guess just wiring up the SDK isn\u0027t enough to trigger this logic. \r\n\r\nThe ideal outcome would be to have app service use the typical SIGINT/CTRL+C or SIGTERM to trigger graceful shutdown of the host. In the mean time I guess the workaround is to use the above logic from the webjobs SDK to make it work.",
                                           "updatedAt":  "2021-10-27T16:32:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde845hsl5",
                                           "createdAt":  "2021-11-10T13:24:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DrorOzgaon",
                                           "body":  "I had to come up with a workaround for BackgroundServices... Here is what I came up with.\r\n\r\n1. Include a check in your while loop in ExecuteAsync with a feature flag (I\u0027ll explain why we need this in a little bit.)\r\n2. Create a Controller that injects IHostApplicationLifetime and create an endpoint that will call \"StopApplication()\". Ideally this endpoint is protected in some way, I setup a password requirement and only internal IPs can hit my API. Since it\u0027s a workaround for now, I\u0027m not too worried.\r\n3. Enable Client Affinity on your App Service. Luckily for me, we don\u0027t serve any client facing APIs, but this could be a problem if you do :(. It will allow us to target specific instances within App Service when scaling out. We need this to shut down each instance gracefully.\r\n4. In your release pipeline, disable the feature flag, go through every AppService instance and invoke the controller endpoint (you can do this by creating an ARRAffinity cookie with the Instance Id.)\r\nNote: When you call \"StopApplication()\", App Service thinks the process died unexpectedly and restarts it. The feature flag will make sure that the BackgroundServices are zombies and don\u0027t really do anything when they restart.\r\n5. Call App Service Stop\r\n6. Enable the feature flag\r\n7. Deploy\r\n8. Call App Service Start\r\n\r\nI\u0027ve opened a ticket with Azure support to see if there is a better way, but I couldn\u0027t wait for them to resolve it. That\u0027s the best I could come up with for now. It\u0027s messy, but it works.",
                                           "updatedAt":  "2021-11-10T14:47:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde845i-5v",
                                           "createdAt":  "2021-11-10T16:00:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "Why wouldn\u0027t you just use the [linked code above](https://github.com/Azure/azure-webjobs-sdk/blob/master/src/Microsoft.Azure.WebJobs.Host/WebjobsShutdownWatcher.cs)?",
                                           "updatedAt":  "2021-11-10T16:00:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde845jBPV",
                                           "createdAt":  "2021-11-10T16:04:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DrorOzgaon",
                                           "body":  "\u003e Why wouldn\u0027t you just use the [linked code above](https://github.com/Azure/azure-webjobs-sdk/blob/master/src/Microsoft.Azure.WebJobs.Host/WebjobsShutdownWatcher.cs)?\r\n\r\nCorrect me if I\u0027m wrong, but I\u0027ve found that it only works for WebJobs, not for BackgroundServices running on an App Service.",
                                           "updatedAt":  "2021-11-10T16:04:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde845jZlP",
                                           "createdAt":  "2021-11-10T17:39:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "supertx2",
                                           "body":  "\u003e \u003e Why wouldn\u0027t you just use the [linked code above](https://github.com/Azure/azure-webjobs-sdk/blob/master/src/Microsoft.Azure.WebJobs.Host/WebjobsShutdownWatcher.cs)?\r\n\u003e \r\n\u003e Correct me if I\u0027m wrong, but I\u0027ve found that it only works for WebJobs, not for BackgroundServices running on an App Service.\r\n\r\nThis open issue is for WebJobs, for BackgroundServices the StopAsync should be working as expected\r\nhttps://docs.microsoft.com/en-us/aspnet/core/fundamentals/host/hosted-services?view=aspnetcore-6.0\u0026tabs=visual-studio\r\n",
                                           "updatedAt":  "2021-11-10T17:39:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde845jo4B",
                                           "createdAt":  "2021-11-10T18:55:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC7JkMw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "DrorOzgaon",
                                                                               "createdAt":  "2021-11-18T13:22:39Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "JohnWeisz",
                                                                               "createdAt":  "2021-11-29T13:53:25Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "rabindra-harlalka",
                                                                               "createdAt":  "2022-01-11T13:07:21Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "kaylumah",
                                                                               "createdAt":  "2023-05-05T05:47:12Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  4
                                                         },
                                           "author":  "jez9999",
                                           "body":  "@supertx2 Nope, as I\u0027ve mentioned in the comments above, they seem to have exactly the same problem.  Possibly they\u0027re implemented the same behind the scenes anyway.",
                                           "updatedAt":  "2021-11-10T18:55:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85ZZRo0",
                                           "createdAt":  "2023-04-07T00:48:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AKomyshan",
                                           "body":  "any updates?",
                                           "updatedAt":  "2023-04-07T00:48:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85bf63r",
                                           "createdAt":  "2023-05-04T17:01:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kaylumah",
                                           "body":  "is there a way to gracefully shut this down?",
                                           "updatedAt":  "2023-05-04T17:01:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85bgbL5",
                                           "createdAt":  "2023-05-04T18:31:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC7JeTQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "kaylumah",
                                                                               "createdAt":  "2023-05-05T04:51:50Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "supertx2",
                                           "body":  "\u003e is there a way to gracefully shut this down?\r\n\r\nCheck my comment: https://github.com/dotnet/aspnetcore/issues/22272#issuecomment-893356986\r\nWe are currently using that on our production environment and works as expected ",
                                           "updatedAt":  "2023-05-04T18:31:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85vJsMG",
                                           "createdAt":  "2023-12-20T16:49:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AKomyshan",
                                           "body":  "Still not fixed after .NET 8 release? @bradygaster ",
                                           "updatedAt":  "2023-12-20T16:53:40Z"
                                       }
                                   ],
                         "totalCount":  57
                     },
        "title":  "Worker Service StopAsync func never called",
        "labels":  [
                       "bug",
                       "External",
                       "Needs: Attention :wave:",
                       "severity-minor",
                       "affected-medium",
                       "area-hosting",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/23601",
        "createdAt":  "2020-07-02T06:53:38Z",
        "number":  23601,
        "author":  "danroth27",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOBKnqNw==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "renanrcp",
                                            "createdAt":  "2020-07-03T01:25:35Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "vchirikov",
                                            "createdAt":  "2020-07-16T23:39:26Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2023-08-24T23:25:10Z",
        "body":  "In user testing, when users run their first ASP.NET Core app, they have difficulty understanding from the console output that the app is successfully running and how to stop the app. This information is present in the console output, but in the form of log output that is difficult to read. In user testing, multiple users were unsure if the app was successfully running even after the log output was displayed. Multiple users also resorted to closing the terminal to stop the app because they didn\u0027t see the instructions to use \u003ckbd\u003eCtrl-C\u003c/kbd\u003e.\r\n\r\nHere\u0027s what the output of an ASP.NET Core web app looks like today:\r\n\r\n![image](https://user-images.githubusercontent.com/1874516/86325053-4d35b080-bbf4-11ea-91f6-382282e3855f.png)\r\n\r\nThe interweaved logging statements make the content difficult to read. It\u0027s not obvious which of these logging statements is important and which are just logging spew.\r\n\r\nFor comparison, here\u0027s the console output when running a React app:\r\n\r\n![image](https://user-images.githubusercontent.com/1874516/86325887-b669f380-bbf5-11ea-944a-350ed66ee9a9.png)\r\n\r\nThis output seems much cleaner and easier to read.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOL50_HQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1MjgyNTM5OA==",
                                           "createdAt":  "2020-07-02T07:05:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "Hmmmmm. This brings up the age old question. This requires us to write directly to the console instead of using logging. That experience is when you run the create-react-app using npm start right? Is that the experience you get when you run without that shim (or is it something that usually persists past development?)",
                                           "updatedAt":  "2020-07-02T07:05:46Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1MjgzMDA3MA==",
                                           "createdAt":  "2020-07-02T07:16:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danroth27",
                                           "body":  "\u003e That experience is when you run the create-react-app using npm start right?\r\n\r\nYes\r\n\r\n\u003e Is that the experience you get when you run without that shim (or is it something that usually persists past development?)\r\n\r\nThis is the output from the dev server. In production with React you just have a bunch of static files that you deploy to whatever server you want.\r\n",
                                           "updatedAt":  "2020-07-02T07:16:16Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1Mjg0NDYxOQ==",
                                           "createdAt":  "2020-07-02T07:46:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "Right this is just a dev server, we need to reconcile that. This output comes from the framework itself, we don\u0027t have a dev server per se.",
                                           "updatedAt":  "2020-07-02T07:46:03Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1Mjg1NDQ4NQ==",
                                           "createdAt":  "2020-07-02T08:05:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Stryxus",
                                           "body":  "It would also be nice if you could somehow disable the startup prints. When you use your own logging infrastructure, it kind of makes it look like a mess.\r\n\r\nOr, simply add an event for when things are logged so logging infrastructures can use it.",
                                           "updatedAt":  "2020-07-02T08:06:21Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1Mjg2MDI1MA==",
                                           "createdAt":  "2020-07-02T08:16:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "gfoidl",
                                           "body":  "Some ideas:\r\n\r\n* log the `Ctrl + C` info as first / last, so it is on more prominent place than in the middle\r\n* in environment _Development_ write similar info as the react-example to the console directly\r\n\r\n---\r\n\r\n\u003e disable the startup prints\r\n\r\nCan be done by specifiying a loglevel for category `Microsoft.Hosting.Lifetime`.\r\n",
                                           "updatedAt":  "2020-07-02T08:16:51Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1MzA0ODQyNA==",
                                           "createdAt":  "2020-07-02T14:44:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBJSu2g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "renanrcp",
                                                                               "createdAt":  "2020-07-03T04:24:02Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Andras-Csanyi",
                                                                               "createdAt":  "2020-07-03T06:57:28Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "Bartmax",
                                           "body":  "what about kestrel having a \"dev-mode\" where it filters output and write to the console ?",
                                           "updatedAt":  "2020-07-02T14:44:04Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1MzMzMjQ1MQ==",
                                           "createdAt":  "2020-07-03T04:04:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "renanrcp",
                                           "body":  "\u003e Some ideas:\r\n\u003e \r\n\u003e * log the `Ctrl + C` info as first / last, so it is on more prominent place than in the middle\r\n\u003e * in environment _Development_ write similar info as the react-example to the console directly\r\n\u003e \r\n\u003e \u003e disable the startup prints\r\n\u003e \r\n\u003e Can be done by specifiying a loglevel for category `Microsoft.Hosting.Lifetime`.\r\n\r\nI think if the env is development we can create a different logger (with a different formatter lol) to ```Microsoft.Hosting.Lifetime``` when application builds.",
                                           "updatedAt":  "2020-07-03T04:04:49Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1NDQ3MjMwNQ==",
                                           "createdAt":  "2020-07-06T21:22:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BrennanConroy",
                                           "body":  "Scripts that scrape logs could be broken if we changed this, so applying breaking-change label.",
                                           "updatedAt":  "2020-07-06T21:22:35Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY4MTEwOTg1NQ==",
                                           "createdAt":  "2020-08-26T20:35:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2020-08-26T20:35:19Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc5ODgzMjUyMw==",
                                           "createdAt":  "2021-03-14T04:47:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danroth27",
                                           "body":  "I think a big part of the problem is the interleaving of the log metadata with the actual log content. Could we consolidate the log outputs into a single well-crafted log entry? Something like:\r\n\r\n```\r\ninfo: Microsoft.Hosting.Lifetime[0]\r\n      Now listening on: https://localhost:5001, http://localhost:5000\r\n      Hosting environment: Development\r\n      Content root path: C:\\Users\\daroth\\Desktop\\BlazorApp1\r\n      Application started. Press Ctrl+C to shut down.\r\n```",
                                           "updatedAt":  "2021-03-14T04:47:14Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc5ODgzNDQ2MQ==",
                                           "createdAt":  "2021-03-14T05:13:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "\u003e I think a big part of the problem is the interleaving of the log metadata with the actual log content. Could we consolidate the log outputs into a single well-crafted log entry? Something like:\r\n\r\nWe could do anything we wanted to make the output pretty but doing it using logging to do so is problematic. The producer and consumer of the log data don\u0027t have enough information at their respective layers to make the output look like this.  So I think it all comes back to the original question and a tradeoff needs to be made between logging something pretty to the console and formatting.\r\n\r\nI\u0027m not sure it\u0027s possible to do what you suggest because the logs come from different components today (with different knowledge of the stack).",
                                           "updatedAt":  "2021-03-14T05:13:18Z"
                                       }
                                   ],
                         "totalCount":  11
                     },
        "title":  "Provide clearer console output when running an ASP.NET Core app",
        "labels":  [
                       "Needs: Design",
                       "enhancement",
                       "breaking-change",
                       "affected-most",
                       "severity-minor",
                       "area-hosting",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/24142",
        "createdAt":  "2020-07-21T05:46:32Z",
        "number":  24142,
        "author":  "davidfowl",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCrbYYA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "nesterenko-kv",
                                            "createdAt":  "2020-07-21T06:01:07Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "MV10",
                                            "createdAt":  "2020-07-21T08:54:50Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "joseftw",
                                            "createdAt":  "2020-07-21T19:25:18Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "manne",
                                            "createdAt":  "2020-07-22T19:00:27Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "loic-sharma",
                                            "createdAt":  "2020-07-23T08:04:16Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "scabana",
                                            "createdAt":  "2020-08-10T12:06:13Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "grbell-ms",
                                            "createdAt":  "2020-10-08T21:11:23Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "yzorg",
                                            "createdAt":  "2020-10-15T03:49:52Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "juho-hanhimaki",
                                            "createdAt":  "2020-10-29T06:23:56Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "alienwareone",
                                            "createdAt":  "2020-11-17T22:56:06Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "mausch",
                                            "createdAt":  "2021-03-28T16:36:45Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "iSeiryu",
                                            "createdAt":  "2021-03-28T18:24:32Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "divega",
                                            "createdAt":  "2021-03-29T03:57:59Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "johan-v-r",
                                            "createdAt":  "2021-03-29T06:26:49Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Rutgerz",
                                            "createdAt":  "2021-04-01T20:11:55Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "martincostello",
                                            "createdAt":  "2021-04-04T17:22:09Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "YohanSciubukgian",
                                            "createdAt":  "2021-04-08T12:09:14Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "metoule",
                                            "createdAt":  "2021-04-28T10:48:44Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Rookian",
                                            "createdAt":  "2021-06-15T13:22:00Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "khayes",
                                            "createdAt":  "2021-07-02T10:17:47Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "davidglassborow",
                                            "createdAt":  "2021-07-09T10:29:27Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "prlcutting",
                                            "createdAt":  "2021-08-18T01:39:34Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "skynode",
                                            "createdAt":  "2021-08-23T03:20:22Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "janamtote",
                                            "createdAt":  "2021-10-07T23:46:11Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "gojanpaolo",
                                            "createdAt":  "2021-10-07T23:46:27Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "avsorokin",
                                            "createdAt":  "2021-10-09T04:55:30Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "rcollette",
                                            "createdAt":  "2021-10-15T06:03:12Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "koheatel",
                                            "createdAt":  "2021-10-21T10:50:52Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Socolin",
                                            "createdAt":  "2021-10-28T20:00:10Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "MCGPPeters",
                                            "createdAt":  "2021-11-02T08:16:31Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "pdevito3",
                                            "createdAt":  "2021-11-10T17:15:00Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "304NotModified",
                                            "createdAt":  "2021-11-12T23:58:10Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "fs24-chrter",
                                            "createdAt":  "2021-11-18T10:52:35Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "lvermeulen",
                                            "createdAt":  "2021-11-23T10:31:22Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ArneD",
                                            "createdAt":  "2021-11-23T10:31:31Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "lvermeulen",
                                            "createdAt":  "2021-11-23T10:31:40Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "aetos382",
                                            "createdAt":  "2021-12-08T06:53:16Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "taublast",
                                            "createdAt":  "2021-12-17T07:19:12Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "dlumpp",
                                            "createdAt":  "2021-12-29T20:31:56Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "soenneker",
                                            "createdAt":  "2022-02-07T17:15:35Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "KLuuKer",
                                            "createdAt":  "2022-03-16T11:53:00Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "HalidCisse",
                                            "createdAt":  "2022-03-17T01:04:44Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "airbreather",
                                            "createdAt":  "2022-03-20T13:08:08Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "MarioGruda",
                                            "createdAt":  "2022-04-28T20:24:58Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "avsteele",
                                            "createdAt":  "2022-05-18T00:17:37Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "SijyKijy",
                                            "createdAt":  "2022-06-10T08:50:48Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "gdoron",
                                            "createdAt":  "2022-07-26T16:18:37Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "szaboopeeter",
                                            "createdAt":  "2022-09-01T09:48:52Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "whimzyLive",
                                            "createdAt":  "2022-11-03T05:52:23Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Lure5134",
                                            "createdAt":  "2022-11-12T23:42:11Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "sergey-v9",
                                            "createdAt":  "2022-11-22T14:55:25Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Kobus-Smit",
                                            "createdAt":  "2022-12-13T03:52:37Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "dalumedic",
                                            "createdAt":  "2023-01-08T17:29:53Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "glen-84",
                                            "createdAt":  "2023-01-23T10:11:32Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "gioce90",
                                            "createdAt":  "2023-01-26T16:43:34Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "gioce90",
                                            "createdAt":  "2023-01-26T16:43:36Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "kevinkloet-koronet",
                                            "createdAt":  "2023-02-17T15:16:54Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "garrym",
                                            "createdAt":  "2023-03-14T16:00:59Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "dev-thinks",
                                            "createdAt":  "2023-03-21T20:17:19Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "maxreb",
                                            "createdAt":  "2023-04-28T11:43:55Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "mikerochip",
                                            "createdAt":  "2023-05-03T18:04:53Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "greg84",
                                            "createdAt":  "2023-05-17T08:31:21Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "PhenX",
                                            "createdAt":  "2023-06-29T09:10:00Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "PhenX",
                                            "createdAt":  "2023-06-29T09:10:02Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "kichalla",
                                            "createdAt":  "2023-07-25T16:32:22Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "batkaevruslan",
                                            "createdAt":  "2023-07-27T07:09:50Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "WeihanLi",
                                            "createdAt":  "2023-08-09T14:27:43Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "petttro",
                                            "createdAt":  "2023-08-17T16:17:35Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "stam",
                                            "createdAt":  "2023-08-29T07:47:01Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "verdie-g",
                                            "createdAt":  "2023-08-31T17:23:53Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "asapha",
                                            "createdAt":  "2023-09-30T12:18:13Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "garrym",
                                            "createdAt":  "2023-10-03T10:05:47Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "MehdiSaeedifar",
                                            "createdAt":  "2023-10-07T08:46:27Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "mci-kmd",
                                            "createdAt":  "2023-11-03T11:20:01Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "HofmeisterAn",
                                            "createdAt":  "2023-11-15T14:53:44Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ascott18",
                                            "createdAt":  "2024-05-01T03:54:13Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "YZahringer",
                                            "createdAt":  "2024-06-02T09:59:32Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "lonix1",
                                            "createdAt":  "2024-06-06T00:09:48Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "vtomskih",
                                            "createdAt":  "2024-07-03T12:24:36Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "lvde0",
                                            "createdAt":  "2024-07-05T07:17:24Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "lvde0",
                                            "createdAt":  "2024-07-05T07:17:24Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "A-Stapleton",
                                            "createdAt":  "2024-08-19T10:46:31Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "evorios",
                                            "createdAt":  "2024-10-02T19:52:50Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "jukkahyv",
                                            "createdAt":  "2024-10-18T07:28:31Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "graham-saunders",
                                            "createdAt":  "2024-10-19T03:43:41Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "VitaliAntonov",
                                            "createdAt":  "2024-10-27T23:02:28Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "StringEpsilon",
                                            "createdAt":  "2024-10-28T15:38:22Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "boukenka",
                                            "createdAt":  "2024-11-08T12:59:24Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "stap123",
                                            "createdAt":  "2024-11-15T10:36:50Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "StevenRasmussen",
                                            "createdAt":  "2024-12-20T18:51:41Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Kiechlus",
                                            "createdAt":  "2025-01-13T14:50:27Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "Kiechlus",
                                            "createdAt":  "2025-01-13T14:50:29Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "sudoudaisuke",
                                            "createdAt":  "2025-03-13T00:34:44Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "dldldlepl",
                                            "createdAt":  "2025-03-19T07:27:08Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "LockTar",
                                            "createdAt":  "2025-03-20T13:14:43Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "MinaSaad47",
                                            "createdAt":  "2025-07-10T23:05:19Z"
                                        }
                                    ],
                          "totalCount":  96
                      },
        "updatedAt":  "2025-03-18T20:06:53Z",
        "body":  "There are a few places where we lack async support that result in people making blocking call. These are using during application startup.\r\n\r\n- `IAsyncStartupFilter` - https://github.com/dotnet/aspnetcore/issues/5897\r\n- `Startup` (`ConfigureServicesAsync`, `ConfigureAsync`)\r\n- IHostBuilder.Configure*\r\n- `IConfiguration` initial load (keyvault requires an async call)\r\n\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOov5YDA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2MjY3Mjg5NA==",
                                           "createdAt":  "2020-07-22T20:14:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BrennanConroy",
                                           "body":  "We\u0027ll put in `Next Sprint Planning` for now. When are you expecting this work to be done, 5.0 or later?",
                                           "updatedAt":  "2020-07-22T20:14:38Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2MjY3Mjk0NQ==",
                                           "createdAt":  "2020-07-22T20:14:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\nWe\u0027re moving this issue to the `Next sprint planning` milestone for future evaluation / consideration. We will evaluate the request when we are planning the work for the next milestone. To learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2020-07-22T20:14:44Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2MjY3MzQyOA==",
                                           "createdAt":  "2020-07-22T20:15:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "6.0",
                                           "updatedAt":  "2020-07-22T20:15:46Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2MzEwMzY3Mg==",
                                           "createdAt":  "2020-07-23T16:26:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCHDL3Q==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "CONFUSED",
                                                                               "user":  "taublast",
                                                                               "createdAt":  "2021-12-17T07:19:48Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2020-07-23T16:26:13Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyMTk5NDMyMg==",
                                           "createdAt":  "2020-11-04T21:51:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\nWe\u0027re moving this issue to the `Next sprint planning` milestone for future evaluation / consideration. We will evaluate the request when we are planning the work for the next milestone. To learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2020-11-04T21:51:26Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgxNTI0MTI5Mw==",
                                           "createdAt":  "2021-04-07T20:30:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BrennanConroy",
                                           "body":  "Please file some issues for the smaller work items.",
                                           "updatedAt":  "2021-04-07T20:30:08Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgyMzU5NjMzMg==",
                                           "createdAt":  "2021-04-20T20:58:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\nWe\u0027re moving this issue to the `Next sprint planning` milestone for future evaluation / consideration. Because it\u0027s not immediately obvious that this is a bug in our framework, we would like to keep this around to collect more feedback, which can later help us determine the impact of it. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2021-04-20T20:58:29Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2MTMwMjI3Nw==",
                                           "createdAt":  "2021-06-15T08:34:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODk5RpA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "avsteele",
                                                                               "createdAt":  "2022-05-18T00:19:32Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "NikoGJ",
                                                                               "createdAt":  "2022-07-18T07:22:27Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "garrym",
                                                                               "createdAt":  "2023-10-03T10:03:55Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "TheConstructor",
                                                                               "createdAt":  "2024-06-07T07:00:10Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  4
                                                         },
                                           "author":  "daiplusplus",
                                           "body":  "Surely it\u0027s better to solve this problem in `Microsoft.Extensions.DependencyInjection` instead of ASP.NET Core?\r\n\r\nI\u0027ve identified these scenarios [that currently have no _good_ solutions](https://stackoverflow.com/questions/45924027/avoiding-all-di-antipatterns-for-types-requiring-asynchronous-initialization):\r\n\r\n* Async one-off application startup initialization.\r\n  * Example: Loading program data from disk on startup via async filesystem/IO APIs _prior_ to `ConfigureServices`.\r\n* Async service factories for singleton services.\r\n* Async service factories for transient and request-scoped services.\r\n  * Example: injecting a service that needs to perform _one-off_ initialization which involves (for example) async IO (otherwise it would have to perform lazy async init on every member invocation, which then means compromising the service\u0027s public API design (i.e. cannot use properties, every method must be async even if it\u0027s a trivial getter method, etc) all because of a tiny need to perform IO to initialize.\r\n\r\nI note that approaches that you might think would work... [don\u0027t work](https://stackoverflow.com/questions/44721426/pass-data-to-startup-cs/44722643):\r\n\r\n* We cannot instantiate our own `TStartup` and pass values in to its constructor.\r\n* We cannot abuse `IConfiguration` because it only accepts `String`-properties, not arbitrary objects.\r\n* Since ASP.NET Core 3, we cannot use an early call to `ConfigureServices` to provide services for `TStartup` indirectly.\r\n  *  **UPDATE**: I just tried this now in an ASP.NET Core 3.1.10 project and it worked fine. That\u0027s weird considering all the people complaining about this being broken.\r\n\r\nI think **we should accept that `Microsoft.Extensions.DependencyInjection` needs to support `Func\u003cIServiceProvider,Task\u003cT\u003e\u003e` async service factories**. Consider that the whole point of factories _in general_ is to allow constructors to be simple by offloading complex initialization _outside_ the constructor. Given it\u0027s unavoidable that some services _will_ depend on IO, and that IO should _ostensibly_ be async, there\u0027s no way around it - at least not one that doesn\u0027t involve compromising the design of services\u0027 public API surface.\r\n\r\nI also suggest that support be added for _eagerly-executed_ service factories for Singletons which would be invoked when `services.BuildServiceProvider()` (or rather: `await services.BuildServiceProviderAsync()`) is called. I\u0027d like to see this feature specifically because I want more-or-less deterministic behaviour of my \"heavy lifting\" init code which I want to be sure runs _before_ my ASP.NET Core process transitions to starting to handle incoming requests. I note that this approach means that `ConfigureServices` remains a non-async method.\r\n\r\nFinally, being able to pass arbitrary objects and data into `TStartup` is essential. Having to resort to using `static` fields to pass data around into `ConfigureServices` feels wrong.\r\n\r\n----------------------\r\n\r\nRegarding async service factories, on a technical basis, rather than having `Task\u003cTService\u003e GetRequiredServiceAsync\u003cTService\u003e()` on `IServiceProvider`, it could use `ValueTuple` to allow for concurrent async service resolution, example below.\r\n\r\n```\r\nTask\u003cTService\u003e GetRequiredServiceAsync\u003cTService\u003e()\r\n\r\nTask\u003c(TS1, TS2)\u003e GetRequiredServicesAsync\u003cTS1, TS2\u003e()\r\n\r\nTask\u003c(TS1, TS2, TS3)\u003e GetRequiredServicesAsync\u003cTS1, TS2, TS3\u003e()\r\n\r\nTask\u003c(TS1, TS2, TS3, TS4)\u003e GetRequiredServicesAsync\u003cTS1, TS2, TS3, TS4\u003e()\r\n\r\nTask\u003c(TS1, TS2, TS3, TS4, TS5)\u003e GetRequiredServicesAsync\u003cTS1, TS2, TS3, TS4, TS5\u003e()\r\n\r\n// etc\r\n```\r\n\r\nSo a contrived `ConfigureServices` could look like this (I recognize performing OIDC token refreshes inside an async factory is a _bad example_, especially given its propensity for failure, but it fits as an illustrative example):\r\n\r\n```\r\nvoid ConfigureServices( ServiceCollection services )\r\n{\r\n    services.AddScoped\u003cIMyPreauthenticatedHttpClient\u003e( asyncFactory: async sp =\u003e {\r\n        ( IHttpContextAccessor hca, IHttpClientFactory hcf, IOidcClient oidcClient ) = await sp.GetRequiredServicesAsync\u003cIHttpContextAccessor, IHttpClientFactory, IOidcClient\u003e();\r\n        String accessToken = await hca.HttpContext.GetTokenAsync(\"access_token\");\r\n        if( /* accessTokenIsExpired */ ) accessToken = await oidcClient.RefreshTokenAsync( hca.HttpContext );\r\n        return new MyPreauthenticatedHttpClient( accessToken, hcf );\r\n    } );\r\n}\r\n```\r\n\r\nAnd for `AddSingleton`, I\u0027d like to see a `Boolean eagerFactory` parameter which would cause `implementationFactory` or `asyncFactory` to be invoked and complete inside `BuildServiceProviderAsync`.\r\n\r\n--------------\r\n\r\nTo summarize:\r\n\r\n- [ ] Perform async init in `async Task Main` and pass any object-graph into to `TStartup` or `ConfigureServices` without resorting to `static` state.\r\n- [ ] Guaranteed eager initialization of certain singleton services (async or not) prior to ASP.NET Core handling any incoming request.\r\n- [ ] Support for configuring `async` factories on `ServiceCollection`.\r\n  - [ ] Async singleton service factories\r\n  - [ ] Async scoped services factories\r\n  - [ ] Async transient services factories\r\n\r\n",
                                           "updatedAt":  "2021-06-15T11:15:23Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2MTMxODY4OQ==",
                                           "createdAt":  "2021-06-15T08:56:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODIdnxw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "daiplusplus",
                                                                               "createdAt":  "2021-06-15T10:20:41Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "dcuccia",
                                                                               "createdAt":  "2022-04-29T01:05:07Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "avsteele",
                                                                               "createdAt":  "2022-05-18T02:02:49Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "timritzer",
                                                                               "createdAt":  "2022-11-08T15:41:12Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "casperOne",
                                                                               "createdAt":  "2022-12-30T17:25:48Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "garrym",
                                                                               "createdAt":  "2023-10-03T10:03:48Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  6
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "\u003e  Perform async init in async Task Main and pass any object-graph into to TStartup or ConfigureServices without resorting to static state.\r\n\r\nThat was fixed in .NET 5 with this overload of [UseStartup](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.hosting.webhostbuilderextensions.usestartup?view=aspnetcore-5.0#Microsoft_AspNetCore_Hosting_WebHostBuilderExtensions_UseStartup__1_Microsoft_AspNetCore_Hosting_IWebHostBuilder_System_Func_Microsoft_AspNetCore_Hosting_WebHostBuilderContext___0__) which lets you create the instance. Now you can use closures and ctor arguments again.\r\n\r\nIf you need services passed into Startup then make another DI container because the container isn\u0027t mutable and that isn\u0027t going to change.\r\n\r\nAlso the [new hosting model](https://github.com/dotnet/aspnetcore/issues/30354) removes some of the Program.cs/Startup.cs boilerplate so passing state in closures is possible and in a top level async main method. It makes the whole thing easier.\r\n\r\n\u003e  Guaranteed eager initialization of certain singleton services (async or not) prior to ASP.NET Core handling any incoming request.\r\n\r\nhttps://github.com/dotnet/runtime/issues/43149 go add your +1. It\u0027s not happening for .NET 6 though. As for adding the bool the AddSingleton. That\u0027s a problem because it needs to be agreed upon by the other DI authors but if you can get consensus we can move forward with that design or we\u0027ll have to pick another one.\r\n\r\n\u003e  Support for configuring async factories on ServiceCollection.\r\n\r\nI don\u0027t know how we\u0027d support any of this in reality. The problem with async factories is that you need async constructors to inject them into. It\u0027s viral, which means GetService would need to either block or throw. It also means that async factories can have both sync and async dependencies but sync factories can\u0027t depend on async things (or it\u0027ll be a pit of failure). This means you can\u0027t constructor inject an async service. In your example above, where does `IMyPreauthenticatedHttpClient` get resolved?\r\n\r\nWe\u0027d also need `GetServiceAsync` (as you described above), but not the generic overloads, that could be an extension method you wrote. `BuildServiceProviderAsync` (as you also describe) and a new `ServiceDescriptor` that 3rd party container authors could implement.\r\n\r\nAnyhow, thanks for the write up. Those are real concrete problems that are hard to solve.\r\n\r\nPS: it would be interested to start a discussion on async DI and see what others think. I don\u0027t know how you\u0027d solve the constructor problem but maybe we will find some interesting solutions.\r\n\r\nEDIT:\r\n\r\nIn general, you\u0027d want to split your IO graph from your non IO graph because they have very different performance characteristics. You want to be doing all of the impure stuff on the outside, and not have IO scattered within the construction of your dependency graph. \r\n",
                                           "updatedAt":  "2021-06-15T09:06:25Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2MTQwNzM2Mg==",
                                           "createdAt":  "2021-06-15T11:08:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "daiplusplus",
                                           "body":  "@davidfowl  (It\u0027s 3am, what are you doing up?!)\r\n\r\n\u003e dotnet/runtime#43149 go add your +1. \r\n\r\nThanks - I\u0027ve done that now. I did search around earlier but I didn\u0027t find this issue otherwise I would have done. (Can we agree GitHub search needs improvement?)\r\n\r\n\u003e The problem with async factories is that you need async constructors to inject them into\r\n\r\nI don\u0027t think that applies. The idea being that the `IServiceProvider` has logic to await any async dependencies first, before passing them into synchronous constructors - **or** anything with an async factory is registered as `Task\u003cT\u003e` instead of as `T`.\r\n\r\n...the catch being that any consumer of `GetService` that requests a service with an async factory will (ideally) receive an exception and must call `GetServiceAsync` instead - however I note that well-designed service implementations won\u0027t be calling `GetService` directly, they should all be depending on constructor parameters. I\u0027ll concede my argument is very weak if actual real-world usage of `GetService` is higher than I expect (read: want) it to be.\r\n\r\n(In my own code, I only ever call `GetService` when I need to hand-write an `implementationFactory: sp =\u003e` method, which is rare for me - so I\u0027m assuming everyone else is like that)\r\n\r\n\u003e It\u0027s viral, which means GetService would need to either block or throw\r\n\r\nI would expect it to `throw new InvalidOperationException(\"The requested service has an async factory. Call and await GetServiceAsync instead of GetService.\")`. This wouldn\u0027t be a breaking change as it only impacts new code moving forward, as well as having limited-impact as the expectation is the end-application-developer is in control of the DI process - so if an external dependency requires a service without an async factory, but the host application unilaterally changed the registration to have an async factory then the application\u0027s developer can update their service registration to not use an async factory. Also, I note that when external dependencies do have their own second-order dependencies then they\u0027ll provide their own `IServiceCollection` extensions for registering their dependencies anyway - so things would only break if the host application decided to add their own async factories to override or replace the external library\u0027s.\r\n\r\nAnother possibility is that given that the `IHost` is very much aware of its environment, it could use _safely_ use the thread-pool to run async factories without deadlocks and block the `GetService` call until everything resolves or a timeout.\r\n\r\n\u003e  In your example above, where does `IMyPreauthenticatedHttpClient` get resolved?\r\n\r\nWhen I think about it, I think this concept could be implemented without any cooperation from `Microsoft.Extensions.DependencyInjection` by having the extension-methods proxy the async `TService` registrations for `Task\u003cTService\u003e`, and that combined with dynamically-generated types with constructors for `Task\u003cTService\u003e` could then be passed into `ActivatorUtilities`, then they\u0027d have an `AwaitAll` method used by a hypothetical async ControllerFactory, and then the rest continued as normal.\r\n\r\nSomething like this:\r\n\r\n**ServiceCollectionExtensions**:\r\n\r\n```\r\npublic static IServiceCollection AddScoped\u003cTService\u003e( this IServiceCollection services, Func\u003cIServiceProvider,Task\u003cTService\u003e\u003e asyncFactory )\r\n{\r\n    return services.AddScoped\u003cTask\u003cTService\u003e\u003e( implementationFactory: asyncFactory );\r\n}\r\n```\r\n\r\n**ConfigureServices()**\r\n\r\n```\r\n    services.AddScoped\u003cIMyPreauthenticatedHttpClient\u003e( asyncFactory: async sp =\u003e {\r\n        ( IHttpContextAccessor hca, IHttpClientFactory hcf, IOidcClient oidcClient ) = await sp.GetRequiredServicesAsync\u003cIHttpContextAccessor, IHttpClientFactory, IOidcClient\u003e();\r\n        String accessToken = await hca.HttpContext.GetTokenAsync(\"access_token\");\r\n        if( /* accessTokenIsExpired */ ) accessToken = await oidcClient.RefreshTokenAsync( hca.HttpContext );\r\n        return new MyPreauthenticatedHttpClient( accessToken, hcf );\r\n    } );\r\n```\r\n\r\n**MyController.cs**\r\n\r\n```\r\npublic class MyController : Controller\r\n{\r\n    public MyController( IMyPreauthenticatedHttpClient client, MyDbContext dbContext )\r\n    {\r\n        // ...\r\n    }\r\n}\r\n```\r\n\r\nThe ASP.NET Core request plumbing would then detect if the Controller\u0027s constructor has any dependencies with async-factories and if so await them all before returning the constructed Controller by using the dynamic type approach:\r\n\r\n```\r\npublic async Task\u003cControllerBase\u003e CreateControllerAsync( Type controllerType )\r\n{\r\n    if( UsesAnyAsyncRegisteredServices( controllerType ) )\r\n    {\r\n        Type taskHolderDynamicType = GetOrCreateCachedDynamicTypeFor( controllerType );\r\n        IAsyncTaskHolder taskHolder = (IAsyncTaskHolder)ActivatorUtilities.CreateInstance( taskHolderDynamicType );\r\n        return await taskHolder.AwaitServicesAndConstructControllerAsync();\r\n    }\r\n    else\r\n    {\r\n        // Same as right now.\r\n    }\r\n}\r\n\r\ninterface IAsyncTaskHolder\r\n{\r\n    Task\u003cControllerBase\u003e AwaitServicesAndConstructControllerAsync();\r\n}\r\n```\r\n\r\nWhere, in my `MyController`\u0027s case, the dynamicly-defined type would be something like:\r\n\r\n```\r\n// This class created dynamically by ASP.NET for each concrete Controller class with constructor-injected dependencies with async factories.\r\npublic class MyControllerTaskHolder\r\n{\r\n    private readonlyTask\u003cIMyPreauthenticatedHttpClient\u003e clientTask;\r\n    private readonly MyDbContext db;\r\n\r\n    public MyControllerTaskHolder(\r\n        Task\u003cIMyPreauthenticatedHttpClient\u003e client,\r\n        MyDbContext db // \u003c-- doesn\u0027t have an async factory, so accept it directly.\r\n    )\r\n    {\r\n        this.clientTask = clientTask;\r\n        this.db = db;\r\n    }\r\n\r\n    public async Task\u003cControllerBase\u003e AwaitServicesAndConstructControllerAsync()\r\n    {\r\n        await Task.WhenAll( this.clientTask, /* any other tasks */ );\r\n        return new MyController( this.clientTask.Result, this.db, etc )\r\n    }\r\n}\r\n```\r\n\r\n\r\n",
                                           "updatedAt":  "2021-06-15T11:14:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde849fsit",
                                           "createdAt":  "2022-02-07T17:20:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODI7wUA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "MV10",
                                                                               "createdAt":  "2022-02-07T20:32:38Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "avsteele",
                                                                               "createdAt":  "2022-05-18T02:03:34Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "szaboopeeter",
                                                                               "createdAt":  "2022-09-01T09:53:03Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "pwhe23",
                                                                               "createdAt":  "2023-05-30T17:15:43Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "garrym",
                                                                               "createdAt":  "2023-10-03T10:04:36Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "MehdiSaeedifar",
                                                                               "createdAt":  "2023-10-07T08:49:39Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  6
                                                         },
                                           "author":  "soenneker",
                                           "body":  "I\u0027m definitely looking forward to this. Essentially everything underlying the application startup has or is moving to async, and making the startup path that way would improve the fluidity. Things like initializing a Service Bus listener, or connecting to KeyVault can\u0027t even be done synchronously.\r\n\r\nHoping this gets in .NET 7",
                                           "updatedAt":  "2022-02-07T17:20:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde849f1AK",
                                           "createdAt":  "2022-02-07T17:58:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC8v7zg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "EYES",
                                                                               "user":  "loic-sharma",
                                                                               "createdAt":  "2022-02-07T18:10:57Z"
                                                                           },
                                                                           {
                                                                               "content":  "EYES",
                                                                               "user":  "pwhe23",
                                                                               "createdAt":  "2023-05-30T17:16:41Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "It\u0027s not happening in .NET 7. I\u0027m not sure its ever going to happen actually. I haven\u0027t seen or thought of any feasible proposal as yet.",
                                           "updatedAt":  "2022-02-07T17:58:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde849f348",
                                           "createdAt":  "2022-02-07T18:10:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCNce8g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "EYES",
                                                                               "user":  "daiplusplus",
                                                                               "createdAt":  "2022-02-07T18:24:21Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "loic-sharma",
                                           "body":  "[David mentioned](https://github.com/dotnet/aspnetcore/issues/24142#issuecomment-861318689) that we need to inject async factories into constructors, thereby requiring async constructors. Why do we need to inject async factories?\r\n\r\n[Jehoel suggested](https://github.com/dotnet/aspnetcore/issues/24142#issuecomment-861407362) making the `IServiceProvider` await the async factories and then passing the awaited service to sync constructors - would that approach not work?\r\n",
                                           "updatedAt":  "2022-02-07T18:20:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde849-NB9",
                                           "createdAt":  "2022-02-15T00:29:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2022-02-15T00:29:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde849-c5u",
                                           "createdAt":  "2022-02-15T02:21:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "@loic-sharma yes, it would mean you could never use these types of services in places where you can already inject things today (namely constructors). You would be forced into the service locator pattern whenever you wanted to use one of these services. I think that defeats one of the purposes of DI.\r\n\r\nThat said, this is about async startup in ASP.NET Core, async DI is a part of it but not the only part.",
                                           "updatedAt":  "2022-02-15T02:21:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde853VI9R",
                                           "createdAt":  "2024-03-16T16:02:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "NickCraver",
                                           "body":  "@davidfowl I\u0027ve gotten many requests for this, increasing since the move to managed identity which is something that has to be fetched to pass into many services during startup, but unsure how much of that feedback makes its way all the way back to the team. I think the need for some of this support is escalating and would love to help justification here from the prod services that have pinged me directly if it helps.\n\nVery specifically, it\u0027s `Configure()`/`ConfigureServices()` that\u0027s the most problematic, and where most people find themselves doing sync-over-async and usually in ways that could shave quite a bit off remote connections like Redis startup and unblocking the app sooner if they had a cleaner approach (not that they can\u0027t do it messily now, but a lot of pings haven\u0027t done so...so they end up with a wait for identity, then another blocking wait to start remote connections sub-optimally).\n\nI\u0027d be arguing not for `GetServiceAsync()`, only that even if `ConfigureServices()` was, as an entire unit, an internally-awaited `.ConfigureServicesAsync()` path like it is today but allowed and encouraged users down the right path of async-for-async-things inside it in their config, then at least it makes startup much easier to cleanly do correctly and optimally without needed to fully support all the downstream async service support.\n\nHas some middle-ground like this to solve a lot of the pain for this area been considered? Or does that back us into a corner?",
                                           "updatedAt":  "2024-03-16T16:02:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde853VfET",
                                           "createdAt":  "2024-03-16T20:30:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODa0upw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "NickCraver",
                                                                               "createdAt":  "2024-03-16T20:36:47Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "Move to the new pattern where  the statup class is explicitly instantiated by user code and `Configure` and `ConfigureServices` are can be explicitly called which makes it easier to make them async.\r\n",
                                           "updatedAt":  "2024-03-16T20:31:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde853VfS1",
                                           "createdAt":  "2024-03-16T20:33:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEAvHyA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "NickCraver",
                                                                               "createdAt":  "2024-03-16T20:36:42Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "loic-sharma",
                                                                               "createdAt":  "2024-03-16T23:19:05Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "HamsterExAstris",
                                                                               "createdAt":  "2025-01-01T16:24:56Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "\r\n```C#\r\nvar builder = WebApplication.CreateBuilder(args);\r\n\r\nvar startup = new Startup(builder.Configuration);\r\n\r\nawait startup.ConfigureServicesAsync(builder.Services);\r\n\r\nvar app = builder.Build();\r\n\r\nawait startup.ConfigureAsync(app);\r\n\r\napp.Run();\r\n```\r\n\r\nThis doesn\u0027t solve the `IStartupFilter` problem, but it gives more control over how these methods are called.",
                                           "updatedAt":  "2024-03-16T20:33:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde853VfZx",
                                           "createdAt":  "2024-03-16T20:35:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEMimug==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "loic-sharma",
                                                                               "createdAt":  "2024-03-16T23:21:28Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "udlose",
                                                                               "createdAt":  "2024-04-12T18:28:13Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "MarioGruda",
                                                                               "createdAt":  "2024-04-24T15:07:10Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "HofmeisterAn",
                                                                               "createdAt":  "2024-05-08T17:07:38Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "yaakov-h",
                                                                               "createdAt":  "2024-06-06T01:59:11Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "romfir",
                                                                               "createdAt":  "2024-08-20T20:19:25Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "nesterenko-kv",
                                                                               "createdAt":  "2025-04-02T11:32:07Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  7
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "Those interested in async DI, I wrote a proposal here https://github.com/dotnet/runtime/issues/65656",
                                           "updatedAt":  "2024-03-16T20:35:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde859Or6F",
                                           "createdAt":  "2024-05-08T16:49:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEKbloA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "StevenRasmussen",
                                                                               "createdAt":  "2025-03-18T20:31:50Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "mrudat",
                                           "body":  "I think that you want to be able to request _both_ `TService` and `Task\u003cTService\u003e` for _all_ services, regardless of how they\u0027re created/registered.\n\nIf your class doesn\u0027t do any async initialisation, you don\u0027t need to care. If you do, you can request a Task for everything (regardless of how it was created) and only await it when required.\n\nThat means when or if a dependency changes to async construction, your code doesn\u0027t need to change to take advantage of it.\n\nFor example, if you don\u0027t have any async initialisation in the second class, both classes have the same behaviour.\n\n```cs\npublic class SyncConstructor(TService service) {}\n\npublic class AsyncConstructor{\n    private AsyncConstructor(TService service) {}\n\n    [AsyncConstructor]\n    public static async Task\u003cAsyncConstructor\u003e Factory(Task\u003cTService service\u003e) {\n        // async stuff here...\n        return new AsyncConstructor(await service);\n    }\n}\n```\n\nOf course, it only makes sense to wait for _potentially_ async objects.",
                                           "updatedAt":  "2024-05-08T17:20:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86aN9jN",
                                           "createdAt":  "2025-01-13T15:04:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEMil5Q==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "MV10",
                                                                               "createdAt":  "2025-03-19T09:21:42Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "nesterenko-kv",
                                                                               "createdAt":  "2025-04-02T11:30:20Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "Kiechlus",
                                           "body":  "Any news on this `ConfigureServicesAsync`, is this supported already? \n\nOur use case: We have to fetch a key from the key vault to register client-side encrypted `BlobServiceClient` during Startup. Because of this, we currently have to allow `options.AllowSynchronousIO = true;` for Kestrel explicitely .\n\n\n",
                                           "updatedAt":  "2025-01-13T15:04:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86i_lgM",
                                           "createdAt":  "2025-03-18T20:06:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEW2e3A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "MV10",
                                                                               "createdAt":  "2025-03-19T09:21:47Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "vborovikov",
                                                                               "createdAt":  "2025-06-17T06:46:15Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "LockTar",
                                           "body":  "I have multiple reasons to call async functionality during startup. In example:\n\n- Get keyvault secrets\n- Check if tables in a storage account exist (`await tableServiceClient.CreateTableIfNotExistsAsync(tableName);`)\n- Initialize some data in tables",
                                           "updatedAt":  "2025-03-18T20:06:51Z"
                                       }
                                   ],
                         "totalCount":  22
                     },
        "title":  "Improve async support on the startup path",
        "labels":  [
                       "Needs: Design",
                       "enhancement",
                       "affected-most",
                       "severity-major",
                       "area-hosting",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/24510",
        "createdAt":  "2020-08-02T08:07:42Z",
        "number":  24510,
        "author":  "davidfowl",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-02-14T20:24:05Z",
        "body":  "This is an extremely heavy dependency for a very rarely used feature that isn\u0027t on by default. It pulls in **Microsoft.DiaSymReader.Native.amd64.dll** which is 1.4MB\r\n\r\n![image](https://user-images.githubusercontent.com/95136/89118693-79935580-d45c-11ea-94b7-8befb2c57b56.png)\r\n\r\nWe should nuke this feature and let people use the developer exception page, a custom middleware, or logging to see exceptions.\r\n\r\nEDIT:\r\n\r\nThis is for startup errors, not for per request errors. Also this dependency is only required for non-portable PDBs which isn\u0027t the default and we should optimize for not having this dependency.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOSj_nPg==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2ODI0NzcwMQ==",
                                           "createdAt":  "2020-08-03T21:21:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BrennanConroy",
                                           "body":  "When?",
                                           "updatedAt":  "2020-08-03T21:21:09Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2ODI0ODA2Mg==",
                                           "createdAt":  "2020-08-03T21:22:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "6.0.0 is fine.",
                                           "updatedAt":  "2020-08-03T21:22:09Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2ODI0ODEyNw==",
                                           "createdAt":  "2020-08-03T21:22:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2020-08-03T21:22:18Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgwNTAxOTA2NA==",
                                           "createdAt":  "2021-03-23T15:54:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\nWe\u0027re moving this issue to the `Next sprint planning` milestone for future evaluation / consideration. We will evaluate the request when we are planning the work for the next milestone. To learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2021-03-23T15:54:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85KP-c-",
                                           "createdAt":  "2022-09-13T17:09:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `.NET 8 Planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2022-09-13T17:09:25Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "Remove ExceptionDetailsProvider dependency from Hosting",
        "labels":  [
                       "task",
                       "severity-nice-to-have",
                       "affected-very-few",
                       "area-hosting",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/27422",
        "createdAt":  "2020-11-02T00:06:07Z",
        "number":  27422,
        "author":  "dmitriyse",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCrd_oQ==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "meinsiedler",
                                            "createdAt":  "2022-11-15T21:09:18Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2023-06-02T03:55:59Z",
        "body":  "DotNet supports trace-context transfer through headers in the HTTP communication.\r\nBut when HTTP redirect occurs, the trace context information lost.\r\nCurrently, the W3C standard does not cover this case also, see: https://github.com/w3c/trace-context/issues/438\r\nBut there are not too big amount of possible options.\r\n\r\nUntil HttpClients will start to support trace context headers preserving during HTTP redirects (which might never happen), query string can be used as a transport.\r\n1) W3C should standardize the query string parameter names, for example (they should not interfere with app-specific names and be short):\r\n  * _tc_tid\r\n  * _tc_pid\r\n  * etc\r\n\r\n2) Asp.Net Core middleware that currently responsible for the Activity creation should also take into account the query string (not only headers)\r\n3) ```Microsoft.Extensions.Http``` library should be improved to instrument ```HttpClient``` if this feature is turned on.\r\n4) Microsoft.AspNet.TelemetryCorrelation library should be extended https://github.com/aspnet/Microsoft.AspNet.TelemetryCorrelation/issues/78  \r\n5) Until W3C introduces the names for the query string parameter names they should be configurable in all the above implementations.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHONHV9Zw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyMTk4NDkxMQ==",
                                           "createdAt":  "2020-11-04T21:28:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotalik",
                                           "body":  "cc @davidfowl @shirhatti ",
                                           "updatedAt":  "2020-11-04T21:28:43Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyMzMyNzcxNw==",
                                           "createdAt":  "2020-11-06T22:26:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BrennanConroy",
                                           "body":  "Triage: We will not support the query-string feature at this time.\r\n\r\nWe should verify our redirect behavior on the client though.",
                                           "updatedAt":  "2020-11-09T22:28:09Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyNDMxNjI2Mg==",
                                           "createdAt":  "2020-11-09T22:28:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\nWe\u0027re moving this issue to the `Next sprint planning` milestone for future evaluation / consideration. We will evaluate the request when we are planning the work for the next milestone. To learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2020-11-09T22:28:00Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg4MDExNTA0Nw==",
                                           "createdAt":  "2021-07-14T18:26:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2021-07-14T18:26:55Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "Add support for HTTP trace context transfer during a http redirect",
        "labels":  [
                       "enhancement",
                       "feature-httpclientfactory",
                       "severity-minor",
                       "affected-very-few",
                       "area-hosting",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/27465",
        "createdAt":  "2020-11-02T22:31:53Z",
        "number":  27465,
        "author":  "BrennanConroy",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCvqydA==",
                          "nodes":  [
                                        {
                                            "content":  "ROCKET",
                                            "user":  "TailyFair",
                                            "createdAt":  "2021-07-10T13:11:02Z"
                                        },
                                        {
                                            "content":  "ROCKET",
                                            "user":  "idilshod87",
                                            "createdAt":  "2021-11-26T05:09:15Z"
                                        },
                                        {
                                            "content":  "ROCKET",
                                            "user":  "yavuzcosar",
                                            "createdAt":  "2022-02-05T21:44:07Z"
                                        },
                                        {
                                            "content":  "ROCKET",
                                            "user":  "vgb1993",
                                            "createdAt":  "2022-08-12T14:37:20Z"
                                        },
                                        {
                                            "content":  "ROCKET",
                                            "user":  "WeihanLi",
                                            "createdAt":  "2022-08-12T14:56:49Z"
                                        },
                                        {
                                            "content":  "ROCKET",
                                            "user":  "xshaheen",
                                            "createdAt":  "2022-08-19T14:22:16Z"
                                        },
                                        {
                                            "content":  "ROCKET",
                                            "user":  "MarioGruda",
                                            "createdAt":  "2022-11-15T14:35:41Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "MarioGruda",
                                            "createdAt":  "2022-11-15T17:57:28Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Reveon",
                                            "createdAt":  "2023-03-09T09:26:43Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "divyeshio",
                                            "createdAt":  "2023-04-24T07:06:27Z"
                                        }
                                    ],
                          "totalCount":  10
                      },
        "updatedAt":  "2024-01-05T00:58:01Z",
        "body":  "Host multiple apps behind a single server.\r\n* Host name routing?\r\n* New UseStartup API?\r\n* Auth will be fun!\r\n* Different config/config sections",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOSE_GRw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyMDc2MTc2OA==",
                                           "createdAt":  "2020-11-02T22:31:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\nWe\u0027re moving this issue to the `Next sprint planning` milestone for future evaluation / consideration. We will evaluate the request when we are planning the work for the next milestone. To learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2020-11-02T22:31:54Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyMTIwNTU3NA==",
                                           "createdAt":  "2020-11-03T15:38:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "_Host name routing?_\r\n\r\nToo simple. Some folks do it via a property in a cookie, some via parameters. Rather than just host header, have a tenant resolver function/delegate that people can implement how they like.",
                                           "updatedAt":  "2020-11-03T15:38:41Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyNDA1MDM1Nw==",
                                           "createdAt":  "2020-11-09T14:32:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "blowdart",
                                           "body":  "Also, identity will need a lot of work (I had an email this morning, hi Carl!), if the expectation is to share one database per tenant.",
                                           "updatedAt":  "2020-11-09T14:32:48Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyNDc3NDcyMA==",
                                           "createdAt":  "2020-11-10T15:26:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brockallen",
                                           "body":  "Isn\u0027t the real solution to make the DI system more flexible?",
                                           "updatedAt":  "2020-11-10T15:26:30Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyNzE3NTExNg==",
                                           "createdAt":  "2020-11-14T09:37:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCHphSQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "davidfowl",
                                                                               "createdAt":  "2021-01-21T03:16:23Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "xshaheen",
                                                                               "createdAt":  "2021-12-22T16:57:04Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "AndrewTriesToCode",
                                           "body":  "I have a library that handles this pretty well if it offers any inspiration. It\u0027s currently being reviewed by the .NET Foundation.\r\n \r\nIt does:\r\nPer-tenant authentication,\r\nper-tenant options via DI (via a custom options factory)\r\nshared EF Core database, separate db per tenant, or hybrid (and Identity support)\r\nand a bunch of \"strategies\" like host/route/header resolution.\r\n\r\nI don\u0027t do per-tenant configuration sections because I consider that to be more \"app\" than \"tenant\" related. The philosophy is geared more toward using per-tenant options for tenant specific behavior.\r\n\r\n@brockallen as an aside I get asked all the time about plugging this into IdentityServer. I\u0027ve had some limited success so far but have more things to figure out\r\n\r\nhttps://github.com/Finbuckle/Finbuckle.MultiTenant\r\n",
                                           "updatedAt":  "2020-11-14T10:47:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde840kemg",
                                           "createdAt":  "2021-07-18T00:18:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2021-07-18T00:18:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde841AOnm",
                                           "createdAt":  "2021-07-29T15:40:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hikalkan",
                                           "body":  "ABP Framework provides a complete multi-tenancy infrastructure. It handles authentication, data isolation and much more. I suggest you to check it: https://docs.abp.io/en/abp/latest/Multi-Tenancy",
                                           "updatedAt":  "2021-07-29T15:40:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde847veqm",
                                           "createdAt":  "2021-12-28T22:13:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vigouredelaruse",
                                           "body":  "currently asp.net core supports a co-operative multi-tenancy and this thread seems to be about picking specific aspects of co-operative multi-tenancy that grate on individual posters\u0027 nerves\r\n\r\nco-operative multitasking on a single core has been factored out of the equation, if you get my particular drift\r\n\r\ni want to keep the bot interested in the fact that single tenancy kinda died out with lotus-123 and now a multi-tenant framework developer building on asp.net core can do nothing about the fact that any plugin developer can inject the server\u0027s configuration secrets into a view, and deface one\u0027s world, without making a drastic implementation-specific arrangement around configuration sources https://docs.microsoft.com/en-us/dotnet/core/extensions/custom-configuration-provider\r\n\r\nthe situation is almost begging for parallel development of a multitenant asp.net core on a forked repo of the associated .net core build assets",
                                           "updatedAt":  "2021-12-28T22:22:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85IT8ZH",
                                           "createdAt":  "2022-08-12T14:39:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vgb1993",
                                           "body":  "I would also like to see more work in this direction, as we also have a multitenant app at work",
                                           "updatedAt":  "2022-08-12T14:39:05Z"
                                       }
                                   ],
                         "totalCount":  9
                     },
        "title":  "Application multi-tenancy",
        "labels":  [
                       "Needs: Design",
                       "enhancement",
                       "severity-major",
                       "affected-medium",
                       "multi-tenancy",
                       "area-hosting",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/28937",
        "createdAt":  "2020-12-30T19:08:54Z",
        "number":  28937,
        "author":  "Xerillio",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODDcojg==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "gregorylyons",
                                            "createdAt":  "2021-02-18T04:43:16Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "matt-configo",
                                            "createdAt":  "2022-05-26T07:04:42Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "davidliang2008",
                                            "createdAt":  "2024-05-02T20:31:36Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "danielebanovaz",
                                            "createdAt":  "2024-07-19T12:15:44Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "aetos382",
                                            "createdAt":  "2024-07-20T01:29:44Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "brental",
                                            "createdAt":  "2024-08-14T11:59:58Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "nug-nugent",
                                            "createdAt":  "2025-06-09T07:30:31Z"
                                        }
                                    ],
                          "totalCount":  7
                      },
        "updatedAt":  "2024-02-14T20:24:07Z",
        "body":  "\u003c!--\r\n\r\nMore information on our issue management policies can be found here: https://aka.ms/aspnet/issue-policies\r\n\r\n--\u003e\r\n\r\n### Is your feature request related to a problem? Please describe.\r\nI found that I had to manually check for the appropriate environment name(s) to enable [user secrets](https://docs.microsoft.com/en-us/aspnet/core/security/app-secrets) in my application. ASP.NET Core only enables user secrets if the currently running environment is named \"Development\" and therefore require custom implementation to enable if your team does not use the same naming conventions as has been predefined by ASP.NET Core.\r\n\r\nThe code snippet in question: https://github.com/dotnet/aspnetcore/blob/d7187b01e87761c778a5c406802e8bfd9451f3cf/src/DefaultBuilder/src/WebHost.cs#L176-L183\r\n\r\n`IsDevelopment` and its sibling extension methods are used internally in ASP.NET Core to enable/disable certain features when running the application in different environments. I suspect some 3rd party libraries do so likewise (although I have no experience with such). This helps a developer setting up their local environment for better debugging capabilities etc., while avoiding enabling those same features in production environments as they may be unsafe/unfit for a production application.\r\n\r\nPersonally, I would consider a development environment to not only be the developers local machine but could just as well be a server-hosted application shared by multiple developers where the application is deployed prior to a \"test\" environment. As such two environments may (and very likely will) use a different configuration setup while still enabling certain debugging features, having only one name for what constitutes a \"development\" environment limits or completely disables the help provided by ASP.NET Core out of the box.\r\n\r\n### Describe the solution you\u0027d like\r\nTo combat the issue described above I would suggest allowing the developer to define when `IsDevelopment` etc. should return `true`. This could be done e.g. through a configuration variable similar to `ASPNETCORE_ENVIRONMENT` (say `ASPNETCORE_DEVELOPMENT_ENVIRONMENTS`) that takes a comma-separated list of names considered to be a \"development\" environment. Alternatively, instead of implementing `IsDevelopment` etc. as extension methods they could be implemented such that they\u0027re overridable.\r\n\r\n### Additional context\r\nI noticed #26539 has already brought this up but was closed. However, I believe the feature request deserves a bit more consideration with some additional context. Hopefully I provided that.\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOSyw8gA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc1Mjc3NjAxNg==",
                                           "createdAt":  "2020-12-30T22:21:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBbMkaQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Xerillio",
                                                                               "createdAt":  "2020-12-31T09:43:58Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "We\u0027ve avoided using `IsDevelopment` in most framework code exactly because of issues like this. `IsDevelopment` is primarily used in app/template code so you can customize the environment logic.\r\n\r\nRather than trying to fix `IsDevelopment`, we should fix these sites where it\u0027s used to be based on more targeted external input and have the IsDevelopment check moved back to app code like Program.CreateHostBuilder.",
                                           "updatedAt":  "2020-12-30T22:21:45Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc1NDI2NTI0Ng==",
                                           "createdAt":  "2021-01-04T22:37:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BrennanConroy",
                                           "body":  "We need to change this in Runtime too for generic host.\r\n\r\nAnd look at other spots that we use this pattern.",
                                           "updatedAt":  "2021-01-04T22:37:12Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc1NDI2NTQzNA==",
                                           "createdAt":  "2021-01-04T22:37:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2021-01-04T22:37:51Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc1NzAyNDI2MA==",
                                           "createdAt":  "2021-01-08T22:11:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODgbaSQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "davidliang2008",
                                                                               "createdAt":  "2024-05-02T20:32:26Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "shirhatti",
                                           "body":  "There are currently a few places where we use `IsDevelopment()` in framework code, where isn\u0027t an alternative configuration (via options) to customize the behavior.\r\n\r\nWe need to address all these cases:\r\n- [ ] [UserSecrets](https://github.com/dotnet/aspnetcore/blob/master/src/DefaultBuilder/src/WebHost.cs#L176-L183)\r\n- [ ] [StaticWebAssets](https://github.com/dotnet/aspnetcore/blob/d7187b01e87761c778a5c406802e8bfd9451f3cf/src/DefaultBuilder/src/WebHost.cs#L219-L222)\r\n- [ ] SPA services?\r\n- [ ] UserSecrets in [Generic host](https://github.com/dotnet/runtime/blob/master/src/libraries/Microsoft.Extensions.Hosting/src/Host.cs#L79-L86)",
                                           "updatedAt":  "2021-01-08T22:11:07Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc1NzAzMzQyNw==",
                                           "createdAt":  "2021-01-08T22:38:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BrennanConroy",
                                           "body":  "Triage: Reason we\u0027d want options on the host for these instead of telling users to add the config themselves is because of config ordering. Today we add config in a specific order as last one wins, if users added it, it would be last and have unexpected behavior.",
                                           "updatedAt":  "2021-01-08T22:38:59Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc1NzAzMzkwOA==",
                                           "createdAt":  "2021-01-08T22:40:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2021-01-08T22:40:32Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgxMzA4NDY3Ng==",
                                           "createdAt":  "2021-04-04T19:09:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "~We\u0027re not going to be doing this. Also this needs to be done at the hosting layer (moved to dotnet/runtime), if we do choose to reconsider in the future.~\r\n\r\nSeems like we need to design an API for the pieces we want to do.",
                                           "updatedAt":  "2021-04-06T04:41:15Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgxMzgxNjA3Ng==",
                                           "createdAt":  "2021-04-06T04:41:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\nWe\u0027re moving this issue to the `Next sprint planning` milestone for future evaluation / consideration. Because it\u0027s not immediately obvious that this is a bug in our framework, we would like to keep this around to collect more feedback, which can later help us determine the impact of it. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2021-04-06T04:41:34Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg0ODY4NjgxMA==",
                                           "createdAt":  "2021-05-26T11:20:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODvp6Sg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "brental",
                                                                               "createdAt":  "2024-08-26T08:06:49Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "javiercn",
                                           "body":  "I think this depends on a case by case basis. There are things in `WebHostBuilder.CreateDefault` that will have an impact on ordering, and maybe those things can be tweaked via `environment variables`. Something like `ASPNECORE_DEV=true` or similar to trigger `Dev/Local` setup/behaviors on the host setup as opposed to `remote/publish/staging` setups/behaviors and that allows folks to use whatever `ASPNETCORE_ENVIRONMENT` they want.\r\n\r\nIn general that normally is the biggest distinction. There are features that we build like `UserSecrets` or `StaticWebAssets` that we don\u0027t want used outside of a `local/dev` context, and the best way we\u0027ve had to do that has been for `IsDevelopment`.\r\n\r\nI think this works for the majority of our customers and we should keep it as it is. At most, we should make sure customers using different environment conventions can achieve a similar experience, however I don\u0027t think that necessarily must come without work on their part to replicate some of our opinions.",
                                           "updatedAt":  "2021-05-26T11:20:36Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1MzM1NDU3OA==",
                                           "createdAt":  "2021-06-02T20:17:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Review: Docker https dev certs: https://github.com/dotnet/aspnetcore/issues/33220",
                                           "updatedAt":  "2021-06-02T20:17:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde842FwYj",
                                           "createdAt":  "2021-08-27T21:11:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2021-08-27T21:11:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85LLDyA",
                                           "createdAt":  "2022-09-28T16:52:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `.NET 8 Planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2022-09-28T16:52:55Z"
                                       }
                                   ],
                         "totalCount":  12
                     },
        "title":  "Framework code should not depend on IsDevelopment",
        "labels":  [
                       "bug",
                       "enhancement",
                       "api-suggestion",
                       "area-hosting",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/30267",
        "createdAt":  "2021-02-18T15:28:05Z",
        "number":  30267,
        "author":  "apacherose",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-06-02T03:15:03Z",
        "body":  "Hello\r\n\r\nThe following behavior happens **only when application is hosted in OutOfProcess** model:\r\n\r\nWe use the UseDefaultServiceProvider extension for the hostBuilder to set Service provider validation based on environment.\r\nBasically, host building looks like this:\r\n\r\n```\r\nprivate static IHostBuilder CreateWebHostBuilder(string[] args)\r\n        {\r\n            return Host.CreateDefaultBuilder(args)\r\n                .ConfigureWebHostDefaults(webBuilder =\u003e\r\n                {\r\n                    webBuilder.UseStartup\u003cStartup\u003e();\r\n                })\r\n                .UseSerilog()\r\n                .UseDefaultServiceProvider((context, options) =\u003e\r\n                {\r\n                    if (\r\n                        context.HostingEnvironment.IsDevelopmentLocal() ||\r\n                        context.HostingEnvironment.IsDevelopment())\r\n                    {\r\n                        options.ValidateScopes = true;\r\n                        options.ValidateOnBuild = true;\r\n                    }\r\n                })\r\n                .ConfigureAppConfiguration(builder =\u003e\r\n                {   \r\n                    //code omitted \r\n                });\r\n        }\r\n```\r\n\r\nIf there is an exception while building the service provider in ConfigureServices(IServiceCollection) in Startup, it gets hidden because after that the runtime still calls the action provided to UseDefaultServiceProvider  as if there was no exception.\r\n\r\nAs a result I get only one rich AggregateException containing multiple exceptions from the validation \"Error while validating the service descriptor ... Unable to resolve service for type ...\". Yes, the service provider cannot resolve this thing, but I want to see the initial exception that caused the normal build to be interrupted.\r\n\r\nIf the application is hosted with InProcess model the action for UseDefaultServiceProvider  is never called and I can see the concrete exception.\r\n\r\nSetup:\r\n\r\nTarget framework: **.netcore 3.1**\r\nVisual Studio 2019 Version 16.8.4\r\n\r\n.NET SDK (reflecting any global.json):\r\n Version:   5.0.102\r\n Commit:    71365b4d42\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.14393\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.102\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.2\r\n  Commit:  cb5f173b96\r\n\r\nThank you\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOLrYbjA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc4MTg1OTE3Nw==",
                                           "createdAt":  "2021-02-19T06:26:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "Unrelated: Why aren\u0027t you using the in process model?",
                                           "updatedAt":  "2021-02-19T06:26:09Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc4MTkwNDA4Ng==",
                                           "createdAt":  "2021-02-19T07:59:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "apacherose",
                                           "body":  "When using inprocess model, if there is error in configuration (or for example missing appsettings.json file) - the process shuts down and it cannot be retried if the error is gone. When in out of process, each new request tries to start the process and if the error is gone (our config is read from db) - the process will be started. So we\u0027ve taken the latter solution.\r\nYet, we can move to inprocess, just wanted to share that the described behavior in the issue above seems wrong for me.",
                                           "updatedAt":  "2021-02-19T07:59:06Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc4MjI0MDg5Ng==",
                                           "createdAt":  "2021-02-19T18:02:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "Got it. @jkotalik did we enable this scenario for inprocess yet?",
                                           "updatedAt":  "2021-02-19T18:02:37Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc4MjI3NDAxMg==",
                                           "createdAt":  "2021-02-19T18:56:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotalik",
                                           "body":  "We are working to enable that for all startup failures, see https://github.com/dotnet/aspnetcore/issues/29858. That would make it so startup failures would result in recycle.",
                                           "updatedAt":  "2021-02-19T18:56:55Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc4MjM3NjE0Nw==",
                                           "createdAt":  "2021-02-19T21:42:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "IIS OutOfProcess enables the host setting `CaptureStartupErrors` so it can capture exceptions, still start Kestrel, and render a visual error message.\r\nhttps://github.com/dotnet/aspnetcore/blob/c925f99cddac0df90ed0bc4a07ecda6b054a0b02/src/Servers/IIS/IISIntegration/src/WebHostBuilderIISExtensions.cs#L83\r\n\r\nUnfortunately it looks like UseDefaultServiceProvider wasn\u0027t tested together with CaptureStartupErrors. We\u0027ll have to add some tests and see how to best report errors in this situation.\r\n\r\nMitigation: you can turn CaptureStartupErrors back off after the call to UseStartup.\r\n\r\nFor triage: I recommend backlog, help-wanted.",
                                           "updatedAt":  "2021-02-19T21:49:23Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc4MzY4NjU0MA==",
                                           "createdAt":  "2021-02-22T21:27:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2021-02-22T21:27:46Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "Service provider validation hides actual exception while adding services in ConfigureServices",
        "labels":  [
                       "feature-iis",
                       "area-hosting",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/34914",
        "createdAt":  "2021-08-01T02:05:00Z",
        "number":  34914,
        "author":  "davidfowl",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCrG3pw==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "MichelJansson",
                                            "createdAt":  "2022-02-18T01:42:53Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "chriskuech",
                                            "createdAt":  "2022-03-24T21:23:51Z"
                                        },
                                        {
                                            "content":  "EYES",
                                            "user":  "msschl",
                                            "createdAt":  "2022-06-03T21:24:15Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "laggage",
                                            "createdAt":  "2022-06-14T07:43:29Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Smolsada",
                                            "createdAt":  "2022-10-21T14:19:56Z"
                                        }
                                    ],
                          "totalCount":  5
                      },
        "updatedAt":  "2025-02-05T16:21:49Z",
        "body":  "### Describe the bug\r\n\r\nThe generic web host always overrides the application name and sets it as the Startup type\u0027s assembly or the configure delegate\u0027s container type\u0027s assembly name. This means its impossible to override it from the outside. This may not be a big deal generally but with the `WebApplicationBuilder` and the `WebApplicationFactory\u003cTEntryPoint\u003e`, we\u0027re currently using the command line args to specify any host configuration. This generally works for everything except the application name.\r\n\r\n### To Reproduce\r\n\r\n```C#\r\nvar host = Host.CreateDefaultBuilder(new[]{ \"--applicationName=RandomName\" })\r\n       .ConfigureWebHostDefaults(builder =\u003e builder.Configure(app =\u003e {}))\r\n       .Build();\r\n\r\nAssert.Equal(\"RandomName\", host.Services.GetService\u003cIHostEnvironment\u003e().ApplicationName);\r\n```\r\n\r\nThis test will fail if the project name isn\u0027t RandomName.\r\n\r\ncc @halter73 ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOOhpNWg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde841IIkX",
                                           "createdAt":  "2021-08-02T20:52:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/master/docs/TriageProcess.md).",
                                           "updatedAt":  "2021-08-02T20:52:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde8444RdQ",
                                           "createdAt":  "2021-10-28T22:35:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Related: https://github.com/dotnet/aspnetcore/issues/11085",
                                           "updatedAt":  "2021-10-28T22:35:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde846Gk1a",
                                           "createdAt":  "2021-11-21T11:52:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "theo-albers",
                                           "body":  "Last week I spent some time preparing our .NET 5 solution for .NET 6. We have 3 API projects with similar base setup like Application Insights, Azure App Configuration, Masstransit, Azure BLOB Storage, OpenId Connect, Logging. To eliminate Sonar complaints about duplicate code, we moved some setup to a base class in a library project. In the original .NET 5 setup I placed the code in a StartUp class in the API projects. \r\n\r\nWhen I prepared the code for .NET 6, I started by eliminating the StartUp class: I put everyting in a simple AppBase class. The IHost is constructed in the base class and we have some virtual members which can be overridden in the API projects. One project uses Razor views, since that\u0027s the Identity project. The other API projects are pure Controller projects.\r\n\r\nWhen swapping out the StartUp class I ran into the first problem: 404 on every REST call. Ah, since the AddControllers class is now in the library project, the controllers are no longer discovered. The solution was to place this snippet in the library project, under the assumption that the extended App class would be in the API project:\r\n```csharp\r\nservices.AddControllers().AddApplicationPart(GetType().Assembly);\r\n```\r\n\r\nNow I\u0027m able to run the solution and everything works as expected. I deploy the solution to Azure and try to login. Problem: 404 on every Razor page. When I look at the logs via Kudu in Azure at the Linux App Service, I see an exception:\r\n```\r\nMicrosoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware[1]\r\nAn unhandled exception has occurred while executing the request.\r\nSystem.InvalidOperationException: The default Identity UI layout requires a partial view \u0027_LoginPartial\u0027 usually located at \u0027/Pages/_LoginPartial\u0027 or at \u0027/Views/Shared/_LoginPartial\u0027 to work.\r\n```\r\n\r\nThis error is misleading, but put me on the right track: I have no _LoginPartial in my code, so there must be something wrong with views. After investigating the ASP.NET 5 hostbuilder code on GitHub, I figured out what the differences were between my local environment and the production environment. Locally I have this setting in my launch settings:\r\n```json\r\n\"ASPNETCORE_HOSTINGSTARTUPASSEMBLIES\": \"Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation\"\r\n``` \r\n\r\nThe local environment finds the views, but deployed environment doesn\u0027t. I can fix this by explicitly loading the views via the following snippet:\r\n```csharp\r\n public static IMvcCoreBuilder AddControllersAndRazorViewParts(this IMvcCoreBuilder me, Type type)\r\n{\r\n    me.AddApplicationPart(type.Assembly);\r\n\r\n    // Load the *.Views.dll compiled Razor assembly which is marked via the RelatedAssemblyAttribute in the main assembly.\r\n    foreach (var relatedAssembly in RelatedAssemblyAttribute.GetRelatedAssemblies(type.Assembly, false))\r\n    {\r\n        me.AddApplicationPart(relatedAssembly);\r\n    }\r\n\r\n    return me;\r\n}\r\n```\r\nI invoke this in my AppBase class. \r\n\r\nI can\u0027t be the only one with this problem, so I search and find some discussions around the ApplicationName being used by AddMvcCore when it adds the PartManager. When I check out the dotnet repor I see it implicitly loads the parts from the assembly inferred by the ApplicationName. I found more issues related to this stuff:\r\n- https://github.com/dotnet/aspnetcore/issues/34914\r\n- https://github.com/aspnet/Hosting/issues/1179\r\n\r\nIt\u0027s only *now*, after having hit this problem, I find my problem mentioned the documentation and things start making sense:\r\n\r\nhttps://docs.microsoft.com/en-us/aspnet/core/release-notes/aspnetcore-6.0?view=aspnetcore-6.0\r\n\"...\r\n_Razor compiler no longer produces a separate Views assembly_\r\n...\"\r\n\r\nFinally I run into this gist https://gist.github.com/davidfowl/0e0372c3c1d895c3ce195ba983b1e03d\r\n\r\n\"...\r\n_The application name always defaults to the entry point assembly\u0027s name Assembly.GetEntryAssembly().GetName().FullName. When using the WebApplicationBuilder in a library, you will need to explicitly change the application name to the library\u0027s assembly to allow MVC\u0027s application part discovery to work (finding controllers, views etc) (see the Cheatsheet for instructions on how to do this)._\r\n...\"\r\n\r\nSo I should set the ApplicationName:\r\n```csharp\r\n    webBuilder..UseSetting(WebHostDefaults.ApplicationKey, typeof(Program).Assembly.FullName);\r\n```\r\n\r\nMmm... but what does \" something arbitrary mean\" in https://github.com/aspnet/Mvc/issues/6685:\r\n\"...\r\n_The doc does needs an update. We should remove that configuring the application name to something arbitrary._\r\n...\"\r\n\r\nOK, so it has to be an assembly name. \r\n\r\nLong story short: when removing the StartUp class in ASP.NET 5 to prepare for .NET 6 you hit runtime issues when you still use .NET 5. The documentation is only useful, after you solved the problems. On top of that .NET 6 has an optimization to no longer place Razor views in a separate View.dll. This makes it very hard to see why your .NET 5 code won\u0027t work. \r\n",
                                           "updatedAt":  "2021-11-21T12:04:02Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Unable to override IHostEnvironment.ApplicationName using env variables or the command line using ConfigureWebHost/Defaults ",
        "labels":  [
                       "severity-nice-to-have",
                       "area-hosting",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/35502",
        "createdAt":  "2021-08-19T15:37:39Z",
        "number":  35502,
        "author":  "fredrikhr",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-02-05T16:27:43Z",
        "body":  "### Describe the bug\r\n\r\nWhen subclassing the `Startup`-class in a standard ASP.NET Core application from the abstract `StartupBase` type, the call to `UseStartup` (in `Program.CreateHostBuilder`) fails and throws a `NotSupportedException`.\r\n\r\nThere is no mention of `StartupBase` being deprecated or unusable. Documentation does not state anything about the usage not being supported.\r\n\r\n### To Reproduce\r\n\r\n#### `Program.cs`\r\n\r\n```c#\r\npartial class Program\r\n{\r\n    public static IHostBuilder CreateHostBuilder(string[] args) =\u003e\r\n        Host.CreateDefaultBuilder(args)\r\n            .ConfigureWebHostDefaults(webBuilder =\u003e\r\n            {\r\n                webBuilder.UseStartup\u003cStartup\u003e();\r\n                // Alternatively\r\n                // webBuilder.UseStartup(ctx =\u003e new Startup(ctx));\r\n            });\r\n}\r\n```\r\n\r\nref.: https://gist.github.com/fredrikhr/407e30bc766f8046d7035bb3152c7203#file-program-cs\r\n\r\n#### `Startup.cs`\r\n\r\n```c#\r\npublic class Startup : StartupBase\r\n{\r\n    private readonly WebHostBuilderContext context;\r\n\r\n    public Startup(WebHostBuilderContext context)\r\n    {\r\n        this.context = context;\r\n    }\r\n\r\n    public override void ConfigureServices(IServiceCollection services)\r\n    {\r\n        base.ConfigureServices(services);\r\n    }\r\n\r\n    public override void Configure(IApplicationBuilder app)\r\n    {\r\n    }\r\n}\r\n```\r\n\r\nref.: https://gist.github.com/fredrikhr/407e30bc766f8046d7035bb3152c7203#file-startup-cs\r\n\r\n#### Clone\r\n\r\n```\r\nhttps://gist.github.com/407e30bc766f8046d7035bb3152c7203.git\r\n```\r\n\r\n### Exceptions (if any)\r\n\r\n```\r\nSystem.NotSupportedException\r\n  HResult=0x80131515\r\n  Message=Microsoft.AspNetCore.Hosting.IStartup isn\u0027t supported\r\n  Source=Microsoft.AspNetCore.Hosting\r\n  StackTrace:\r\n   at Microsoft.AspNetCore.Hosting.GenericWebHostBuilder.UseStartup(Type startupType, HostBuilderContext context, IServiceCollection services, Object instance)\r\n   at Microsoft.AspNetCore.Hosting.GenericWebHostBuilder.\u003c\u003ec__DisplayClass13_0.\u003cUseStartup\u003eb__0(HostBuilderContext context, IServiceCollection services)\r\n   at Microsoft.Extensions.Hosting.HostBuilder.CreateServiceProvider()\r\n   at Microsoft.Extensions.Hosting.HostBuilder.Build()\r\n   at FredrikHr.GistIssues.AspnetCoreIStartup.Program.Main(String[] args)\r\n```\r\n\r\n### Further technical details\r\n\r\n#### `csproj`\r\n\r\n```xml\r\n\u003cProject Sdk=\"Microsoft.NET.Sdk.Web\"\u003e\r\n  \u003cPropertyGroup\u003e\r\n    \u003cTargetFramework\u003enet5.0\u003c/TargetFramework\u003e\r\n  \u003c/PropertyGroup\u003e\r\n\u003c/Project\u003e\r\n```\r\n\r\n#### `dotnet --info`\r\n\r\n```\r\n.NET SDK (reflecting any global.json):\r\n Version:   5.0.400\r\n Commit:    d61950f9bf\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.400\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.9\r\n  Commit:  208e377a53\r\n\r\n.NET SDKs installed:\r\n  5.0.400 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 5.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 5.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 5.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n#### Docker image\r\n\r\n`mcr.microsoft.com/dotnet/sdk:5.0.400`\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOTooCPQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde841w8W-",
                                           "createdAt":  "2021-08-19T15:44:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "\u003e There is no mention of StartupBase being deprecated or unusable. Documentation does not state anything about the usage not being supported.\r\n\r\nWe need to update the documentation. `IStartup` (and StartupBase by extension) is dead outside of the WebHost.\r\n\r\ncc @Tratcher ",
                                           "updatedAt":  "2021-08-19T15:44:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde841xsge",
                                           "createdAt":  "2021-08-19T20:24:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fredrikhr",
                                           "body":  "@davidfowl so in this particular example, instead do: (for strongly-typed vs. convention-based startup)\r\n\r\n```c#\r\npublic class Startup // no base class\r\n{\r\n    public void ConfigureServices(WebHostBuilderContext context,\r\n        IServiceCollection services)\r\n    {\r\n        services.AddSingleton(this);\r\n        // extra stuff here...\r\n    }\r\n\r\n    public void Configure(WebHostBuilderContext context,\r\n        IApplicationBuilder app)\r\n    {\r\n        var env = context.HostingEnvironment;\r\n        // extra stuff here...\r\n    }\r\n}\r\n\r\npartial class Program\r\n{\r\n    public static IHostBuilder CreateHostBuilder(string[]? args) =\u003e\r\n        Host.CreateDefaultBuilder(args ?? Array.Empty\u003cstring\u003e())\r\n            .ConfigureWebHostDefaults(wb =\u003e\r\n            {\r\n                Startup st = new();\r\n                wb.ConfigureServices(st.ConfigureServices);\r\n                wb.Configure(st.Configure);\r\n            });\r\n}",
                                           "updatedAt":  "2021-08-19T20:24:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde841xtwg",
                                           "createdAt":  "2021-08-19T20:32:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "@fredrikhr Sure, what do you gain?",
                                           "updatedAt":  "2021-08-19T20:32:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde841z6_s",
                                           "createdAt":  "2021-08-20T16:13:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fredrikhr",
                                           "body":  "@davidfowl true enough, you don\u0027t gain anything by that... Except that you get a strongly-typed `ConfigureServices` and `Configure`, but that does not really do much as the usual `Startup` class doesn\u0027t get much injected anyways.",
                                           "updatedAt":  "2021-08-20T16:13:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde8411fr3",
                                           "createdAt":  "2021-08-22T05:25:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB3RqhQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "fredrikhr",
                                                                               "createdAt":  "2021-08-22T14:37:17Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "I\u0027m not saying it\u0027s bad I just wanted to understand why you felt the need to do it.",
                                           "updatedAt":  "2021-08-22T05:25:39Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde848aYVA",
                                           "createdAt":  "2022-01-14T23:53:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `.NET 7 Planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2022-01-14T23:53:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85OibZf",
                                           "createdAt":  "2022-11-16T20:46:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "adityamandaleeka",
                                           "body":  "\u003e \u003e There is no mention of StartupBase being deprecated or unusable. Documentation does not state anything about the usage not being supported.\r\n\u003e \r\n\u003e We need to update the documentation. `IStartup` (and StartupBase by extension) is dead outside of the WebHost.\r\n\u003e \r\n\u003e cc @Tratcher\r\n\r\n@Tratcher looks like you unassigned yourself. Do you think the docs should be updated with that? ^",
                                           "updatedAt":  "2022-11-16T20:46:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85OibeK",
                                           "createdAt":  "2022-11-16T20:46:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `.NET 8 Planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2022-11-16T20:46:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85OigI9",
                                           "createdAt":  "2022-11-16T21:05:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Tratcher",
                                           "body":  "Yes.",
                                           "updatedAt":  "2022-11-16T21:05:26Z"
                                       }
                                   ],
                         "totalCount":  9
                     },
        "title":  "Subclassing Startup from StartupBase throws NotSupportedException",
        "labels":  [
                       "Docs",
                       "area-hosting"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/36815",
        "createdAt":  "2021-09-21T19:52:10Z",
        "number":  36815,
        "author":  "malylemire1",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOB7O9Ig==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "martincostello",
                                            "createdAt":  "2021-09-21T21:07:00Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2024-02-14T20:29:10Z",
        "body":  "## Background and Motivation\r\n\r\nAllow to return Json or a custom error page on startup errors.\r\n\r\n## Proposed API\r\n```\r\n\r\n.CaptureStartupErrors((context, exception) =\u003e\r\n{\r\n    context.Response.StatusCode = StatusCodes.Status500InternalServerError;                   \r\n    return context.ExecuteObjectResultAsync(exception);\r\n})\r\n```\r\n\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHONyboyw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde843GQRH",
                                           "createdAt":  "2021-09-21T21:10:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "martincostello",
                                           "body":  "This would be good to be able to customise the response in code like that, but it might be tricky to implement if startup fails as the app probably won\u0027t have gotten far enough for the services needed to run a request delegate to be available.",
                                           "updatedAt":  "2021-09-21T21:10:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde843GS7b",
                                           "createdAt":  "2021-09-21T21:26:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "What\u0027s the motivation for this? ",
                                           "updatedAt":  "2021-09-21T21:26:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde843IGmQ",
                                           "createdAt":  "2021-09-22T12:12:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "malylemire1",
                                           "body":  "I want to serve Json for all exceptions to clients. Even startup ones. Some people may also need to serve a custom error page.\r\n\r\n@martincostello : Seems like https://github.com/dotnet/aspnetcore/blob/main/src/Hosting/Hosting/src/Internal/WebHost.cs\r\nalready validate that the server can serve a request delegate. All that is needed is to store the custom request delegate and use it if set instead of `return ErrorPageBuilder.BuildErrorPageApplication(hostingEnv.ContentRootFileProvider, logger, showDetailedErrors, ex);`\r\n\r\n```\r\nprivate RequestDelegate BuildApplication()\r\n{\r\n    Debug.Assert(_applicationServices != null, \"Initialize must be called first.\");\r\n\r\n    try\r\n    {\r\n        _applicationServicesException?.Throw();\r\n        EnsureServer();\r\n\r\n        var builderFactory = _applicationServices.GetRequiredService\u003cIApplicationBuilderFactory\u003e();\r\n        var builder = builderFactory.CreateBuilder(Server.Features);\r\n        builder.ApplicationServices = _applicationServices;\r\n\r\n        var startupFilters = _applicationServices.GetService\u003cIEnumerable\u003cIStartupFilter\u003e\u003e();\r\n        Action\u003cIApplicationBuilder\u003e configure = _startup!.Configure;\r\n        if (startupFilters != null)\r\n        {\r\n            foreach (var filter in startupFilters.Reverse())\r\n            {\r\n                configure = filter.Configure(configure);\r\n            }\r\n        }\r\n\r\n        configure(builder);\r\n\r\n        return builder.Build();\r\n    }\r\n    catch (Exception ex)\r\n    {\r\n        if (!_options.SuppressStatusMessages)\r\n        {\r\n            // Write errors to standard out so they can be retrieved when not in development mode.\r\n            Console.WriteLine(\"Application startup exception: \" + ex.ToString());\r\n        }\r\n        var logger = _applicationServices.GetRequiredService\u003cILogger\u003cWebHost\u003e\u003e();\r\n        _logger.ApplicationError(ex);\r\n\r\n        if (!_options.CaptureStartupErrors)\r\n        {\r\n            throw;\r\n        }\r\n\r\n        EnsureServer();\r\n\r\n        // Generate an HTML error page.\r\n        var hostingEnv = _applicationServices.GetRequiredService\u003cIHostEnvironment\u003e();\r\n        var showDetailedErrors = hostingEnv.IsDevelopment() || _options.DetailedErrors;\r\n\r\n        return ErrorPageBuilder.BuildErrorPageApplication(hostingEnv.ContentRootFileProvider, logger, showDetailedErrors, ex);\r\n    }\r\n}\r\n```",
                                           "updatedAt":  "2021-09-22T12:12:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde843IKmb",
                                           "createdAt":  "2021-09-22T12:34:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "Why do you care about serving JSON for a startup error? I\u0027m not pushing back, just trying to understand the motivation? It seems like such an edge case...",
                                           "updatedAt":  "2021-09-22T12:34:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde843ILp8",
                                           "createdAt":  "2021-09-22T12:40:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "malylemire1",
                                           "body":  "I have clients that test if the Web API is available with a simple get request. When the server has startup errors I get a de-serialization exception since the client assume a Json response and receive html. I want the client to be able to know why the server is down. I manage myself if the exception contains the stack trace or not (development and production).",
                                           "updatedAt":  "2021-09-22T12:40:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde843ImBQ",
                                           "createdAt":  "2021-09-22T14:44:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "I also ask because there are cases where you won\u0027t be able to control the response, for example when managed code fails to start and you\u0027re running on IIS, this won\u0027t work.",
                                           "updatedAt":  "2021-09-22T14:44:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde843ImNK",
                                           "createdAt":  "2021-09-22T14:45:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "The client should look at the status code before parsing the response.",
                                           "updatedAt":  "2021-09-22T14:45:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde843I2sA",
                                           "createdAt":  "2021-09-22T16:02:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "malylemire1",
                                           "body":  "I know I also handle a SocketException for that case. But when I receive a 500 status code I expect it to be of the requested Accept header media type.",
                                           "updatedAt":  "2021-09-22T16:02:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde843I3ht",
                                           "createdAt":  "2021-09-22T16:06:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "malylemire1",
                                           "body":  "Sorry you meant the default IIS error page. Yes that would be the last case unhandled. But that would be an exception outside of webhost startup...",
                                           "updatedAt":  "2021-09-22T16:08:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde843I8JN",
                                           "createdAt":  "2021-09-22T16:28:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "\u003e Sorry you meant the default IIS error page. Yes that would be the last case unhandled. But that would be an exception outside of webhost startup...\r\n\r\nRight, what would your clients do in that case?",
                                           "updatedAt":  "2021-09-22T16:28:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde843JM12",
                                           "createdAt":  "2021-09-22T18:03:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "malylemire1",
                                           "body":  "I could serve a static .json file from iis for that case. But I don\u0027t know if I could input error data into it I have never tried. I think I would have to set a .json page for every 500.xx status code...",
                                           "updatedAt":  "2021-09-22T18:09:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde843JujL",
                                           "createdAt":  "2021-09-22T20:15:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "adityamandaleeka",
                                           "body":  "Triage: this is worth considering. We should be careful about making it clear that it\u0027s not going to help in every startup failure case (e.g. if managed code can\u0027t even run as mentioned above).\r\n\r\nFWIW CaptureStartupErrors is off in production by default (only enabled in development).",
                                           "updatedAt":  "2021-09-22T20:15:55Z"
                                       }
                                   ],
                         "totalCount":  12
                     },
        "title":  "Add a CaptureStartupErrors overload with RequestDelegate.",
        "labels":  [
                       "api-suggestion",
                       "area-hosting",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/38335",
        "createdAt":  "2021-11-12T16:49:46Z",
        "number":  38335,
        "author":  "Blackclaws",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-11-18T09:08:31Z",
        "body":  "### Describe the bug\r\nThis issue is about a very hidden behaviour when DeferredHostBuilder is being used.\r\n\r\nI came across this issue when fixing an issue with databases being seeded twice during tests: \r\n\r\nhttps://github.com/ardalis/CleanArchitecture/pull/277/files\r\n\r\nThe reason is that in contrast to other IHostBuilder implementations DeferredHostBuilder actually does start the Host when calling:\r\n```\r\nIHostBuilder builder;\r\nbuilder.Build();\r\n```\r\n\r\nSince this is also done on a separate thread this leads to race conditions in code that previously didn\u0027t have them. The issue comes up when switching to the new template for aspnetcore servers that don\u0027t use a Startup class\r\n\r\n### To Reproduce\r\n\u003c!--\r\nWe ❤ code! Point us to a minimalistic repro project hosted in a public GitHub repo.\r\nFor a repro project, create a new ASP.NET Core project using the template of your choice, apply the minimum required code to result in the issue you\u0027re observing.\r\n\r\nWe will close this issue if:\r\n- The repro project you share with us is complex. We can\u0027t investigate custom projects, so don\u0027t point us to such, please.\r\n- If we will not be able to repro the behavior you\u0027re reporting.\r\n- If the repro project is attached as a `.zip` file.\r\n- If the GitHub repro project is set to `Private`.\r\n--\u003e\r\n1. Create an aspnetcore 6.0 project without a Startup class\r\n2. Create a CustomWebApplicationFactory extending WebApplicationFactory\r\n3. Override CreateHost(IHostBuilder builder)\r\n4. Call ```builder.Build()``` then perform other things with the host\u0027s services\r\n5. Notice that the code in Program.cs is running in parallel and you might be getting race conditions now\r\n\r\n### Exceptions (if any)\r\n\u003c!--\r\nInclude the exception you get when facing this issue\r\n--\u003e\r\n\r\n### Further technical details\r\n- ASP.NET Core version: 6.0.100\r\n- The IDE (VS / VS Code/ VS4Mac) you\u0027re running on, and its version: dotnet-cli 6.0.100\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHObFQc9A==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde845p2Sl",
                                           "createdAt":  "2021-11-12T17:03:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Blackclaws",
                                           "body":  "Repro is here:\r\n\r\nhttps://github.com/Blackclaws/deferred-host-repro\r\n\r\nI see a couple of solutions to this:\r\n\r\n1. Defer the host start until the actual Start action. This however will mean that none of the service registrations that are done in Program.cs are available, probably not what is expected\r\n2. Defer any access to _host.Services in the DeferredHost until the host has actually finished startup (that way you can\u0027t interact with the host until it is done.",
                                           "updatedAt":  "2021-11-12T17:04:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde845rK6F",
                                           "createdAt":  "2021-11-12T21:43:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "halter73",
                                           "body":  "\u003e Notice that the code in Program.cs is running in parallel and you might be getting race conditions now\r\n\r\nThis is by design. With the new templates, we run `Program.Main` just to get the `IHostBuilder` from a `DiagnosticListener` since there\u0027s no more `Program.CreateHostBuilder` or `Program.CreateWebHostBuilder`. See https://github.com/dotnet/runtime/blob/8574ce9a9a195cac371e3a2cfe5d36ec754aa94c/src/libraries/Microsoft.Extensions.HostFactoryResolver/src/HostFactoryResolver.cs#L42-L47",
                                           "updatedAt":  "2021-11-12T21:43:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde845rMoi",
                                           "createdAt":  "2021-11-12T21:48:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODTRfgg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ardalis",
                                                                               "createdAt":  "2021-12-06T20:23:47Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "farkastamas84",
                                                                               "createdAt":  "2024-01-19T11:41:44Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "Blackclaws",
                                           "body":  "I know its working as intended. The problem is that is hides a race condition that didn\u0027t use to be there and suddenly you can get intermittent test failures that don\u0027t seem to make a lot of sense. \r\n\r\nMaybe builder.Build() should just block until the host is ready. That would also eliminate further race conditions. Its simply unclear to the person writing the tests that moving from Startup class to Program.cs top level statements will completely break their tests as this is hidden in the details of WebApplicaitonFactory.",
                                           "updatedAt":  "2021-11-12T21:48:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde845rRxH",
                                           "createdAt":  "2021-11-12T22:00:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "Its also a question about how common customers will run into this scenario.",
                                           "updatedAt":  "2021-11-12T22:00:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde845raBz",
                                           "createdAt":  "2021-11-12T22:14:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODTRgSg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ardalis",
                                                                               "createdAt":  "2021-12-06T20:24:43Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "suraciii",
                                                                               "createdAt":  "2022-05-30T03:56:15Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "farkastamas84",
                                                                               "createdAt":  "2024-01-19T11:43:11Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "Blackclaws",
                                           "body":  "I expect that it might be a rare occurrence in general. But it can introduce very subtle errors into tests if it does happen. \r\n\r\nI\u0027m not sure it actually plays a role outside of running tests at all. That being said, I think the current behavior also does kind of violate the documentation (https://github.com/dotnet/runtime/blob/8574ce9a9a195cac371e3a2cfe5d36ec754aa94c/src/libraries/Microsoft.Extensions.Hosting.Abstractions/src/IHostBuilder.cs#L76) on \r\n```\r\n /// \u003csummary\u003e\r\n /// Run the given actions to initialize the host. This can only be called once.\r\n /// \u003c/summary\u003e\r\n /// \u003creturns\u003eAn initialized \u003csee cref=\"IHost\"/\u003e.\u003c/returns\u003e\r\nIHost Build();\r\n```\r\nThis isn\u0027t an async method, nor does it state that the host wouldn\u0027t be finished initializing after it returns. \r\n\r\nThinking about this further I think the two best solutions would indeed be:\r\n1. Introduce BuildAsync to IHostBuilder though this is probably overkill. I think there isn\u0027t any other host that has this kind of behaviour and would need it.\r\n2. Block on Build() until the host is actually done initializing\r\n\r\nIf you\u0027d like I can prepare a pull request for solution 2 and we can continue the discussion there as well.",
                                           "updatedAt":  "2021-11-12T22:17:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85LoKOr",
                                           "createdAt":  "2022-10-05T18:49:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "adityamandaleeka",
                                           "body":  "@captainsafia Just found another old issue. Any update on this? Not sure if there was another discussion elsewhere about it.",
                                           "updatedAt":  "2022-10-05T18:49:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Oj89r",
                                           "createdAt":  "2022-11-17T04:22:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "adityamandaleeka",
                                           "body":  "@captainsafia Can you please re-milestone this?",
                                           "updatedAt":  "2022-11-17T04:22:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85OnXqZ",
                                           "createdAt":  "2022-11-17T17:06:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "captainsafia",
                                           "body":  "@adityamandaleeka There hasn\u0027t been any work on this. I\u0027m inclined to backlog considering priorities.",
                                           "updatedAt":  "2022-11-17T17:06:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85OnX0j",
                                           "createdAt":  "2022-11-17T17:07:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2022-11-17T17:07:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85isAgV",
                                           "createdAt":  "2023-07-28T13:42:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODCG8ZA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "fschmied",
                                                                               "createdAt":  "2023-07-28T14:05:41Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "Taha-cmd",
                                           "body":  "We had some flaky tests that we were able to track down to this.\r\n\r\nIn Program.cs\r\n```csharp\r\nvar app = builder.Build();\r\napp.Run(); // expected to throw due to startup validation of invalid options. \r\n```\r\n\r\nThen this line https://github.com/dotnet/aspnetcore/blob/main/src/Mvc/Mvc.Testing/src/DeferredHostBuilder.cs#L152\r\nwill throw an ObjectDisposedException: \"System.ObjectDisposedException: Cannot access a disposed object.\r\nObject name: \u0027IServiceProvider\u0027.\r\n\r\nTested with ASP.NET Core 7.0.9\r\n\r\nEdit: this is happening with the **DelegatedWebApplicationFactory** that is returned by **WebApplicationFactory.WithWebHostBuilder**\r\n\r\n",
                                           "updatedAt":  "2023-07-28T13:46:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85isMpE",
                                           "createdAt":  "2023-07-28T14:09:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODC2OAg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Taha-cmd",
                                                                               "createdAt":  "2023-07-28T14:17:33Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "benlongo",
                                                                               "createdAt":  "2023-08-07T04:31:39Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "fschmied",
                                           "body":  "\u003e We had some flaky tests that we were able to track down to this.\r\n\r\n... and, seeing this has been a known issue since 2021: it required a few hours of very intense debugging that I\u0027d rather have spent otherwise, tbh. 🙂 ",
                                           "updatedAt":  "2023-07-28T14:09:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85j1MhX",
                                           "createdAt":  "2023-08-11T14:30:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MichaelHochriegl",
                                           "body":  "I too run into the same problem and I have a quick reproduction repo here: https://github.com/MichaelHochriegl/WebAppFactoryHostedService\r\n\r\nI have a `HostedService` that is accessing the `DbContext` and due the app already running the overriden service is not used. If I delay the `Program.cs` the setup in my custom `WebApplicationFactory` is already done by the time the app is started and it works.\r\n\r\nCurrently I can\u0027t switch any of my work projects to minimal apis as every test-setup that I have is borked.",
                                           "updatedAt":  "2023-08-11T14:30:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85sLfR_",
                                           "createdAt":  "2023-11-16T17:50:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Sonic198",
                                           "body":  "\u003e We had some flaky tests that we were able to track down to this.\r\n\u003e \r\n\u003e In Program.cs\r\n\u003e \r\n\u003e ```cs\r\n\u003e var app = builder.Build();\r\n\u003e app.Run(); // expected to throw due to startup validation of invalid options. \r\n\u003e ```\r\n\u003e \r\n\u003e Then this line https://github.com/dotnet/aspnetcore/blob/main/src/Mvc/Mvc.Testing/src/DeferredHostBuilder.cs#L152 will throw an ObjectDisposedException: \"System.ObjectDisposedException: Cannot access a disposed object. Object name: \u0027IServiceProvider\u0027.\r\n\u003e \r\n\u003e Tested with ASP.NET Core 7.0.9\r\n\u003e \r\n\u003e Edit: this is happening with the **DelegatedWebApplicationFactory** that is returned by **WebApplicationFactory.WithWebHostBuilder**\r\n\r\nHi, Did you find any solution to this?",
                                           "updatedAt":  "2023-11-16T17:50:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85sVBz0",
                                           "createdAt":  "2023-11-18T09:08:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Taha-cmd",
                                           "body":  "We added resiliency (retries) to our tests ",
                                           "updatedAt":  "2023-11-18T09:08:30Z"
                                       }
                                   ],
                         "totalCount":  14
                     },
        "title":  "DeferredHostBuilder starts the host during the build action",
        "labels":  [
                       "investigate",
                       "area-hosting",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/40271",
        "createdAt":  "2022-02-16T17:58:40Z",
        "number":  40271,
        "author":  null,
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODCKJeA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "hanna-cirilla",
                                            "createdAt":  "2022-08-24T08:50:59Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Jack-Edwards",
                                            "createdAt":  "2023-07-01T04:59:50Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "i00lii",
                                            "createdAt":  "2023-07-12T15:41:53Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "bartlomiejgawel",
                                            "createdAt":  "2023-07-28T13:54:26Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "jpgdev",
                                            "createdAt":  "2023-10-10T15:55:00Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "pechezerov",
                                            "createdAt":  "2023-11-13T05:51:21Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "AntonSmolkov",
                                            "createdAt":  "2023-12-20T17:02:17Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "jchoca",
                                            "createdAt":  "2024-02-21T15:51:57Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "HofmeisterAn",
                                            "createdAt":  "2024-03-04T12:36:18Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "space-alien",
                                            "createdAt":  "2024-03-13T10:39:18Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "rmja",
                                            "createdAt":  "2024-06-13T06:28:20Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "algompluecker",
                                            "createdAt":  "2024-09-13T13:15:31Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "EdLichtman",
                                            "createdAt":  "2024-11-22T22:15:07Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "DanielTuran",
                                            "createdAt":  "2025-03-05T12:52:58Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "jmelancongen",
                                            "createdAt":  "2025-03-18T16:25:26Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "jsembdner",
                                            "createdAt":  "2025-05-08T09:26:08Z"
                                        }
                                    ],
                          "totalCount":  16
                      },
        "updatedAt":  "2025-08-29T10:10:10Z",
        "body":  "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\n**Description**\r\nWhen using `WebApplicationFactory\u003c\u003e` together with the minimal api `WebApplication`, the underlying `Host` is stopped and disposed twice from separate threads. \r\n\r\nThis can lead to integration tests failing e.g. when there are custom `IHostedService`s registered. Dpending on the race condition, a particular instance of `IHostedService` can be in order: stopped, then disposed, then attempted to stop again from a different thread; or attempted to stop twice from different threads at the same time.\r\n\r\n**What happens under the hood**\r\n\r\nWith minimal api and the `WebApplicationFactory\u003cProgram\u003e`, the whole `Program` content is executed. It goes up to `Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.WaitForShutdownAsync()` and waits for the `IHostApplicationLifetime.ApplicationStopping` event.\r\n\r\nThe test runs and at the end the WebApplicationFactory is being disposed. It calls (with some wrapper classes skipped here for brevity) `Microsoft.Extensions.Hosting.Internal.Host.StopAsync()`\r\n\r\nThe `Host.StopAsync()` calls `ApplicationLifetime.StopApplication()`, and thus raises the beforementioned `IHostApplicationLifetime.ApplicationStopping` event, thus unblocking the \"main\" thread executing `HostingAbstractionsHostExtensions.WaitForShutdownAsync()`, which then... calls `Host.StopAsync()` again.\n\n### Expected Behavior\n\n`Host` and any registered `IHostedService`s should be stopped and disposed once.\n\n### Steps To Reproduce\n\nhttps://github.com/mateusz-duchnowski-trainline/disposing-host-twice-issue\r\n\r\nrun `dotnet test`\r\n\r\nexample output, where `A` is an `IHostedService`:\r\n```\r\n[xUnit.net 00:00:01.19] DisposingHostTwiceIssue.Tests: A started\r\n[xUnit.net 00:00:01.28] DisposingHostTwiceIssue.Tests: A stopping\r\n[xUnit.net 00:00:01.28] DisposingHostTwiceIssue.Tests: A stopping\r\n[xUnit.net 00:00:01.50] DisposingHostTwiceIssue.Tests: A stopped\r\n[xUnit.net 00:00:01.50] DisposingHostTwiceIssue.Tests: A stopped\r\n```\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n6.0.200-preview.22055.15\n\n### Anything else?\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOwOj_SA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde84-J-48",
                                           "createdAt":  "2022-02-17T10:35:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "martincostello",
                                           "body":  "This sounds a bit like #37631.",
                                           "updatedAt":  "2022-02-17T10:35:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde84-LU6P",
                                           "createdAt":  "2022-02-17T16:31:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Hi @martincostello, \r\nLooks similar. But the main issue here (which is not mentioned in #37631) is that it comes from two threads and that it affects both methods: `StopAsync` and `DisposeAsync`. So one thread can be executing `StopAsync` and the other one can start executing `StopAsync` too, or even call `Dispose` in the meantime.\r\n\r\nIt would be strange having to implement `IHostedService`s with that in mind, just for the integration test purposes.",
                                           "updatedAt":  "2022-02-17T16:31:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde84-MATH",
                                           "createdAt":  "2022-02-17T19:26:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\nWe\u0027re moving this issue to the `.NET 7 Planning` milestone for future evaluation / consideration. Because it\u0027s not immediately obvious that this is a bug in our framework, we would like to keep this around to collect more feedback, which can later help us determine the impact of it. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2022-02-17T19:26:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Ars1S",
                                           "createdAt":  "2022-03-31T22:38:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dmitriyse",
                                           "body":  "Confirms, the problem exists. I am facing with the problem in the same scenario.\r\n1) .Net 6 minimal api (.Net 6 Web App template)\r\n2) builder.Services.AddHostedService\u003cMyService\u003e(); // used to register the IHostedService\r\n3) WebApplicationFactory\u003cProgram\u003e in xUnit test\r\n4) IHostedService.StopAsync  \u003c-- called twice\r\n",
                                           "updatedAt":  "2022-03-31T22:38:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85COLtu",
                                           "createdAt":  "2022-04-27T13:37:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "federicojoselucia",
                                           "body":  "I\u0027m experiencing the same issue.",
                                           "updatedAt":  "2022-04-27T13:37:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85MAWej",
                                           "createdAt":  "2022-10-11T19:16:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\nWe\u0027re moving this issue to the `.NET 8 Planning` milestone for future evaluation / consideration. Because it\u0027s not immediately obvious that this is a bug in our framework, we would like to keep this around to collect more feedback, which can later help us determine the impact of it. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2022-10-11T19:16:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85cpUSH",
                                           "createdAt":  "2023-05-19T10:03:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "salarzobir",
                                           "body":  "+1 any progress or a workaround for this?",
                                           "updatedAt":  "2023-05-19T10:03:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85dA97k",
                                           "createdAt":  "2023-05-24T06:38:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mitchdenny",
                                           "body":  "Does anyone have a minimal repro of this - the repro linked in the opening post doesn\u0027t appear to be there anymore.",
                                           "updatedAt":  "2023-05-24T06:38:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85dBTjF",
                                           "createdAt":  "2023-05-24T07:52:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "salarzobir",
                                           "body":  "Hey @mitchdenny, I just created one, https://github.com/salarzobir/DisposingHostTwiceIssue",
                                           "updatedAt":  "2023-05-24T07:52:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85qvAKY",
                                           "createdAt":  "2023-11-02T13:16:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODMaIhQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "SoftStoneDevelop",
                                                                               "createdAt":  "2023-11-12T19:32:50Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "EraYaN",
                                           "body":  "This also happens without using minimal API, while using an old school Startup class.",
                                           "updatedAt":  "2023-11-02T15:40:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85vJymW",
                                           "createdAt":  "2023-12-20T17:07:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AntonSmolkov",
                                           "body":  "Same here. Dotnet 7, Xunit, WebApplicationFactory",
                                           "updatedAt":  "2023-12-20T17:07:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85vTzcB",
                                           "createdAt":  "2023-12-22T09:39:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "salarzobir",
                                           "body":  "Same problem still exists in .NET 8\r\nI wonder if there is a workaround using the new [IHostedLifecycleService](https://learn.microsoft.com/en-us/dotnet/api/microsoft.extensions.hosting.ihostedlifecycleservice?view=dotnet-plat-ext-8.0) ???",
                                           "updatedAt":  "2023-12-22T09:39:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85x2__4",
                                           "createdAt":  "2024-01-25T13:40:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mr-dokara",
                                           "body":  "Same problem in .NET 8 with Xunit, WebApplicationFactory. I had to do workaround through modifying `StartAsync` and `StopAsync` methods of the problem service",
                                           "updatedAt":  "2024-01-25T13:40:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde857NSfw",
                                           "createdAt":  "2024-04-19T18:22:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AqlaSolutions",
                                           "body":  "Same problem",
                                           "updatedAt":  "2024-04-19T18:22:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86MR5qT",
                                           "createdAt":  "2024-09-16T17:27:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "halter73",
                                           "body":  "I changed the labels because this issue has seen a bit activity over the years, and I just got pinged about it. I think the proper fix belongs in dotnet/runtime\u0027s `Host.cs`, but we could also reconsider https://github.com/dotnet/aspnetcore/pull/37631.",
                                           "updatedAt":  "2024-09-16T17:27:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86TLPUI",
                                           "createdAt":  "2024-11-11T22:30:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "salarzobir",
                                           "body":  "Is this already fixed in .NET 9?",
                                           "updatedAt":  "2024-11-11T22:30:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86T5jL5",
                                           "createdAt":  "2024-11-17T16:09:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOERTJcw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "Lakistein",
                                                                               "createdAt":  "2025-04-09T09:03:26Z"
                                                                           },
                                                                           {
                                                                               "content":  "ROCKET",
                                                                               "user":  "jsembdner",
                                                                               "createdAt":  "2025-05-08T09:26:23Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "nickogl",
                                           "body":  "The workaround is to override `WebApplicationFactory.DisposeAsync()` and use `IHostApplicationLifetime.StopApplication()` instead of `Host.StopAsync()`, then wait until shutdown of the hosted services and disposal of the service collection is complete.\n\nHere\u0027s a rudimentary implementation of this workaround:\n```csharp\nusing Microsoft.AspNetCore.Mvc.Testing;\nusing Microsoft.Extensions.DependencyInjection;\nusing Microsoft.Extensions.Hosting;\n\nnamespace Sample.Test;\n\npublic sealed class WebApplicationFactoryWrapper\u003cTEntryPoint\u003e : WebApplicationFactory\u003cTEntryPoint\u003e where TEntryPoint : class\n{\n\tprivate readonly static TimeSpan ShutdownTimeout = TimeSpan.FromSeconds(5);\n\n\tpublic override async ValueTask DisposeAsync()\n\t{\n\t\tawait StopApplication().ConfigureAwait(false);\n\t\tawait WaitForDisposal().ConfigureAwait(false);\n\n\t\tforeach (var factory in Factories)\n\t\t{\n\t\t\tawait factory.DisposeAsync().ConfigureAwait(false);\n\t\t}\n\t}\n\n\tprivate async Task StopApplication(CancellationToken forcefulStoppingToken = default)\n\t{\n\t\ttry\n\t\t{\n\t\t\tvar tcs = new TaskCompletionSource();\n\t\t\tvar lifetime = Services.GetRequiredService\u003cIHostApplicationLifetime\u003e();\n\t\t\tlifetime.ApplicationStopped.Register(() =\u003e tcs.TrySetResult());\n\t\t\tlifetime.StopApplication();\n\t\t\tawait tcs.Task.WaitAsync(ShutdownTimeout, forcefulStoppingToken).ConfigureAwait(false);\n\t\t}\n\t\tcatch (Exception)\n\t\t{\n\t\t}\n\t}\n\n\tprivate async Task WaitForDisposal(CancellationToken cancellationToken = default)\n\t{\n\t\ttry\n\t\t{\n\t\t\twhile (!cancellationToken.IsCancellationRequested)\n\t\t\t{\n\t\t\t\t// IHostApplicationLifetime.ApplicationStopped is triggered before the host (and its service collection)\n\t\t\t\t// is disposed, so additionally wait until the service collection is disposed for a clean shutdown.\n\t\t\t\t_ = Services.GetRequiredService\u003cIHostApplicationLifetime\u003e();\n\t\t\t\tawait Task.Delay(1, cancellationToken).ConfigureAwait(false);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception)\n\t\t{\n\t\t}\n\t}\n}\n```\n\nIt\u0027s hacky, but it works and suffices for testing. The proper fix I think would be to use `IHostApplicationLifetime.StopApplication()` in `WebApplicationFactory.DisposeAsync()`.\n\nFeel free to check out https://github.com/nickogl/AspNetCore.IntegrationTesting which includes this workaround and offers some neat functionality on top of `WebApplicationFactory`. I use this approach for orchestrating complex integration tests at work.",
                                           "updatedAt":  "2024-11-17T16:09:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86g-60G",
                                           "createdAt":  "2025-03-05T12:52:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DanielTuran",
                                           "body":  "I also experienced this when HostedService was being stopped twice in .NET 8",
                                           "updatedAt":  "2025-03-05T12:52:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86qnG6G",
                                           "createdAt":  "2025-05-08T09:27:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jsembdner",
                                           "body":  "Same observed here. Workaround from @nickogl works, but as said it\u0027s not a clean solution.",
                                           "updatedAt":  "2025-05-08T09:27:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde861evV6",
                                           "createdAt":  "2025-07-07T12:04:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Aaron-CityGIS",
                                           "body":  "I am also observing this issue. Fortunately, my shutdown logic isn\u0027t hindered by it as of now.",
                                           "updatedAt":  "2025-07-07T12:04:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde867IO6F",
                                           "createdAt":  "2025-07-31T11:06:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ipo-mb",
                                           "body":  "I am also observing this behaviour, please try to fix it.",
                                           "updatedAt":  "2025-07-31T11:06:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde87A6P9I",
                                           "createdAt":  "2025-08-29T10:09:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "patiqs",
                                           "body":  "https://github.com/dotnet/aspnetcore/issues/40271#issuecomment-2481337081\n\nThis doesn\u0027t work when you call \u0027WithWebHostBuilder\u0027 since it returns a new DelegatedWebApplicationFactory, that doesn\u0027t call your overriden DisposeAsync.\n\nAt least in: \"Microsoft.AspNetCore.Mvc.Testing\" Version=\"8.0.16\"",
                                           "updatedAt":  "2025-08-29T10:10:10Z"
                                       }
                                   ],
                         "totalCount":  22
                     },
        "title":  "Host stopped and disposed twice when WebApplicationFactory\u003c\u003e is used with the minimal api ",
        "labels":  [
                       "area-hosting"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/41073",
        "createdAt":  "2022-04-06T22:25:46Z",
        "number":  41073,
        "author":  "darraghjones",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-08-25T00:03:41Z",
        "body":  "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\n`dotnet counters`  and `dotnet monitor` do not report asp.net request duration metrics\n\n### Describe the solution you\u0027d like\n\nRunning `dotnet counters monitor` would include some sort of  `Request Duration` metric(s)  as part of the Microsoft.AspNetCore.Hosting counters. \n\n### Additional context\n\n![image](https://user-images.githubusercontent.com/431192/162082379-1c12409d-5bc4-462c-9561-460288e00f4a.png)\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOQT2FCw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85BKrjy",
                                           "createdAt":  "2022-04-08T20:19:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2022-04-08T20:19:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85BPYUL",
                                           "createdAt":  "2022-04-11T04:56:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "We contemplated this but it wasn\u0027t clear what the duration would be? Mean request time? Is that helpful? It would be better if we had individual metrics with the request path and method as dimensions then it would be possible to look at durations for specific requests.",
                                           "updatedAt":  "2022-04-11T04:56:24Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Add request duration to HostingEventSource",
        "labels":  [
                       "area-hosting",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/46022",
        "createdAt":  "2023-01-11T10:37:02Z",
        "number":  46022,
        "author":  "askazakov",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC3S19A==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "codymullins",
                                            "createdAt":  "2024-04-17T18:08:48Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2024-02-13T01:45:42Z",
        "body":  "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Describe the bug\r\n\r\n`IHostBuilder` does not respect `SuppressStatusMessages`\r\n\r\nCreate new project with `dotnet new webapi`.\r\n\r\nAdd `SuppressStatusMessages = true` for console and `builder.WebHost.SuppressStatusMessages(true);` so that we have\r\n\r\n```lang=csharp\r\nvar builder = WebApplication.CreateBuilder(args);\r\nbuilder.Host.ConfigureServices(s =\u003e\r\n    s.Configure\u003cConsoleLifetimeOptions\u003e(o =\u003e o.SuppressStatusMessages = true));\r\nbuilder.WebHost.SuppressStatusMessages(true); // \u003c- pay attention here\r\n```\r\n\r\n### Expected Behavior\r\n\r\nexpected output\r\n```\r\nBuilding...\r\n```\r\nactual output\r\n```\r\nBuilding...\r\ninfo: Microsoft.Hosting.Lifetime[14]\r\n      Now listening on: https://localhost:7102\r\ninfo: Microsoft.Hosting.Lifetime[14]\r\n      Now listening on: http://localhost:5175\r\n```\r\n\r\n### Steps To Reproduce\r\n\r\n_No response_\r\n\r\n### Exceptions (if any)\r\n\r\n_No response_\r\n\r\n### .NET Version\r\n\r\n.NET SDK (reflecting any global.json):\r\n Version:   6.0.402\r\n Commit:    6862418796\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  12.6\r\n OS Platform: Darwin\r\n RID:         osx.12-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/6.0.402/\r\n\r\nglobal.json file:\r\n  Not found\r\n\r\nHost:\r\n  Version:      6.0.10\r\n  Architecture: x64\r\n  Commit:       5a400c212a\r\n\r\n### Anything else?\r\n\r\nAlso if create project with `dotnet new webapi -f net5.0` and add `webBuilder.SuppressStatusMessages(true);` so that we have\r\n\r\n```lang=csharp\r\npublic static IHostBuilder CreateHostBuilder(string[] args) =\u003e\r\n    Host.CreateDefaultBuilder(args)\r\n        .ConfigureWebHostDefaults(webBuilder =\u003e\r\n        {\r\n            webBuilder.UseStartup\u003cStartup\u003e();\r\n            webBuilder.SuppressStatusMessages(true); // \u003c- added line\r\n        });\r\n```\r\n\r\nthen `dotnet run`.\r\n\r\nexpected output\r\n```\r\nBuilding...\r\n```\r\n\r\nactual output\r\n```\r\nBuilding...\r\ninfo: Microsoft.Hosting.Lifetime[0]\r\n      Now listening on: https://localhost:5001\r\ninfo: Microsoft.Hosting.Lifetime[0]\r\n      Now listening on: http://localhost:5000\r\ninfo: Microsoft.Hosting.Lifetime[0]\r\n      Application started. Press Ctrl+C to shut down.\r\ninfo: Microsoft.Hosting.Lifetime[0]\r\n      Hosting environment: Development\r\ninfo: Microsoft.Hosting.Lifetime[0]\r\n      Content root path: /Users/askazakov/projects/dotnet/webapi5\r\n```\r\n\r\n**But** if we use `IWebHostBuilder` \r\n```\r\npublic static IWebHostBuilder CreateWebHostBuilder(string[] args) =\u003e\r\n    WebHost.CreateDefaultBuilder(args)\r\n        .SuppressStatusMessages(true)\r\n        .UseStartup\u003cStartup\u003e();\r\n```\r\neverything is fine:\r\n```\r\n\u003e dotnet run\r\nBuilding...\r\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOUzjTCQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85SO1pj",
                                           "createdAt":  "2023-01-11T23:38:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "adityamandaleeka",
                                           "body":  "As you\u0027ve noticed, this `SuppressStatusMessages` option is not respected by GenericWebHost. You can achieve a similar result by using [log filtering](https://learn.microsoft.com/en-us/aspnet/core/fundamentals/logging/?view=aspnetcore-7.0#configure-logging) or disabling console logging entirely.\r\n\r\n\r\nTriage: we should update the doc for `SuppressStatusMessages` to indicate that it only applies to the old `WebHost` (and mention the log configuration approach for suppressing messages from newer hosts).",
                                           "updatedAt":  "2023-01-11T23:38:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85SPknS",
                                           "createdAt":  "2023-01-12T04:57:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "askazakov",
                                           "body":  "@adityamandaleeka thank you for response. I see your point.\r\n\r\nI\u0027m confused a little bit of next moments\r\n- inconsistency with [ConsoleLifetime](https://github.com/dotnet/runtime/blob/da2c147a9c129b00ef09b88a7309754cb09e193d/src/libraries/Microsoft.Extensions.Hosting/src/Internal/ConsoleLifetime.cs#L53) from Microsoft.Extensions.Hosting which has a very similar behaviour but does not emit log message at all if option set to true\r\n- I can write `builder.WebHost.SuppressStatusMessages(true)` that does nothing and only thing that can prevent it is note about builder.WebHost.SuppressStatusMessages somewhere in documentation. I would prefer to have no ability to write meaningless code",
                                           "updatedAt":  "2023-01-12T04:57:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85SaTrr",
                                           "createdAt":  "2023-01-14T01:44:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "adityamandaleeka",
                                           "body":  "@askazakov Those are valid points.\r\n\r\nWe could consider making the option work with newer hosts, but it\u0027s a tradeoff between convenience and added complexity (we\u0027d have multiple ways to configure the presence of those messages, which could even conflict with each other).",
                                           "updatedAt":  "2023-01-14T01:44:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85TONIl",
                                           "createdAt":  "2023-01-18T23:35:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "adityamandaleeka",
                                           "body":  "To address the second concern (API that silently does nothing), we could consider some kind of analyzer that warns you if you\u0027re using `SuppressStatusMessages` with a new host.\r\n\r\nThis is relatively low priority for us though; we haven\u0027t heard any other complaints/concerns about this problem. Moving this issue to backlog for now.",
                                           "updatedAt":  "2023-01-18T23:35:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85TONMJ",
                                           "createdAt":  "2023-01-18T23:35:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2023-01-18T23:35:33Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "`IHostBuilder` does not respect `SuppressStatusMessages` for WebHost",
        "labels":  [
                       "area-hosting",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/47179",
        "createdAt":  "2023-03-13T20:32:27Z",
        "number":  47179,
        "author":  "captainsafia",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCu-45g==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "eerhardt",
                                            "createdAt":  "2023-03-13T20:38:46Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "maxkoshevoi",
                                            "createdAt":  "2023-03-21T08:31:34Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2025-02-05T07:09:21Z",
        "body":  "We have MSBuild targets in the repo that enable nullability on netstandard2.0 projects.\r\n\r\nhttps://github.com/dotnet/aspnetcore/blob/07937702255861896d9ec34e28c7c0c59ceb6a3f/eng/targets/CSharp.Common.targets#L120-L130\r\n\r\nHowever, the nullability warnings are not emitted during build by default.\r\n\r\nhttps://github.com/dotnet/aspnetcore/blob/07937702255861896d9ec34e28c7c0c59ceb6a3f/eng/targets/CSharp.Common.targets#L125\r\n\r\nRemoving the property above shows that we have ~150 unhandled nullability warnings in the projects that currently \"enable\" nullability.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOjDr5iw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85XcOzm",
                                           "createdAt":  "2023-03-13T21:54:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "captainsafia",
                                           "body":  "Consider making this behavior opt-out instead of opt-in so we can catch this in projects that enable it in the future:\r\n\r\nhttps://github.com/dotnet/aspnetcore/pull/47144#discussion_r1134620492",
                                           "updatedAt":  "2023-03-13T21:54:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85XiNCI",
                                           "createdAt":  "2023-03-14T18:04:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mkArtakMSFT",
                                           "body":  "@captainsafia I assume this is a cross-cutting issue which is applicable to most of the areas. Should we instead file separate issues per area and track that way?",
                                           "updatedAt":  "2023-03-14T18:04:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Xixv8",
                                           "createdAt":  "2023-03-14T19:54:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC301Og==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "EYES",
                                                                               "user":  "maxkoshevoi",
                                                                               "createdAt":  "2023-03-14T19:57:07Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "This might be a task community members would like to contribute to, folks like  @maxkoshevoi and @SteveDunn did a lot of this in dotnet/runtime.",
                                           "updatedAt":  "2023-03-14T19:54:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85XjCUw",
                                           "createdAt":  "2023-03-14T20:34:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "captainsafia",
                                           "body":  "\u003e This might be a task community members would like to contribute to, folks like @maxkoshevoi and @SteveDunn did a lot of this in dotnet/runtime.\r\n\r\nIf a community member is able to help here, that would be great! Especially if we could do this work in one fell swoop and avoid having to put temporary workarounds like the one described [here](https://github.com/dotnet/aspnetcore/issues/47179#issuecomment-1467018470)).\r\n\r\nHappy to provide any interested members with guidance!",
                                           "updatedAt":  "2023-03-14T20:34:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85XpAiU",
                                           "createdAt":  "2023-03-15T16:35:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `.NET 8 Planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2023-03-15T16:35:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85YCYiX",
                                           "createdAt":  "2023-03-20T22:20:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "maxkoshevoi",
                                           "body":  "@captainsafia How would you like to fix nullability warnings in projects that target multiple TFMs?\r\n\r\nIf there\u0027re no warnings in `.NET 8`, but there\u0027re some in the same code in `netstandard`, it just means that `netstandard` SDK is not annotated that well, and warnings are false positive.\r\nHere are couple of examples:\r\n\r\n![image](https://user-images.githubusercontent.com/6609929/226477039-a1cb1f65-5980-43fe-bf99-e7ba3f007ebe.png)\r\n![image](https://user-images.githubusercontent.com/6609929/226477085-6e339e6e-81a0-4bc6-932b-7286df535f16.png)\r\n\r\nBut if we just add `!`, it might suppress valid warnings in the future (after code modification) ",
                                           "updatedAt":  "2023-03-23T14:01:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85Yed4G",
                                           "createdAt":  "2023-03-27T02:17:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "captainsafia",
                                           "body":  "@maxkoshevoi Yep, I think it\u0027s prudent to use the null suppression operator in these cases.",
                                           "updatedAt":  "2023-03-27T02:17:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85oJpgP",
                                           "createdAt":  "2023-10-04T17:40:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `.NET 9 Planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2023-10-04T17:40:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85uiJz-",
                                           "createdAt":  "2023-12-13T17:51:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `.NET 9 Planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2023-12-13T17:51:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86MIbXW",
                                           "createdAt":  "2024-09-14T14:52:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SeanFarrow",
                                           "body":  "Has anyone picked this up? It\u0027s definitely something I\u0027d be interested in working on.",
                                           "updatedAt":  "2024-09-14T14:52:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86MJGpe",
                                           "createdAt":  "2024-09-14T22:30:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "captainsafia",
                                           "body":  "@SeanFarrow: Nobody\u0027s opened any PRs for this yet so you\u0027re definitely welcome to have a go at it! If you want, you can resolve issues for just a single project to avoid having to deal with all ~150 warnings at once. Let me know if you have any questions about this work.",
                                           "updatedAt":  "2024-09-14T22:30:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86MJzlw",
                                           "createdAt":  "2024-09-15T05:26:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SeanFarrow",
                                           "body":  "@captainsafia,\r\n\r\nThanks, I\u0027ll start looking at this this week.\r\n\r\nA couple of questions:\r\nI\u0027m making the assumption we are working against the main branch?\r\n Also, do we just want to use he null coalessing operator () or have some conditional compilation if we are compiling against specific frameworks?\r\n\r\nThanks,\r\nSean.",
                                           "updatedAt":  "2024-09-15T05:26:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86MKARh",
                                           "createdAt":  "2024-09-15T07:25:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "captainsafia",
                                           "body":  "\u003e I\u0027m making the assumption we are working against the main branch?\r\n\r\nYep, these changes should be made in main.\r\n\r\n\u003e Also, do we just want to use he null coalessing operator () or have some conditional compilation if we are compiling against specific frameworks?\r\n\r\nNot exactly -- depending on the type of nullability warning, we may want to handle it \"correctly\" by using APIs that use one other nullability attributes (`[NotNullWhen()]`) or the `Debug.Assert` API with annotations defined that we\u0027ve declared [in shared source here](https://github.com/dotnet/aspnetcore/blob/b6b29ca3c2cdc316e8eb20cb4077ea81f21340c4/src/Shared/Diagnostics/AnalyzerDebug.cs).",
                                           "updatedAt":  "2024-09-15T07:25:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86MKEGW",
                                           "createdAt":  "2024-09-15T08:03:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SeanFarrow",
                                           "body":  "@captainsafia,\r\n\r\nThanks, would you recommend starting with any specific project?\r\n\r\n I\u0027d like to work through this project by project, so do you want a branch/pr for each individual update, or a single branch and then multiple PR\u0027s?\r\n\r\nSean.",
                                           "updatedAt":  "2024-09-15T08:03:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86MOvmL",
                                           "createdAt":  "2024-09-16T11:38:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SeanFarrow",
                                           "body":  "@captainsafia,\r\n\r\nAlso, if you have a list of projects with warnings that would help.\r\n\r\nThanks,\r\nSean. ",
                                           "updatedAt":  "2024-09-16T11:38:02Z"
                                       }
                                   ],
                         "totalCount":  15
                     },
        "title":  "Fix nullability warnings in projects targeting netstandard2.0",
        "labels":  [
                       "area-mvc",
                       "area-blazor",
                       "area-hosting",
                       "area-networking",
                       "Pillar: Technical Debt"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/48620",
        "createdAt":  "2023-06-05T18:41:24Z",
        "number":  48620,
        "author":  "manio143",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC_GCGQ==",
                          "nodes":  [
                                        {
                                            "content":  "CONFUSED",
                                            "user":  "QINGCHARLES",
                                            "createdAt":  "2023-06-06T04:31:38Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ruant",
                                            "createdAt":  "2023-09-13T09:53:53Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "vtomskih",
                                            "createdAt":  "2024-06-05T13:50:54Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "konstantinovaleksej",
                                            "createdAt":  "2025-02-14T11:19:03Z"
                                        }
                                    ],
                          "totalCount":  4
                      },
        "updatedAt":  "2024-02-13T01:33:59Z",
        "body":  "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nI have a custom build setup for my static frontend assets. The compiled frontend assets live in a directory outside of the solution and are being included in `\u003cContent\u003e` in the csproj in a target dynamically, then being copied over to `wwwroot` in the output directory.\r\n\r\nFor development from Visual Studio I have added a piece of code which changes the WebRoot to point at the folder with the compiled assets, so that I can recompile them without rebuilding the service.\r\n\r\n```csharp\r\n[Conditional(\"DEBUG\")]\r\nprivate static void ConfigureDevelopmentTimeWebRoot(IWebHostBuilder builder)\r\n{\r\n\tif (Environment == Environments.Development)\r\n\t\tbuilder.UseWebRoot(\"../../frontend/dist\");\r\n}\r\n```\r\n\r\nIf I put an empty `wwwroot` in the directory of my C# project it works. If I remove the `wwwroot` folder I get an exception while building the `WebHost`. Note that I\u0027m using ASP.NET Core 7 with the old coding style `WebHost.CreateDefaultBuilder(args)` and enabling static files with `app.UseStaticFiles()` in the `builder.Configure((ctx, app) =\u003e {...})`.\r\n\r\nSeems like `StaticWebAssetsLoader` finds a note somewhere (in some manifest) that it should look at `wwwroot` in the project folder, rather than respecting WebRoot setting.\r\n\r\nI looked briefly in the sources and apparently there\u0027s a manifest file being generated in the `obj` folder `staticwebassets.development.json` which specifies those paths - is there some build properties I should be setting? I see in there a lot of files related to ASPNET Core Identity which are not actually present in my build output.\n\n### Expected Behavior\n\nNo exception being thrown if the `wwwroot` doesn\u0027t exist.\n\n### Steps To Reproduce\n\n_No response_\n\n### Exceptions (if any)\n\n```\r\nSystem.IO.DirectoryNotFoundException: \u0027...\\src\\backend\\ManagementHub.Service\\wwwroot\\\u0027\r\n   at Microsoft.Extensions.FileProviders.PhysicalFileProvider..ctor(String root, ExclusionFilters filters)\r\n   at Microsoft.Extensions.FileProviders.PhysicalFileProvider..ctor(String root)\r\n   at Microsoft.AspNetCore.Hosting.StaticWebAssets.StaticWebAssetsLoader.\u003c\u003ec.\u003cUseStaticWebAssetsCore\u003eb__1_0(String contentRoot)\r\n   at Microsoft.AspNetCore.StaticWebAssets.ManifestStaticWebAssetFileProvider..ctor(StaticWebAssetManifest manifest, Func`2 fileProviderFactory)\r\n   at Microsoft.AspNetCore.Hosting.StaticWebAssets.StaticWebAssetsLoader.UseStaticWebAssetsCore(IWebHostEnvironment environment, Stream manifest)\r\n   at Microsoft.AspNetCore.Hosting.StaticWebAssets.StaticWebAssetsLoader.UseStaticWebAssets(IWebHostEnvironment environment, IConfiguration configuration)\r\n   at Microsoft.AspNetCore.Hosting.WebHostBuilder.BuildCommonServices(AggregateException\u0026 hostingStartupErrors)\r\n   at Microsoft.AspNetCore.Hosting.WebHostBuilder.Build()\r\n   at ManagementHub.Service.Program.Main(String[] args) in Program.cs:line 53\r\n```\n\n### .NET Version\n\n7.0.302\n\n### Anything else?\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOXvlslw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85eDLUc",
                                           "createdAt":  "2023-06-06T04:36:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC9OM_w==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "manio143",
                                                                               "createdAt":  "2023-06-06T07:23:01Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "QINGCHARLES",
                                           "body":  "So, just to be clear, the OP is saying that even if he defines a custom `wwwroot` folder the framework _still_ requires the default `wwwroot` folder to exist in the root folder of the project. i.e. the path is probably hardcoded somewhere in the framework.",
                                           "updatedAt":  "2023-06-06T04:36:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85e-WyX",
                                           "createdAt":  "2023-06-15T16:48:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC-E0ug==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "QINGCHARLES",
                                                                               "createdAt":  "2023-06-15T21:16:41Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2023-06-15T16:48:26Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "DirectoryNotFoundException when setting a custom WebRoot at runtime",
        "labels":  [
                       "bug",
                       "area-hosting"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/49515",
        "createdAt":  "2023-07-19T12:21:48Z",
        "number":  49515,
        "author":  "marinasundstrom",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC2_q7w==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "boukenka",
                                            "createdAt":  "2024-04-04T09:03:15Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2025-02-05T16:27:47Z",
        "body":  "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Describe the bug\r\n\r\nThese are observations from implementing auth with Server-side rendered pages (SSR) in Blazor Preview 6 - using Razor components instead of MVC Razor pages.\r\n\r\nCookie auth just works, that is great. But there are some issues:\r\n\r\nIssues:\r\n\r\n- ``AuthorizeRouteView`` doesn\u0027t work with the router. The ``NotAuthorized`` fragment does not get rendered. Instead I get redirected to a layout-less page saying: ``Error: 401 Unauthorized``.\r\n\r\n- The ``LoginDisplay`` doesn\u0027t re-ender when logged in using form. Redirecting to another page would help here.\r\n\r\nQuestions:\r\n- How do I redirect to another URL from a component that server render? ``NavigationManager`` of course doesn\u0027t work here.\r\n\r\nMy github repo (branch): https://github.com/marinasundstrom/Blazor8Test/tree/auth\r\n\r\n### Expected Behavior\r\n\r\nWhen unauthorized and entering page that requires authorization, \r\nI expect the ``NotAuthorized`` fragment to be rendered with the ``MainLayout``.\r\n\r\n### Steps To Reproduce\r\n\r\nhttps://github.com/marinasundstrom/Blazor8Test/tree/auth\r\n\r\n### Exceptions (if any)\r\n\r\n_No response_\r\n\r\n### .NET Version\r\n\r\n8.0.100-preview.6.23330.14\r\n\r\n### Anything else?\r\n\r\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOaufw9A==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85h4oho",
                                           "createdAt":  "2023-07-19T14:49:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "javiercn",
                                           "body":  "\u003e How do I redirect to another URL from a component that server render? NavigationManager of course doesn\u0027t work here.\r\n\r\nNavigation manager should work (not sure if it does in Preview6). There might be some conflicts with the SSR navigation manager overriding the static renderer one.",
                                           "updatedAt":  "2023-07-19T14:49:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85h4qst",
                                           "createdAt":  "2023-07-19T14:54:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "marinasundstrom",
                                           "body":  "@javiercn OK. Yes. I\u0027m on Preview 6 and it uses the ``RemoteNavigationManager`` even for server-side rendered page. And when invoking ``NavigateTo`` on the server, an exception is thrown.\r\n\r\nMy workaround was to build my own \"ServerNavigationManager\" (Not inheriting from NavigationManager) which modifies the ``HttpContext.Response`` to redirect to the specified location.",
                                           "updatedAt":  "2023-07-19T14:54:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85h47v9",
                                           "createdAt":  "2023-07-19T15:33:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "javiercn",
                                           "body":  "@marinasundstrom where are you seeing the 401 from the authorizeview?\r\n\r\nOn SSR, the auth middleware should be handling the auth for the page.",
                                           "updatedAt":  "2023-07-19T15:33:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85h48m-",
                                           "createdAt":  "2023-07-19T15:36:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "marinasundstrom",
                                           "body":  "@javiercn Here: https://blazor8app.graypebble-0c46426e.westus2.azurecontainerapps.io/auth\r\n\r\n\"/auth\" is a page.\r\n\r\nUnless I have missed something in my code.\r\n\r\nhttps://github.com/marinasundstrom/Blazor8Test",
                                           "updatedAt":  "2023-07-19T15:36:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85kmuow",
                                           "createdAt":  "2023-08-22T09:58:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "marinasundstrom",
                                           "body":  "I have learned that the component model doesn\u0027t handle the cases the same way with SSR as with Client. That makes sense, since it is about requests.\r\n\r\nBut the symptoms are still here in RC1, somewhere between component and middleware.\r\n\r\nNot even ``app.UseStatusCodePagesWithRedirects(\"/error/{0}\");`` catches it as with other errors.\r\n\r\nStill just a page with the text: ``Error: 401``\r\n\r\nComponent file: https://github.com/marinasundstrom/Blazor8Test/blob/auth/src/Server/Pages/Auth.razor",
                                           "updatedAt":  "2023-08-22T10:02:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85oroff",
                                           "createdAt":  "2023-10-10T21:13:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "To learn more about what this message means, what to expect next, and how this issue will be handled you can read our [Triage Process document](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).\nWe\u0027re moving this issue to the .NET 9 Planning milestone for future evaluation / consideration. Because it\u0027s not immediately obvious what is causing this behavior, we would like to keep this around to collect more feedback, which can later help us determine how to handle this. We will re-evaluate this issue, during our next planning meeting(s).\nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact work.",
                                           "updatedAt":  "2023-10-10T21:13:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85q5_D0",
                                           "createdAt":  "2023-11-05T00:02:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "halter73",
                                           "body":  "WebApplication\u0027s automatic UseAuthorization() insertion happens before the user-configured UseStatusCodePagesWithRedirecte(). By adding UseAuthorization() explicitly, we can ensure UseStatusCodePagesWithRedirecte() \"sees\" unauthorized requests.\r\n\r\nhttps://learn.microsoft.com/en-us/aspnet/core/fundamentals/minimal-apis/middleware?view=aspnetcore-8.0\r\n\r\nI submitted a PR to your github repo to fix the issue. https://github.com/marinasundstrom/Blazor8Test/pull/3\r\n\r\nI don\u0027t think this is a Blazor specific issue, but I do wonder if WebApplication could be a little smarter and insert UserAuthorization after UseStatusCodePages if it\u0027s being used, because this seems really easy to mess up. I don\u0027t want to make the automatic middleware initialization much more complicated than it already is though.",
                                           "updatedAt":  "2023-11-05T00:02:44Z"
                                       }
                                   ],
                         "totalCount":  7
                     },
        "title":  "WebApplication.UseStatusCodePages() cannot handle unauthorized requests without explicit UseAuthorization() call",
        "labels":  [
                       "area-hosting",
                       "area-middleware"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/50236",
        "createdAt":  "2023-08-21T17:39:44Z",
        "number":  50236,
        "author":  "twsouthwick",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODRR-iQ==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "bwilliams1",
                                            "createdAt":  "2023-08-23T11:42:44Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "DarthSonic",
                                            "createdAt":  "2023-11-17T12:07:47Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "mtdaniels",
                                            "createdAt":  "2023-12-01T16:16:29Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "oatkins",
                                            "createdAt":  "2024-02-13T17:54:09Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "0xced",
                                            "createdAt":  "2024-07-03T07:34:13Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "CZEMacLeod",
                                            "createdAt":  "2024-11-21T20:48:19Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "JobaDiniz",
                                            "createdAt":  "2025-09-17T13:59:25Z"
                                        }
                                    ],
                          "totalCount":  7
                      },
        "updatedAt":  "2025-09-17T14:01:40Z",
        "body":  "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nDuring the 2.x timeframe,  `Microsoft.AspNetCore.WebUtilities` was available as a .NET Standard 2.0 NuGet package. It was then moved into the shared framework. However, it is now a package again (as of https://github.com/dotnet/aspnetcore/pull/48265), but only supports .NET 8. People had taken a reliance on it as a package in shared libraries during the migration process but are not able to anymore (they couldn\u0027t technically after 2.x, but they just kept the old one it seems).\n\n### Describe the solution you\u0027d like\n\n`Microsoft.AspNetCore.WebUtilities` and `Microsoft.Net.Http.Headers` should support .NET Standard 2.0.\n\n### Additional context\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOxOIX9w==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85kp5Fm",
                                           "createdAt":  "2023-08-22T18:26:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BrennanConroy",
                                           "body":  "@mkArtakMSFT it looks like your team is doing work with these packages for blazor scenarios. Can you evaluate this issue?",
                                           "updatedAt":  "2023-08-22T18:26:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85lMzIT",
                                           "createdAt":  "2023-08-29T17:23:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BrennanConroy",
                                           "body":  "Moving to blazor so the team sees this in triage.",
                                           "updatedAt":  "2023-08-29T17:23:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85mSYxA",
                                           "createdAt":  "2023-09-12T16:51:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "javiercn",
                                           "body":  "I think if we keep net8.0 and just add netstandard2.0 it will work?",
                                           "updatedAt":  "2023-09-12T16:51:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85mSZQM",
                                           "createdAt":  "2023-09-12T16:52:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2023-09-12T16:52:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85mUHmF",
                                           "createdAt":  "2023-09-12T22:00:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODuxzhA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "bwilliams1",
                                                                               "createdAt":  "2023-09-14T19:48:46Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "DarthSonic",
                                                                               "createdAt":  "2023-11-17T12:08:26Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "CZEMacLeod",
                                                                               "createdAt":  "2024-08-19T16:32:37Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "twsouthwick",
                                           "body":  "\u003e I think if we keep net8.0 and just add netstandard2.0 it will work?\r\n\r\nYup that would help those who have been using the 2.1 version and aren\u0027t able to upgrade to the latest 8.0 version.",
                                           "updatedAt":  "2023-09-12T22:00:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85uiDRM",
                                           "createdAt":  "2023-12-13T17:31:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODPe_JA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "twsouthwick",
                                                                               "createdAt":  "2023-12-13T18:27:01Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "mkArtakMSFT",
                                           "body":  "@twsouthwick would you mind sending us a PR with the above proposal ?",
                                           "updatedAt":  "2023-12-13T17:31:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85uiDVI",
                                           "createdAt":  "2023-12-13T17:32:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `.NET 9 Planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2023-12-13T17:32:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85zwi4t",
                                           "createdAt":  "2024-02-13T17:56:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "oatkins",
                                           "body":  "\u003e \u003e I think if we keep net8.0 and just add netstandard2.0 it will work?\r\n\u003e \r\n\u003e Yup that would help those who have been using the 2.1 version and aren\u0027t able to upgrade to the latest 8.0 version.\r\n\r\nI came to this hoping there would be a 2.0 version... netstandard 2.1 doesn\u0027t work for those of us still supporting .NET Framework projects.\r\n\r\nVery happy to see the willingness to add this back. Thank you!",
                                           "updatedAt":  "2024-02-13T17:56:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde854kEPj",
                                           "createdAt":  "2024-03-27T13:05:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bwilliams1",
                                           "body":  "happy to see forward progress on this! looking forward to integrating the .net standard 2.0 version and removing the code we copy/pasted out of the library.",
                                           "updatedAt":  "2024-03-27T13:05:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde87CbFO6",
                                           "createdAt":  "2025-09-06T11:09:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "javiercn",
                                           "body":  "Untagging blazor since this is not Blazor specific",
                                           "updatedAt":  "2025-09-06T11:09:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde87E4hf3",
                                           "createdAt":  "2025-09-17T14:01:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "JobaDiniz",
                                           "body":  "Such a lovely and well-written utility to deal with _query strings_ that it should be in a \"core\" dotnet lib, not part of aspnetcore, since we deal with query strings in other ways, like building urls to `HttpClient` requests...",
                                           "updatedAt":  "2025-09-17T14:01:39Z"
                                       }
                                   ],
                         "totalCount":  11
                     },
        "title":  "Add .NET Standard 2.0 support to Microsoft.AspNetCore.WebUtilities",
        "labels":  [
                       "enhancement",
                       "area-hosting"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/50393",
        "createdAt":  "2023-08-29T10:54:02Z",
        "number":  50393,
        "author":  "kimbell",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC3lapQ==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "rmja",
                                            "createdAt":  "2024-04-30T13:18:39Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2024-09-24T04:23:39Z",
        "body":  "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nWe are updating applications to net7 and discovered problems serving static files. We have a Razor convention that maps any unknown url to /index. Using debug logging, we figured out that it didn\u0027t match any static file, and used the Razor convention instead. \r\n\r\nLogging output:\r\n```\r\n1 candidate(s) found for the request path \u0027/bundles/shell-bundle.es.js\u0027\r\nEndpoint \u0027/Index\u0027 with route pattern \u0027{*url}\u0027 is valid for the request path \u0027/bundles/shell-bundle.es.js\u0027\r\nRequest matched endpoint \u0027/Index\u0027\r\nStatic files was skipped as the request already matched an endpoint.\r\n```\r\n\r\nI have created a small repro. This works as excepted on net6, but fails on net7 and net8.\r\nIf I remove UsePathBase(), things seem to be working again.\n\n### Expected Behavior\n\nIt should be possible to use \r\n\r\n- Razor Convention\r\n- UsePathBase()\r\n- UseStaticFiles()\r\n\r\nat the same time\n\n### Steps To Reproduce\n\nhttps://github.com/kimbell/RazorStatics\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n8.0.100-preview.7.23376.3\n\n### Anything else?\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOjUUxWQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85lKl8P",
                                           "createdAt":  "2023-08-29T11:37:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kimbell",
                                           "body":  "For additional context, I maintain an internal framework that is built on top of ASP.NET; handles things such as logging, metrics, authentication and ensures all our services run middleware in the correct order. The previous version of this framework had to support .NET Framework, so it was cross-compiled for net472 (ASP.NET Core 2.2) and .net6. Due to this we still used the Startup class system. This is the first time we are running applications built on the minimal api infrastructure. ",
                                           "updatedAt":  "2023-08-29T11:37:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85lPXh1",
                                           "createdAt":  "2023-08-30T05:43:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kimbell",
                                           "body":  "One workaround I have tested for this is to run some custom middleware that checks if the file exists on disk, and if that is the case, sets the Endpoint information to null. The debug logging still shows the static file middleware is ignored, but it seems to return the file as expected.\r\n\r\nIs this a bad idea? Something I haven\u0027t though of?\r\n\r\n ```cs\r\ninternal class FixEndpointMiddleware\r\n {\r\n     private readonly RequestDelegate _next;\r\n     private readonly IWebHostEnvironment _hostEnvironment;\r\n     private readonly IOptions\u003cStaticFileOptions\u003e _options;\r\n\r\n     public FixEndpointMiddleware(\r\n         RequestDelegate next,\r\n         IWebHostEnvironment hostEnvironment,\r\n         IOptions\u003cStaticFileOptions\u003e options)\r\n     {\r\n         _next = next;\r\n         _hostEnvironment = hostEnvironment;\r\n         _options = options;\r\n     }\r\n\r\n     public async Task Invoke(HttpContext httpContext)\r\n     {\r\n         var path = httpContext.Request.Path;\r\n\r\n         // when using a combination of static file middleware, UsePathBase() and Razor wildcard convention\r\n         // the Endpoint information is set before the static file middleware runs.\r\n         // this middleware will exit when the Endpoint information has been set, even if it exists on disk.\r\n         // this is a workaround that always ensures it\u0027s null when the file exists on disk\r\n\r\n         if (path.StartsWithSegments(_options.Value.RequestPath, out var subpath))\r\n         {\r\n             var fileProvider = _options.Value.FileProvider ?? _hostEnvironment.WebRootFileProvider;\r\n\r\n             var file = fileProvider.GetFileInfo(subpath);\r\n             if (file.Exists)\r\n             {\r\n                 var endpointFeature = httpContext.Features.Get\u003cIEndpointFeature\u003e();\r\n                 if (endpointFeature != null)\r\n                 {\r\n                     endpointFeature.Endpoint = null;\r\n                 }\r\n             }\r\n         }\r\n         await _next(httpContext).ConfigureAwait(false);\r\n     }\r\n }\r\n```",
                                           "updatedAt":  "2023-08-30T05:43:42Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85lPZtM",
                                           "createdAt":  "2023-08-30T05:54:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kimbell",
                                           "body":  "We use Swashbuckle for SwaggerUI. This fails because it uses StaticFileMiddleware and EmbeddedFileProvider. When it requests the supporting js files, the content of my index razor page is returned.",
                                           "updatedAt":  "2023-08-30T05:54:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85lQ90s",
                                           "createdAt":  "2023-08-30T11:01:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kimbell",
                                           "body":  "After some more digging, it looks like the problematic code is located in the UsePathBase() method. \r\n\r\nIn #42876 this method was updated to include this code. \r\n\r\n```cs\r\n if (app.Properties.TryGetValue(RerouteHelper.GlobalRouteBuilderKey, out var routeBuilder) \u0026\u0026 routeBuilder is not null)\r\n        {\r\n            return app.Use(next =\u003e\r\n            {\r\n                var newNext = RerouteHelper.Reroute(app, routeBuilder, next);\r\n                return new UsePathBaseMiddleware(newNext, pathBase).Invoke;\r\n            });\r\n        }\r\n```\r\nIf we remove __GlobalEndpointRouteBuilder from Properties before calling UsePathBase(), then our code works as we except it to. Then we get static files, UsePathBase() and Razor wildcard to work at the same time.\r\n",
                                           "updatedAt":  "2023-08-30T11:01:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86NRTFZ",
                                           "createdAt":  "2024-09-24T04:23:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "nsmithdev",
                                           "body":  "I\u0027m having a similar problem with static files not being served properly when using `UsePathBase(\"/App\");` even when the file request does not have the prefix.\r\n\r\nUseStaticFiles is before UseRouting so if the file exist it should serve it even if there is a route for that path.\r\nAfter adding UsePathBase i get the route not the file since UsePathBase adds RerouteHelper.Reroute()\r\nThen in the StaticFileMiddleware ValidateNoEndpointDelegate() finds the route added by UsePathBase so it does not serve the file.\r\n\r\n```\r\nvar builder = WebApplication.CreateBuilder(args);\r\nvar app = builder.Build();\r\n\r\napp.Use(async (context, next) =\u003e {\r\n    var logger = context.RequestServices.GetRequiredService\u003cILogger\u003cBla\u003e\u003e();\r\n    var requestDelegate = context.GetEndpoint()?.RequestDelegate;\r\n    var hasRequestDelegate = requestDelegate is not null;\r\n    logger.LogInformation(\"before. Has Request Delegate {hasDelegate}\", hasRequestDelegate);\r\n    await next();\r\n});\r\n\r\napp.UsePathBase(\"/App\");\r\n\r\napp.Use(async (context, next) =\u003e {\r\n    var logger = context.RequestServices.GetRequiredService\u003cILogger\u003cBla\u003e\u003e();\r\n    var requestDelegate = context.GetEndpoint()?.RequestDelegate;\r\n    var hasRequestDelegate = requestDelegate is not null;\r\n    logger.LogInformation(\"after. Has Request Delegate {hasDelegate}\", hasRequestDelegate);\r\n    await next();\r\n});\r\n\r\napp.UseStaticFiles();\r\n\r\napp.UseRouting();\r\n\r\napp.MapGet(\"/bla.jpg\", async (request) =\u003e {\r\n    await request.Response.WriteAsync(\"You got the route\");\r\n});\r\n\r\napp.Run();\r\n\r\nclass Bla {}\r\n```\r\n\r\nOutput:\r\n```\r\nbefore. Has Request Delegate False\r\nafter. Has Request Delegate True\r\n```",
                                           "updatedAt":  "2024-09-24T04:23:38Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "Endpoint information available before calling UseRouting()",
        "labels":  [
                       "bug",
                       "area-hosting"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/50578",
        "createdAt":  "2023-09-07T20:53:41Z",
        "number":  50578,
        "author":  "mconnew",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-02-13T01:24:59Z",
        "body":  "## Background and Motivation\r\nThere are two steps to shutting down a `WebApplication`, calling `StopAsync`, and disposing it. Omitting either of these steps can have negative consequences. If someone is transitioning from `WebHost` to `WebApplication`, the dispose behavior is different and can lead to introducing a bug/unwanted behavior. If you don\u0027t call `WebHost.StopAsync`, when you dispose the `WebHost` it implicitly calls `StopAsync`. `WebApplication` does not ensure `StopAsync` has been called when you dispose it. The consequences of this is that any `IHostedService` instances won\u0027t have their `StopAsync` method called when disposing a `WebApplication` whereas when using `WebHost` they did.  \r\nThe second problem is if you omit disposing your `WebApplication`, you will leak some memory which is never reclaimed by GC. See #45621 for details.  \r\n\r\n## Proposed Analyzer\r\n\r\n### Analyzer Behavior and Message\r\nIf a `WebApplication` is used with a using statement and there is not a call to StopAsync within the using statement code block, then an info message should be emitted informing the developer that any `IHostedService` instances may not be cleanly stopped if disposing without calling StopAsync. Similarly if not using a using block but manually calling `Dispose`/`DisposeAsync`, this is also the case. This would be an info usage rule.  \r\n\r\nIf a call to `WebApplication.StopAsync` is made without a subsequent call to `WebApplication.Dispose()` or `WebApplication.DisposeAsync()`, then a warning should be emitted telling the developer that they will leak memory. Alternatively, fix issue #45621 and then this won\u0027t be needed, but there doesn\u0027t seem to be any traction on that issue. This would be a warning reliability rule.  \r\n\r\n### Category\r\n\r\n- [ ] Design\r\n- [ ] Documentation\r\n- [ ] Globalization\r\n- [ ] Interoperability\r\n- [ ] Maintainability\r\n- [ ] Naming\r\n- [ ] Performance\r\n- [x] Reliability\r\n- [ ] Security\r\n- [ ] Style\r\n- [x] Usage\r\n\r\n### Severity Level\r\n\r\n- [ ] Error\r\n- [x] Warning\r\n- [x] Info\r\n- [ ] Hidden\r\n\r\n## Usage Scenarios\r\nThis should trigger the info about needing to call `StopAsync`:\r\n```c#\r\nvar builder = WebApplication.CreateBuilder(Array.Empty\u003cstring\u003e());\r\nbuilder.WebHost.UseKestrel(options =\u003e\r\n{\r\n    options.ListenLocalhost(8443);\r\n});\r\nbuilder.Logging.ClearProviders();\r\nawait using (var app = builder.Build())\r\n{\r\n    app.Run(async context =\u003e\r\n    {\r\n        await context.Response.WriteAsync(\"Hello world!\");\r\n    });\r\n    await app.StartAsync();\r\n    await SomeExternalWaitingMechanismAsync();\r\n}\r\n```\r\nThis code should also trigger the info about needing to call `StopAsync`:\r\n```c#\r\nvar builder = WebApplication.CreateBuilder(Array.Empty\u003cstring\u003e());\r\nbuilder.WebHost.UseKestrel(options =\u003e\r\n{\r\n    options.ListenLocalhost(8443);\r\n});\r\nbuilder.Logging.ClearProviders();\r\nvar app = builder.Build();\r\napp.Run(async context =\u003e\r\n{\r\n    await context.Response.WriteAsync(\"Hello world!\");\r\n});\r\nawait app.StartAsync();\r\nawait SomeExternalWaitingMechanismAsync();\r\n```\r\nFollowed by one of the following lines:\r\n```c#\r\n((IDisposeable)app).Dispose(); // WebApplication explicitly implements IDisposable so must be cast\r\n(app as IDisposable).Dispose();\r\n(app as IDisposable)?.Dispose(); // null propagation as compiler can\u0027t tell whether app implements IDisposable\r\nawait app.DisposeAsync();\r\n```\r\n\r\n\r\nThis should trigger the warning about needing to dispose the WebApplication\r\n```c#\r\nvar builder = WebApplication.CreateBuilder(Array.Empty\u003cstring\u003e());\r\nbuilder.WebHost.UseKestrel(options =\u003e\r\n{\r\n    options.ListenLocalhost(8443);\r\n});\r\nbuilder.Logging.ClearProviders();\r\nvar app = builder.Build();\r\napp.Run(async context =\u003e\r\n{\r\n    await context.Response.WriteAsync(\"Hello world!\");\r\n});\r\nawait app.StartAsync();\r\nawait SomeExternalWaitingMechanismAsync();\r\nawait app.StopAsync();\r\n```\r\n\r\n## Risks\r\nThe overhead of running the analyzer will take a non-zero amount of time.\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOaqZrMQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85qpmsx",
                                           "createdAt":  "2023-11-01T16:42:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2023-11-01T16:42:14Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Reduce chance of stopping a WebApplication incorrectly by providing compiler info/warning",
        "labels":  [
                       "enhancement",
                       "api-suggestion",
                       "analyzer",
                       "area-hosting"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/50773",
        "createdAt":  "2023-09-18T10:05:06Z",
        "number":  50773,
        "author":  "kimbell",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC_B8gQ==",
                          "nodes":  [
                                        {
                                            "content":  "CONFUSED",
                                            "user":  "aidapsibr",
                                            "createdAt":  "2025-02-12T18:52:14Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2025-08-22T18:01:54Z",
        "body":  "This little adventure started some weeks ago as we were updating our applications from .NET6 to .NET7. We have over 150 internal apps running on .NET, so we have an internal framework that handles all the common things: complete control over the middleware pipeline being one of them.\r\n\r\nOur framework for .NET6 was still using Startup since we needed to support old .NET Framework applications as well. For .NET7, we removed .NET Framework and moved over to minimal API\u0027s setup since that is where all the cool kids are these days. During this update we discovered a routing change that was reported as #50393, but we managed to find a workaround.\r\n\r\nWith the release on .NET8 RC1, we started updating our framework to support that, and came across the same error we had on .NET7.\r\nThe core of the problem is that if we use static files, UsePathBase and Razor pages with a match-all filter, then we never get static files. We always get the default Razor page.\r\n\r\nI\u0027ve been trying different things, and it just gets even more confusing. My main branch is running .NET7 and works with the workaround. I created a new branch where we multi-target .NET7 and .NET8; selecting .NET7 as the target framework and the code stops working. \r\n\r\nOne of the selling points for minimal api\u0027s was to move away from the ceremony and magic of MVC. Debugging this new minimal api magic isn\u0027t that much easier.\r\n\r\n\r\nI\u0027ve updated my repro with some tests that illustrate things: https://github.com/kimbell/RazorStatics\r\n\r\nFor .NET6, all tests are green\r\nFor .NET7, static file tests only work with our workaround\r\nFor .NET8, no static file tests work.\r\n\r\n```\r\nPassed!  - Failed:     0, Passed:     6, Skipped:     0, Total:     6, Duration: 361 ms - RazorStatics.Tests.dll (net6.0)\r\nFailed!  - Failed:     2, Passed:     4, Skipped:     0, Total:     6, Duration: 273 ms - RazorStatics.Tests.dll (net7.0)\r\nFailed!  - Failed:     4, Passed:     2, Skipped:     0, Total:     6, Duration: 320 ms - RazorStatics.Tests.dll (net8.0)\r\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOZs8glw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85mwvbq",
                                           "createdAt":  "2023-09-18T17:29:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "javiercn",
                                           "body":  "This seems to be related to the interactions with the implicit registrations and the middleware defined on the pipeline.\r\n\r\nFor what its worth `/{*path}` will always match, so it comes down to whether `UseStaticFiles` gets to see an endpoint in the HttpContext (in which case it doesn\u0027t try to match) or not.\r\n\r\nIf you have a lot of customization in the pipeline, you might want to use the `WebHostBuilder` directly to exactly configure the pipeline as you need (and avoid all the global implicit middleware that we plug in on the streamlined approach).",
                                           "updatedAt":  "2023-09-18T17:29:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85mzyCX",
                                           "createdAt":  "2023-09-19T05:25:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kimbell",
                                           "body":  "I added an additional test in my repro where I don\u0027t set up `UsePathBase()` at all. Things work fine in .NET6 and .NET7, but fail in .NET8.\r\n\r\nCode that used to work without any problems in .NET6 got worse in .NET7 and even more worse in .NET8. If this is intentional, it\u0027s a surprising behavior.",
                                           "updatedAt":  "2023-09-19T05:25:33Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Breaking routing behavior between net6, net7 and net8.",
        "labels":  [
                       "investigate",
                       "area-hosting"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/51033",
        "createdAt":  "2023-09-29T21:49:16Z",
        "number":  51033,
        "author":  "ithline",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-02-13T01:22:36Z",
        "body":  "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nA am trying to use `WebApplication.CreateEmptyBuilder` but my host configuration is loaded from multiple sources (files), but there is no way to provide host configuration to `WebApplication`, even though the inner `HostApplicationBuilder` accepts a `ConfigurationManager` through its options.\r\nCurrent design forces me to copy the contents of the `WebApplicationBuilder` class into my project, just to be able to forward my \u0027external\u0027 configuration.\n\n### Describe the solution you\u0027d like\n\nAdd `ConfigurationManager? Configuration` property to the `WebApplicationOptions` that can be used to seed configuration by users.\n\n### Additional context\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOaqZD1w==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85qpkPX",
                                           "createdAt":  "2023-11-01T16:35:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "We\u0027ve moved this issue to the Backlog milestone. This means that it is not going to be worked on for the coming release. We will reassess the backlog following the current release and consider this item at that time. To learn more about our issue management process and to have better expectation regarding different types of issues you can read our [Triage Process](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2023-11-01T16:35:31Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Allow WebApplication.CreateEmptyBuilder to have host configuration provided using ConfigurationManager",
        "labels":  [
                       "enhancement",
                       "area-hosting"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/54025",
        "createdAt":  "2023-10-03T05:54:52Z",
        "number":  54025,
        "author":  "samba2",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODC9g0w==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "maxisam",
                                            "createdAt":  "2024-01-15T19:52:26Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "vertonghenb",
                                            "createdAt":  "2024-02-02T11:42:34Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "cheng93",
                                            "createdAt":  "2024-03-19T22:21:30Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "igor-dyrman",
                                            "createdAt":  "2024-09-26T13:26:28Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "nicystalker",
                                            "createdAt":  "2024-11-28T15:11:21Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "obairka",
                                            "createdAt":  "2025-04-29T19:55:28Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "akhanalcs",
                                            "createdAt":  "2025-05-29T14:48:03Z"
                                        }
                                    ],
                          "totalCount":  7
                      },
        "updatedAt":  "2025-02-05T16:21:00Z",
        "body":  "### URL\n\nhttps://learn.microsoft.com/en-us/aspnet/core/test/integration-tests?view=aspnetcore-7.0\n\n### Operating system\n\nWindows\n\n### More information about your system\n\n_No response_\n\n### Description\n\nThe integration testing tutorial contains a very detailed description of how to run integration tests for web apps using the [WebApplicationFactory](https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.mvc.testing.webapplicationfactory-1). \r\n\r\nHowever, I have a **worker service** which I want to test in the same way. How do I do that?\r\n\r\n## Example\r\n\r\nGiven this worker service:\r\n`````csharp\r\n// Program.cs\r\n\r\nusing SampleWorker;\r\n\r\nIHost host = Host.CreateDefaultBuilder(args)\r\n    .ConfigureServices(services =\u003e { services.AddHostedService\u003cWorker\u003e(); })\r\n    .Build();\r\n\r\nhost.Run();\r\n`````\r\n\r\n````csharp\r\n// Worker.cs\r\n\r\npublic class Worker : BackgroundService\r\n{\r\n    private readonly ILogger\u003cWorker\u003e _logger;\r\n\r\n    public Worker(ILogger\u003cWorker\u003e logger)\r\n    {\r\n        _logger = logger;\r\n    }\r\n\r\n    protected override async Task ExecuteAsync(CancellationToken stoppingToken)\r\n    {\r\n        // - connect to a middleware (data source)\r\n        // - connect to database (data sink)\r\n        // - received events from middleware, transform + persist in database\r\n    }\r\n}\r\n````\r\n\r\nI want to be able to write an end-to-end test which provides data source and sink via testcontainers (works) and the unit under test, the worker service, somehow directly via .NET Core. With an web application you would use the WebApplicationFactory\u003cProgram\u003e. I am looking for a way to do the same with a Worker service.\r\n\r\nHere is the test I\u0027d like to be able to write:\r\n````csharp\r\n\r\npublic class E2eTest\r\n{\r\n    /// \u003csummary\u003e\r\n    /// Tests the full round trip from an event being\r\n    /// - picked up by the worker service\r\n    /// - processed and transformed\r\n    /// - persisted to the database.\r\n    /// \u003c/summary\u003e\r\n    [Fact]\r\n    public void EventIsProcessedAndWrittenToDatabase()\r\n    {\r\n        // arrange\r\n        // - start middleware as data source (testcontainers)\r\n        // - start database as data sink (testcontainers)\r\n        \r\n        // TODO there is no WorkerFactory.\r\n        //      How can I start my SampleWorker with all the config in Program.cs ?\r\n        var unitUnderTest = new WorkerFactory\u003cProgram\u003e();\r\n        \r\n        // act\r\n        // - publish an event to the middleware (data source)\r\n        \r\n        // assert\r\n        // - check that there are entries in the database (data sink)\r\n    }\r\n}\r\n````\r\nI\u0027ve got a similar version of this test already working by [running the SamplerWorker also as a Docker container](https://dotnet.testcontainers.org/api/create_docker_image/). However, I want to be able to easily debug my unit under test which gets really complicated with my current Docker approach.\r\n\r\n How can directly start the worker service in my test ? Thank you for your support!\r\n\r\nfyi: I\u0027ve also asked this question on [Stackoverflow](https://stackoverflow.com/questions/77211786/how-to-start-a-full-net-core-worker-service-in-an-integration-end-to-end-test).\n\n### dotnet --info\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOc9Haxw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85z0dq8",
                                           "createdAt":  "2023-10-04T02:05:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mairaw",
                                           "body":  "@javiercn @riande can you help with this?",
                                           "updatedAt":  "2023-10-04T02:05:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85z0dq_",
                                           "createdAt":  "2023-11-30T18:39:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOD1Somw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "maxisam",
                                                                               "createdAt":  "2024-01-15T19:52:35Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "CesarD",
                                                                               "createdAt":  "2024-10-08T17:34:40Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "ShawnTheBeachy",
                                           "body":  "I\u0027ve come up with a workable solution until Microsoft gives better guidance. I\u0027ve posted it on the SO post you linked to.",
                                           "updatedAt":  "2023-11-30T18:39:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85z0drE",
                                           "createdAt":  "2023-11-30T21:20:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "samba2",
                                           "body":  "@ShawnTheBeachy just had a first brief look. Thank you for this detailed response 👍 I will dig into it as soon as possible. ",
                                           "updatedAt":  "2023-11-30T21:20:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85z0drH",
                                           "createdAt":  "2023-12-30T08:50:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "igotabs",
                                           "body":  "@ShawnTheBeachy  There is one problem with this approach, you did not solve and we did. Problem is descibed as following: what if we want to use two or more Worker services, each of which has of course its own appsettings.json file. But current approach do not perform change of its ContentRootPath to assembly source root directory (project directory), but it takes it from Executable directory, which of course never has both files of appsettings.json from both worker services, because they have same names.\r\n\r\nIndeed WebApplicationFactory has its own solution which based on directory upper traversal from assembly executable directory and then assign it to content root of builder. We have really smart solution.\r\n```\r\n\r\nprivate static string GetThisFilePath([CallerFilePath] string path = \"\")\r\n{\r\n    return path;\r\n}\r\n\r\nprivate static HostApplicationBuilder CreateHostBuilder(HostApplicationBuilderSettings settings)\r\n{\r\n    var path = GetThisFilePath();\r\n    var builder = GetApplicationHostBuilder(settings, path);\r\n}\r\n\r\npublic static HostApplicationBuilder GetApplicationHostBuilder(HostApplicationBuilderSettings settings, string path)\r\n {\r\n     var directory = Path.GetDirectoryName(path);\r\n     if (settings != null)\r\n         settings.ContentRootPath = directory;\r\n     return Host.CreateApplicationBuilder(settings);\r\n }\r\n```\r\nNote private static string GetThisFilePath([CallerFilePath] string path = \"\") method should be placed in Program.cs file to get desired effect",
                                           "updatedAt":  "2023-12-30T09:02:00Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "[.NET Tutorial]: Integration testing a Worker Service",
        "labels":  [
                       "Docs",
                       "area-hosting"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/51617",
        "createdAt":  "2023-10-24T19:13:57Z",
        "number":  51617,
        "author":  "tim-gill",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-29T14:00:27Z",
        "body":  "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nThere are many issues with using the current diagnostic events (for instance you need to use reflection to retrieve the payload for the majority of them - see https://github.com/dotnet/aspnetcore/issues/48616) but they are also incomplete assuming that the naming of \"deprecatedxxx\" for some payloads in the code means that they should not be taken as a dependency.\r\n\r\nIf a service developer is interested in adding custom logging/metrics per request they have two options - add their own middleware layer, or use a diagnostic events listener. The latter has a bunch of benefits in terms of code decoupling and avoiding unnecessary slowdown of the core request processing loop. However, the usage of it is problematic.\r\n\r\nThe \"deprecated\u0027 event type Microsoft.AspNetCore.Hosting.EndRequest (payload type DeprecatedDiagnosticsEndRequest (private)) was fired for every successfully processed request and requests thowing unhandled exceptions instead raised Microsoft.AspNetCore.Hosting.UnhandledException events (also with a private class payload). This meant a listener could process both of these event types and get a 1:1 match with the processed events (see code [here](https://github.com/dotnet/aspnetcore/blob/662795d5aa2d4608e33a972415c81699e8af5736/src/Hosting/Hosting/src/Internal/HostingApplicationDiagnostics.cs#L184)).\r\nIn contrast, developers not wanting to take a dependency on private class payloads with \"deprecated\" in the name could use the  Microsoft.AspNetCore.Hosting.HttpRequestIn.Stop event (with a HttpContext payload) and get all of the events. However, there is nothing in the context which flags the request as having raised an exception (see code [here](https://github.com/dotnet/aspnetcore/blob/662795d5aa2d4608e33a972415c81699e8af5736/src/Hosting/Hosting/src/Internal/HostingApplicationDiagnostics.cs#L210)) - severely hampering its usefulness in powering custom logs and meters.\r\n\r\nWhile you can potentially look at adding a flag to the httpcontext when processing UnhandledException events to stop double processing in the HttpRequestIn.Stop event processing, this effectively creates a public contract in the ordering of these events and makes things too brittle for long term reliability concerns.\n\n### Describe the solution you\u0027d like\n\nIdeally a single event type could be used here - Exception details raised in processing the request could be added to the request context and then be easily retrievable by a single event processor targeting HttpRequestIn.Stop.\r\n\r\nI also encourage making all diagnostic payload classes public. Right now they are effectively public as any developer using them needs to use Reflection to retrieve payload values - this again makes the feature too dangerous to use for many developers.\n\n### Additional context\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOaqYoqA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85qpiio",
                                           "createdAt":  "2023-11-01T16:32:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Thanks for contacting us.\n\nWe\u0027re moving this issue to the `.NET 9 Planning` milestone for future evaluation / consideration. We would like to keep this around to collect more feedback, which can help us with prioritizing this work. We will re-evaluate this issue, during our next planning meeting(s). \nIf we later determine, that the issue has no community involvement, or it\u0027s very rare and low-impact issue, we will close it - so that the team can focus on more important and high impact issues.\nTo learn more about what to expect next and how this issue will be handled you can read more about our triage process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/TriageProcess.md).",
                                           "updatedAt":  "2023-11-01T16:32:21Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Hosting Diagnostics risk double counting of events",
        "labels":  [
                       "enhancement",
                       "partner",
                       "area-hosting",
                       "area-networking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/52152",
        "createdAt":  "2023-11-17T12:42:11Z",
        "number":  52152,
        "author":  "gfoidl",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-03-06T17:56:57Z",
        "body":  "Repro:\r\n```c#\r\nWebApplicationBuilder builder = WebApplication.CreateBuilder(new WebApplicationOptions\r\n{\r\n    Args            = args,\r\n    ApplicationName = \"MySuperApp has a name that doesn\u0027t match the name of the entry assembly\"\r\n});\r\n```\r\nNow if you use any config value that should be set / overwritten by user secrets won\u0027t have these used.\r\n\r\nThis stems from https://github.com/dotnet/aspnetcore/blob/4a156ba645cc1910033ec114a770c8ce91505470/src/DefaultBuilder/src/WebApplicationBuilder.cs#L280-L281 where the assembly is loaded via the `env.ApplicationName` which in turn is set by https://github.com/dotnet/aspnetcore/blob/4a156ba645cc1910033ec114a770c8ce91505470/src/Hosting/Hosting/src/Internal/WebHostOptions.cs#L20\r\n\r\nIn order to work for every ApplicationName should the `WebApplicationBuilder` be changed to\r\n```diff\r\n-var appAssembly = Assembly.Load(new AssemblyName(env.ApplicationName));\r\n+var appAssembly = Assembly.GetEntryAssembly();\r\nconfiguration.AddUserSecrets(appAssembly, optional: true, reloadOnChange: reloadOnChange);\r\n```\r\n?\r\n\r\nWorkaround: just add the user secrets manually by\r\n```c#\r\n    if (builder.Environment.IsDevelopment())\r\n    {\r\n        builder.Configuration.AddUserSecrets\u003cProgram\u003e(optional: true, reloadOnChange: true);\r\n    }\r\n```\r\n\r\nBut it feels strange if one can set the ApplicationName, and then some things won\u0027t work as expected.\r\nAlternatively the docs should reflect this. I prefer changing the code though.\r\n\r\n---\r\n\r\nEdit: startup fails also due to https://github.com/dotnet/aspnetcore/blob/4a156ba645cc1910033ec114a770c8ce91505470/src/Hosting/Hosting/src/Internal/WebHostOptions.cs#L33\r\nThat should be updated too.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHObE2naQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85sQ2NY",
                                           "createdAt":  "2023-11-17T12:45:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "martincostello",
                                           "body":  "I _think_ another workaround might be to set the ID in the project file:\r\n\r\n```xml\r\n\u003cPropertyGroup\u003e\r\n  \u003cUserSecretsId\u003eBlahBlah\u003c/UserSecretsId\u003e\r\n\u003c/PropertyGroup\u003e\r\n```\r\n",
                                           "updatedAt":  "2023-11-17T12:45:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85sQ5y0",
                                           "createdAt":  "2023-11-17T12:53:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODM5giw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "martincostello",
                                                                               "createdAt":  "2023-11-17T12:59:08Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "gfoidl",
                                           "body":  "Unfortunately not, as in https://github.com/dotnet/runtime/blob/33d7f9815a4cf0ceb19f7014f978137218855a32/src/libraries/Microsoft.Extensions.Configuration.UserSecrets/src/UserSecretsConfigurationExtensions.cs#L124 the `assembly` must already be known from which the `UserSecretsIdAttribute` is read.",
                                           "updatedAt":  "2023-11-17T12:53:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85sTWME",
                                           "createdAt":  "2023-11-17T19:59:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "captainsafia",
                                           "body":  "Thanks for reporting this issue! We\u0027re lacking on coverage for overriding the application name in our [WebApplicationBuilder functional tests](https://github.com/dotnet/aspnetcore/blob/76b5785b4ca4d6107baad792e2fe4d7b6f938b9b/src/Mvc/test/Mvc.FunctionalTests/SimpleWithWebApplicationBuilderTests.cs). Adding some more scenarios here will help guard against these issues.\r\n\r\n\u003e In order to work for every ApplicationName should the WebApplicationBuilder be changed to\r\n\r\nThis seems like a sensible solution. Interested in submitting a PR?\r\n\r\n",
                                           "updatedAt":  "2023-11-17T19:59:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85sTadp",
                                           "createdAt":  "2023-11-17T20:05:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODM83lA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "captainsafia",
                                                                               "createdAt":  "2023-11-17T20:11:18Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "BrendanRidenour",
                                                                               "createdAt":  "2023-11-17T23:57:27Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "gfoidl",
                                           "body":  "I\u0027ll send a PR in the next days.",
                                           "updatedAt":  "2023-11-17T20:05:33Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "WebApplication.CreateBuilder with non-default ApplicationName doesn\u0027t load user secrets",
        "labels":  [
                       "bug",
                       "area-hosting"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/52429",
        "createdAt":  "2023-11-28T18:32:58Z",
        "number":  52429,
        "author":  "amcasey",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-22T18:01:27Z",
        "body":  "\u003c!--\r\nNote this issue template is specifically for failing tests within the dotnet/aspnetcore repo.\r\n--\u003e\r\n\r\n## Failing Test(s)\r\n\r\n\u003c!--\r\nProvide the fully qualified name(s) of the failing tests.\r\n--\u003e\r\n\r\n- Microsoft.AspNetCore.Hosting.FunctionalTests.WebHostBuilderTests.InjectedStartup_DefaultApplicationNameIsEntryAssembly\r\n\r\n## Error Message\r\n\r\n\u003c!--\r\nProvide the error message associated with the test failure, if applicable.\r\n--\u003e\r\n\r\n```text\r\nAssert.Equal() Failure\r\n                                 ↓ (pos 29)\r\nExpected: ···njectionAssemblyName\r\nActual:   ···njectionAssemblyName\\n[createdump] Gathering state for process···\r\n                                 ↑ (pos 29)\r\n\r\n```\r\n\r\n## Stacktrace\r\n\r\n\u003cdetails\u003e\r\n\u003c!--\r\nProvide the stack trace associated with the test failure, if applicable.\r\n--\u003e\r\n\r\n```text\r\n   at Microsoft.AspNetCore.Hosting.FunctionalTests.WebHostBuilderTests.InjectedStartup_DefaultApplicationNameIsEntryAssembly(TestVariant variant) in /_/src/Hosting/test/FunctionalTests/WebHostBuilderTests.cs:line 64\r\n```\r\n\u003c/details\u003e\r\n\r\n\r\n## Logs\r\n\r\n\u003cdetails\u003e\r\n\u003c!--\r\nIf this is a Helix test failure, include the text of the .log artifact from the failing test.\r\nNote that you have to be signed in to Azure DevOps to see the test artifacts.\r\n--\u003e\r\n\r\n```text\r\n[0.001s] [TestLifetime] [Information] Starting test InjectedStartup_DefaultApplicationNameIsEntryAssembly at 2023-11-27T20:42:28\r\n[0.001s] [Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer] [Information] Deploying [Variation] :: ServerType=Kestrel, Runtime=CoreClr, Arch=x64, BaseUrlHint=, Publish=False\r\n[0.001s] [Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer] [Information] Executing dotnet /mnt/vss/_work/1/s/src/Hosting/test/testassets/IStartupInjectionAssemblyName/bin/Release/net9.0/IStartupInjectionAssemblyName.dll --urls http://localhost:40067/ --server Microsoft.AspNetCore.Server.Kestrel\r\n[0.001s] [Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer] [Information] Working directory /mnt/vss/_work/1/s/src/Hosting/test/testassets/IStartupInjectionAssemblyName/bin/Release/net9.0\r\n[0.001s] [Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer] [Information] True\r\n[0.001s] [Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer] [Information] Filename dotnet\r\n[0.001s] [Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer] [Information] False\r\n[0.001s] [Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer] [Information] Arguments /mnt/vss/_work/1/s/src/Hosting/test/testassets/IStartupInjectionAssemblyName/bin/Release/net9.0/IStartupInjectionAssemblyName.dll --urls http://localhost:40067/ --server Microsoft.AspNetCore.Server.Kestrel\r\n[0.002s] [Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer] [Information] Removing environment variable ASPNETCORE_ENVIRONMENT\r\n[0.002s] [Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer] [Information] SET ASPNETCORE_DETAILEDERRORS=true\r\n[0.002s] [Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer] [Information] SET ASPNETCORE_CONTENTROOT=/mnt/vss/_work/1/s/src/Hosting/test/testassets/IStartupInjectionAssemblyName\r\n[0.003s] [Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer] [Information] Started dotnet. Process Id : 13431\r\n[0.003s] [Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer] [Information] Application ready at URL: http://localhost:40067/\r\n[0.149s] [Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer] [Information] dotnet stdout: IStartupInjectionAssemblyName\r\n[0.170s] [Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer] [Warning] dotnet stderr: Unhandled exception. System.InvalidOperationException: Cannot read keys when either application does not have a console or when console input has been redirected. Try Console.Read.\r\n[0.170s] [Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer] [Warning] dotnet stderr:    at System.ConsolePal.ReadKey(Boolean intercept)\r\n[0.171s] [Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer] [Warning] dotnet stderr:    at IStartupInjectionAssemblyName.Program.Main(String[] args) in /mnt/vss/_work/1/s/src/Hosting/test/testassets/IStartupInjectionAssemblyName/Program.cs:line 17\r\n[0.185s] [Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer] [Information] dotnet stdout: [createdump] Gathering state for process 13431 dotnet\r\n[0.186s] [Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer] [Information] dotnet stdout: [createdump] Crashing thread 3477 signal 6 (0006)\r\n[0.205s] [Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer] [Information] Attempting to cancel process 13431\r\n[0.256s] [Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer] [Warning] Unable to terminate the host process with process Id \u002713431\r\n[0.256s] [Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer] [Information] [Time]: Total time taken for this test variation \u00270.2549877\u0027 seconds\r\n[0.256s] [TestLifetime] [Information] Finished test InjectedStartup_DefaultApplicationNameIsEntryAssembly in 0.255373s\r\n\r\n```\r\n\u003c/details\u003e\r\n\r\n## Build\r\n\r\n\u003c!--\r\nProvide a link to the build where the test failure occurred.\r\n--\u003e\r\n\r\nhttps://dev.azure.com/dnceng-public/public/_build/results?buildId=481527",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOj4hK7A==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde85tGoQx",
                                           "createdAt":  "2023-11-28T18:33:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "amcasey",
                                           "body":  "The difference appears to be in log output.  If we can\u0027t make the assert more robust, we may just want to keep this on the helix retry list (even though it doesn\u0027t appear to be a helix test?), but we should at least have an explanation for why it\u0027s there.",
                                           "updatedAt":  "2023-11-28T18:33:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde85tIOIG",
                                           "createdAt":  "2023-11-28T22:39:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BrennanConroy",
                                           "body":  "Updated with the log.\r\n\r\nLooks like a racy test. Should probably remove the `Console.ReadLine` from the app?\r\n\r\nAlso, if you want to know how to get logs for non-helix tests I can show you.",
                                           "updatedAt":  "2023-11-28T22:39:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86Pg-nO",
                                           "createdAt":  "2024-10-11T16:50:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SteveSandersonMS",
                                           "body":  "This is marked as `test-fixed` but has failed 30 times in the last 14 days: https://dev.azure.com/dnceng-public/public/_test/analytics?definitionId=86\u0026contextType=build\n\n@MackinnonBuck Should we remove the `test-fixed` label or do you think something else is going on?",
                                           "updatedAt":  "2024-10-11T16:50:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86PiErs",
                                           "createdAt":  "2024-10-11T20:22:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MackinnonBuck",
                                           "body":  "@SteveSandersonMS, yeah, let\u0027s remove the `test-fixed` label. I was never able to repro this locally but had a guess about what might be causing the problem and wrote a fix based on that. Looks like my guess was probably wrong!",
                                           "updatedAt":  "2024-10-11T20:22:14Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "Flaky test InjectedStartup_DefaultApplicationNameIsEntryAssembly",
        "labels":  [
                       "test-failure",
                       "area-hosting"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/53479",
        "createdAt":  "2024-01-19T10:13:08Z",
        "number":  53479,
        "author":  "zdenek-jelinek",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC6dnjw==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "lukaskabrt",
                                            "createdAt":  "2024-01-22T09:32:09Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "oa-dodo",
                                            "createdAt":  "2024-02-13T08:22:01Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ilmax",
                                            "createdAt":  "2024-08-24T06:20:38Z"
                                        }
                                    ],
                          "totalCount":  3
                      },
        "updatedAt":  "2025-02-05T16:22:48Z",
        "body":  "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Is your feature request related to a problem? Please describe the problem.\r\n\r\nCurrently, Azure App Service logging providers do not work consistently with the rest of the logging system as far as I understand it.\r\n\r\nThe behavior of these providers is that\r\n- general `Logging:LogLevel` settings are completely ignored\r\n- provider-specific `Logging:{Provider}:LogLevel:Default` setting is ignored\r\n\r\nunder normal circumstances. Instead, the verbosity configured in App Service is used.\r\n\r\nWhile it may be a natural interpretation from certain perspective, it is not consistent with the rest of the logging configuration and also in itself as using specific categories is respected. This is not mentioned anywhere in the docs. In fact, the docs currently show example that is misleading. More on that later.\r\n\r\nThe core of the problem is that I have a configuration like\r\n\r\n```json\r\n\"Logging\": {\r\n  \"LogLevel\": {\r\n    \"Default\": \"Error\",\r\n    \"MyApp\": \"Information\",\r\n    \"MyLibrary\": \"Information\"\r\n  },\r\n  \"AzureAppServicesFile\": {\r\n    \"IncludeScopes\": true\r\n  },\r\n  \"AzureAppServicesBlob\": {\r\n    \"IncludeScopes\": true\r\n  }\r\n}\r\n```\r\n\r\nbut the defaults are not reflected by the AzureAppServices* providers.\r\n\r\nInstead, I have to have\r\n```json\r\n\"Logging\": {\r\n  \"LogLevel\": {\r\n    \"Default\": \"Error\",\r\n    \"MyApp\": \"Information\",\r\n    \"MyLibrary\": \"Information\"\r\n  },\r\n  \"AzureAppServicesFile\": {\r\n    \"IncludeScopes\": true,\r\n    \"LogLevel\": {\r\n      \"Default\": \"Error\", // This is ignored though\r\n      \"MyApp\": \"Information\",\r\n      \"MyLibrary\": \"Information\"\r\n    }\r\n  },\r\n  \"AzureAppServicesBlob\": {\r\n    \"IncludeScopes\": true,\r\n    \"LogLevel\": {\r\n      \"Default\": \"Error\", // This is ignored as well\r\n      \"MyApp\": \"Information\",\r\n      \"MyLibrary\": \"Information\"\r\n    }\r\n}\r\n```\r\nand everyone needs to know that when they\u0027re adding anything, they need to add it to all three places. I\u0027d say that most people seeing this configuration would say \"that\u0027s duplicated, let\u0027s get rid of it\" and break it.\r\n\r\nAlso note that the list is typically a bit longer than this so the duplication is not very nice at all.\r\n\r\n### Describe the solution you\u0027d like\r\n\r\nThe the docs should be updated to reflect this behavior, especially calling out the behavior non-compliant with the rest of the configuration philosophy.\r\n\r\nA better technical solution would also help. Some options off top of my head:\r\n- Provide an additional layer of log filtering based on App Service logging configuration that does not interfere with logging configuration specified by the application.\r\n  - This would be a natural resolution from my perspective - if I set up App Service Diagnostic Logs to log errors, I will only have errors.\r\n  - It could also break consumers silently.\r\n- Provide a flag to ignore App Service logging configuration\r\n  - This could be a simple way to work around it in a way without breaking consumers.\r\n\r\n### Additional context\r\n\r\nFirst, let\u0027s start with the documentation.\r\n\r\n[Azure App Service Diagnostic Logs article](https://learn.microsoft.com/en-us/azure/app-service/troubleshoot-diagnostic-logs) mentions the log level verbosity filter mapping and also how to set it up in ASP.NET Core in **Add log messages in code** section. This promptly links to the package and ASP.NET Core Logging documentation. No information of how the verbosity filter interacts with the .NET logging setup is given so far.\r\n\r\n[Logging in .NET Core and ASP.NET Core article](https://learn.microsoft.com/en-us/aspnet/core/fundamentals/logging/?view=aspnetcore-8.0) describes several related aspects, specifically:\r\n- **Configure logging** section mentions that\r\n  - A general configuration is set up in `Logging:LogLevel`\r\n  - A provider-specific configuration can override this for specific categories in `Logging:{Provider}:LogLevel`\r\n  - It gives an example at the end which contains\r\n    ```json\r\n    \"AzureAppServicesFile\": {\r\n      \"IncludeScopes\": true,\r\n      \"LogLevel\": {\r\n        \"Default\": \"Warning\"\r\n       }\r\n    }\r\n    ```\r\n    and goes no to describe how this overrides the top-level `Logging:LogLevel` configuration. This setting has actually no effect at all as will be shown later. Its presence here, however, implies otherwise.\r\n- **How filtering rules are applied** section provides relevant information for later\r\n   \u003e The following algorithm is used for each provider when an ILogger is created for a given category:\r\n   \u003e\r\n   \u003e - Select all rules that match the provider or its alias. If no match is found, select all rules with an empty provider.\r\n   \u003e - From the result of the preceding step, select rules with longest matching category prefix. If no match is found, select all rules that don\u0027t specify a category.\r\n   \u003e - If multiple rules are selected, take the last one.\r\n   \u003e - If no rules are selected, use MinimumLevel.\r\n- **Built-in logging providers** \u003e **Azure App Service** provides additional documentation regarding these providers. It does mention that it uses configuration from App Service but does not mention how.\r\n\r\nNow on to the code.\r\n[AzureAppServicesLoggerFactoryExtensions](https://github.com/dotnet/aspnetcore/blob/f533c51cd99901e8f3ed5004bd9ce7d824ea8e9a/src/Logging.AzureAppServices/src/AzureAppServicesLoggerFactoryExtensions.cs) registers `ConfigurationBasedLevelSwitcher` as `IConfigureOptions\u003cLoggerFilterOptions\u003e`\r\n\r\nThe `ConfigurationBasedLevelSwitcher` is populated with diagnostic configuration loaded from Azure App Service and [introduces a logger filter rule](https://github.com/dotnet/aspnetcore/blob/f533c51cd99901e8f3ed5004bd9ce7d824ea8e9a/src/Logging.AzureAppServices/src/ConfigurationBasedLevelSwitcher.cs#L25). This rule\u0027s `LogLevel` matches the App Service\u0027s configured log verbosity, uses provider type name and has no category. This is usually called after `AddLogging` so this becomes the last filter rule applied.\r\n\r\nGiven the filter rule selection algorithm quoted above, all of the the general `Logging:LogLevel` configurations as well as the provider-specific `Logging:AzureAppServices[File|Blob]:Default` settings are ignored in favor of this rule. Additional provider-specific rules specifying category are respected.\r\n\r\nAs a result, it is possible to also create scenarios where the Azure App Service has Diagnostic Logs configured to Verbosity = Error but will happily report Trace, Debug or Info log messages with configuration such as\r\n```json\r\n\"AzureAppServicesBlob\": {\r\n  \"IncludeScopes\": true,\r\n  \"LogLevel\": {\r\n    \"Microsoft\": \"Trace\",\r\n    \"System\": \"Debug\",\r\n    \"MyApplication\": \"Information\"\r\n   }\r\n}\r\n```\r\n\r\nSo as a result, the providers do not consistently respect either configuration. The configuration in App Service only applies to cases where no specific logging category filter is configured. And the application configuration is mostly ignored and must be explicitly specified again to take effect.\r\n\r\nThis took me quite a bit of time to diagnose and I haven\u0027t found any nice workaround. So far, I have settled on\r\n```csharp\r\nprivate static void RemoveConfigurationBasedLevelSwitcher(IServiceCollection services)\r\n{\r\n    for (var i = services.Count - 1; i \u003e= 0; --i)\r\n    {\r\n        if (IsLoggingFilterConfigurationFromAppServiceLoggingAssembly(services[i]))\r\n        {\r\n            services.RemoveAt(i);\r\n        }\r\n    }\r\n}\r\n\r\nprivate static bool IsLoggingFilterConfigurationFromAppServiceLoggingAssembly(ServiceDescriptor service)\r\n{\r\n    return service.ServiceType == typeof(IConfigureOptions\u003cLoggerFilterOptions\u003e)\r\n        \u0026\u0026 service.ImplementationInstance != null\r\n        \u0026\u0026 service.ImplementationInstance.GetType().Assembly.FullName?.StartsWith(\"Microsoft.Extensions.Logging.AzureAppServices,\", StringComparison.Ordinal) == true;\r\n}\r\n```\r\n\r\nit\u0027s terrible and slows down startup but at least nobody has to remember these logging configuration oddities. The log level configuration is already complicated as is, given the two dimensional overriding of defaults by providers and by environment.\r\n\r\nI have also tried using diagnostic logs but the application logs do not include scopes (which is a big deal for us) and the console logs do nothing in Windows App Service, presumably because it uses IIS.\r\n\r\nI do understand that this logging provider falls into a no-man\u0027s land of sorts, being linked to both Azure App Service and ASP.NET Core. I also understand there may not be a will to invest here due to business priorities. However, if this is only intended as something that works out of the box but does not support more complex scenarios cleanly, it should be called out so that nobody else has to spend significant time investigating this.\r\n\r\nExisting related issues I have found are somewhat old and may or may not have been resolved:\r\n#3279\r\n#22954\r\n\r\nThe older one links to SO question https://stackoverflow.com/questions/56190165 so it seems there are others grappling with it as well.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOiZCzcQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde86JPjal",
                                           "createdAt":  "2024-08-21T16:57:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MackinnonBuck",
                                           "body":  "@zdenek-jelinek, thanks for the through writeup - it\u0027s clear you have a good understanding of what\u0027s happening and what the options for a solution are.\r\n\r\nOut of curiosity, does removing the call to `AddAzureWebAppDiagnostics()` have the same effect as the workaround you described?",
                                           "updatedAt":  "2024-08-21T16:57:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86JkLNx",
                                           "createdAt":  "2024-08-24T00:45:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODwL7Gw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ilmax",
                                                                               "createdAt":  "2024-08-24T06:21:47Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "zdenek-jelinek",
                                                                               "createdAt":  "2024-08-29T11:26:32Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "halter73",
                                           "body":  "It turns out that `AddAzureWebAppDiagnostics` is [called](https://github.com/dotnet/aspnetcore/blob/21afee0e9f393222b803893012ed375da0810caf/src/Azure/AzureAppServices.HostingStartup/src/AzureAppServicesHostingStartup.cs#L28) via [our](https://github.com/dotnet/aspnetcore/blob/21afee0e9f393222b803893012ed375da0810caf/src/SiteExtensions/LoggingAggregate/src/Microsoft.AspNetCore.AzureAppServices.SiteExtension/applicationHost.xdt#L12)  [site extension](https://github.com/projectkudu/kudu/wiki/Azure-Site-Extensions) on Azure App Service. It\u0027s added by default, but you can remove the ASP\".NET Core Logging Integration\" it via the Site Extensions tab on Kudu.\r\n\r\n![Kudu Site Extensions Page](https://github.com/user-attachments/assets/c22d03df-a108-405a-8b52-f4559babf199)\r\n\r\nhttps://learn.microsoft.com/en-us/azure/app-service/resources-kudu\r\n\r\nOf course, this doesn\u0027t help you if you actually want to use the App Service file and/or blob logger, but don\u0027t want to use the same minimum log level for every category specified by in the portal via \"AzureBlobTraceLevel\" or \"AzureDriveTraceLevel\". The workaround does the job but is not very discoverable. I think we\u0027ll have to work with the App Service team to provide an option to defer to the application-defined minimum log levels in the portal if we want to make a real improvement. I\u0027m going to remove the labels and assignment so we can retriage. I don\u0027t think this is simply a docs issue that can be quickly addressed in RC2.",
                                           "updatedAt":  "2024-08-24T00:45:35Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Reconsider logging configuration approach in App Service Logging Providers",
        "labels":  [
                       "area-hosting"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/59437",
        "createdAt":  "2024-12-11T15:37:51Z",
        "number":  59437,
        "author":  "kikaragyozov",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-05-29T14:41:35Z",
        "body":  "Having the ability to create an empty builder is amazing, but if my use-case is rather simple - I have to alter the way configuration is loaded into an ASP.NET Core project, for example due to encryption being involved, which basically means using `AddJsonStream` instead of the default - I\u0027m left with a dozen of questions.\n\nWhat must I call to achieve the same behavior I was previously getting with the default builder minus X?\n\nI\u0027m left to my own devises, having to scrape what code was added in PRs like #47797 and having to inspect code like [HostingBuilderExtensions](\nhttps://github.com/dotnet/runtime/blob/6149ca07d2202c2d0d518e10568c0d0dd3473576/src/libraries/Microsoft.Extensions.Hosting/src/HostingHostBuilderExtensions.cs#L266) and other parts here and there, leading to a chaotic experience and definitely missing something somewhere between the lines. \n\nThere also appears to be zero official documentation regarding proper usage of `CreateEmptyBuilder`, or what features it still supports out of the box. The closest thing to a documentation regarding the features set, could be seen in #48811\n\nFor example, currently, I\u0027m unsure if I am to do \n```\nbuilder.Services.AddLogging(logging =\u003e\n        {\n            logging.AddConfiguration(configuration.GetSection(\"Logging\"));\n            logging.AddConsole();\n\n            logging.Configure(options =\u003e\n            {\n                options.ActivityTrackingOptions =\n                    ActivityTrackingOptions.SpanId |\n                    ActivityTrackingOptions.TraceId |\n                    ActivityTrackingOptions.ParentId;\n            });\n        });\n```\nversus a simple\n```\n            builder.Logging\n                .AddConfiguration(builder.Configuration.GetSection(\"Logging\"))\n                .AddConsole();\n```\n\nThere\u0027s also no guarantee that in doing this approach, I\u0027ll always get the same expected behavior, as the code for the default behavior can change with time, which would render the one I copied to try and \"mimic\" it invalid.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOrgXjew==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde86XMlrI",
                                           "createdAt":  "2024-12-11T17:37:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mkArtakMSFT",
                                           "body":  "@eerhardt given that you\u0027ve worked on some of this relatively recently, would you be open to documenting these two new APIs so that questions like these are addressed in docs?",
                                           "updatedAt":  "2024-12-11T17:37:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86XN45w",
                                           "createdAt":  "2024-12-11T20:05:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "eerhardt",
                                           "body":  "We have the differences between the 3 APIs documented here:\n\nhttps://review.learn.microsoft.com/en-us/aspnet/core/fundamentals/native-aot?view=aspnetcore-9.0\u0026branch=main#createslimbuilder-vs-createbuilder\n\nWhich links out to https://andrewlock.net/exploring-the-dotnet-8-preview-comparing-createbuilder-to-the-new-createslimbuilder-method/, another great piece of information.\n\n\u003e Having the ability to create an empty builder is amazing, but if my use-case is rather simple - I have to alter the way configuration is loaded into an ASP.NET Core project, for example due to encryption being involved, which basically means using AddJsonStream instead of the default - I\u0027m left with a dozen of questions.\n\u003e What must I call to achieve the same behavior I was previously getting with the default builder minus X?\n\nI\u0027m not sure starting from \"empty\" is the best route in your case. If you want mostly the default behavior, minus one thing, it would be better to take the route of removing that one thing. In your case it sounds like you want to remove a configuration source from the `ConfigurationManager`. You can do this by calling `builder.Configuration.Sources.Remove` to remove the one you don\u0027t want, and then add what you want back in.",
                                           "updatedAt":  "2024-12-11T20:05:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86XSv32",
                                           "createdAt":  "2024-12-12T09:06:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kikaragyozov",
                                           "body":  "\u003e We have the differences between the 3 APIs documented here:\n\u003e \n\u003e https://review.learn.microsoft.com/en-us/aspnet/core/fundamentals/native-aot?view=aspnetcore-9.0\u0026branch=main#createslimbuilder-vs-createbuilder\n\u003e \n\u003e Which links out to https://andrewlock.net/exploring-the-dotnet-8-preview-comparing-createbuilder-to-the-new-createslimbuilder-method/, another great piece of information.\n\u003e \n\u003e \u003e Having the ability to create an empty builder is amazing, but if my use-case is rather simple - I have to alter the way configuration is loaded into an ASP.NET Core project, for example due to encryption being involved, which basically means using AddJsonStream instead of the default - I\u0027m left with a dozen of questions.\n\u003e \u003e What must I call to achieve the same behavior I was previously getting with the default builder minus X?\n\u003e \n\u003e I\u0027m not sure starting from \"empty\" is the best route in your case. If you want mostly the default behavior, minus one thing, it would be better to take the route of removing that one thing. In your case it sounds like you want to remove a configuration source from the `ConfigurationManager`. You can do this by calling `builder.Configuration.Sources.Remove` to remove the one you don\u0027t want, and then add what you want back in.\n\nSadly the default builder immediately throws an exception in my case, as the file it adds named \"appsettings.json\" is encrypted and is not a valid json when it attempts to add it. I\u0027m aware that I can rename the file to avoid this, but it\u0027s a hack and a weird way to go around it.\n\nAll of the materials you linked I\u0027ve read, but I still find that information lacking. The information is outlined in an implicit way, i.e you have to derive what actually the default builder does, based on what the slim builder does not support, and based on what it still supports. It\u0027s also not in its own section but hidden under \"Native AOT\" section.\n\nAs for any examples of using the empty builder correctly - none exist in the MSFT.\n\n\nIn the meantime, could someone please showcase how one would correctly create an identical default builder manually, when starting from an empty one?",
                                           "updatedAt":  "2024-12-12T09:13:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86XS52q",
                                           "createdAt":  "2024-12-12T09:17:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "\u003e Sadly the default builder immediately throws an exception in my case, as the file it adds named \"appsettings.json\" is encrypted and is not a valid json when it attempts to add it. I\u0027m aware that I can rename the file to avoid this, but it\u0027s a hack and a weird way to go around it.\n\nWhy not fix that problem by renaming the file to something else that doesn\u0027t conflict with what the builder expects (and most of the configuration system...)?",
                                           "updatedAt":  "2024-12-12T09:17:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86XTCYz",
                                           "createdAt":  "2024-12-12T09:29:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kikaragyozov",
                                           "body":  "\u003e \u003e Sadly the default builder immediately throws an exception in my case, as the file it adds named \"appsettings.json\" is encrypted and is not a valid json when it attempts to add it. I\u0027m aware that I can rename the file to avoid this, but it\u0027s a hack and a weird way to go around it.\n\u003e \n\u003e Why not fix that problem by renaming the file to something else that doesn\u0027t conflict with what the builder expects (and most of the configuration system...)?\n\nAren\u0027t you just avoiding the problem if you do end up doing that?\n\nThe appsettings.json file is a valid json configuration file which in some cases is encrypted while in others its not. The perfect place to address this, is when creating a builder, no?\n\nOtherwise, you\u0027re going out of your way to solve the problem around the problematic component, which if you repeat that for every similar situation you\u0027re in, you get a big code smell. All of this just seems awfully weird, when supposedly you could do this easily via the empty builder, but it\u0027s not easy. That\u0027s the issue.",
                                           "updatedAt":  "2024-12-12T09:29:39Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86XTIiO",
                                           "createdAt":  "2024-12-12T09:40:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "If it were me, I would rename the file and write a configuration provider that handled encrypted configuration and add it to the existing system.\n\nI think your ask is valid but it\u0027s the hardest way to solve this problem that seems easy to work around (and a better approach in my opinion).",
                                           "updatedAt":  "2024-12-12T09:40:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86erwoM",
                                           "createdAt":  "2025-02-17T07:30:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEURydg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "koustubhmoharir",
                                                                               "createdAt":  "2025-05-29T14:31:07Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "Kumima",
                                           "body":  "Any chance to provide a code snippet that configures the `EmptyBuilder` into `SlimBuilder` and `DefaultBuilder`?",
                                           "updatedAt":  "2025-02-17T07:30:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86uBeN7",
                                           "createdAt":  "2025-05-29T14:41:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEUX1UA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "martincostello",
                                                                               "createdAt":  "2025-05-30T06:19:52Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "koustubhmoharir",
                                           "body":  "It seems like it is not currently possible to start with an empty builder and add the full functionality of the slim / default builders. Reading and stepping through the code reveals some internal / private classes / methods with significant functionality such as the GenericWebHostBuilder. It would be great if the implementation of the slim / default builders started from the empty builder. This would validate that the empty builder is really usable if full control is desired. If the code were to follow this pattern, no additional documentation would be necessary, as people with the motivation to do the hard work of starting from an empty builder would easily be able to adapt the code.",
                                           "updatedAt":  "2025-05-29T14:41:34Z"
                                       }
                                   ],
                         "totalCount":  8
                     },
        "title":  "Challenges in using WebApplication.CreateEmptyBuilder",
        "labels":  [
                       "Docs",
                       "area-hosting"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/60176",
        "createdAt":  "2025-02-03T16:51:32Z",
        "number":  60176,
        "author":  "jraufeisen",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC-uPKA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "evgenyfedorov2",
                                            "createdAt":  "2025-02-03T17:04:51Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2025-03-24T16:48:41Z",
        "body":  "### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Describe the solution you\u0027d like\n\n.NET 8 introduced the interface [`IHostedLifecycleService`](https://learn.microsoft.com/en-us/dotnet/api/microsoft.extensions.hosting.ihostedlifecycleservice?view=net-8.0-pp), which extends `IHostedService` with some additional callbacks such as `StartingAsync()` and `StartedAsync()`. The original API proposal  (https://github.com/dotnet/runtime/issues/86511) noted that\n\n\n\u003e This interface is located in the `Microsoft.Extensions.Hosting.Abstractions` assembly which will be supported by the default host (in the `Microsoft.Extensions.Hosting` assembly). Other hosts will need to implement IHostedService in order to support this new interface.\n\n\nAs far as I can see, WebHost did not gain support for this new feature yet. https://github.com/dotnet/aspnetcore/blob/6d1573a1aec23de85faca56c3550adb56f60a543/src/Hosting/Hosting/src/Internal/WebHost.cs#L22-L30\n\nhttps://github.com/dotnet/aspnetcore/blob/6d1573a1aec23de85faca56c3550adb56f60a543/src/Hosting/Hosting/src/Internal/HostedServiceExecutor.cs#L8-L47\n\n\nWould it be possible to add support for `IHostedLifecycleService` to `WebHost`?",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOo9cMUQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde86j1wxR",
                                           "createdAt":  "2025-03-24T16:48:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MackinnonBuck",
                                           "body":  "Thanks for reaching out.\n\nWe don\u0027t have any immediate plans to support this in `WebHost`. We\u0027d recommend moving to `WebApplicationBuilder` if you want this functionality.",
                                           "updatedAt":  "2025-03-24T16:48:30Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Add support for `IHostedLifecycleService` in `WebHost`",
        "labels":  [
                       "area-hosting"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/60492",
        "createdAt":  "2025-02-19T12:01:49Z",
        "number":  60492,
        "author":  "aetos382",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-05-05T17:00:32Z",
        "body":  "### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nThere are two ways to send HTTP requests to [WebApplicationFactory](https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.mvc.testing.webapplicationfactory-1).\n\nOne is to use [WebApplicationFactory.CreateClient](https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.mvc.testing.webapplicationfactory-1.createclient) to obtain an `HttpClient`, which will result in an `HttpClient` that reflects the configuration by [ConfigureClient](https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.mvc.testing.webapplicationfactory-1.configureclient).\n\nThe other is to use [Server](https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.mvc.testing.webapplicationfactory-1.server) to obtain a [TestServer](https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.testhost.testserver), and then use [TestServer.CreateClient](https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.testhost.testserver.createclient) to obtain an `HttpClient`. This method has high-level functions such as [RequestBuilder](https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.testhost.requestbuilder), but does not reflect the configuration by `WebApplicationFactory.ConfigureClient`.\n\nI was using `ConfigureClient` to configure the client, but when I switched to using `RequestBuilder`, I was confused because that configuration did not work.\n\nAlso, `TestServer` has [CreateWebSocketClient](https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.testhost.testserver.createwebsocketclient), but `WebApplicationFactory` does not.\nThus, since `WebApplicationFactory` exposes only a portion of `TestServer`\u0027s functionality, developers may need to use `TestServer` directly.\n\n### Describe the solution you\u0027d like\n\nI don\u0027t have a clear idea of what exactly should be done.\nMaybe functions such as `RequestBuilder` or `WebSocketClient` should be exposed through `WebApplicationFactory`, so that their configuration by `ConfigureClient` is reflected.\nAlso, there could be documentation or an analyzer that warns against using `ConfigureClient` and `TestServer` together.\n\nI am aware that the `WebApplicationFactory` is [currently being refactored](https://github.com/dotnet/aspnetcore/issues/60370).\nI would appreciate it if you would also consider a fix to clarify this type of confusion.\n\n### Additional context\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOpUwo9A==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde86j110h",
                                           "createdAt":  "2025-03-24T16:55:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MackinnonBuck",
                                           "body":  "cc @mkArtakMSFT, since you\u0027re working on `WebApplicationFactory`. What do you think about the solutions suggested by @aetos382?\n\n\u003e Maybe functions such as `RequestBuilder` or `WebSocketClient` should be exposed through `WebApplicationFactory`, so that their configuration by `ConfigureClient` is reflected.\n\u003e Also, there could be documentation or an analyzer that warns against using `ConfigureClient` and `TestServer` together.",
                                           "updatedAt":  "2025-03-24T16:55:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86k6cg4",
                                           "createdAt":  "2025-03-31T16:37:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MackinnonBuck",
                                           "body":  "@mkArtakMSFT, do you have any thoughts about this?",
                                           "updatedAt":  "2025-03-31T16:37:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde86lTCj0",
                                           "createdAt":  "2025-04-02T17:18:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MackinnonBuck",
                                           "body":  "@javiercn, is it by-design that using `RequestBuilder` causes the configuration specified via `ConfigureClient` to be ignored?",
                                           "updatedAt":  "2025-04-02T17:18:19Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Clearing up confusion when using WebApplicationFactory and TestServer",
        "labels":  [
                       "feature-mvc-testing",
                       "area-hosting"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/62651",
        "createdAt":  "2025-07-10T08:39:57Z",
        "number":  62651,
        "author":  "benaadams",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-07T01:09:58Z",
        "body":  "### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nThe number of metrics, diagnostics and activities has been steadily increasing; including for back compat of previous depreciated diagnostics (most handled by `HostingApplicationDiagnostics`); however there is no easy way to switch this off other than completely re-writing your own WebHost (as per https://github.com/NethermindEth/nethermind/pull/8879)\n\n### Describe the solution you\u0027d like\n\nBe able to switch of the diagnostic types explicitly and short circuit these paths (e.g. might just want to switch off Activity creation)\n\n### Additional context\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOvHlRDA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde862LJ3Q",
                                           "createdAt":  "2025-07-10T08:46:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "martincostello",
                                           "body":  "Just curious, how much do you save by turning them off with your custom host?\n",
                                           "updatedAt":  "2025-07-10T08:46:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde862LU1U",
                                           "createdAt":  "2025-07-10T08:57:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEdZQWA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "martincostello",
                                                                               "createdAt":  "2025-07-10T09:05:05Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "halter73",
                                                                               "createdAt":  "2025-08-07T00:47:36Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "benaadams",
                                           "body":  "\u003e Just curious, how much do you save by turning them off with your custom host?\n\nIsn\u0027t vast; but have grafana and own custom metrics on top, so is additional cruft; also providing internal observability via Activities isn\u0027t always desirable (information leakage) aside from the allocations",
                                           "updatedAt":  "2025-07-10T08:57:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde868eRXv",
                                           "createdAt":  "2025-08-07T00:51:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "halter73",
                                           "body":  "Do you have a preferred method of turning off activities? If you have the time to contribute the change and provide a benchmark showing a measurable improvement, I\u0027m open to taking it. It will probably have to wait until .NET 11 unless it\u0027s a really small change though.",
                                           "updatedAt":  "2025-08-07T00:51:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde868eTiO",
                                           "createdAt":  "2025-08-07T00:58:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "benaadams",
                                           "body":  "\u003e Do you have a preferred method of turning off activities?\n\nI\u0027d be up for just a big hammer that made `_diagnostics` in `HostingApplication` `null` rather than constructing it; so each call to it would be nullable\n\ne.g.\n\n`_diagnostics.BeginRequest(httpContext, hostContext)` =\u003e `_diagnostics?.BeginRequest(httpContext, hostContext)`\n\nAll the diagnostics and metrics are well contained",
                                           "updatedAt":  "2025-08-07T00:58:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDOAQzde868eVEM",
                                           "createdAt":  "2025-08-07T01:03:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "benaadams",
                                           "body":  "Would have to expose a IWebHost type that did this (as internal class); since both Empty and Slim still add the full diagnostics\n\nPerhaps `Raw`\n\nAm happy for it to be on by default and to go through some hoops to switch off.\n\nHowever currently; having to reimplement WebHost and HostingApplication entirely, just to do the switch seems like too many hoops 😉",
                                           "updatedAt":  "2025-08-07T01:09:58Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "Be able to switch off Activities, Diagnostics and Metrics",
        "labels":  [
                       "area-hosting"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspnetcore/issues/63637",
        "createdAt":  "2025-09-11T08:57:32Z",
        "number":  63637,
        "author":  "oroztocil",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODQBeNw==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "martincostello",
                                            "createdAt":  "2025-09-11T09:07:13Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "dp-sgr",
                                            "createdAt":  "2025-09-11T09:09:04Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Vlaaaaaaad",
                                            "createdAt":  "2025-09-11T09:15:03Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "freever",
                                            "createdAt":  "2025-09-11T09:23:51Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "BrendanRidenour",
                                            "createdAt":  "2025-09-12T01:39:04Z"
                                        }
                                    ],
                          "totalCount":  5
                      },
        "updatedAt":  "2025-09-11T09:00:32Z",
        "body":  "### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nApplications using `WebAssemblyHost` (e.g. Blazor WebAssembly clients) do not support hosted services out of the box. Services registered with `AddHostedService` are ignored when using `WebAssemblyHostBuilder`, unlike in applications built with `WebApplicationBuilder` or `HostApplicationBuilder`.\n\n### Describe the solution you\u0027d like\n\n`WebAssemblyHost` should support automatically running hosted services registered with `AddHostedService`. \n\n### Additional context\n\nThis feature request has already been rejected in https://github.com/dotnet/aspnetcore/issues/33537. However, we might want to reconsider the decision. For example, support for hosted services might be beneficial for [Open Telemetry integration](https://github.com/open-telemetry/opentelemetry-dotnet/issues/2816#issuecomment-3275736009) in Blazor Wasm apps.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOw3ZvYw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOAQzde87Ddm9j",
                                           "createdAt":  "2025-09-11T09:00:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEh07Og==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "oroztocil",
                                                                               "createdAt":  "2025-09-11T09:02:11Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "maraf",
                                                                               "createdAt":  "2025-09-11T09:52:33Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jeromelaban",
                                                                               "createdAt":  "2025-09-11T11:37:21Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "pavelsavara",
                                           "body":  "We should measure the size/perf impact of adding it by default for WASM",
                                           "updatedAt":  "2025-09-11T09:00:32Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Support hosted services in WebAssemblyHost",
        "labels":  [
                       "area-blazor",
                       "area-hosting",
                       "copilot-candidate"
                   ]
    }
]
