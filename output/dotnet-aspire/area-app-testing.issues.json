[
    {
        "url":  "https://github.com/dotnet/aspire/issues/2897",
        "createdAt":  "2024-03-14T18:48:32Z",
        "number":  2897,
        "author":  "DamianEdwards",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODFEfWQ==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "albigi",
                                            "createdAt":  "2024-05-06T14:59:35Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "simonm43",
                                            "createdAt":  "2024-05-07T07:12:52Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "lmolkova",
                                            "createdAt":  "2024-06-27T00:47:21Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "KennethHoff",
                                            "createdAt":  "2024-10-13T20:44:07Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "martasp",
                                            "createdAt":  "2025-01-18T14:15:18Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "herniklanger",
                                            "createdAt":  "2025-02-25T21:00:34Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "AdrianoAE",
                                            "createdAt":  "2025-05-30T16:29:09Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "AldeRoberge",
                                            "createdAt":  "2025-06-29T00:23:10Z"
                                        }
                                    ],
                          "totalCount":  8
                      },
        "updatedAt":  "2025-02-06T05:18:12Z",
        "body":  "When using `DistributedApplicationTestingBuilder` in an integration test, because there is no dashboard process running, there is no OTLP endpoint hosted for the running resources to send OTel data to. We should consider having `DistributedApplicationTestingBuilder` host an OTLP endpoint and expose its data to allow assertion against it in a test, so that testing based on observing OTel data could be facilitated.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOnUnTAQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOKYQzfc588pFI",
                                           "createdAt":  "2024-05-06T15:13:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODg5k9w==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "DamianEdwards",
                                                                               "createdAt":  "2024-05-06T16:28:46Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "simonm43",
                                                                               "createdAt":  "2024-05-07T06:37:58Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "albigi",
                                           "body":  "I think such a feature would also help a great deal when debugging test failures with complex invocation chains (which we can most of the times host entirely locally using DAPR and a bunch of lightweight containers such as Redis).\r\n\r\nHaving OTLP data to support the visualisation of the invocation chain can be an enormous time saver (compared to attaching the debugger to all the processes and step into all of them).\r\n\r\nWhat we\u0027re currently trying to do is host the standalone dashboard using the docker image and have the apps send their OTLP data to it via OTLP exporter in the service defaults. we\u0027re not yet sure this will work as we\u0027re still fighting with it, will update in case we find a working solution, but it would be so useful to have telemetry support during test runs!",
                                           "updatedAt":  "2024-05-06T15:13:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6Cs2Sj",
                                           "createdAt":  "2024-06-26T23:41:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODnVEPw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "EYES",
                                                                               "user":  "DamianEdwards",
                                                                               "createdAt":  "2024-06-27T00:21:28Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "lmolkova",
                                                                               "createdAt":  "2024-06-27T00:47:47Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "samsp-msft",
                                           "body":  "This was a feature area kind of discussed by @lmolkova at OTel community day yesterday - using OTel to collect telemetry as part of a test run to be able to compare it and understand if its good or bad in comparison with previous runs.",
                                           "updatedAt":  "2024-06-26T23:41:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6CtFBF",
                                           "createdAt":  "2024-06-27T00:48:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lmolkova",
                                           "body":  "there is also some otel tooling being developed to run validation against collected telemetry. let me find out more. ",
                                           "updatedAt":  "2024-06-27T00:55:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6awgho",
                                           "createdAt":  "2025-01-16T18:21:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEOlslQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "albigi",
                                                                               "createdAt":  "2025-01-18T10:39:12Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "andrewjpoole",
                                                                               "createdAt":  "2025-04-16T17:29:36Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "martasp",
                                           "body":  "It is possible to get traces now by adding `services.AddHostedService\u003cDashboardWebApplication\u003e();` and then get TracesViewModel from services using `GetService\u003cTracesViewModel\u003e()`. I remember there were issues with the private fields `_app` from `DashboardWebApplication` type that I needed so I used reflection.\n\nHere\u0027s the code that works now. You can check out the full PR example https://github.com/dotnet/aspire-samples/pull/361\n```cs\n    [Fact]\n    public async Task EndpointCall_ShouldCaptureDistributedTracesAsASnapshot()\n    {\n        var appHost = await DistributedApplicationTestingBuilder.CreateAsync\u003cProjects.AspireShop_AppHost\u003e();\n\n        appHost.Services.AddDashboardWebApplication();\n\n        await using var app = await appHost.BuildAsync();\n\n        await app.StartAsync();\n\n        var tracesViewModel = app.Services.GetDashboardWebApplication().GetService\u003cTracesViewModel\u003e();\n\n        var httpClient = app.CreateHttpClient(\"frontend\");\n\n        var tracesTree = await tracesViewModel.CaptureTraces(async () =\u003e\n        {\n            var response = await httpClient.GetAsync(\"/\");\n            Assert.Equal(HttpStatusCode.OK, response.StatusCode);\n        });\n\n        await app.StopAsync();\n\n        await Verify(tracesTree);\n    }\n```\n\nIt would be nice to just get TracesViewModel from services like this\n```cs\n    [Fact]\n    public async Task EndpointCall_ShouldGenerateDistributedTraces()\n    {\n        // Arrange\n        var appHost = await DistributedApplicationTestingBuilder.CreateAsync\u003cProjects.AspireShop_AppHost\u003e();\n        await using var app = await appHost.BuildAsync();\n        await app.StartAsync();\n\n        //Getting aspire TracesViewModel service, but tracesViewModel is null?\n        var tracesViewModel = app.Services.GetService\u003cTracesViewModel\u003e();\n        //How can I get the aspire TracesViewModel service?\n\n        // Act\n        var httpClient = app.CreateHttpClient(\"frontend\");\n        var response = await httpClient.GetAsync(\"/\");\n\n        // Assert\n        Assert.Equal(HttpStatusCode.OK, response.StatusCode);\n        Assert.NotEmpty(tracesViewModel.GetTraces().Items);\n\n        await app.StopAsync();\n    }\n\n```\n\nBut there are the problems: \n\n- tracesViewModel is null\n- How can I get the aspire TracesViewModel service easily?\n- Do we want to expose the TracesViewModel service or should it be a raw open telemetry data service?\n\n\n",
                                           "updatedAt":  "2025-01-16T18:21:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6dSdMB",
                                           "createdAt":  "2025-02-06T05:18:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "STRUDSO",
                                           "body":  "I bumped into this issues while searching for a way to assert otel and then I later discovered this:\n\nhttps://github.com/open-telemetry/opentelemetry-dotnet/blob/0c26ce2b3b909223672fe40d22e1f15750dabe0a/src/OpenTelemetry.Exporter.InMemory/InMemoryExporterHelperExtensions.cs#L18\n\nNot sure how to plug this into \n\nDistributedApplicationTestingBuilder\n\nYet, but will take a stab at it.\n\n",
                                           "updatedAt":  "2025-02-06T05:18:11Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "Asserting OpenTelemetry data when using DistributedApplicationTestingBuilder",
        "labels":  [
                       "area-telemetry",
                       "area-app-testing"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspire/issues/4138",
        "createdAt":  "2024-05-10T00:20:20Z",
        "number":  4138,
        "author":  "DamianEdwards",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC5Eo9g==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Regestea",
                                            "createdAt":  "2024-07-02T15:07:27Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2025-01-09T23:50:07Z",
        "body":  "## Problem\r\n\r\nThe `CreateHttpClient(this DistributedApplication app, string resourceName, string? endpointName = null)` extension method on `DistributedApplicationHostingTestingExtensions` in `Aspire.Hosting.Testing` defaults to creating a client for the endpoint named \"http\" if  an endpoint name is not specified, even if the specified resource has an \"https\" endpoint.\r\n\r\nThis can lead to confusion as ASP.NET Core project resources typically have both an \"http\" and \"https\" endpoint by default, inferred from the project\u0027s *launchSettings.json* file which by default specifies both an \"http\" and \"https\" address in the \"https\" launch profile, which is the default launch profile when launching via an Aspire AppHost project.\r\n\r\nThis behavior doesn\u0027t align with the default runtime behavior during the dev inner-loop, where service discovery will prefer the \"https\" endpoint address if a service address like `https+http://apiservice` is specified, as it is in the Aspire project templates.\r\n\r\nAnother point of confusion can be that the Aspire starter template has a frontend Blazor web project that configures the HTTPS redirection middleware, and an API service project that **doesn\u0027t** configure the HTTPS redirect middleware. So in the default test scenario the following occurs:\r\n\r\n1. The AppHost project targeted by the test is launched by the `IDistributedApplicationTestingBuilder` using the first launch profile in the AppHost project\u0027s *launchSettings.json* file, which is the \"https\" profile.\r\n1. The API project is started by the AppHost using the \"https\" profile, resulting in both an HTTP and HTTPS endpoint for the API project resource\r\n1. The web frontend project is started by the AppHost using the \"https\" profile, resulting in both an HTTP and HTTPS endpoint for the API project\r\n1. The test creates an `HttpClient` instance for the API service project by calling `app.CreateHttpClient(\"apiservice\")`, resulting in a client pointed at the API project\u0027s HTTP endpoint\r\n1. The test makes a request to the HTTP endpoint of the API services project which is completed over HTTP (no redirection)\r\n1. The test creates an `HttpClient` instance for the web frontend project by calling `app.CreateHttpClient(\"webfrontend\")`, result in a client pointed at the API project\u0027s HTTP endpoint\r\n1. The test makes a request to the HTTP endpoint of the web frontend project which is redirected to the HTTPS endpoint. If the ASP.NET Core HTTPS developer certificate is not trusted in the test environment, the call fails due to a certificate error and the test fails.\r\n\r\n## Workaround\r\n\r\nTests can work avoid this confusion by specifying which endpoint they want the `HttpClient` instance configured to use, e.g. `app.CreateHttpClient(\"apiservice\", \"https\")`.\r\n\r\n## Potential Resolution\r\n\r\nWe might want to consider adding an overload for `CreateHttpClient` that accepts a `Uri` and uses the same service discovery-based logic that resolves addresses at runtime when a project resource like the web frontend uses `IHttpClientFactory` with service discovery enabled to address another resource. That way, the way clients are created in tests could more closely match the way they\u0027re created in projects themselves, e.g. `app.CreateHttpClient(new Uri(\"https://apiservice\"))`, or `app.CreateHttpClient(new Uri(\"https+http://apiservice\"))`.\r\n\r\n/Cc @ReubenBond ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOjmzFuQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOKYQzfc6ObMW5",
                                           "createdAt":  "2024-10-02T19:12:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "octavian-cacina-gotomaxx",
                                           "body":  "This is also an issue when testing a grpc service application that is also configured for grpc-web, thus having in appsettings EndpointDefaults [Http1AndHttp2 instead of Http2](https://learn.microsoft.com/en-us/aspnet/core/grpc/grpcweb?view=aspnetcore-9.0#http-protocol). I was getting this exception `The HTTP/2 server closed the connection. HTTP/2 error code ‘HTTP_1_1_REQUIRED’ (0xd). (HttpProtocolError)`. In this scenario the [https is mandatory]( https://learn.microsoft.com/en-us/aspnet/core/grpc/aspnetcore?view=aspnetcore-8.0\u0026tabs=visual-studio#protocol-negotiation)",
                                           "updatedAt":  "2024-10-02T19:12:13Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "CreateHttpClient extension method in Aspire.Hosting.Testing defaults to the \"http\" endpoint",
        "labels":  [
                       "area-app-testing"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspire/issues/4409",
        "createdAt":  "2024-06-06T18:26:41Z",
        "number":  4409,
        "author":  "cmeyertons",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-10-16T05:36:54Z",
        "body":  "## Background and Motivation\r\n\r\nI was piloting Aspire into a new proof-of-concept service at our organization and ran into this issue.  \r\n\r\nIn our company\u0027s application template, we have a custom `Directory.Build.props` file etc etc.\r\n\r\nOut of the box:\r\n✔️  The application runs and debugs seamlessly!  \r\n❌ The tests hang indefinitely\r\n\r\nAfter some (much) process of elimination, the culprit is defaulting the `\u003cPlatform\u003e` to `Any CPU`  🤔 \r\n\r\n## Steps to reproduce\r\n\r\n1. Create a solution using the Aspire Starter Application with the following options\r\n- [ ] - Configure for HTTPS\r\n- [ ] - Use Redis...\r\n- [x] - Create a test project\r\n\r\n2. Build \u0026 run the tests, observe everything passes.\r\n3. Add a Directory.Build.Props to the solution root with the following:\r\n\r\n```xml\r\n\u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e\r\n\u003cProject ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\"\u003e\r\n  \u003cPropertyGroup\u003e\r\n    \u003cPlatform Condition=\" \u0027$(Platform)\u0027 == \u0027\u0027 \"\u003eAny CPU\u003c/Platform\u003e\r\n  \u003c/PropertyGroup\u003e\r\n\u003c/Project\u003e\r\n```\r\n\r\n\u003e :warning: Yes, the above is probably not needed and came way before my time. I can easily remove the offending line, but figured I would escalate this to the team as it gave me trouble and hope to not have others fall into the same trap😅 \r\n\r\n4. Observe the tests now hang indefinitely and time out.\r\n\r\n## Expectation\r\n\r\nI would expect this behavior to:\r\n\r\n1. not happen at all (i\u0027m not sure _why_ it\u0027s happening, i did some cursory looking at the Aspire code and nothing jumped out)\r\n2. consistently happen when running the application vs testing 🤷‍♂️ ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOg1yy_Q==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOKYQzfc6AWi1W",
                                           "createdAt":  "2024-06-06T20:55:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "cmeyertons",
                                           "body":  "Additionally, modifying the `OutputPath` has the same effect.\r\n\r\n```xml\r\n\u003cPropertyGroup\u003e\r\n  \u003cSolutionDir Condition=\"$(SolutionDir) == \u0027\u0027\"\u003e$(MSBuildThisFileDirectory.TrimEnd(\u0027\\\u0027).TrimEnd(\u0027/\u0027))\\\u003c/SolutionDir\u003e\r\n  \u003cOutputPath\u003e$(SolutionDir)artifacts\\bin\\$(Configuration)\\$(MSBuildProjectName)\u003c/OutputPath\u003e\r\n\u003c/PropertyGroup\u003e\r\n```\r\n\r\nIt seems like monkeying with some settings confuses the Aspire test engine somehow.\r\n\r\nConfirmed confusers:\r\n- Platform\r\n- OutputPath\r\n\r\nConfirmed okay (that i\u0027m surprised don\u0027t have the same effect):\r\n- TargetFramework \r\n- AssemblyName\r\n- AppendTargetFrameworkToOutputPath\r\n- AppendRuntimeIdentifierToOutputPath\r\n- BaseIntermediateOutputPath\r\n\r\n",
                                           "updatedAt":  "2024-06-06T21:05:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6AXxHk",
                                           "createdAt":  "2024-06-07T01:53:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "@joperezr can you take a look?",
                                           "updatedAt":  "2024-06-07T01:53:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6AYEIM",
                                           "createdAt":  "2024-06-07T03:38:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "joperezr",
                                           "body":  "Hello @cmeyertons, thank you so much for logging the issue and for the detailed report. Could you confirm which version of Aspire you are using by running `dotnet workload list` or checking which version of the Hosting package you are referencing in your AppHost project?\r\n\r\nMy hunch just by reading your (very detailed 😃) report, is that you may be running into https://github.com/dotnet/aspire/issues/3939, which would be likely if the version you are using is `8.0.1` or earlier. This issue has been fixed in `8.1.0` previews but we haven\u0027t released those yet to NuGet.\r\n\r\nA quick summary of why I think this is the root cause, is that in order for the app host to launch your services (resources) it uses some assembly attributes that make some assumptions of where to find some executables required to run your app and your tests. I believe what may be going on is that by some of these changes you are making in configuration, some of those assumptions may be invalid and therefore causing an issue.",
                                           "updatedAt":  "2024-06-07T03:38:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6AfJBg",
                                           "createdAt":  "2024-06-07T22:21:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "cmeyertons",
                                           "body":  "Obviously not detailed enough because I didn\u0027t include the Aspire version lol\r\n\r\nI\u0027m on 8.0.0 (just pulled from the VS template), so that adds up.",
                                           "updatedAt":  "2024-06-07T22:21:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6AfLSt",
                                           "createdAt":  "2024-06-07T22:34:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "joperezr",
                                           "body":  "Thanks for confirming. One more question, how are you running your tests? I\u0027m able to repro when running from command line, but not from VS, and also I\u0027m able to repro only if I run dotnet test on the sln, but not on the test project, so I wonder if you are seeing the same\r\n",
                                           "updatedAt":  "2024-06-07T22:34:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6AfP0J",
                                           "createdAt":  "2024-06-07T23:03:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "cmeyertons",
                                           "body":  "I’m using the JetBrains Resharper Unit Test runner inside VS. ",
                                           "updatedAt":  "2024-06-07T23:03:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6AfbYU",
                                           "createdAt":  "2024-06-08T00:26:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mitchdenny",
                                           "body":  "Does the Apphost crash if you run it? @ReubenBond also fixed some code in the testing side of things where if the AppHost crashes at certain points the test infrastructure will hang.",
                                           "updatedAt":  "2024-06-08T00:26:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6Aso7z",
                                           "createdAt":  "2024-06-10T20:02:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "cmeyertons",
                                           "body":  "No app host runs fine (unless it\u0027s not obvious if it crashes while debugging).  I can hit the `/weatherforecast` endpoint and it just spins forever until it times out.",
                                           "updatedAt":  "2024-06-10T20:02:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6BPxMk",
                                           "createdAt":  "2024-06-14T16:40:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "Putting this in 8.1 as we suspect it\u0027s a dupe of #3939 but should verify upon release.",
                                           "updatedAt":  "2024-06-14T16:40:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6DXLL9",
                                           "createdAt":  "2024-07-02T17:21:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "@cmeyertons 8.1 will be out by end of july, if you have a chance to verify in that it would be great.",
                                           "updatedAt":  "2024-07-02T17:21:12Z"
                                       }
                                   ],
                         "totalCount":  10
                     },
        "title":  "Bug - Defaulting $(Platform) to Any CPU causes tests to hang indefinitely / time out.",
        "labels":  [
                       "area-app-model",
                       "area-app-testing"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspire/issues/4462",
        "createdAt":  "2024-06-11T18:08:05Z",
        "number":  4462,
        "author":  "DamianEdwards",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODJe-tQ==",
                          "nodes":  [
                                        {
                                            "content":  "HEART",
                                            "user":  "ghidello",
                                            "createdAt":  "2024-07-23T09:27:07Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "L968",
                                            "createdAt":  "2025-02-09T16:34:24Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "sibbl",
                                            "createdAt":  "2025-08-01T09:14:44Z"
                                        }
                                    ],
                          "totalCount":  3
                      },
        "updatedAt":  "2025-05-15T00:26:25Z",
        "body":  "Currently, when testing AppHost projects that include container resources configured to use volumes, the same volumes are used in the test as that are used in normal development. This isn\u0027t great because the test isn\u0027t as isolated from the normal running of the AppHost as it could be and could mutate the data in the volume.\r\n\r\nWe should allow for configuring the behavior of volumes when using `Aspire.Hosting.Testing`, and by default remove volumes from all container resources under test so that they are better isolated. Volume behavior should be configurable globally for all resources, or on a per resource basis (overriding the configured global behavior), by way of new API to support both scenarios.\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOq8YeaA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOKYQzfc6BdcQJ",
                                           "createdAt":  "2024-06-17T00:54:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mitchdenny",
                                           "body":  "I wonder if this is something that we can do in conjunction with DCP where we some how nominate a volume/bindmount as being volatile. So we still generate the volumes and bind mount but when DCP tears down the the container it also deletes the volume/bindmount contents.\n\n/cc @karolz-ms @danegsta ",
                                           "updatedAt":  "2024-06-17T00:54:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6Bk2_o",
                                           "createdAt":  "2024-06-17T17:11:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEcxtQw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "DamianEdwards",
                                                                               "createdAt":  "2024-06-17T17:44:52Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "sibbl",
                                                                               "createdAt":  "2025-08-01T09:14:04Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "karolz-ms",
                                           "body":  "Interesting idea. Currently volumes are never deleted automatically, but we could have an opt-in flag for cleaning them up, sort of like Containers have their persistent flag. Let us know if you want to pursue this idea and we can make it happen in DCP",
                                           "updatedAt":  "2024-06-17T17:11:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6BlFYr",
                                           "createdAt":  "2024-06-17T17:45:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "I think that\u0027s a good idea. It\u0027s likely required to make the randomization of volume names in tests reasonable.",
                                           "updatedAt":  "2024-06-17T17:45:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6CVY2g",
                                           "createdAt":  "2024-06-24T13:56:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mitchdenny",
                                           "body":  "@karolz-ms I\u0027ll assign this to you for the DCP side first. Once you\u0027ve got something that we can set in the spec for volumes/bindmounts then you can assign back to me and I\u0027ll work on the app model hook up.",
                                           "updatedAt":  "2024-06-24T13:56:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6CWbjo",
                                           "createdAt":  "2024-06-24T16:04:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODm7SUA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "DamianEdwards",
                                                                               "createdAt":  "2024-06-24T17:56:02Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "karolz-ms",
                                           "body":  "@mitchdenny Roger, makes sense.\r\n@DamianEdwards I do not think this will fit into 8.1. Scheduling for 8.2 tentatively, please make a noise if you disagree.",
                                           "updatedAt":  "2024-06-24T16:04:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6CXM3A",
                                           "createdAt":  "2024-06-24T18:01:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "@karolz-ms sounds fair.\r\n\r\nWhat do folks think of doing a click-stop improvement in 8.1 of simply removing all volumes when using `DistributedApplicationTestingBuilder` so that tests are better isolated from non-tests scenarios? The DCP side isn\u0027t required for that. We could choose to make this behavior the new default or make it opt-in/mutable via a new extension method `void SetContainerResourceVolumeBehavior(this IDistributedApplicationTestingBuilder, VolumeBehavior behavior)`?",
                                           "updatedAt":  "2024-06-24T18:01:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6CZAAF",
                                           "createdAt":  "2024-06-24T23:20:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "karolz-ms",
                                           "body":  "We can try an experiment with the `DeleteResourcesOnShutdown` option that we have: https://github.com/dotnet/aspire/blob/main/src/Aspire.Hosting/Dcp/DcpHostService.cs#L75 But AFAIK this is not getting much use as the default is to rely on DCP to do the cleanup, so I do not know if we have enough time in 8.1 to test this alternate way of cleaning things up.",
                                           "updatedAt":  "2024-06-24T23:20:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6CZGwU",
                                           "createdAt":  "2024-06-24T23:36:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "Sorry I wasn\u0027t clear, I mean simply removing mount annotations from resources when under test.",
                                           "updatedAt":  "2024-06-24T23:36:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6CgrMb",
                                           "createdAt":  "2024-06-25T17:46:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODnFcKQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "EYES",
                                                                               "user":  "DamianEdwards",
                                                                               "createdAt":  "2024-06-25T17:50:03Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "karolz-ms",
                                           "body":  "Oh, sounds like I completely misunderstood the ask here, sorry. You want the tests to use ephemeral volumes instead of persistent volumes, correct? Makes perfect sense. If I am not mistaken, this should work today with DCP. That is, you can have a `Container` resource that has `VolumeMount` in the spec, but no corresponding `ContainerVolume` objects. This should result in a creation of ephemeral volume with the lifetime corresponding to the lifetime of the `Container` object. LMK if that does not work for you.\r\n\r\n@mitchdenny If my understanding of the ask is correct, there should be no work on the DCP orchestrator side to satisfy it.",
                                           "updatedAt":  "2024-06-25T17:46:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6CgvXD",
                                           "createdAt":  "2024-06-25T17:55:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "Ah that\u0027s wonderful to hear, thanks! So now it comes down to timing/resourcing/scheduling/sequencing 😄 \r\n\r\nDo we push to implement support for two volume behavior under test modes in 8.1: no volumes, and ephemeral volumes; or do we just for the initial click-stop of a \"no volumes\" behavior in 8.1 and introduce the ephemeral volumes option later, given that the ephemeral option is likely to be more work.\r\n\r\nThoughts @mitchdenny @davidfowl?",
                                           "updatedAt":  "2024-06-25T17:55:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6D89aO",
                                           "createdAt":  "2024-07-08T11:47:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mitchdenny",
                                           "body":  "@DamianEdwards help me understand the ask a little bit more.\r\n\r\nSo we\u0027ve written a test case and the test case includes a `WithDataVolume` or some other method that results in a volume being configured for the container. By default, this volume will have a deterministic name based on the apphost path etc.\r\n\r\nThis becomes a problem when running a test because you may execute it multiple times and you don\u0027t want the old data volume getting in the way.\r\n\r\nYou could just not add a volume, and allow the container to use its own ephemeral storage without the path being bound. I don\u0027t think we have any resources today that require a volume mount that wouldn\u0027t be better served by a bind mount (e.g. Keycloak for realm import).\r\n\r\nHOWEVER ... sometimes you might have a resource that you created via an extension method and it sets up the volumes within the extension and you can\u0027t change that default behavior.\r\n\r\nPerhaps what we need here is an extension API in `Aspire.Hosting.Testing` that allows you to mutate the volume annotation? Something like this:\r\n\r\n```csharp\r\nbuilder.AddSomeResourceThatAutomaticallyAddsAVolume(...)\r\n       .WithVolume(\"thevolume\", mount =\u003e mount.IsEmphemeral = true);\r\n```\r\n\r\nWe would add a property to `ContainerMountAnnotation` which would then be processed by the `AppliationExecutor` when setting up the mounts with DCP.\r\n\r\nThoughts?",
                                           "updatedAt":  "2024-07-08T11:47:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6IeBDX",
                                           "createdAt":  "2024-08-14T18:35:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODu-f3A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "karolz-ms",
                                                                               "createdAt":  "2024-08-20T20:48:09Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "@mitchdenny the case is a bit more straightforward than that.\n\nIn your AppHost project you have a container resource that uses a volume, e.g.:\n\n```csharp\nvar pg = builder.AddPostgres(\"server\").WithDataVolume();\nvar db = pg.AddDatabase(\"db\");\n```\n\nThis is done because you want the data to be persistent between runs during development.\n\nThen you write a test for your AppHost project using `DistributedApplicationTestingBuilder`. When that test runs and spins up the AppHost, you don\u0027t want the volumes to be used because:\n\n1. you don\u0027t want data mutations by the test to impact the data persisted during runs in development, and vice-versa\n1. you want the test data isolated across repeated runs\n\nIn the samples repo tests, I have an extension method that the tests call that discovers volume annotations on resources and updates them so that they\u0027re scoped appropriately for the test, specifically:\n\n- Convert them to anonymous volumes if they\u0027re only used by one resource\n- Assign them a random name if they\u0027re shared by multiple resources\n\nhttps://github.com/dotnet/aspire-samples/blob/b013f64e063dce2a4c72b840eab83d43991a5d22/tests/SamplesIntegrationTests/Infrastructure/DistributedApplicationExtensions.cs#L41-L76\n\nThe problem with this at the moment is that the second case above (randomized names for volumes shared across resources) results in volumes being created on each test run that are never cleaned up. That\u0027s where a new feature in DCP would likely help.\n\nA full solution here likely involves adding new API to `Aspire.Hosting.Testing` that allows controlling the behavior of container volumes on resources when using `DistributedApplicationTestingBuilder`, so that folks can opt-in to the behavior that meets the needs of the test, e.g. (names totally TBD):\n\n- `VolumeTestBehavior.Default` -\u003e does nothing, all container resource volumes are maintained as they\u0027re specified in the AppHost\n- `VolumeTestBehavior.Anonymize` -\u003e converts all container resource volumes to anonymous volumes when under test\n- `VolumeTestBehavior.Isolate` -\u003e modifies container resource volumes so that they\u0027re appropriately isolated based on the application model, e.g. non-shared volumes are converted to anonymous volumes, and shared volumes have their names randomized and marked as ephemeral so that DCP deletes them once the linked containers are deleted.",
                                           "updatedAt":  "2024-08-14T18:35:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6JHqfU",
                                           "createdAt":  "2024-08-21T03:13:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODvg5SA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "DamianEdwards",
                                                                               "createdAt":  "2024-08-23T18:29:17Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "mitchdenny",
                                           "body":  "Moving to backlog. If we want to bring it into 9.0 then lets look at whether it can be squeezed in given our other priorities.",
                                           "updatedAt":  "2024-08-21T03:13:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6d7Rch",
                                           "createdAt":  "2025-02-11T00:32:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ReubenBond",
                                           "body":  "In lieu of a built-in feature to accomplish this, here are some ways to configure volume behavior for tests today.\n\n1. Disable volumes on a per-resource basis from tests by passing a flag to the app host config from your tests, as in the following example:\n\nIn your app host program, enable volumes by default, allowing configuration to disable volumes:\n\n```csharp\nvar postgres = builder.AddPostgres(\"postgres1\");\nif (builder.Configuration.GetValue(\"UseVolumes\", true))\n{\n    postgres.WithDataVolume();\n}\n```\n\nIn test code, pass `\"UseVolumes=false\"` in the args to the app host:\n\n```csharp\npublic async Task DisableVolumesFromTest()\n{\n    // Disable volumes in the test builder.\n    using var builder = await DistributedApplicationTestingBuilder.CreateAsync\u003cProjects.TestingAppHost1_AppHost\u003e([\"UseVolumes=false\"]);\n    var postgres = builder.Resources.Single(r =\u003e r.Name == \"postgres1\");\n    Assert.Empty(postgres.Annotations.OfType\u003cContainerMountAnnotation\u003e());\n}\n```\n\n2. Alternatively, remove all volumes in test code, like in this test:\n\n```csharp\npublic async Task RemoveAllVolumesFromTest()\n{\n    using var builder = await DistributedApplicationTestingBuilder.CreateAsync\u003cProjects.TestingAppHost1_AppHost\u003e();\n\n    // Remove all volumes.\n    foreach (var resource in builder.Resources)\n    {\n        var mounts = resource.Annotations\n            .OfType\u003cContainerMountAnnotation\u003e()\n            .Where(m =\u003e m.Type == ContainerMountType.Volume)\n            .ToList();\n        mounts.ForEach(annotation =\u003e resource.Annotations.Remove(annotation));\n    }\n\n    // Verify that our postgres container does not have a volume.\n    var postgres = builder.Resources.Single(r =\u003e r.Name == \"postgres1\");\n    Assert.Empty(postgres.Annotations.OfType\u003cContainerMountAnnotation\u003e());\n}\n```\n\n3. Alternatively, randomize/anonymize volume names using code similar to what Damian showed above (https://github.com/dotnet/aspire-samples/blob/b013f64e063dce2a4c72b840eab83d43991a5d22/tests/SamplesIntegrationTests/Infrastructure/DistributedApplicationExtensions.cs#L41-L76)",
                                           "updatedAt":  "2025-02-11T00:32:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6d7Tb-",
                                           "createdAt":  "2025-02-11T00:40:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEF52iQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "DamianEdwards",
                                                                               "createdAt":  "2025-02-11T01:04:07Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ReubenBond",
                                           "body":  "Moving to backlog since we don\u0027t anticipate closing this in 9.1. Once we have the needed DCP feature to accomplish this fully, we can re-assess.",
                                           "updatedAt":  "2025-02-11T00:40:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6hZ73p",
                                           "createdAt":  "2025-03-08T02:53:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ggirard07",
                                           "body":  "Sorry if I am out of scope, I did not read the entire thread 😅 But instead of managing volume behavior with some automated delete that way, could it be possible to adjust the mount type instead to specify [a tmpfs mount](https://docs.docker.com/engine/storage/tmpfs/)?\nA simple restart of the container will then just get rid of any form of persistence. That seems to fit the test behavior described early.\nWe used it a lot with the Docker Compose integration in Visual Studio to customize images and expose a healthcheck based on file written to the tmpfs mount.",
                                           "updatedAt":  "2025-03-08T02:53:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6khVKQ",
                                           "createdAt":  "2025-03-28T05:02:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "@karolz-ms @danegsta did we add tech to make this a bit easier in dcp?",
                                           "updatedAt":  "2025-03-28T05:02:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6rvFhj",
                                           "createdAt":  "2025-05-14T19:03:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "karolz-ms",
                                           "body":  "We do now have an optional `Persistent` flag on container volumes in DCP. By default container volumes are persistent, meaning they are not deleted when application execution ends. But if the `Persistent` flag is set to `false`, it will cause the volume to be deleted when the app shuts down.",
                                           "updatedAt":  "2025-05-14T19:03:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6rw9Lt",
                                           "createdAt":  "2025-05-14T22:29:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "What happens if `Persistent` is `false`, but the volume was there when the app started? Does it delete the volume or leave it alone because it was there already?",
                                           "updatedAt":  "2025-05-14T22:29:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6rxHt1",
                                           "createdAt":  "2025-05-14T22:59:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "karolz-ms",
                                           "body":  "We just match by name, so the volume will be deleted if the name matches.",
                                           "updatedAt":  "2025-05-14T22:59:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6rxOBs",
                                           "createdAt":  "2025-05-14T23:19:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "\u003eWe just match by name, so the volume will be deleted if the name matches.\n\nHmmm OK. I wonder if that\u0027s the behavior folks will expect or not.",
                                           "updatedAt":  "2025-05-14T23:19:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6rxWRa",
                                           "createdAt":  "2025-05-14T23:45:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "karolz-ms",
                                           "body":  "Honestly I am not sure. We can do some fingerprinting if it turns out to be problematic. If a test adds some unique random ID to the name, the current behavior may be just fine.",
                                           "updatedAt":  "2025-05-14T23:45:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6rxh5o",
                                           "createdAt":  "2025-05-15T00:26:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DamianEdwards",
                                           "body":  "Yeah I was thinking about cases where the test sets it to be deleted but doesn\u0027t also change the name. If we do something here we\u0027ll need to carefully consider the defaults and the ergonomics to avoid having folks delete volumes they didn\u0027t intend to.",
                                           "updatedAt":  "2025-05-15T00:26:25Z"
                                       }
                                   ],
                         "totalCount":  23
                     },
        "title":  "Allow configuring volume behavior when using Aspire.Hosting.Testing ",
        "labels":  [
                       "area-app-testing"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspire/issues/5632",
        "createdAt":  "2024-09-09T22:53:59Z",
        "number":  5632,
        "author":  "afscrome",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODA4XOw==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "slang25",
                                            "createdAt":  "2024-12-18T13:30:19Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ErikBIMobject",
                                            "createdAt":  "2025-04-05T06:47:02Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2025-01-10T00:28:30Z",
        "body":  "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nCurrently if you are trying to troubleshoot an application state issue in tests run with `DistributedApplicationTestingBuilder`, you have limited information available around the current state of the application (e.g. has one of my resources died early).\n\n### Describe the solution you\u0027d like\n\nOne option could be to do something with a `DebuggerTypeProxy` to provide a view similar to the Resources view on the Aspire dashboard.  You could then hover over the `app` variable to get some of the information you\u0027d otherwise get from the dashboard.\r\n\r\n```cs\r\nawait using var app = await appHost.BuildAsync();\r\nawait app.StartAsync();\r\n```\r\n\r\n![image](https://github.com/user-attachments/assets/e8632fce-3191-4275-b5ac-affeeb8d840f)\r\n\r\nAnother aid could be to add a `WithDashboard` method to `DistributedApplicationTestingBuilder`.  When this is specified, the dashboard would be spun up allowing you to use the data on the dashboard for debugging.  (Although this could get awkward quickly if the dashboard freezes whenever the debugger for the test is paused)\n\n### Additional context\n\nNote, these suggestions only help with local dev when you can hook up a debugger.  These don\u0027t help with debugging in CI systems (unless you can repro the same issue locally and debug there).",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOmd5q1A==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOKYQzfc6Z3jzk",
                                           "createdAt":  "2025-01-10T00:05:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "@JamesNK thoughts?",
                                           "updatedAt":  "2025-01-10T00:05:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6Z3mrU",
                                           "createdAt":  "2025-01-10T00:17:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "afscrome",
                                           "body":  "I\u0027ve been playing around with the following hand in hand with #7012 \u0026 #7039. In my experiments, I can\u0027t implement it fully as a debugger proxy as it requires subscribing to `ResourceNotificationService` before the app starts (which is likely before the debugger proxy is initalised), but I think that could be worked around.\n\n```cs\ninternal class DistributedApplicationProxy : IDisposable\n{\n    // TODO: doesn\u0027t handle replicas\n    [DebuggerBrowsable(DebuggerBrowsableState.Never)]\n    private readonly Dictionary\u003cIResource, ResourceState\u003e _resourceSnapshots = new();\n\n    public IResourceCollection Resources { get; private set; }\n\n    public DistributedApplicationProxy(DistributedApplication app)\n    {\n        Resources = app.Services.GetRequiredService\u003cDistributedApplicationModel\u003e().Resources;\n        _resourceSnapshots = Resources.ToDictionary(k =\u003e k, v =\u003e new ResourceState(v));\n        var resourceNotificationService = app.Services.GetRequiredService\u003cResourceNotificationService\u003e();\n\n        _ = Task.Run(async () =\u003e\n        {\n            await foreach (var evt in resourceNotificationService.WatchAsync(default))\n            {\n                _resourceSnapshots[evt.Resource].Snapshot = evt.Snapshot;\n            }\n\n        });\n    }\n\n    internal ICollection\u003cResourceState\u003e ResourceStates =\u003e _resourceSnapshots.Values;\n\n    [DebuggerDisplay(\"{Snapshot}\", Name =\"{Resource.Name}\")]\n    internal class ResourceState(IResource resource)\n    {\n        [DebuggerBrowsable(DebuggerBrowsableState.Never)]\n        public IResource Resource =\u003e resource;\n\n        [DebuggerBrowsable(DebuggerBrowsableState.RootHidden)]\n        public CustomResourceSnapshot? Snapshot { get; set; }\n    }\n}\n```\n\n\u003cimg width=\"1006\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/cacb39e9-1fc7-45d5-a153-f3c7d9525f9d\" /\u003e\n",
                                           "updatedAt":  "2025-01-10T00:28:30Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Make it eaiser to see Application state in tests when debugging DistributedApplicationTestingBuilder",
        "labels":  [
                       "area-app-testing"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspire/issues/6788",
        "createdAt":  "2024-11-25T14:02:46Z",
        "number":  6788,
        "author":  "afscrome",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODHILwQ==",
                          "nodes":  [
                                        {
                                            "content":  "EYES",
                                            "user":  "1249993110",
                                            "createdAt":  "2025-02-12T05:55:21Z"
                                        },
                                        {
                                            "content":  "EYES",
                                            "user":  "dmontecinoSolu4b",
                                            "createdAt":  "2025-07-15T22:02:31Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2025-06-14T06:01:36Z",
        "body":  "The default integration test template calls `ConfigureHttpClientDefaults` with `AddStandardResilienceHandler`\n\nhttps://github.com/dotnet/aspire/blob/b45b0461b789c64d1b1dfa421f63e2e7a09540af/src/Aspire.ProjectTemplates/templates/aspire-nunit/9.0/IntegrationTest1.cs#L19-L22\n\nThis however produces a lot of noise in 9.0 with the built in health checks this ends up producing a lot of number of distracting messages in the test host. e.g. \n\n```\n    info: Polly[3]\n      Execution attempt. Source: \u0027-standard//Standard-Retry\u0027, Operation Key: \u0027\u0027, Result: \u0027200\u0027, Handled: \u0027False\u0027, Attempt: \u00270\u0027, Execution Time: 1061.2159ms\n```\n\nAre these resiliency headers still a good recommendation for tests in 9.0?  In 8.x before healthchecks \u0026 readiness, request resiliency was highly needed to make sure the apps had started up properly, but with 9.0\u0027s health check support is that still necessary?  (Particularly if the sample tests replace `WaitForResourceAsync` with `WaitForResourceHealthyAsync`)",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOsSnP_g==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOKYQzfc6U5mUR",
                                           "createdAt":  "2024-11-25T14:11:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "afscrome",
                                           "body":  "Here is a slightly more egregious example of noise - this comes from the build server where it\u0027s pulling container images for the first time, and so has a lot more waiting (and thus failing of health checks)\n```\ninfo: Aspire.Hosting.DistributedApplication[0]\n      Aspire version: 9.0.0+01ed51919f8df692ececce51048a140615dc759d\ninfo: Aspire.Hosting.DistributedApplication[0]\n      Distributed application starting.\ninfo: Aspire.Hosting.DistributedApplication[0]\n      Application host directory is: /mnt/vss/_work/1/s/src/REDACTED\nwarn: Polly[3]\n      Execution attempt. Source: \u0027-standard//Standard-Retry\u0027, Operation Key: \u0027\u0027, Result: \u0027An error occurred while sending the request.\u0027, Handled: \u0027True\u0027, Attempt: \u00270\u0027, Execution Time: 31.3691ms\n      System.Net.Http.HttpRequestException: An error occurred while sending the request.\n       ---\u003e System.Net.Http.HttpIOException: The response ended prematurely. (ResponseEnded)\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         --- End of inner exception stack trace ---\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n         at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.\u003cSendCoreAsync\u003eg__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Resilience.ResilienceHandler.\u003c\u003ec.\u003c\u003cSendAsync\u003eb__3_0\u003ed.MoveNext()\nwarn: Polly[0]\n      Resilience event occurred. EventName: \u0027OnRetry\u0027, Source: \u0027-standard//Standard-Retry\u0027, Operation Key: \u0027\u0027, Result: \u0027An error occurred while sending the request.\u0027\n      System.Net.Http.HttpRequestException: An error occurred while sending the request.\n       ---\u003e System.Net.Http.HttpIOException: The response ended prematurely. (ResponseEnded)\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         --- End of inner exception stack trace ---\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n         at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.\u003cSendCoreAsync\u003eg__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Resilience.ResilienceHandler.\u003c\u003ec.\u003c\u003cSendAsync\u003eb__3_0\u003ed.MoveNext()\nwarn: Polly[3]\n      Execution attempt. Source: \u0027-standard//Standard-Retry\u0027, Operation Key: \u0027\u0027, Result: \u0027An error occurred while sending the request.\u0027, Handled: \u0027True\u0027, Attempt: \u00271\u0027, Execution Time: 5.8369ms\n      System.Net.Http.HttpRequestException: An error occurred while sending the request.\n       ---\u003e System.IO.IOException: Unable to read data from the transport connection: Connection reset by peer.\n       ---\u003e System.Net.Sockets.SocketException (104): Connection reset by peer\n         --- End of inner exception stack trace ---\n         at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)\n         at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource\u003cSystem.Int32\u003e.GetResult(Int16 token)\n         at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         --- End of inner exception stack trace ---\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n         at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.\u003cSendCoreAsync\u003eg__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Resilience.ResilienceHandler.\u003c\u003ec.\u003c\u003cSendAsync\u003eb__3_0\u003ed.MoveNext()\nwarn: Polly[0]\n      Resilience event occurred. EventName: \u0027OnRetry\u0027, Source: \u0027-standard//Standard-Retry\u0027, Operation Key: \u0027\u0027, Result: \u0027An error occurred while sending the request.\u0027\n      System.Net.Http.HttpRequestException: An error occurred while sending the request.\n       ---\u003e System.IO.IOException: Unable to read data from the transport connection: Connection reset by peer.\n       ---\u003e System.Net.Sockets.SocketException (104): Connection reset by peer\n         --- End of inner exception stack trace ---\n         at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)\n         at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource\u003cSystem.Int32\u003e.GetResult(Int16 token)\n         at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         --- End of inner exception stack trace ---\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n         at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.\u003cSendCoreAsync\u003eg__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Resilience.ResilienceHandler.\u003c\u003ec.\u003c\u003cSendAsync\u003eb__3_0\u003ed.MoveNext()\nwarn: Polly[3]\n      Execution attempt. Source: \u0027-standard//Standard-Retry\u0027, Operation Key: \u0027\u0027, Result: \u0027An error occurred while sending the request.\u0027, Handled: \u0027True\u0027, Attempt: \u00272\u0027, Execution Time: 3.811ms\n      System.Net.Http.HttpRequestException: An error occurred while sending the request.\n       ---\u003e System.Net.Http.HttpIOException: The response ended prematurely. (ResponseEnded)\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         --- End of inner exception stack trace ---\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n         at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.\u003cSendCoreAsync\u003eg__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Resilience.ResilienceHandler.\u003c\u003ec.\u003c\u003cSendAsync\u003eb__3_0\u003ed.MoveNext()\nwarn: Polly[0]\n      Resilience event occurred. EventName: \u0027OnRetry\u0027, Source: \u0027-standard//Standard-Retry\u0027, Operation Key: \u0027\u0027, Result: \u0027An error occurred while sending the request.\u0027\n      System.Net.Http.HttpRequestException: An error occurred while sending the request.\n       ---\u003e System.Net.Http.HttpIOException: The response ended prematurely. (ResponseEnded)\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         --- End of inner exception stack trace ---\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n         at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.\u003cSendCoreAsync\u003eg__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Resilience.ResilienceHandler.\u003c\u003ec.\u003c\u003cSendAsync\u003eb__3_0\u003ed.MoveNext()\nwarn: Polly[3]\n      Execution attempt. Source: \u0027-standard//Standard-Retry\u0027, Operation Key: \u0027\u0027, Result: \u0027An error occurred while sending the request.\u0027, Handled: \u0027True\u0027, Attempt: \u00270\u0027, Execution Time: 3.8928ms\n      System.Net.Http.HttpRequestException: An error occurred while sending the request.\n       ---\u003e System.Net.Http.HttpIOException: The response ended prematurely. (ResponseEnded)\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         --- End of inner exception stack trace ---\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n         at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.\u003cSendCoreAsync\u003eg__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Resilience.ResilienceHandler.\u003c\u003ec.\u003c\u003cSendAsync\u003eb__3_0\u003ed.MoveNext()\nwarn: Polly[0]\n      Resilience event occurred. EventName: \u0027OnRetry\u0027, Source: \u0027-standard//Standard-Retry\u0027, Operation Key: \u0027\u0027, Result: \u0027An error occurred while sending the request.\u0027\n      System.Net.Http.HttpRequestException: An error occurred while sending the request.\n       ---\u003e System.Net.Http.HttpIOException: The response ended prematurely. (ResponseEnded)\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         --- End of inner exception stack trace ---\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n         at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.\u003cSendCoreAsync\u003eg__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Resilience.ResilienceHandler.\u003c\u003ec.\u003c\u003cSendAsync\u003eb__3_0\u003ed.MoveNext()\nwarn: Polly[3]\n      Execution attempt. Source: \u0027-standard//Standard-Retry\u0027, Operation Key: \u0027\u0027, Result: \u0027An error occurred while sending the request.\u0027, Handled: \u0027True\u0027, Attempt: \u00271\u0027, Execution Time: 3.4253ms\n      System.Net.Http.HttpRequestException: An error occurred while sending the request.\n       ---\u003e System.Net.Http.HttpIOException: The response ended prematurely. (ResponseEnded)\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         --- End of inner exception stack trace ---\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n         at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.\u003cSendCoreAsync\u003eg__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Resilience.ResilienceHandler.\u003c\u003ec.\u003c\u003cSendAsync\u003eb__3_0\u003ed.MoveNext()\nwarn: Polly[0]\n      Resilience event occurred. EventName: \u0027OnRetry\u0027, Source: \u0027-standard//Standard-Retry\u0027, Operation Key: \u0027\u0027, Result: \u0027An error occurred while sending the request.\u0027\n      System.Net.Http.HttpRequestException: An error occurred while sending the request.\n       ---\u003e System.Net.Http.HttpIOException: The response ended prematurely. (ResponseEnded)\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         --- End of inner exception stack trace ---\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n         at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.\u003cSendCoreAsync\u003eg__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Resilience.ResilienceHandler.\u003c\u003ec.\u003c\u003cSendAsync\u003eb__3_0\u003ed.MoveNext()\nwarn: Polly[3]\n      Execution attempt. Source: \u0027-standard//Standard-Retry\u0027, Operation Key: \u0027\u0027, Result: \u0027An error occurred while sending the request.\u0027, Handled: \u0027True\u0027, Attempt: \u00272\u0027, Execution Time: 4.3873ms\n      System.Net.Http.HttpRequestException: An error occurred while sending the request.\n       ---\u003e System.IO.IOException: Unable to read data from the transport connection: Connection reset by peer.\n       ---\u003e System.Net.Sockets.SocketException (104): Connection reset by peer\n         --- End of inner exception stack trace ---\n         at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)\n         at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource\u003cSystem.Int32\u003e.GetResult(Int16 token)\n         at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         --- End of inner exception stack trace ---\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n         at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.\u003cSendCoreAsync\u003eg__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Resilience.ResilienceHandler.\u003c\u003ec.\u003c\u003cSendAsync\u003eb__3_0\u003ed.MoveNext()\nwarn: Polly[0]\n      Resilience event occurred. EventName: \u0027OnRetry\u0027, Source: \u0027-standard//Standard-Retry\u0027, Operation Key: \u0027\u0027, Result: \u0027An error occurred while sending the request.\u0027\n      System.Net.Http.HttpRequestException: An error occurred while sending the request.\n       ---\u003e System.IO.IOException: Unable to read data from the transport connection: Connection reset by peer.\n       ---\u003e System.Net.Sockets.SocketException (104): Connection reset by peer\n         --- End of inner exception stack trace ---\n         at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)\n         at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource\u003cSystem.Int32\u003e.GetResult(Int16 token)\n         at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         --- End of inner exception stack trace ---\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n         at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.\u003cSendCoreAsync\u003eg__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Resilience.ResilienceHandler.\u003c\u003ec.\u003c\u003cSendAsync\u003eb__3_0\u003ed.MoveNext()\nwarn: Polly[3]\n      Execution attempt. Source: \u0027-standard//Standard-Retry\u0027, Operation Key: \u0027\u0027, Result: \u0027An error occurred while sending the request.\u0027, Handled: \u0027True\u0027, Attempt: \u00270\u0027, Execution Time: 120.1197ms\n      System.Net.Http.HttpRequestException: An error occurred while sending the request.\n       ---\u003e System.Net.Http.HttpIOException: The response ended prematurely. (ResponseEnded)\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         --- End of inner exception stack trace ---\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n         at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.\u003cSendCoreAsync\u003eg__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Resilience.ResilienceHandler.\u003c\u003ec.\u003c\u003cSendAsync\u003eb__3_0\u003ed.MoveNext()\nwarn: Polly[0]\n      Resilience event occurred. EventName: \u0027OnRetry\u0027, Source: \u0027-standard//Standard-Retry\u0027, Operation Key: \u0027\u0027, Result: \u0027An error occurred while sending the request.\u0027\n      System.Net.Http.HttpRequestException: An error occurred while sending the request.\n       ---\u003e System.Net.Http.HttpIOException: The response ended prematurely. (ResponseEnded)\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         --- End of inner exception stack trace ---\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n         at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.\u003cSendCoreAsync\u003eg__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Resilience.ResilienceHandler.\u003c\u003ec.\u003c\u003cSendAsync\u003eb__3_0\u003ed.MoveNext()\ninfo: Polly[3]\n      Execution attempt. Source: \u0027-standard//Standard-Retry\u0027, Operation Key: \u0027\u0027, Result: \u0027200\u0027, Handled: \u0027False\u0027, Attempt: \u00271\u0027, Execution Time: 78.4977ms\ninfo: Polly[3]\n      Execution attempt. Source: \u0027-standard//Standard-Retry\u0027, Operation Key: \u0027\u0027, Result: \u0027200\u0027, Handled: \u0027False\u0027, Attempt: \u00270\u0027, Execution Time: 3.4084ms\nwarn: Polly[3]\n      Execution attempt. Source: \u0027-standard//Standard-Retry\u0027, Operation Key: \u0027\u0027, Result: \u0027An error occurred while sending the request.\u0027, Handled: \u0027True\u0027, Attempt: \u00270\u0027, Execution Time: 2.4967ms\n      System.Net.Http.HttpRequestException: An error occurred while sending the request.\n       ---\u003e System.Net.Http.HttpIOException: The response ended prematurely. (ResponseEnded)\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         --- End of inner exception stack trace ---\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n         at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.\u003cSendCoreAsync\u003eg__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Resilience.ResilienceHandler.\u003c\u003ec.\u003c\u003cSendAsync\u003eb__3_0\u003ed.MoveNext()\nwarn: Polly[0]\n      Resilience event occurred. EventName: \u0027OnRetry\u0027, Source: \u0027-standard//Standard-Retry\u0027, Operation Key: \u0027\u0027, Result: \u0027An error occurred while sending the request.\u0027\n      System.Net.Http.HttpRequestException: An error occurred while sending the request.\n       ---\u003e System.Net.Http.HttpIOException: The response ended prematurely. (ResponseEnded)\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         --- End of inner exception stack trace ---\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n         at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.\u003cSendCoreAsync\u003eg__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Resilience.ResilienceHandler.\u003c\u003ec.\u003c\u003cSendAsync\u003eb__3_0\u003ed.MoveNext()\nwarn: Polly[3]\n      Execution attempt. Source: \u0027-standard//Standard-Retry\u0027, Operation Key: \u0027\u0027, Result: \u0027An error occurred while sending the request.\u0027, Handled: \u0027True\u0027, Attempt: \u00271\u0027, Execution Time: 3.071ms\n      System.Net.Http.HttpRequestException: An error occurred while sending the request.\n       ---\u003e System.IO.IOException: Unable to read data from the transport connection: Connection reset by peer.\n       ---\u003e System.Net.Sockets.SocketException (104): Connection reset by peer\n         --- End of inner exception stack trace ---\n         at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)\n         at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource\u003cSystem.Int32\u003e.GetResult(Int16 token)\n         at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         --- End of inner exception stack trace ---\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n         at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.\u003cSendCoreAsync\u003eg__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Resilience.ResilienceHandler.\u003c\u003ec.\u003c\u003cSendAsync\u003eb__3_0\u003ed.MoveNext()\nwarn: Polly[0]\n      Resilience event occurred. EventName: \u0027OnRetry\u0027, Source: \u0027-standard//Standard-Retry\u0027, Operation Key: \u0027\u0027, Result: \u0027An error occurred while sending the request.\u0027\n      System.Net.Http.HttpRequestException: An error occurred while sending the request.\n       ---\u003e System.IO.IOException: Unable to read data from the transport connection: Connection reset by peer.\n       ---\u003e System.Net.Sockets.SocketException (104): Connection reset by peer\n         --- End of inner exception stack trace ---\n         at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)\n         at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource\u003cSystem.Int32\u003e.GetResult(Int16 token)\n         at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         --- End of inner exception stack trace ---\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n         at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.\u003cSendCoreAsync\u003eg__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Resilience.ResilienceHandler.\u003c\u003ec.\u003c\u003cSendAsync\u003eb__3_0\u003ed.MoveNext()\nwarn: Polly[3]\n      Execution attempt. Source: \u0027-standard//Standard-Retry\u0027, Operation Key: \u0027\u0027, Result: \u0027An error occurred while sending the request.\u0027, Handled: \u0027True\u0027, Attempt: \u00272\u0027, Execution Time: 1.1415ms\n      System.Net.Http.HttpRequestException: An error occurred while sending the request.\n       ---\u003e System.IO.IOException: Unable to read data from the transport connection: Connection reset by peer.\n       ---\u003e System.Net.Sockets.SocketException (104): Connection reset by peer\n         --- End of inner exception stack trace ---\n         at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)\n         at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource\u003cSystem.Int32\u003e.GetResult(Int16 token)\n         at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         --- End of inner exception stack trace ---\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n         at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.\u003cSendCoreAsync\u003eg__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Resilience.ResilienceHandler.\u003c\u003ec.\u003c\u003cSendAsync\u003eb__3_0\u003ed.MoveNext()\nwarn: Polly[0]\n      Resilience event occurred. EventName: \u0027OnRetry\u0027, Source: \u0027-standard//Standard-Retry\u0027, Operation Key: \u0027\u0027, Result: \u0027An error occurred while sending the request.\u0027\n      System.Net.Http.HttpRequestException: An error occurred while sending the request.\n       ---\u003e System.IO.IOException: Unable to read data from the transport connection: Connection reset by peer.\n       ---\u003e System.Net.Sockets.SocketException (104): Connection reset by peer\n         --- End of inner exception stack trace ---\n         at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)\n         at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource\u003cSystem.Int32\u003e.GetResult(Int16 token)\n         at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         --- End of inner exception stack trace ---\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n         at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.\u003cSendCoreAsync\u003eg__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Resilience.ResilienceHandler.\u003c\u003ec.\u003c\u003cSendAsync\u003eb__3_0\u003ed.MoveNext()\ninfo: Polly[3]\n      Execution attempt. Source: \u0027-standard//Standard-Retry\u0027, Operation Key: \u0027\u0027, Result: \u0027The operation was canceled.\u0027, Handled: \u0027False\u0027, Attempt: \u00273\u0027, Execution Time: 674.6852ms\n      System.Threading.Tasks.TaskCanceledException: The operation was canceled.\n       ---\u003e System.IO.IOException: Unable to read data from the transport connection: Operation canceled.\n       ---\u003e System.Net.Sockets.SocketException (125): Operation canceled\n         --- End of inner exception stack trace ---\n         at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)\n         at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource\u003cSystem.Int32\u003e.GetResult(Int16 token)\n         at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         --- End of inner exception stack trace ---\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n         at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.\u003cSendCoreAsync\u003eg__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Resilience.ResilienceHandler.\u003c\u003ec.\u003c\u003cSendAsync\u003eb__3_0\u003ed.MoveNext()\ninfo: Polly[3]\n      Execution attempt. Source: \u0027-standard//Standard-Retry\u0027, Operation Key: \u0027\u0027, Result: \u0027200\u0027, Handled: \u0027False\u0027, Attempt: \u00270\u0027, Execution Time: 7036.2245ms\ninfo: REDACTED[0]\n      1: 2024-11-25T11:07:15.1032400Z Waiting for resource \u0027REDACTED\u0027 to complete.\ninfo: REDACTED[0]\n      2: 2024-11-25T11:07:15.1085103Z Waiting for resource \u0027REDACTED\u0027 to enter the \u0027Running\u0027 state.\ninfo: REDACTED[0]\n      3: 2024-11-25T11:07:28.0533651Z Waiting for resource \u0027REDACTED\u0027 to become healthy.\ninfo: REDACTED[0]\n      4: 2024-11-25T11:07:39.4573760Z Finished waiting for resource \u0027REDACTED\u0027.\ninfo: REDACTED[0]\n      5: 2024-11-25T11:08:05.2686739Z Finished waiting for resource \u0027REDACTED\u0027.\ninfo: REDACTED[0]\n      1: 2024-11-25T11:07:15.1112952Z Waiting for resource \u0027\u0027REDACTED\u0027\u0027 to enter the \u0027Running\u0027 state.\ninfo: REDACTED[0]\n      2: 2024-11-25T11:07:15.1113495Z Waiting for resource \u0027REDACTED\u0027 to enter the \u0027Running\u0027 state.\ninfo: REDACTED[0]\n      3: 2024-11-25T11:07:28.0526149Z Waiting for resource \u0027REDACTED\u0027 to become healthy.\ninfo: REDACTED[0]\n      4: 2024-11-25T11:07:41.3254477Z Waiting for resource \u0027REDACTED\u0027 to become healthy.\ninfo: REDACTED[0]\n      5: 2024-11-25T11:07:42.4269559Z Finished waiting for resource \u0027REDACTED\u0027.\ninfo: REDACTED[0]\n      6: 2024-11-25T11:08:05.2596140Z Finished waiting for resource \u0027REDACTED\u0027.\ninfo: Aspire.Hosting.DistributedApplication[0]\n      Distributed application started. Press Ctrl+C to shut down.\ninfo: Polly[3]\n      Execution attempt. Source: \u0027-standard//Standard-Retry\u0027, Operation Key: \u0027\u0027, Result: \u0027The operation was canceled.\u0027, Handled: \u0027False\u0027, Attempt: \u00270\u0027, Execution Time: 114.5811ms\n      System.Threading.Tasks.TaskCanceledException: The operation was canceled.\n       ---\u003e System.IO.IOException: Unable to read data from the transport connection: Operation canceled.\n       ---\u003e System.Net.Sockets.SocketException (125): Operation canceled\n         --- End of inner exception stack trace ---\n         at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)\n         at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource\u003cSystem.Int32\u003e.GetResult(Int16 token)\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         --- End of inner exception stack trace ---\n         at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n         at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.\u003cSendCoreAsync\u003eg__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n         at Microsoft.Extensions.Http.Resilience.ResilienceHandler.\u003c\u003ec.\u003c\u003cSendAsync\u003eb__3_0\u003ed.MoveNext()\n```",
                                           "updatedAt":  "2024-11-25T14:11:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6xKc_-",
                                           "createdAt":  "2025-06-14T05:52:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "@afscrome Did we fix this?",
                                           "updatedAt":  "2025-06-14T05:52:02Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "`AddStandardResilienceHandler` and healthchecks result in noisy logs with TestHost",
        "labels":  [
                       "area-app-testing"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspire/issues/6857",
        "createdAt":  "2024-12-03T14:06:57Z",
        "number":  6857,
        "author":  "Culan",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODJQ0RA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "kt-danmendonca",
                                            "createdAt":  "2025-06-30T11:01:03Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "alexandreMachado97",
                                            "createdAt":  "2025-06-30T11:02:19Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "alexandrektgomes",
                                            "createdAt":  "2025-06-30T14:26:19Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Meir017",
                                            "createdAt":  "2025-07-31T01:24:02Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "chuanboz",
                                            "createdAt":  "2025-07-31T02:09:43Z"
                                        }
                                    ],
                          "totalCount":  5
                      },
        "updatedAt":  "2025-07-31T02:20:01Z",
        "body":  "### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nIn our build pipeline we have separated the build from the test execution to enable all our test projects run in parallel on multiple test agents.\n\nTo accomplish this we have this workflow:\n\n- dotnet build the solution\n- dotnet publish each of the test projects with the --no-build option\n- store the output of the publish\n- check and react to any build warnings (here the building of the full solution helps because we also have some sample projects so this will cover all for us)\n\nIf this is fine we move to the test stage where we:\n\n- For every test project allocate one of the test agents.\n- Download the artifact from previous step\n- Execute the tests\n\nObviously we want only one build to happen and we want our tests run on that particular build so to save time and space, the test agent doesn\u0027t even have to clone the repo, it just gets everything from the dotnet publish and then executes dotnet test on that dll.\n\n\nWhen we try to apply the same to Aspire.Hosting.Testing test projects the publish seems to succeed but then when we run the tests we are hitting a DirectoryNotFoundException with an directory hinting of the agent who build it.\n\n\n`\n[xUnit.net 00:00:41.49]       System.IO.DirectoryNotFoundException : E:\\home\\vsts\\work\\1\\s\\Source\\Gateway.AppHost\\\n[xUnit.net 00:00:41.49]       Stack Trace:\n[xUnit.net 00:00:41.49]            at Microsoft.Extensions.FileProviders.PhysicalFileProvider..ctor(String root, ExclusionFilters filters)\n[xUnit.net 00:00:41.49]            at Microsoft.Extensions.Hosting.HostBuilder.CreateHostingEnvironment(IConfiguration hostConfiguration)\n[xUnit.net 00:00:41.49]            at Microsoft.Extensions.Hosting.HostApplicationBuilder.Initialize(HostApplicationBuilderSettings settings, HostBuilderContext\u0026 hostBuilderContext, IHostEnvironment\u0026 environment, LoggingBuilder\u0026 logging, MetricsBuilder\u0026 metrics)\n[xUnit.net 00:00:41.49]            at Microsoft.Extensions.Hosting.HostApplicationBuilder..ctor(HostApplicationBuilderSettings settings)\n[xUnit.net 00:00:41.49]         /_/src/Aspire.Hosting/DistributedApplicationBuilder.cs(132,0): at Aspire.Hosting.DistributedApplicationBuilder..ctor(DistributedApplicationOptions options)\n[xUnit.net 00:00:41.49]         /_/src/Aspire.Hosting/DistributedApplication.cs(141,0): at Aspire.Hosting.DistributedApplication.CreateBuilder(String[] args)\n[xUnit.net 00:00:41.49]         /_/Source/Gateway.AppHost/Program.cs(5,0): at Program.\u003cMain\u003e$(String[] args)\n[xUnit.net 00:00:41.49]            at Program.\u003cMain\u003e(String[] args)\n`\n\nI\u0027ve researched current issues there is none pointing exactly to my use-case but i found some hints:\nhttps://github.com/dotnet/aspire/issues/1704 - Here DamianEdwards is saying that during compile time the path to DCP from the AssemblyMetadata attributes stamped onto the AppHost\n\nSo i had a quick check on my apphost:\n\nAssemblyMetadataAttribute: dcpclipath value: /home/vsts/.nuget/packages/aspire.hosting.orchestration.linux-x64/9.0.0/tools/dcp\nAssemblyMetadataAttribute: dcpextensionpaths value: /home/vsts/.nuget/packages/aspire.hosting.orchestration.linux-x64/9.0.0/tools/ext/\nAssemblyMetadataAttribute: dcpbinpath value: /home/vsts/.nuget/packages/aspire.hosting.orchestration.linux-x64/9.0.0/tools/ext/bin/\nAssemblyMetadataAttribute: apphostprojectpath value: /home/vsts/work/1/s/Source/Gateway.AppHost\nAssemblyMetadataAttribute: apphostprojectname value: Gateway.AppHost.csproj\nAssemblyMetadataAttribute: aspiredashboardpath value: /home/vsts/.nuget/packages/aspire.dashboard.sdk.linux-x64/9.0.0/tools/Aspire.Dashboard\n\nHere we can see references to the build host\u0027s nuget cache and the sourcecode.\n\nI guess that what i\u0027m after is a dotnet publish to folder functionality that would remove any link towards the sourcecode and the build host.\n\n\n\n\n### Describe the solution you\u0027d like\n\ndotnet publish to folder that creates a package that can run independently.\n\n### Additional context\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOuw96Tg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOKYQzfc6V49wG",
                                           "createdAt":  "2024-12-03T14:35:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEYeIXQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "kt-danmendonca",
                                                                               "createdAt":  "2025-06-30T11:01:05Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "Culan",
                                           "body":  "The same behavior can be observed locally with aspire-samples:\n\n- Clone the repo aspire-samples\n- `dotnet build tests\\SamplesTests.sln -c Release -f net9.0`\n- `dotnet publish tests\\SamplesIntegrationTests\\SamplesIntegrationTests.csproj --no-build -c Release -f net9.0`\n- Rename the aspire-samples folder (this simulates the agent switch in my case)\n- `dotnet test tests\\SamplesIntegrationTests\\SamplesIntegrationTests.csproj --no-build`",
                                           "updatedAt":  "2024-12-03T14:35:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6Z3eFd",
                                           "createdAt":  "2025-01-09T23:40:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "It\u0027s unclear if we would support this, the testing relies on access to the source.",
                                           "updatedAt":  "2025-01-09T23:40:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6aR_TC",
                                           "createdAt":  "2025-01-13T23:00:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "afscrome",
                                           "body":  "If not supported, could we make this fail with a clearer message saying that the tests must be run from the path they were built in, rather than failing with a directory not found error?\n\nWith the dotnet testing platforming supporting dotnet publish for tests natively, it doesn\u0027t seem unreasonable that developers would think aspire supports tests published this way. ",
                                           "updatedAt":  "2025-01-13T23:00:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6aVEBH",
                                           "createdAt":  "2025-01-14T07:33:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "It\u0027s uncommon but not unheard of which means we aren\u0027t going to rush to support it (amongst the other issues that are blocking more people). The issue is left open to see how many people run into this problem (or potentially for someone to contribute to unblock the scenario). ",
                                           "updatedAt":  "2025-01-14T07:33:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6z7q3q",
                                           "createdAt":  "2025-06-30T11:16:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEbBVyA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "maddymontaquila",
                                                                               "createdAt":  "2025-07-17T23:53:56Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "kt-danmendonca",
                                           "body":  "To understand the extent of this issue, we\u0027re encountering a problem where, due to network security, our agents connected to Azure resources are unable to build the projects. Consequently, we build the project on one agent and then transfer the contents to another. However, when the other agent attempts to run the project, it still references the original build path from the different agent. This issue is occurring in our DevOps Azure Pipelines.",
                                           "updatedAt":  "2025-06-30T11:16:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc67AYXp",
                                           "createdAt":  "2025-07-30T18:35:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MattKotsenas",
                                           "body":  "We\u0027re bumping into this as well, where we build on an x64 machine but want to run the tests on arm64. We\u0027re in the process of adopting Microsoft.Testing.Platform so that we can do this for other tests, but for Aspire we re-build on the test machine to sidestep these types of issues.",
                                           "updatedAt":  "2025-07-30T18:35:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc67D3pO",
                                           "createdAt":  "2025-07-31T02:20:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "chuanboz",
                                           "body":  "We meet similar issue with cloud test to run on another VM different than the build machine. The error message we meet is project file was not found when determine the launch setting for AddProject.\n\nAspire.Hosting.DistributedApplicationException : Project file \u0027C:\\__w\\1\\s\\src\\Directory.Api\\Directory.Api.csproj\u0027 was not found.\n\n\u003e at Aspire.Hosting.LaunchProfileExtensions.GetLaunchSettings(IProjectMetadata projectMetadata, String resourceName) in /_/src/Shared/LaunchProfiles/LaunchProfileExtensions.cs:line 77\nat Aspire.Hosting.LaunchProfileExtensions.GetLaunchSettings(ProjectResource projectResource) in /_/src/Shared/LaunchProfiles/LaunchProfileExtensions.cs:line 28\nat Aspire.Hosting.LaunchProfileExtensions.TrySelectLaunchProfileByOrder(ProjectResource projectResource, String\u0026 launchProfileName) in /_/src/Shared/LaunchProfiles/LaunchProfileExtensions.cs:line 117\nat Aspire.Hosting.LaunchProfileExtensions.SelectLaunchProfileName(ProjectResource projectResource) in /_/src/Shared/LaunchProfiles/LaunchProfileExtensions.cs:line 179\nat Aspire.Hosting.LaunchProfileExtensions.GetEffectiveLaunchProfile(ProjectResource projectResource, Boolean throwIfNotFound) in /_/src/Shared/LaunchProfiles/LaunchProfileExtensions.cs:line 33\nat Aspire.Hosting.ProjectResourceBuilderExtensions.WithProjectDefaults(IResourceBuilder`1 builder, ProjectResourceOptions options) in /_/src/Aspire.Hosting/ProjectResourceBuilderExtensions.cs:line 341\nat Aspire.Hosting.ProjectResourceBuilderExtensions.AddProject[TProject](IDistributedApplicationBuilder builder, String name, Action`1 configure) in /_/src/Aspire.Hosting/ProjectResourceBuilderExtensions.cs:line 230\nat Aspire.Hosting.ProjectResourceBuilderExtensions.AddProject[TProject](IDistributedApplicationBuilder builder, String name) in /_/src/Aspire.Hosting/ProjectResourceBuilderExtensions.cs:line 63\nat Program.\u003cMain\u003e$(String[] args) in C:\\__w\\1\\s\\src\\MiniCPC.AppHost\\Program.cs:line 8\nat System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\nat System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)\n--- End of stack trace from previous location ---\nat Aspire.Hosting.Testing.DistributedApplicationEntryPointInvoker.EntryPointInvoker.InvokeAsync(CancellationToken cancellationToken) in /_/src/Aspire.Hosting.Testing/DistributedApplicationEntryPointInvoker.cs:line 132\nat Aspire.Hosting.Testing.DistributedApplicationEntryPointInvoker.\u003c\u003ec__DisplayClass0_0.\u003c\u003cResolveEntryPoint\u003eb__0\u003ed.MoveNext() in /_/src/Aspire.Hosting.Testing/DistributedApplicationEntryPointInvoker.cs:line 39\n--- End of stack trace from previous location ---\nat Aspire.Hosting.Testing.DistributedApplicationFactory.InvokeEntryPoint(Func`3 factory) in /_/src/Aspire.Hosting.Testing/DistributedApplicationFactory.cs:line 427\nat Aspire.Hosting.Testing.DistributedApplicationFactory.ResolveBuilderAsync(CancellationToken cancellationToken) in /_/src/Aspire.Hosting.Testing/DistributedApplicationFactory.cs:line 51\nat Aspire.Hosting.Testing.DistributedApplicationTestingBuilder.SuspendingDistributedApplicationFactory.CreateBuilderAsync(CancellationToken cancellationToken) in /_/src/Aspire.Hosting.Testing/DistributedApplicationTestingBuilder.cs:line 162\nat Aspire.Hosting.Testing.DistributedApplicationTestingBuilder.CreateAsync(Type entryPoint, String[] args, Action`2 configureBuilder, CancellationToken cancellationToken) in /_/src/Aspire.Hosting.Testing/DistributedApplicationTestingBuilder.cs:line 109\nat Microsoft.WindowsCloud.Aspire.TestShared.AppHostFixture`1.InitializeAsync() in C:\\__w\\1\\s\\src\\AspireF5.TestShared\\AppHostFixture.cs:line 21",
                                           "updatedAt":  "2025-07-31T02:20:01Z"
                                       }
                                   ],
                         "totalCount":  7
                     },
        "title":  "dotnet publish to folder for Aspire.Hosting.Testing projects",
        "labels":  [
                       "area-app-testing"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspire/issues/6887",
        "createdAt":  "2024-12-06T18:31:06Z",
        "number":  6887,
        "author":  "afscrome",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-06-14T17:57:55Z",
        "body":  "### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Describe the bug\n\nIf you try to run an aspire app or a test app where you\u0027ve passed `--artifacts-path` into dotnet, then Aspire will be unable to launch project resources as it\u0027ll try and fall back to the default artifact path.\n\n### Expected Behavior\n\nProject resources should start when the app host is started with `--artifacts-path`\n\n### Steps To Reproduce\n\nI reproed this using the Aspire starter template, although I believe this is reproduceable with any app host project or test project using `DistributedApplicationTestingBuilder`\n\n```bash\n# Clean out any non artifact path binaries\ndotnet clean\n\ndotnet run --project .\\AspireApp2.AppHost\\ --artifacts-path .artifacts\ndotnet test .\\AspireApp2.Tests\\ --artifacts-path .artifacts\n```\n\n### Exceptions (if any)\n\n```\n Unhandled exception: System.ComponentModel.Win32Exception (2): An error occurred trying to start process \u0027REDACTED\\AspireApp2\\AspireApp2.ApiService\\bin\\Debug\\net8.0\\AspireApp2.ApiService.exe\u0027 with working directory \u0027REDACTED\\AspireApp2\\AspireApp2.ApiService\u0027. The system cannot find the file specified.\n2024-12-06T18:09:23\n    at System.Diagnostics.Process.StartWithCreateProcess(ProcessStartInfo startInfo)\n2024-12-06T18:09:23\n    at Microsoft.DotNet.Cli.Utils.Command.Execute(Action`1 processStarted)\n2024-12-06T18:09:23\n    at Microsoft.DotNet.Tools.Run.RunCommand.Execute()\n2024-12-06T18:09:23\n    at System.CommandLine.Invocation.InvocationPipeline.Invoke(ParseResult parseResult)\n2024-12-06T18:09:23\n    at System.CommandLine.ParseResult.Invoke()\n2024-12-06T18:09:23\n    at Microsoft.DotNet.Cli.Program.ProcessArgs(String[] args, TimeSpan startupTime, ITelemetry telemetryClient)\n```\n\nThe path it should be looking at is `REDACTED\\AspireApp2\\.artifacts\\bin\\AspireApp2.ApiService\\debug\\AspireApp2.ApiService.exe`, not `REDACTED\\AspireApp2\\AspireApp2.ApiService\\bin\\Debug\\net8.0\\AspireApp2.ApiService.exe`\n\n### .NET Version info\n\n```\n.NET SDK:\n Version:           9.0.100\n Commit:            59db016f11\n Workload version:  9.0.100-manifests.c6f19616\n MSBuild version:   17.12.7+5b8665660\n\nRuntime Environment:\n OS Name:     Windows\n OS Version:  10.0.22621\n OS Platform: Windows\n RID:         win-x64\n Base Path:   C:\\Program Files\\dotnet\\sdk\\9.0.100\\\n\n.NET workloads installed:\n [aspire]\n   Installation Source: VS 17.12.35514.174\n   Manifest Version:    8.2.2/8.0.100\n   Manifest Path:       C:\\Program Files\\dotnet\\sdk-manifests\\8.0.100\\microsoft.net.sdk.aspire\\8.2.2\\WorkloadManifest.json\n   Install Type:              Msi\n\nConfigured to use loose manifests when installing new manifests.\n\nHost:\n  Version:      9.0.0\n  Architecture: x64\n  Commit:       9d5a6a9aa4\n\n.NET SDKs installed:\n  6.0.428 [C:\\Program Files\\dotnet\\sdk]\n  8.0.404 [C:\\Program Files\\dotnet\\sdk]\n  9.0.100 [C:\\Program Files\\dotnet\\sdk]\n\n.NET runtimes installed:\n  Microsoft.AspNetCore.App 6.0.36 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 7.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 7.0.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 8.0.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 9.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.NETCore.App 6.0.36 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.NETCore.App 7.0.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.NETCore.App 8.0.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.NETCore.App 9.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.WindowsDesktop.App 6.0.36 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n  Microsoft.WindowsDesktop.App 7.0.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n  Microsoft.WindowsDesktop.App 8.0.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n  Microsoft.WindowsDesktop.App 9.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n\nOther architectures found:\n  x86   [C:\\Program Files (x86)\\dotnet]\n    registered at [HKLM\\SOFTWARE\\dotnet\\Setup\\InstalledVersions\\x86\\InstallLocation]\n\nEnvironment variables:\n  Not set\n\nglobal.json file:\n  Not found\n\nLearn more:\n  https://aka.ms/dotnet/info\n\nDownload .NET:\n  https://aka.ms/dotnet/download\n```\n\n### Anything else?\n\nWe\u0027ve hit this on our standard build template.  Our template template sets `--artifact-path` on all `dotnet` steps to make publishing easier at the end - this way we just generically push `$(ArtifactsPath)/package` to our internal nuget feed and publish everything under `$(ArtifactsPath)/publish` as an artifact.\n\nLocally I have been able to work around this by setting the `ArtifactsPath`, although this doesn\u0027t seem to be working on the build server which I\u0027ll need to investigate more next week.  I assume this work around works as Environment Variables are automatically inherited by child processes, but the `--artifacts-path` command line argument is not automatically propagated.\n\n```pwsh\n$env:ArtifactsPath = (Resolve-Path \u0027.artifacts\u0027)    \n# Clean out any non artifact path binaries\ndotnet clean\n\ndotnet run --project .\\AspireApp2.AppHost\\ --artifacts-path .artifacts\ndotnet test .\\AspireApp2.Tests\\ --artifacts-path .artifacts\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOsTMnyw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOKYQzfc6ZGRdc",
                                           "createdAt":  "2025-01-03T00:33:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "afscrome",
                                           "body":  "The workaround wasn\u0027t initially working on our build server because the project in question explicitly set `\u003cArtifactPath /\u003e` in it\u0027s `Directory.Build.props`.  `--artifacts-path` sets a global property which overrides any project level properties. \n However when using an environment variable, the value set by the project wins.\n\nAfter removing the `ArtifactPath` from the `Directory.Build.props`, the workaround of setting the `ArtifactPath` environment variable works on our build server.",
                                           "updatedAt":  "2025-01-03T00:33:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6xMyfL",
                                           "createdAt":  "2025-06-14T17:57:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MattKotsenas",
                                           "body":  "I just bumped into this as well. I\u0027m happy to make a contribution here if there\u0027s any suggestions on where to look / how to get started?",
                                           "updatedAt":  "2025-06-14T17:57:55Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Project Resource fails to start if AppHost started with `--artifacts-path`",
        "labels":  [
                       "area-app-testing"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspire/issues/6937",
        "createdAt":  "2024-12-12T14:27:38Z",
        "number":  6937,
        "author":  "steingran",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-01-22T13:59:56Z",
        "body":  "### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Describe the bug\n\nI have a .NET 9 project that uses Aspire, and I added an Aspire test project. One of my tests had an issue, and I started to debug it (in Rider, version 2024.3.2). Breakpoints are hit, I start investigating values, and then a timeout is hit and the debug session ends (problem).\n\n`Polly.Timeout.TimeoutRejectedException: The operation didn\u0027t complete within the allowed timeout of \u002700:00:30\u0027.`\n\nThis seems somewhat similar to https://github.com/dotnet/aspire/issues/704, which was closed as Not Planned, but I feel this is a serious problem for those adopting Aspire. I have to hurry up when debugging; otherwise, the test I am debugging times out. \n\nI tried adding this code to the ServiceDefault project to go around the problem (as suggested by @cmeyertons in https://github.com/dotnet/aspire/issues/704#issuecomment-2248851085):\n\n` \n\n        if (Debugger.IsAttached) {\n            var timeout = TimeSpan.FromMinutes(10); // 10 min timeout while debugging\n\n            builder.Services\n                .AddServiceDiscovery()\n                .ConfigureHttpClientDefaults(clientBuilder =\u003e\n                {\n                    clientBuilder.ConfigureHttpClient(client =\u003e\n                    {\n                        client.Timeout = timeout;\n                    });\n\n                    // Turn on service discovery by default\n                    clientBuilder.AddServiceDiscovery();\n                })\n                .ConfigureAll\u003cHttpStandardResilienceOptions\u003e(options =\u003e\n                {\n                    options.AttemptTimeout.Timeout = timeout;\n                    options.TotalRequestTimeout.Timeout = timeout * 2;\n                    options.CircuitBreaker.SamplingDuration = timeout * 2;\n                });\n        }\n        else\n        {\n            builder.Services\n                .AddServiceDiscovery()\n                .ConfigureHttpClientDefaults(http =\u003e\n                {\n                    // Turn on resilience by default\n                    http.AddStandardResilienceHandler();\n\n                    // Turn on service discovery by default\n                    http.AddServiceDiscovery();\n                });\n        }`\n\nBut this does not help me, the above timeout still kicks in. Is there really nothing we can do about this?\n\n### Expected Behavior\n\nTimeouts must be extended when debugging\n\n### Steps To Reproduce\n\nRepro steps are in the description above\n\n### Exceptions (if any)\n\n\u003e \n\u003e Polly.Timeout.TimeoutRejectedException: The operation didn\u0027t complete within the allowed timeout of \u002700:00:30\u0027.\n\u003e \n\u003e Polly.Timeout.TimeoutRejectedException\n\u003e The operation didn\u0027t complete within the allowed timeout of \u002700:00:30\u0027.   \n\u003e \n\u003e at Polly.Utils.ExceptionUtilities.TrySetStackTrace[T](T exception)\n\u003e    at Polly.Timeout.TimeoutResilienceStrategy.ExecuteCore[TResult,TState](Func`3 callback, ResilienceContext context, TState state)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.ExecutionContextCallback(Object s)\n\u003e    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext()\n\u003e    at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(IAsyncStateMachineBox box, Boolean allowInlining)\n\u003e    at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)\n\u003e    at System.Threading.Tasks.Task`1.TrySetResult(TResult result)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetExistingTaskResult(Task`1 task, TResult result)\n\u003e    at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)\n\u003e    at Polly.Utils.StrategyHelper.\u003cExecuteCallbackSafeAsync\u003eg__AwaitTask|0_0[TResult,TState,T](ValueTask`1 task, Boolean continueOnCapturedContext)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.ExecutionContextCallback(Object s)\n\u003e    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext()\n\u003e    at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(IAsyncStateMachineBox box, Boolean allowInlining)\n\u003e    at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)\n\u003e    at System.Threading.Tasks.Task`1.TrySetResult(TResult result)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetExistingTaskResult(Task`1 task, TResult result)\n\u003e    at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)\n\u003e    at Polly.Utils.Pipeline.BridgeComponent`1.\u003cConvertValueTask\u003eg__ConvertValueTaskAsync|5_0[TTo](ValueTask`1 valueTask, ResilienceContext resilienceContext)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.ExecutionContextCallback(Object s)\n\u003e    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext()\n\u003e    at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(IAsyncStateMachineBox box, Boolean allowInlining)\n\u003e    at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)\n\u003e    at System.Threading.Tasks.Task`1.TrySetResult(TResult result)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetExistingTaskResult(Task`1 task, TResult result)\n\u003e    at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)\n\u003e    at Polly.Retry.RetryResilienceStrategy`1.ExecuteCore[TState](Func`3 callback, ResilienceContext context, TState state)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.ExecutionContextCallback(Object s)\n\u003e    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext()\n\u003e    at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(IAsyncStateMachineBox box, Boolean allowInlining)\n\u003e    at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)\n\u003e    at System.Threading.Tasks.Task`1.TrySetResult(TResult result)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetExistingTaskResult(Task`1 task, TResult result)\n\u003e    at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)\n\u003e    at Polly.Utils.StrategyHelper.\u003cExecuteCallbackSafeAsync\u003eg__AwaitTask|0_0[TResult,TState,T](ValueTask`1 task, Boolean continueOnCapturedContext)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.ExecutionContextCallback(Object s)\n\u003e    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext()\n\u003e    at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(IAsyncStateMachineBox box, Boolean allowInlining)\n\u003e    at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)\n\u003e    at System.Threading.Tasks.Task`1.TrySetResult(TResult result)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetExistingTaskResult(Task`1 task, TResult result)\n\u003e    at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)\n\u003e    at Polly.Utils.Pipeline.BridgeComponent`1.\u003cConvertValueTask\u003eg__ConvertValueTaskAsync|5_0[TTo](ValueTask`1 valueTask, ResilienceContext resilienceContext)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.ExecutionContextCallback(Object s)\n\u003e    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext()\n\u003e    at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(IAsyncStateMachineBox box, Boolean allowInlining)\n\u003e    at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)\n\u003e    at System.Threading.Tasks.Task`1.TrySetResult(TResult result)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetExistingTaskResult(Task`1 task, TResult result)\n\u003e    at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)\n\u003e    at Polly.CircuitBreaker.CircuitBreakerResilienceStrategy`1.ExecuteCore[TState](Func`3 callback, ResilienceContext context, TState state)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.ExecutionContextCallback(Object s)\n\u003e    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext()\n\u003e    at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(IAsyncStateMachineBox box, Boolean allowInlining)\n\u003e    at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)\n\u003e    at System.Threading.Tasks.Task`1.TrySetResult(TResult result)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetExistingTaskResult(Task`1 task, TResult result)\n\u003e    at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)\n\u003e    at Polly.Utils.StrategyHelper.\u003cExecuteCallbackSafeAsync\u003eg__AwaitTask|0_0[TResult,TState,T](ValueTask`1 task, Boolean continueOnCapturedContext)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.ExecutionContextCallback(Object s)\n\u003e    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext()\n\u003e    at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(IAsyncStateMachineBox box, Boolean allowInlining)\n\u003e    at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)\n\u003e    at System.Threading.Tasks.Task`1.TrySetResult(TResult result)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetExistingTaskResult(Task`1 task, TResult result)\n\u003e    at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)\n\u003e    at Polly.Timeout.TimeoutResilienceStrategy.ExecuteCore[TResult,TState](Func`3 callback, ResilienceContext context, TState state)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.ExecutionContextCallback(Object s)\n\u003e    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext()\n\u003e    at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(IAsyncStateMachineBox box, Boolean allowInlining)\n\u003e    at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)\n\u003e    at System.Threading.Tasks.Task`1.TrySetResult(TResult result)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetExistingTaskResult(Task`1 task, TResult result)\n\u003e    at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)\n\u003e    at Polly.Utils.StrategyHelper.\u003cExecuteCallbackSafeAsync\u003eg__AwaitTask|0_0[TResult,TState,T](ValueTask`1 task, Boolean continueOnCapturedContext)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.ExecutionContextCallback(Object s)\n\u003e    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext()\n\u003e    at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(IAsyncStateMachineBox box, Boolean allowInlining)\n\u003e    at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)\n\u003e    at System.Threading.Tasks.Task`1.TrySetResult(TResult result)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetExistingTaskResult(Task`1 task, TResult result)\n\u003e    at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)\n\u003e    at Microsoft.Extensions.Http.Resilience.ResilienceHandler.\u003c\u003ec.\u003c\u003cSendAsync\u003eb__3_0\u003ed.MoveNext()\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.ExecutionContextCallback(Object s)\n\u003e    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext()\n\u003e    at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(IAsyncStateMachineBox box, Boolean allowInlining)\n\u003e    at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)\n\u003e    at System.Threading.Tasks.Task.TrySetCanceled(CancellationToken tokenToRecord, Object cancellationException)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetException(Exception exception, Task`1\u0026 taskField)\n\u003e    at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.\u003cSendCoreAsync\u003eg__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.ExecutionContextCallback(Object s)\n\u003e    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext()\n\u003e    at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(IAsyncStateMachineBox box, Boolean allowInlining)\n\u003e    at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)\n\u003e    at System.Threading.Tasks.Task.TrySetCanceled(CancellationToken tokenToRecord, Object cancellationException)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetException(Exception exception, Task`1\u0026 taskField)\n\u003e    at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.ExecutionContextCallback(Object s)\n\u003e    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext()\n\u003e    at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(IAsyncStateMachineBox box, Boolean allowInlining)\n\u003e    at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)\n\u003e    at System.Threading.Tasks.Task.TrySetCanceled(CancellationToken tokenToRecord, Object cancellationException)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetException(Exception exception, Task`1\u0026 taskField)\n\u003e    at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.ExecutionContextCallback(Object s)\n\u003e    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext()\n\u003e    at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(IAsyncStateMachineBox box, Boolean allowInlining)\n\u003e    at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)\n\u003e    at System.Threading.Tasks.Task.TrySetCanceled(CancellationToken tokenToRecord, Object cancellationException)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetException(Exception exception, Task`1\u0026 taskField)\n\u003e    at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.ExecutionContextCallback(Object s)\n\u003e    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext()\n\u003e    at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(IAsyncStateMachineBox box, Boolean allowInlining)\n\u003e    at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)\n\u003e    at System.Threading.Tasks.Task.FinishSlow(Boolean userDelegateExecute)\n\u003e    at System.Threading.Tasks.Task.TrySetException(Object exceptionObject)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetException(Exception exception, Task`1\u0026 taskField)\n\u003e    at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.ExecutionContextCallback(Object s)\n\u003e    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)\n\u003e    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext()\n\u003e    at System.Net.Sockets.SocketAsyncEventArgs.\u003c\u003ec.\u003c.cctor\u003eb__174_0(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* nativeOverlapped)\n\u003e    at System.Threading.PortableThreadPool.IOCompletionPoller.Callback.Invoke(Event e)\n\u003e    at System.Threading.ThreadPoolTypedWorkItemQueue`2.System.Threading.IThreadPoolWorkItem.Execute()\n\u003e    at System.Threading.ThreadPoolWorkQueue.Dispatch()\n\u003e    at System.Threading.PortableThreadPool.WorkerThread.WorkerThreadStart()\n\u003e --- End of stack trace from previous location ---\n\u003e    at Polly.Outcome`1.ThrowIfException()\n\u003e    at Microsoft.Extensions.Http.Resilience.ResilienceHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\n\u003e    at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.\u003cSendCoreAsync\u003eg__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n\u003e    at System.Net.Http.HttpClient.\u003cSendAsync\u003eg__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n\u003e    at ABC.IntegrationTests.ApiEndpoints.v1.CreateUpdateDeleteCriteriaTest.CreateCriteria_Success() in X:\\Github\\ms-approvals\\test\\ABC.IntegrationTests\\ApiEndpoints\\v1\\CreateUpdateDeleteCriteriaTest.cs:line 56\n\u003e    at ABC.IntegrationTests.ApiEndpoints.v1.CreateUpdateDeleteCriteriaTest.CreateCriteria_Success() in X:\\Github\\ms-approvals\\test\\ABC.IntegrationTests\\ApiEndpoints\\v1\\CreateUpdateDeleteCriteriaTest.cs:line 72\n\u003e    at Xunit.Sdk.TestInvoker`1.\u003c\u003ec__DisplayClass47_0.\u003c\u003cInvokeTestMethodAsync\u003eb__1\u003ed.MoveNext() in /_/src/xunit.execution/Sdk/Frameworks/Runners/TestInvoker.cs:line 259\n\u003e --- End of stack trace from previous location ---\n\u003e    at Xunit.Sdk.ExecutionTimer.AggregateAsync(Func`1 asyncAction) in /_/src/xunit.execution/Sdk/Frameworks/ExecutionTimer.cs:line 48\n\u003e    at Xunit.Sdk.ExceptionAggregator.RunAsync(Func`1 code) in /_/src/xunit.core/Sdk/ExceptionAggregator.cs:line 90\n\u003e \n\u003e System.Threading.Tasks.TaskCanceledException\n\u003e The operation was canceled.\n\u003e    at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n\u003e    at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n\u003e    at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n\u003e    at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.\u003cSendCoreAsync\u003eg__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n\u003e    at Microsoft.Extensions.Http.Resilience.ResilienceHandler.\u003c\u003ec.\u003c\u003cSendAsync\u003eb__3_0\u003ed.MoveNext()\n\u003e \n\u003e System.IO.IOException\n\u003e Unable to read data from the transport connection: The I/O operation has been aborted because of either a thread exit or an application request..\n\u003e    at System.Net.Sockets.Socket.AwaitableSocketAsyncEvent`\n\nI slightly edited the above stack trace to remove a company name, replaced it with \u0027ABC\u0027\n\n### .NET Version info\n\n9.0.100\n\n### Anything else?\n\nAspire nuget versions: 9.0.0\nASP.NET Core: 9.0\nJetBrains Rider 2024.3.2, with .NET Aspire plugin version 1.6.4 (this is the bundled version)",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOm2h8dg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOKYQzfc6baHx2",
                                           "createdAt":  "2025-01-22T13:56:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEW16yw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "m03chv13h",
                                                                               "createdAt":  "2025-03-18T14:03:51Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "snerte",
                                                                               "createdAt":  "2025-05-01T07:51:32Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "rithinch",
                                                                               "createdAt":  "2025-05-14T04:57:35Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "SimonJust123",
                                                                               "createdAt":  "2025-05-23T08:04:17Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "antonheryanto",
                                                                               "createdAt":  "2025-06-17T05:05:35Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  5
                                                         },
                                           "author":  "steingran",
                                           "body":  "A colleague of mine found a solution to this. In the test class in the test project, use this code for creating an appHost:\n\n`TimeSpan defaultTimeout = TimeSpan.FromSeconds(3600)`\n`var appHost =\n            await DistributedApplicationTestingBuilder.CreateAsync\u003cProjects.Cillco_Service_Approvals_AppHost\u003e(CancellationToken.None);`\n`appHost.Services.ConfigureHttpClientDefaults(clientBuilder =\u003e`\n`        {`\n`            clientBuilder.AddStandardResilienceHandler(b =\u003e`\n`            {`\n`                b.AttemptTimeout = b.TotalRequestTimeout = new HttpTimeoutStrategyOptions()`\n`                {`\n`                    Timeout = defaultTimeout,`\n`                };`\n`                b.CircuitBreaker = new HttpCircuitBreakerStrategyOptions()`\n`                {`\n`                    SamplingDuration = defaultTimeout * 2,`\n`                };`\n`            });`\n`        });`\n\nThe clue here is the CircuitBreaker. With a long timeout for SamplingDuration, there are no more timeouts when debugging Aspire tests.\n\nMaybe this long timeout should be the default for Aspire tests?",
                                           "updatedAt":  "2025-01-22T13:59:56Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Getting timeouts when debugging Aspire tests",
        "labels":  [
                       "area-app-testing"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspire/issues/7795",
        "createdAt":  "2025-02-26T22:07:23Z",
        "number":  7795,
        "author":  "csharpfritz",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC_kBJQ==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "dflood-faa",
                                            "createdAt":  "2025-02-27T23:31:58Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2025-06-14T06:17:23Z",
        "body":  "### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nDevelopers should be able to add Playwright tests to their .NET Aspire managed system and run them easily\n\n### Describe the solution you\u0027d like\n\nExecuting `dotnet test` against the AppHost project should run a suite of Playwright tests after starting the AppHost.  When the test suite is completed, the AppHost should be stopped properly\n\n### Additional context\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "Developers should be able to build integration tests with Playwright",
        "labels":  [
                       "area-app-testing"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspire/issues/7935",
        "createdAt":  "2025-03-06T19:13:00Z",
        "number":  7935,
        "author":  "martincostello",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-03-11T18:12:10Z",
        "body":  "### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Describe the bug\n\nInspired by [Building and Debugging .NET Lambda applications with .NET Aspire (Part 2)](https://aws.amazon.com/blogs/developer/building-lambda-with-aspire-part-2/) I added some integration tests to an AWS Lambda function app of mine today using `Aspire.Hosting.Testing`.\n\nTowards of the end of completing the changes I found that the tests were failing using my CLI build script locally and in CI, but things were fine in Visual Studio.\n\nThe tests fail with errors like this:\n\n```text\nCan_Invoke_Function_And_Get_Skill_Response(payloadName: \"Launch\") (30s 2ms): Error Message: Test execution timed o\n      ut after 30000 milliseconds\n      Stack Trace:\n      --- End of stack trace from previous location ---\n        Standard Output Messages:\n       [2025-03-06 18:46:26Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n             2: 2025-03-06T18:46:26.4860000Z You must install or update .NET to run this application.\n       [2025-03-06 18:46:26Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n             3: 2025-03-06T18:46:26.4860000Z\n       [2025-03-06 18:46:26Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n             4: 2025-03-06T18:46:26.4860000Z App: D:\\Coding\\martincostello\\alexa-london-travel\\artifacts\\bin\\LondonTrave\n      l.Skill\\release\\LondonTravel.Skill.exe\n       [2025-03-06 18:46:26Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n             5: 2025-03-06T18:46:26.4860000Z Architecture: x64\n       [2025-03-06 18:46:26Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n             6: 2025-03-06T18:46:26.4860000Z Framework: \u0027Microsoft.NETCore.App\u0027, version \u00279.0.0\u0027 (x64)\n       [2025-03-06 18:46:26Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n             7: 2025-03-06T18:46:26.4860000Z .NET location: D:\\Coding\\martincostello\\alexa-london-travel\\artifacts\\bin\\LondonTravel.Skill\\release\\\n       [2025-03-06 18:46:26Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n             8: 2025-03-06T18:46:26.4860000Z\n       [2025-03-06 18:46:26Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n             9: 2025-03-06T18:46:26.4860000Z No frameworks were found.\n       [2025-03-06 18:46:26Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n             10: 2025-03-06T18:46:26.4860000Z\n       [2025-03-06 18:46:26Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n             11: 2025-03-06T18:46:26.4860000Z Learn more:\n       [2025-03-06 18:46:26Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n             12: 2025-03-06T18:46:26.4860000Z https://aka.ms/dotnet/app-launch-failed\n       [2025-03-06 18:46:26Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n             13: 2025-03-06T18:46:26.4860000Z\n       [2025-03-06 18:46:26Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n             14: 2025-03-06T18:46:26.4860000Z To install missing framework, download:\n       [2025-03-06 18:46:26Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n             15: 2025-03-06T18:46:26.4860000Z https://aka.ms/dotnet-core-applaunch?framework=Microsoft.NETCore.App\u0026framework_version=9.0.0\u0026arch=x64\u0026rid=win-x64\u0026os=win10\n```\n\nSome trial-and-error later, I narrowed the difference down to the tests running in Debug or Release.\n\nIn Debug:\n\n```text\nRestore complete (0.7s)\n  LondonTravel.Skill succeeded (1.3s) → D:\\Coding\\martincostello\\alexa-london-travel\\artifacts\\bin\\LondonTravel.Skill\\debug\\LondonTravel.Skill.dll\n  LondonTravel.Skill.AppHost succeeded (0.6s) → D:\\Coding\\martincostello\\alexa-london-travel\\artifacts\\bin\\LondonTravel.Skill.AppHost\\debug\\LondonTravel.Skill.AppHost.dll\n  LondonTravel.Skill.AppHostTests succeeded (0.5s) → D:\\Coding\\martincostello\\alexa-london-travel\\artifacts\\bin\\LondonTravel.Skill.AppHostTests\\debug\\LondonTravel.Skill.AppHostTests.dll\n[xUnit.net 00:00:00.00] xUnit.net VSTest Adapter v3.0.2+dd36e86129 (64-bit .NET 9.0.2)\n[xUnit.net 00:00:00.14]   Discovering: LondonTravel.Skill.AppHostTests\n[xUnit.net 00:00:00.29]   Discovered:  LondonTravel.Skill.AppHostTests\n[xUnit.net 00:00:00.44]   Starting:    LondonTravel.Skill.AppHostTests\n[xUnit.net 00:00:38.18]   Finished:    LondonTravel.Skill.AppHostTests\n  LondonTravel.Skill.AppHostTests test succeeded (38.7s)\n\nTest summary: total: 9, failed: 0, succeeded: 9, skipped: 0, duration: 38.6s\nBuild succeeded in 42.6s\n```\n\nIn Release:\n\n```text\nRestore complete (0.3s)\n  LondonTravel.Skill succeeded (0.4s) → D:\\Coding\\martincostello\\alexa-london-travel\\artifacts\\bin\\LondonTravel.Skill\\release\\LondonTravel.Skill.dll\n  LondonTravel.Skill.AppHost succeeded (0.4s) → D:\\Coding\\martincostello\\alexa-london-travel\\artifacts\\bin\\LondonTravel.Skill.AppHost\\release\\LondonTravel.Skill.AppHost.dll\n  LondonTravel.Skill.AppHostTests succeeded (0.1s) → D:\\Coding\\martincostello\\alexa-london-travel\\artifacts\\bin\\LondonTravel.Skill.AppHostTests\\release\\LondonTravel.Skill.AppHostTests.dll\n[xUnit.net 00:00:00.00] xUnit.net VSTest Adapter v3.0.2+dd36e86129 (64-bit .NET 9.0.2)\n[xUnit.net 00:00:00.14]   Discovering: LondonTravel.Skill.AppHostTests\n[xUnit.net 00:00:00.28]   Discovered:  LondonTravel.Skill.AppHostTests\n[xUnit.net 00:00:00.42]   Starting:    LondonTravel.Skill.AppHostTests\n[xUnit.net 00:00:34.01]     Can_Invoke_Function_And_Get_Skill_Response(payloadName: \"Launch\") [FAIL]\n[xUnit.net 00:00:34.01]       Test execution timed out after 30000 milliseconds\n[xUnit.net 00:00:34.01]       Stack Trace:\n[xUnit.net 00:00:34.01]         --- End of stack trace from previous location ---\n[xUnit.net 00:00:34.01]       Output:\n[xUnit.net 00:00:34.01]         [2025-03-06 19:04:47Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n[xUnit.net 00:00:34.01]               2: 2025-03-06T19:04:47.1690000Z You must install or update .NET to run this application.\n[xUnit.net 00:00:34.01]         [2025-03-06 19:04:47Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n[xUnit.net 00:00:34.01]               3: 2025-03-06T19:04:47.1690000Z\n[xUnit.net 00:00:34.01]         [2025-03-06 19:04:47Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n[xUnit.net 00:00:34.01]               4: 2025-03-06T19:04:47.1690000Z App: D:\\Coding\\martincostello\\alexa-london-travel\\artifacts\\bin\\LondonTravel.Skill\\release\\LondonTravel.Skill.exe\n[xUnit.net 00:00:34.01]         [2025-03-06 19:04:47Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n[xUnit.net 00:00:34.01]               5: 2025-03-06T19:04:47.1690000Z Architecture: x64\n[xUnit.net 00:00:34.01]         [2025-03-06 19:04:47Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n[xUnit.net 00:00:34.01]               6: 2025-03-06T19:04:47.1690000Z Framework: \u0027Microsoft.NETCore.App\u0027, version \u00279.0.0\u0027 (x64)\n[xUnit.net 00:00:34.01]         [2025-03-06 19:04:47Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n[xUnit.net 00:00:34.01]               7: 2025-03-06T19:04:47.1690000Z .NET location: D:\\Coding\\martincostello\\alexa-london-travel\\artifacts\\bin\\LondonTravel.Skill\\release\\\n[xUnit.net 00:00:34.01]         [2025-03-06 19:04:47Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n[xUnit.net 00:00:34.01]               8: 2025-03-06T19:04:47.1690000Z\n[xUnit.net 00:00:34.01]         [2025-03-06 19:04:47Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n[xUnit.net 00:00:34.01]               9: 2025-03-06T19:04:47.1710000Z No frameworks were found.\n[xUnit.net 00:00:34.01]         [2025-03-06 19:04:47Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n[xUnit.net 00:00:34.01]               10: 2025-03-06T19:04:47.1710000Z\n[xUnit.net 00:00:34.01]         [2025-03-06 19:04:47Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n[xUnit.net 00:00:34.01]               11: 2025-03-06T19:04:47.1710000Z Learn more:\n[xUnit.net 00:00:34.01]         [2025-03-06 19:04:47Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n[xUnit.net 00:00:34.01]               12: 2025-03-06T19:04:47.1710000Z https://aka.ms/dotnet/app-launch-failed\n[xUnit.net 00:00:34.01]         [2025-03-06 19:04:47Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n[xUnit.net 00:00:34.01]               13: 2025-03-06T19:04:47.1710000Z\n[xUnit.net 00:00:34.01]         [2025-03-06 19:04:47Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n[xUnit.net 00:00:34.01]               14: 2025-03-06T19:04:47.1710000Z To install missing framework, download:\n[xUnit.net 00:00:34.01]         [2025-03-06 19:04:47Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n[xUnit.net 00:00:34.01]               15: 2025-03-06T19:04:47.1710000Z https://aka.ms/dotnet-core-applaunch?framework=Microsoft.NETCore.App\u0026framework_version=9.0.0\u0026arch=x64\u0026rid=win-x64\u0026os=win10\n[xUnit.net 00:00:34.02]     [Test Cleanup Failure (\u003cunknown test\u003e)] System.Threading.Tasks.TaskCanceledException\n[xUnit.net 00:00:34.02]       System.Threading.Tasks.TaskCanceledException : A task was canceled.\n[xUnit.net 00:00:34.02]       Stack Trace:\n[xUnit.net 00:00:34.02]            at Amazon.Runtime.Internal.RetryHandler.InvokeAsync[T](IExecutionContext executionContext)\n[xUnit.net 00:00:34.02]            at Amazon.Runtime.Internal.CallbackHandler.InvokeAsync[T](IExecutionContext executionContext)\n[xUnit.net 00:00:34.02]            at Amazon.Runtime.Internal.CallbackHandler.InvokeAsync[T](IExecutionContext executionContext)\n[xUnit.net 00:00:34.02]            at Amazon.Runtime.Internal.ErrorCallbackHandler.InvokeAsync[T](IExecutionContext executionContext)\n[xUnit.net 00:00:34.02]            at Amazon.Runtime.Internal.MetricsHandler.InvokeAsync[T](IExecutionContext executionContext)\n[xUnit.net 00:00:34.02]         D:\\Coding\\martincostello\\alexa-london-travel\\test\\LondonTravel.Skill.AppHostTests\\LambdaTests.cs(54,0): at MartinCostello.LondonTravel.Skill.AppHostTests.LambdaTests.Can_Invoke_Function_And_Get_Skill_Response(String payloadName)\n[xUnit.net 00:00:34.02]         --- End of stack trace from previous location ---\n  LondonTravel.Skill.AppHostTests test failed with 2 error(s) and 1 warning(s) (35.0s)\n    D:\\Coding\\martincostello\\alexa-london-travel\\artifacts\\bin\\LondonTravel.Skill.AppHostTests\\release\\LondonTravel.Skill.AppHostTests.dll : error TESTERROR:\n      Can_Invoke_Function_And_Get_Skill_Response(payloadName: \"Launch\") (30s 6ms): Error Message: Test execution timed out after 30000 milliseconds\n      Stack Trace:\n      --- End of stack trace from previous location ---\n        Standard Output Messages:\n       [2025-03-06 19:04:47Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n             2: 2025-03-06T19:04:47.1690000Z You must install or update .NET to run this application.\n       [2025-03-06 19:04:47Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n             3: 2025-03-06T19:04:47.1690000Z\n       [2025-03-06 19:04:47Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n             4: 2025-03-06T19:04:47.1690000Z App: D:\\Coding\\martincostello\\alexa-london-travel\\artifacts\\bin\\LondonTravel.Skill\\release\\LondonTravel.Skill.exe\n       [2025-03-06 19:04:47Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n             5: 2025-03-06T19:04:47.1690000Z Architecture: x64\n       [2025-03-06 19:04:47Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n             6: 2025-03-06T19:04:47.1690000Z Framework: \u0027Microsoft.NETCore.App\u0027, version \u00279.0.0\u0027 (x64)\n       [2025-03-06 19:04:47Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n             7: 2025-03-06T19:04:47.1690000Z .NET location: D:\\Coding\\martincostello\\alexa-london-travel\\artifacts\\bin\\LondonTravel.Skill\\release\\\n       [2025-03-06 19:04:47Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n             8: 2025-03-06T19:04:47.1690000Z\n       [2025-03-06 19:04:47Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n             9: 2025-03-06T19:04:47.1710000Z No frameworks were found.\n       [2025-03-06 19:04:47Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n             10: 2025-03-06T19:04:47.1710000Z\n       [2025-03-06 19:04:47Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n             11: 2025-03-06T19:04:47.1710000Z Learn more:\n       [2025-03-06 19:04:47Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n             12: 2025-03-06T19:04:47.1710000Z https://aka.ms/dotnet/app-launch-failed\n       [2025-03-06 19:04:47Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n             13: 2025-03-06T19:04:47.1710000Z\n       [2025-03-06 19:04:47Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n             14: 2025-03-06T19:04:47.1710000Z To install missing framework, download:\n       [2025-03-06 19:04:47Z] fail: LondonTravel.Skill.AppHost.Resources.LondonTravelSkill[0]\n             15: 2025-03-06T19:04:47.1710000Z https://aka.ms/dotnet-core-applaunch?framework=Microsoft.NETCore.App\u0026framework_version=9.0.0\u0026arch=x64\u0026rid=win-x64\u0026os=win10\n    D:\\Coding\\martincostello\\alexa-london-travel\\test\\LondonTravel.Skill.AppHostTests\\LambdaTests.cs(54): error TESTERROR:\n      Can_Invoke_Function_And_Get_Skill_Response(payloadName: \"Launch\") (1ms): Error Message: [Test Cleanup Failure (\u003cunknown test ID 12fdaffd57277845bcfa19fbe1b92c56f6\n      2c392c0a50aa1cf2a89c43e49cdb9e\u003e)]: System.Threading.Tasks.TaskCanceledException : A task was canceled.\n      Stack Trace:\n         at Amazon.Runtime.Internal.RetryHandler.InvokeAsync[T](IExecutionContext executionContext)\n         at Amazon.Runtime.Internal.CallbackHandler.InvokeAsync[T](IExecutionContext executionContext)\n         at Amazon.Runtime.Internal.CallbackHandler.InvokeAsync[T](IExecutionContext executionContext)\n         at Amazon.Runtime.Internal.ErrorCallbackHandler.InvokeAsync[T](IExecutionContext executionContext)\n         at Amazon.Runtime.Internal.MetricsHandler.InvokeAsync[T](IExecutionContext executionContext)\n         at MartinCostello.LondonTravel.Skill.AppHostTests.LambdaTests.Can_Invoke_Function_And_Get_Skill_Response(String payloadName) in D:\\Coding\\martincostello\\alexa-\n      london-travel\\test\\LondonTravel.Skill.AppHostTests\\LambdaTests.cs:line 54\n      --- End of stack trace from previous location ---\n```\n\nI can\u0027t see (or remember) any obvious Debug vs. Release stuff in the code or project setup, so I would expect it to behave in either configuration. It is of course possible I\u0027ve done something stupid somewhere and just noticed it.\n\nFor now I\u0027ve just forced my CI build to use Debug for the app host test projects.\n\n\n### Expected Behavior\n\nTests pass in Release as they do in Debug.\n\n### Steps To Reproduce\n\n1. Clone https://github.com/martincostello/alexa-london-travel/commit/d9b5dc2a50ff10d4ee73c1a7ff64e6b76b8a0d17\n2. Change the directory to `test/LondonTravel.Skill.AppHostTests` from the root of the repository\n3. Run `dotnet test --configuration Release`\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version info\n\n```text\n.NET SDK:\n Version:           9.0.200\n Commit:            90e8b202f2\n Workload version:  9.0.200-manifests.69179adf\n MSBuild version:   17.13.8+cbc39bea8\n\nRuntime Environment:\n OS Name:     Windows\n OS Version:  10.0.22631\n OS Platform: Windows\n RID:         win-x64\n Base Path:   C:\\Program Files\\dotnet\\sdk\\9.0.200\\\n\n.NET workloads installed:\n [wasm-tools]\n   Installation Source: VS 17.14.35821.62, VS 17.13.35825.156\n   Manifest Version:    9.0.2/9.0.100\n   Manifest Path:       C:\\Program Files\\dotnet\\sdk-manifests\\9.0.100\\microsoft.net.workload.mono.toolchain.current\\9.0.2\\WorkloadManifest.json\n   Install Type:              Msi\n\n [aspire]\n   Installation Source: VS 17.14.35821.62, VS 17.13.35825.156\n   Manifest Version:    8.2.2/8.0.100\n   Manifest Path:       C:\\Program Files\\dotnet\\sdk-manifests\\8.0.100\\microsoft.net.sdk.aspire\\8.2.2\\WorkloadManifest.json\n   Install Type:              Msi\n\nConfigured to use loose manifests when installing new manifests.\n\nHost:\n  Version:      10.0.0-preview.1.25080.5\n  Architecture: x64\n  Commit:       b98cabca12\n\n.NET SDKs installed:\n  6.0.428 [C:\\Program Files\\dotnet\\sdk]\n  8.0.406 [C:\\Program Files\\dotnet\\sdk]\n  9.0.200 [C:\\Program Files\\dotnet\\sdk]\n  10.0.100-preview.1.25120.13 [C:\\Program Files\\dotnet\\sdk]\n\n.NET runtimes installed:\n  Microsoft.AspNetCore.App 6.0.36 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 8.0.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 9.0.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 10.0.0-preview.1.25120.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.NETCore.App 6.0.36 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.NETCore.App 8.0.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.NETCore.App 9.0.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.NETCore.App 10.0.0-preview.1.25080.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.WindowsDesktop.App 6.0.36 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n  Microsoft.WindowsDesktop.App 8.0.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n  Microsoft.WindowsDesktop.App 9.0.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n  Microsoft.WindowsDesktop.App 10.0.0-preview.1.25080.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n\nOther architectures found:\n  x86   [C:\\Program Files (x86)\\dotnet]\n    registered at [HKLM\\SOFTWARE\\dotnet\\Setup\\InstalledVersions\\x86\\InstallLocation]\n\nEnvironment variables:\n  Not set\n\nglobal.json file:\n  D:\\Coding\\martincostello\\alexa-london-travel\\global.json\n\nLearn more:\n  https://aka.ms/dotnet/info\n\nDownload .NET:\n  https://aka.ms/dotnet/download\n```\n\n\n### Anything else?\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "Aspire.Hosting.Testing fails to find .NET runtime when running tests in Release",
        "labels":  [
                       "area-app-testing"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspire/issues/7975",
        "createdAt":  "2025-03-10T10:55:25Z",
        "number":  7975,
        "author":  "afscrome",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-04-08T20:47:26Z",
        "body":  "### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Describe the bug\n\nIf your app host\u0027s `launchsettings.json` file contains a trailing slash, `dotnet run --project MY.AppHost` accepts the file, but `DistributedApplicationTestingBuilder` does not.\n\n### Expected Behavior\n\nIf a `launchsettings.json` file works for `dotnet run`, I\u0027d expect aspire to handle it too.\n\n### Steps To Reproduce\n\n1. Create a new `aspire-sample` application, and modify the app host\u0027s launch settings to include a trailing comma\n2. Do a `dotnet run` on the apphost project - it starts\n3. Now do a `dotnet test` on the test project - t fails\n\n`launchsettings.json` (for apphost)\n```\n{\n  \"$schema\": \"https://json.schemastore.org/launchsettings.json\",\n  \"profiles\": {\n    \"https\": {\n      \"commandName\": \"Project\",\n      \"dotnetRunMessages\": true,\n      \"launchBrowser\": true,\n      \"applicationUrl\": \"https://localhost:17054;http://localhost:15030\",\n      \"environmentVariables\": {\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\",\n        \"DOTNET_ENVIRONMENT\": \"Development\",\n        \"DOTNET_DASHBOARD_OTLP_ENDPOINT_URL\": \"https://localhost:21224\",\n        \"DOTNET_RESOURCE_SERVICE_ENDPOINT_URL\": \"https://localhost:22154\", // Note the trailing comma here\n      }\n    }\n  }\n}\n```\n\nTest\n```\n    [Test]\n    public async Task MyTest()\n    {\n        // Arrange\n        var appHost = await DistributedApplicationTestingBuilder.CreateAsync\u003cProjects.AspireInGithubActions_AppHost\u003e();\n        await using var app2 = await appHost.BuildAsync();\n    }\n```\n\n\n### Exceptions (if any)\n\n```\n      GetWebResourceRootReturnsOkStatusCode (69ms): Error Message: Aspire.Hosting.DistributedApplicationException : Failed to get effective launch profile for project \u0027S:\\AspireInGithubActions\\AspireInGithubActions.AppHost\u0027. There is malformed JSON in the project\u0027s launch settings file a\n      t \u0027S:\\AspireInGithubActions\\AspireInGithubActions.AppHost\\Properties\\launchSettings.json\u0027.\n        ----\u003e System.Text.Json.JsonException : The JSON object contains a trailing comma at the end which is not supported in this mode. Change the reader options. Path: $.profiles.https.environmentVariables | LineNumber: 14 | BytePositionInLine: 6.\n        ----\u003e System.Text.Json.JsonReaderException : The JSON object contains a trailing comma at the end which is not supported in this mode. Change the reader options. LineNumber: 14 | BytePositionInLine: 6.\n      Stack Trace:\n         at Aspire.Hosting.Testing.DistributedApplicationFactory.GetLaunchSettings(String appHostPath) in /_/src/Aspire.Hosting.Testing/DistributedApplicationFactory.cs:line 359\n         at Aspire.Hosting.Testing.DistributedApplicationFactory.PostConfigureBuilderOptions(HostApplicationBuilderSettings hostBuilderOptions, Assembly entryPointAssembly) in /_/src/Aspire.Hosting.Testing/DistributedApplicationFactory.cs:line 262\n         at Aspire.Hosting.Testing.DistributedApplicationFactory.ConfigureBuilder(String[] args, DistributedApplicationOptions applicationOptions, HostApplicationBuilderSettings hostBuilderOptions, Assembly entryPointAssembly, Action`2 configureBuilder) in /_/src/Aspire.Hosting.Testing/D\n      istributedApplicationFactory.cs:line 237\n         at Aspire.Hosting.Testing.DistributedApplicationFactory.OnBuilderCreatingCore(DistributedApplicationOptions applicationOptions, HostApplicationBuilderSettings hostBuilderOptions) in /_/src/Aspire.Hosting.Testing/DistributedApplicationFactory.cs:line 244\n         at Aspire.Hosting.Testing.DistributedApplicationEntryPointInvoker.EntryPointInvoker.ApplicationBuilderDiagnosticListener.OnNext(KeyValuePair`2 value) in /_/src/Aspire.Hosting.Testing/DistributedApplicationEntryPointInvoker.cs:line 187\n         at System.Diagnostics.DiagnosticListener.Write(String name, Object value)\n         at System.Diagnostics.DiagnosticSource.Write[T](String name, T value)\n         at Aspire.Hosting.DistributedApplicationBuilder.LogBuilderConstructing(DistributedApplicationOptions appBuilderOptions, HostApplicationBuilderSettings hostBuilderOptions) in /_/src/Aspire.Hosting/DistributedApplicationBuilder.cs:line 488\n         at Aspire.Hosting.DistributedApplicationBuilder..ctor(DistributedApplicationOptions options) in /_/src/Aspire.Hosting/DistributedApplicationBuilder.cs:line 135\n         at Aspire.Hosting.DistributedApplication.CreateBuilder(String[] args) in /_/src/Aspire.Hosting/DistributedApplication.cs:line 142\n         at Program.\u003cMain\u003e$(String[] args) in S:\\AspireInGithubActions\\AspireInGithubActions.AppHost\\Program.cs:line 1\n         at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\n         at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)\n      --- End of stack trace from previous location ---\n         at Aspire.Hosting.Testing.DistributedApplicationEntryPointInvoker.EntryPointInvoker.InvokeAsync(CancellationToken cancellationToken) in /_/src/Aspire.Hosting.Testing/DistributedApplicationEntryPointInvoker.cs:line 132\n         at Aspire.Hosting.Testing.DistributedApplicationEntryPointInvoker.\u003c\u003ec__DisplayClass0_0.\u003c\u003cResolveEntryPoint\u003eb__0\u003ed.MoveNext() in /_/src/Aspire.Hosting.Testing/DistributedApplicationEntryPointInvoker.cs:line 39\n      --- End of stack trace from previous location ---\n         at Aspire.Hosting.Testing.DistributedApplicationFactory.InvokeEntryPoint(Func`3 factory) in /_/src/Aspire.Hosting.Testing/DistributedApplicationFactory.cs:line 419\n         at Aspire.Hosting.Testing.DistributedApplicationFactory.ResolveBuilderAsync(CancellationToken cancellationToken) in /_/src/Aspire.Hosting.Testing/DistributedApplicationFactory.cs:line 51\n         at Aspire.Hosting.Testing.DistributedApplicationTestingBuilder.SuspendingDistributedApplicationFactory.CreateBuilderAsync(CancellationToken cancellationToken) in /_/src/Aspire.Hosting.Testing/DistributedApplicationTestingBuilder.cs:line 162\n         at Aspire.Hosting.Testing.DistributedApplicationTestingBuilder.CreateAsync(Type entryPoint, String[] args, Action`2 configureBuilder, CancellationToken cancellationToken) in /_/src/Aspire.Hosting.Testing/DistributedApplicationTestingBuilder.cs:line 109\n         at AspireInGithubActions.Tests.IntegrationTest1.GetWebResourceRootReturnsOkStatusCode() in S:\\AspireInGithubActions\\AspireInGithubActions.Tests\\IntegrationTest1.cs:line 11\n         at NUnit.Framework.Internal.TaskAwaitAdapter.GenericAdapter`1.BlockUntilCompleted()\n         at NUnit.Framework.Internal.MessagePumpStrategy.NoMessagePumpStrategy.WaitForCompletion(AwaitAdapter awaiter)\n         at NUnit.Framework.Internal.AsyncToSyncAdapter.Await[TResult](Func`1 invoke)\n         at NUnit.Framework.Internal.AsyncToSyncAdapter.Await(Func`1 invoke)\n         at NUnit.Framework.Internal.Commands.TestMethodCommand.RunTestMethod(TestExecutionContext context)\n         at NUnit.Framework.Internal.Commands.TestMethodCommand.Execute(TestExecutionContext context)\n         at NUnit.Framework.Internal.Execution.SimpleWorkItem.\u003c\u003ec__DisplayClass3_0.\u003cPerformWork\u003eb__0()\n         at NUnit.Framework.Internal.ContextUtils.\u003c\u003ec__DisplayClass1_0`1.\u003cDoIsolated\u003eb__0(Object _)\n         at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\n      --- End of stack trace from previous location ---\n         at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\n         at NUnit.Framework.Internal.ContextUtils.DoIsolated(ContextCallback callback, Object state)\n         at NUnit.Framework.Internal.ContextUtils.DoIsolated[T](Func`1 func)\n         at NUnit.Framework.Internal.Execution.SimpleWorkItem.PerformWork()\n      --JsonException\n         at System.Text.Json.ThrowHelper.ReThrowWithPath(ReadStack\u0026 state, JsonReaderException ex)\n         at System.Text.Json.Serialization.JsonConverter`1.ReadCore(Utf8JsonReader\u0026 reader, T\u0026 value, JsonSerializerOptions options, ReadStack\u0026 state)\n         at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.ContinueDeserialize(ReadBufferState\u0026 bufferState, JsonReaderState\u0026 jsonReaderState, ReadStack\u0026 readStack, T\u0026 value)\n         at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.Deserialize(Stream utf8Json)\n         at Aspire.Hosting.Testing.DistributedApplicationFactory.GetLaunchSettings(String appHostPath) in /_/src/Aspire.Hosting.Testing/DistributedApplicationFactory.cs:line 353\n      --JsonReaderException\n         at System.Text.Json.ThrowHelper.ThrowJsonReaderException(Utf8JsonReader\u0026 json, ExceptionResource resource, Byte nextByte, ReadOnlySpan`1 bytes)\n         at System.Text.Json.Utf8JsonReader.ConsumeNextTokenUntilAfterAllCommentsAreSkipped(Byte marker)\n         at System.Text.Json.Utf8JsonReader.ConsumeNextToken(Byte marker)\n         at System.Text.Json.Utf8JsonReader.ConsumeNextTokenOrRollback(Byte marker)\n         at System.Text.Json.Utf8JsonReader.ReadSingleSegment()\n         at System.Text.Json.Utf8JsonReader.Read()\n         at System.Text.Json.Serialization.JsonDictionaryConverter`3.OnTryRead(Utf8JsonReader\u0026 reader, Type typeToConvert, JsonSerializerOptions options, ReadStack\u0026 state, TDictionary\u0026 value)\n         at System.Text.Json.Serialization.JsonConverter`1.TryRead(Utf8JsonReader\u0026 reader, Type typeToConvert, JsonSerializerOptions options, ReadStack\u0026 state, T\u0026 value, Boolean\u0026 isPopulatedValue)\n         at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.ReadJsonAndSetMember(Object obj, ReadStack\u0026 state, Utf8JsonReader\u0026 reader)\n         at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryRead(Utf8JsonReader\u0026 reader, Type typeToConvert, JsonSerializerOptions options, ReadStack\u0026 state, T\u0026 value)\n         at System.Text.Json.Serialization.JsonConverter`1.TryRead(Utf8JsonReader\u0026 reader, Type typeToConvert, JsonSerializerOptions options, ReadStack\u0026 state, T\u0026 value, Boolean\u0026 isPopulatedValue)\n         at System.Text.Json.Serialization.JsonDictionaryConverter`3.OnTryRead(Utf8JsonReader\u0026 reader, Type typeToConvert, JsonSerializerOptions options, ReadStack\u0026 state, TDictionary\u0026 value)\n         at System.Text.Json.Serialization.JsonConverter`1.TryRead(Utf8JsonReader\u0026 reader, Type typeToConvert, JsonSerializerOptions options, ReadStack\u0026 state, T\u0026 value, Boolean\u0026 isPopulatedValue)\n         at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.ReadJsonAndSetMember(Object obj, ReadStack\u0026 state, Utf8JsonReader\u0026 reader)\n         at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryRead(Utf8JsonReader\u0026 reader, Type typeToConvert, JsonSerializerOptions options, ReadStack\u0026 state, T\u0026 value)\n         at System.Text.Json.Serialization.JsonConverter`1.TryRead(Utf8JsonReader\u0026 reader, Type typeToConvert, JsonSerializerOptions options, ReadStack\u0026 state, T\u0026 value, Boolean\u0026 isPopulatedValue)\n         at System.Text.Json.Serialization.JsonConverter`1.ReadCore(Utf8JsonReader\u0026 reader, T\u0026 value, JsonSerializerOptions options, ReadStack\u0026 state)\n```\n\n### .NET Version info\n\n_No response_\n\n### Anything else?\n\n#5231 Is probably the ultimate solution for this.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOpifFog==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOKYQzfc6mJ8Wi",
                                           "createdAt":  "2025-04-08T20:47:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "do you want to offer a fix?",
                                           "updatedAt":  "2025-04-08T20:47:25Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Test Host does not accept trailing commas in `launchsettings.json`",
        "labels":  [
                       "area-app-testing"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspire/issues/8078",
        "createdAt":  "2025-03-14T17:59:34Z",
        "number":  8078,
        "author":  "afscrome",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-01T10:15:47Z",
        "body":  "### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Describe the bug\n\nI have a suite of 8 tests using `DistributedApplicationTestingBuilder` running in an Azure devops pipeline, and today one of these tests failed with the following error:\n\n\u003e System.IO.IOException: The process cannot access the file \u0027C:\\Users\\AzDevOps\\AppData\\Local\\Temp\\aspire.toayd2p0.3lz\\kubeconfig\u0027 because it is being used by another process.`\n\nI do have NUnit test parallelization enabled, so I assume this is a concurrency issue.  These build agents should have Windows Defender running in passive mode, so I also don\u0027t expect this to be a case of AV software interfering.\n\nI haven\u0027t seen this error before, but today is also the first time I\u0027ve started running these tests on a windows build agent, so I don\u0027t yet know if this is a rare event I was unlucky to encounter, or if this is going to be a common issue.\n\n### Expected Behavior\n\nI expect to be able to run multiple test\u0027s in parallel.\n\n### Steps To Reproduce\n\nDon\u0027t have exact repro steps, but I suspect this is a concurrency issue due to me running test in parallel - I believe \n\n```cs\n// nunit\n[assembly: Parallelizable(ParallelScope.Fixtures)]\n```\n\n### Exceptions (if any)\n\n```\n fail: Microsoft.Extensions.Hosting.Internal.Host[11]\n       Hosting failed to start\n       System.IO.IOException: The process cannot access the file \u0027C:\\Users\\AzDevOps\\AppData\\Local\\Temp\\aspire.toayd2p0.3lz\\kubeconfig\u0027 because it is being used by another process.\n          at Microsoft.Win32.SafeHandles.SafeFileHandle.CreateFile(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options)\n          at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)\n          at System.IO.Strategies.OSFileStreamStrategy..ctor(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)\n          at System.IO.Strategies.FileStreamHelpers.ChooseStrategyCore(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)\n          at System.IO.FileInfo.OpenRead()\n          at k8s.KubernetesClientConfiguration.LoadKubeConfigAsync(FileInfo kubeconfig, Boolean useRelativePaths)\n          at k8s.KubernetesClientConfiguration.BuildConfigFromConfigFileAsync(FileInfo kubeconfig, String currentContext, String masterUrl, Boolean useRelativePaths)\n          at Aspire.Hosting.Dcp.KubernetesService.\u003c\u003ec__DisplayClass33_0.\u003c\u003cEnsureKubernetesAsync\u003eb__0\u003ed.MoveNext() in /_/src/Aspire.Hosting/Dcp/KubernetesService.cs:line 552\n       --- End of stack trace from previous location ---\n          at Polly.ResiliencePipeline.\u003c\u003ec__10`1.\u003c\u003cExecuteAsync\u003eb__10_0\u003ed.MoveNext()\n       --- End of stack trace from previous location ---\n          at Polly.Outcome`1.GetResultOrRethrow()\n          at Polly.ResiliencePipeline.ExecuteAsync[TResult](Func`2 callback, CancellationToken cancellationToken)\n          at Aspire.Hosting.Dcp.KubernetesService.EnsureKubernetesAsync(CancellationToken cancellationToken) in /_/src/Aspire.Hosting/Dcp/KubernetesService.cs:line 543\n          at Aspire.Hosting.Dcp.KubernetesService.\u003c\u003ec__DisplayClass28_0`1.\u003c\u003cExecuteWithRetry\u003eb__0\u003ed.MoveNext() in /_/src/Aspire.Hosting/Dcp/KubernetesService.cs:line 439\n       --- End of stack trace from previous location ---\n          at Polly.ResiliencePipeline.\u003c\u003ec__10`1.\u003c\u003cExecuteAsync\u003eb__10_0\u003ed.MoveNext()\n       --- End of stack trace from previous location ---\n          at Polly.Outcome`1.GetResultOrRethrow()\n          at Polly.ResiliencePipeline.ExecuteAsync[TResult](Func`2 callback, CancellationToken cancellationToken)\n          at Aspire.Hosting.Dcp.KubernetesService.ExecuteWithRetry[TResult](DcpApiOperationType operationType, String resourceType, Func`2 operation, Func`2 isRetryable, CancellationToken cancellationToken) in /_/src/Aspire.Hosting/Dcp/KubernetesService.cs:line 437\n          at Aspire.Hosting.Dcp.DcpExecutor.CreateResourcesAsync[RT](CancellationToken cancellationToken) in /_/src/Aspire.Hosting/Dcp/DcpExecutor.cs:line 1392\n          at Aspire.Hosting.Dcp.DcpExecutor.CreateServicesAsync(CancellationToken cancellationToken) in /_/src/Aspire.Hosting/Dcp/DcpExecutor.cs:line 590\n          at Aspire.Hosting.Dcp.DcpExecutor.RunApplicationAsync(CancellationToken cancellationToken) in /_/src/Aspire.Hosting/Dcp/DcpExecutor.cs:line 126\n          at Aspire.Hosting.Orchestrator.ApplicationOrchestrator.RunApplicationAsync(CancellationToken cancellationToken) in /_/src/Aspire.Hosting/Orchestrator/ApplicationOrchestrator.cs:line 177\n          at Aspire.Hosting.Orchestrator.OrchestratorHostService.StartAsync(CancellationToken cancellationToken) in /_/src/Aspire.Hosting/Orchestrator/OrchestratorHostService.cs:line 41\n          at Microsoft.Extensions.Hosting.Internal.Host.\u003cStartAsync\u003eb__15_1(IHostedService service, CancellationToken token)\n          at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)\n```\n\n### .NET Version info\n\n_No response_\n\n### Anything else?\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOwTmREg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOKYQzfc6rn7i6",
                                           "createdAt":  "2025-05-14T08:53:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "Does this still repro?",
                                           "updatedAt":  "2025-05-14T08:53:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc7BMsI9",
                                           "createdAt":  "2025-09-01T08:11:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "strue36",
                                           "body":  "I have just encountered this using xUnit with Aspire v9.4.1",
                                           "updatedAt":  "2025-09-01T08:11:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc7BOWaC",
                                           "createdAt":  "2025-09-01T10:13:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "Is it a reliable repro @strue36 ?",
                                           "updatedAt":  "2025-09-01T10:13:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc7BOZES",
                                           "createdAt":  "2025-09-01T10:15:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "strue36",
                                           "body":  "No it was a one off.",
                                           "updatedAt":  "2025-09-01T10:15:47Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "Concurrency error running tests in parallel",
        "labels":  [
                       "area-app-testing"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspire/issues/8096",
        "createdAt":  "2025-03-15T21:28:47Z",
        "number":  8096,
        "author":  "functario",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODJUMUA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "gustaflindqvist",
                                            "createdAt":  "2025-04-04T09:32:06Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "niels-neogeo",
                                            "createdAt":  "2025-07-31T10:28:18Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2025-09-15T17:44:32Z",
        "body":  "### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Describe the bug\n\nIt seems that in Aspire.Hosting.Testing 9.1.0, new SQL containers are created between tests and the old ones are not destroyed despise the SQL server configured with \"ContainerLifetime.Session\".\n\n\n### A test (same test duplicate in 3 different classes part of the same Collection)\n\n```csharp\nusing System.Globalization;\nusing Alexandria.Local.IntegrationTests.Support;\nusing Aspire.Hosting;\nusing CleanArchitecture.WebAPI.Client;\nusing CleanArchitecture.WebAPI.Client.Models;\nusing Microsoft.Kiota.Abstractions;\nusing Microsoft.Kiota.Abstractions.Authentication;\nusing Microsoft.Kiota.Http.HttpClientLibrary;\nusing WellKnowns.Aspires;\nusing WellKnowns.Presentation.AlexandriaWebApi;\n\nnamespace Alexandria.Local.IntegrationTests.Tests.Authors;\n\n[Trait(\"Category\", \"Aspire\")]\n[Collection(nameof(IntegratedTests))]\npublic class AddAuthorTests\n{\n    private readonly NativeResponseHandler _postAuthorsResponseHandler;\n\n    public AddAuthorTests()\n    {\n        _postAuthorsResponseHandler = new NativeResponseHandler();\n    }\n\n    [Fact]\n    public async Task Create_1_Author()\n    {\n        using var aspire = await DistributedApplicationTestingBuilder.CreateAsync\u003cProjects.AppHost\u003e(\n            [AspireContexts.Test.ToString()],\n            TestContext.Current.CancellationToken\n        );\n\n        var alexandriaWebApi = aspire.CreateResourceBuilder\u003cProjectResource\u003e(\n            WebApiProjectReferences.ProjectName\n        );\n\n        alexandriaWebApi.ApplicationBuilder.Services.ConfigureHttpClientDefaults(builder =\u003e\n        {\n            builder.AddStandardResilienceHandler();\n        });\n\n        using var appHost = await aspire.BuildAsync(TestContext.Current.CancellationToken);\n\n        // Configure Alexandria HttpClient\n        await appHost.StartAsync(TestContext.Current.CancellationToken);\n\n        using var alexandriaHttpClient = appHost.CreateHttpClient(\n            WebApiProjectReferences.ProjectName\n        );\n\n        using var requestAdapter = new HttpClientRequestAdapter(\n            new AnonymousAuthenticationProvider(),\n            httpClient: alexandriaHttpClient\n        );\n\n        var alexandriaClient = new AlexandriaClient(requestAdapter);\n\n        // Arrange\n        var authorRequest = new AddAuthorRequest()\n        {\n            FirstName = \"Tom\",\n            MiddleNames = [\"The 3rd\"],\n            LastName = \"Challenge\",\n            BirthDate = DateTime.Parse(\"2025-03-10T11:17:38.733Z\", CultureInfo.InvariantCulture),\n        };\n\n        // Act\n        var sut = await alexandriaClient.V1.Authors.PostAsync(\n            authorRequest,\n            c =\u003e SetResponseHandler(c, _postAuthorsResponseHandler),\n            cancellationToken: TestContext.Current.CancellationToken\n        );\n\n        var response = _postAuthorsResponseHandler.GetHttpResponse();\n\n        // Assert\n        await response.VerifyHttpResponseAsync();\n    }\n}\n\n```\n\n### AppHost builder configuration\n\n```csharp\nusing Alexandria.Persistence;\nusing WellKnowns.Infrastructure.SQL;\nusing WellKnowns.Presentation.AlexandriaWebApi;\n\nnamespace AppHost.Configurations;\n\ninternal static class TestConfiguration\n{\n    internal static IDistributedApplicationBuilder ConfigureAsTest(\n        this IDistributedApplicationBuilder builder\n    )\n    {\n        // Sql\n        var (_, sqldb) = ConfigureSqlDb(builder);\n        OnDBCreateApplySqlDbMigrations(builder);\n\n        // WebApi\n        builder.ConfigureWebApi(sqldb);\n\n        return builder;\n    }\n\n    private static IDistributedApplicationBuilder ConfigureWebApi(\n        this IDistributedApplicationBuilder builder,\n        IResourceBuilder\u003cSqlServerDatabaseResource\u003e sqldb\n    )\n    {\n        builder\n            .AddProject\u003cProjects.Alexandria_WebApi\u003e(WebApiProjectReferences.ProjectName)\n            .WithEndpoint()\n            .WithReference(sqldb)\n            .WaitFor(sqldb);\n\n        return builder;\n    }\n\n    private static (\n        IResourceBuilder\u003cSqlServerServerResource\u003e sqlServer,\n        IResourceBuilder\u003cSqlServerDatabaseResource\u003e sqldb\n    ) ConfigureSqlDb(IDistributedApplicationBuilder builder)\n    {\n        var dbName = SqldbConstants.SQLDbName;\n        var saPassword = SqldbConstants.SQLDbLocalSAPassword;\n        var sqlPassword = builder.AddParameter(\"sql-password\", saPassword, secret: true);\n        var sqlServer = builder\n            .AddSqlServer(SqlProjectReferences.ProjectName, password: sqlPassword)\n            // If ContainerLifetime.Session, a new Docker container is created for each test\n            // but they are only disposed once all tests have run.\n            .WithLifetime(ContainerLifetime.Session);\n\n        var sqldb = sqlServer.AddDatabase(dbName);\n        return (sqlServer, sqldb);\n    }\n\n    private static void OnDBCreateApplySqlDbMigrations(IDistributedApplicationBuilder builder)\n    {\n        builder.Eventing.Subscribe\u003cAfterResourcesCreatedEvent\u003e(\n            static async (@event, cancellationToken) =\u003e\n            {\n                var db =\n                    @event.Model.Resources.First(x =\u003e x.Name == SqlProjectReferences.ProjectName)\n                    as SqlServerServerResource;\n\n                ArgumentNullException.ThrowIfNull(db, nameof(db));\n\n                var connectionString = await db.GetConnectionStringAsync(cancellationToken)\n                    .ConfigureAwait(false);\n\n                ArgumentNullException.ThrowIfNull(connectionString, nameof(connectionString));\n\n                AlexandriaDbContextFactory.ApplyDbMigrations(connectionString);\n            }\n        );\n    }\n}\n```\n\n### Expected Behavior\n\nA new container is created and destroyed for each test.\n\n### Steps To Reproduce\n\nRun all the integration tests in one run session.\n\n### Exceptions (if any)\n\nN/A\n\n### .NET Version info\n\nSDK dotnet 9.0\n\n### Anything else?\n\n- I have created [a branch for the defect ](https://github.com/functario/functional-dotnet-examples/blob/bug/aspire/container-session/1_Object_Oriented/test/IntegrationTests/Alexandria.Local.IntegrationTests/Tests/Authors/AddAuthorTests.cs) from my work in progress project.\n- I have changed the way to do the migration in the [main ](https://github.com/functario/functional-dotnet-examples/blob/main/1_Object_Oriented/aspire/AppHost/Configurations/TestConfiguration.cs) branch with [WaitForCompletion()](https://github.com/dotnet/docs-aspire/blob/main/docs/fundamentals/app-host-overview.md#waiting-for-resources). Still the behavior is the same (3 containers remaining until the end of the test run).\n- I think the behavior was different with the dotnet 8 version of Aspire.Hosting.Testing. But maybe it was my code at the time...\n- The code hangs after the last test when running the 3 tests, with Debug log being like:\nThe thread \u0027.NET TP Worker\u0027 (31620) has exited with code 0 (0x0).\nThe thread \u0027.NET TP Worker\u0027 (22516) has exited with code 0 (0x0).\nThe thread \u0027.NET TP Worker\u0027 (6556) has exited with code 0 (0x0).\netc...\nbut each test runs fine by its own or two consecutive.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOxEthvQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOKYQzfc6i6xmR",
                                           "createdAt":  "2025-03-18T13:46:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEM5mbg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "gustaflindqvist",
                                                                               "createdAt":  "2025-04-04T09:32:11Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "functario",
                                           "body":  "Adding ```await appHost.StopAsync(TestContext.Current.CancellationToken);``` at the end of the test seems to fix the hanging problem. \nBut the containers are still not killed between tests. ",
                                           "updatedAt":  "2025-03-18T13:46:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6jAizE",
                                           "createdAt":  "2025-03-18T21:55:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEM5mbw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "gustaflindqvist",
                                                                               "createdAt":  "2025-04-04T09:32:14Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "functario",
                                           "body":  "I have simplified the project in this repos:\nhttps://github.com/functario/bug-aspire-8096\n\nThe unexpected behavior is still present: SQL Container with Lifetime Session, remain alive until all tests from a same collection have been completed.",
                                           "updatedAt":  "2025-03-18T21:56:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc7ES2G9",
                                           "createdAt":  "2025-09-15T17:44:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danegsta",
                                           "body":  "@karolz-ms I\u0027m assuming that this is the issue with the test process being reused so the orchestrator doesn\u0027t start cleanup. Is there anything special required to take advantage of the test shutdown notification feature you added?",
                                           "updatedAt":  "2025-09-15T17:44:32Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "SQL container not destroyed between tests with ContainerLifetime.Session",
        "labels":  [
                       "area-orchestrator",
                       "area-app-testing"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspire/issues/8111",
        "createdAt":  "2025-03-17T13:30:22Z",
        "number":  8111,
        "author":  "m03chv13h",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-23T22:37:35Z",
        "body":  "### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nMaybe there is already a solution for that but I cannot find it. \n\nI want to start my resource via the code in the tests which I added with `.WithExplicitStart()` in my AppHost Program.cs file. \n\nProgram.cs\n```csharp Program.cs\n// ...\nbuilder.AddExecutable(\"explicit-start-resource-name\", ...)\n    .WithExplicitStart();\n// ...\n```\n\nIn my tests I start the app host and want to start this resource manually via the code.\n\nAppHostTests.cs\n```csharp\npublic class AppHostTests\n{\n    private static readonly TimeSpan BuildStopTimeout = TimeSpan.FromSeconds(15);\n    private static readonly TimeSpan StartStopTimeout = TimeSpan.FromSeconds(120);\n\n    [Fact]\n    public async Task Test_ExplicitStartResource()\n    {\n        // Act\n        var appHostBuilder = await DistributedApplicationTestingBuilder.CreateAsync\u003cProjects.AppHost\u003e();\n        \n        await using var appHost = await appHostBuilder.BuildAsync().WaitAsync(BuildStopTimeout);\n        \n        await appHost.StartAsync().WaitAsync(StartStopTimeout);\n        \n        // Some code here.\n\n        // Arrange\n        // Now I want to start the resource with a specific name.\n        // For example: await appHost.StartResourceAsync(name: \"explicit-start-resource-name\");\n\n        // Assert\n    }\n}\n```\n\nHow can I do that? Is there already a possibility for example with the `ResourceNotificationService`?\n\n### Describe the solution you\u0027d like\n\nFor example: \n```csharp\nawait appHost.StartResourceAsync(name: \"explicit-start-resource-name\");\n```\n\n### Additional context\n\nAspire.Hosting.AppHost 9.1.0\nAspire.Hosting.Testing 9.1.0\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOuWo-lg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOKYQzfc6iwPuA",
                                           "createdAt":  "2025-03-17T19:03:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "functario",
                                           "body":  "I have the same need. My application is a Kubernetes orchestrator that scale the number of pods or \"Runner\" services based on a request. I have implemented a Kubernetes client injected during the Aspire tests to simulate kube interactions. But I actually need to start 3 Runner services before to send the request and have multiple stages in my fake client to simulate scaling from 0 to multiple pods matching the request.\n\nThe fake client is a NSubstitute mock injected via ServiceDefaults. So I need to configure everything before the test run and I have no way to change the behavior during the test since the mock is in the context of the Orchestrator service and not the one of the test.\n\nIt makes the tests more complicated since I need to synchronize the number of requests by the Orchestrator to the fake Kubernetes client responses (simple polling).\n\nI could replace NSubstitute by a WebService to control the fake client during the test, but it will still require synchronizing the calls.\n\nBeing able to control the start from the fake client will allow me to respond with the real current state of the Runner service.",
                                           "updatedAt":  "2025-03-17T19:03:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6izJ5T",
                                           "createdAt":  "2025-03-18T01:09:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "Yep we need to expose an api. ResourceCommandService @JamesNK ",
                                           "updatedAt":  "2025-03-18T01:09:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6lZr_S",
                                           "createdAt":  "2025-04-03T09:03:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEVYTrA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "functario",
                                                                               "createdAt":  "2025-04-06T00:26:14Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "AlexNik4",
                                                                               "createdAt":  "2025-06-04T23:13:54Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "Poppyto",
                                           "body":  "I had the same issue and since Aspire 9.1, I can Start and Stop my resources like that :\n\nhttps://blog.webrox.fr/how-to-start-or-stop-resources-in-aspire-by-code/\n\nThe only drawback is we should use KnownResourceCommands (internal) instead of string \"resource-start\" and \"resource-stop\" but otherwise the code doesn\u0027t use reflection so it\u0027s ok for testing purpose",
                                           "updatedAt":  "2025-04-03T09:03:39Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc65aj6W",
                                           "createdAt":  "2025-07-23T22:37:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEc7rqg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "Poppyto",
                                                                               "createdAt":  "2025-07-24T07:04:11Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "m03chv13h",
                                                                               "createdAt":  "2025-07-24T07:30:18Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "functario",
                                                                               "createdAt":  "2025-08-03T20:45:47Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "There\u0027s a new ResourceCommandService coming in 9.4",
                                           "updatedAt":  "2025-07-23T22:37:35Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "Starting a resource (WithExplicitStart) in Aspire tests",
        "labels":  [
                       "area-app-testing"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspire/issues/8147",
        "createdAt":  "2025-03-18T21:02:16Z",
        "number":  8147,
        "author":  "afscrome",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-03-18T21:02:35Z",
        "body":  "### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Describe the bug\n\nIf in a test you try to wait on a resource that doesn\u0027t exist in a test, it will hang indefinitely until the test times out.  (You did remember to include cancellation right 😢)\n\n\n\n### Expected Behavior\n\nI\u0027d expect this attempt to wait to fail fast if the resource doesn\u0027t exist in the model.\n\n### Steps To Reproduce\n\nTake the default test from the starter templates, and throw in a `await app.ResourceNotifications.WaitForResourceHealthyAsync(\"DOESNOTEXIST\")` call, pointing to a resource that doesn\u0027t exist\n```\n    public async Task GetWebResourceRootReturnsOkStatusCode()\n    {\n        // Arrange\n        var appHost = await DistributedApplicationTestingBuilder.CreateAsync\u003cProjects.aspire91_AppHost\u003e();\n        appHost.Services.AddLogging(logging =\u003e\n        {\n            logging.SetMinimumLevel(LogLevel.Debug);\n            // Override the logging filters from the app\u0027s configuration\n            logging.AddFilter(appHost.Environment.ApplicationName, LogLevel.Debug);\n            logging.AddFilter(\"Aspire.\", LogLevel.Debug);\n        });\n        appHost.Services.ConfigureHttpClientDefaults(clientBuilder =\u003e\n        {\n            clientBuilder.AddStandardResilienceHandler();\n        });\n\n        await using var app = await appHost.BuildAsync().WaitAsync(DefaultTimeout);\n        await app.StartAsync().WaitAsync(DefaultTimeout);\n\n        // Act\n        await app.ResourceNotifications.WaitForResourceHealthyAsync(\"DOESNOTEXIST\").WaitAsync(DefaultTimeout);\n    }\n```\n\n### Exceptions (if any)\n\nLogs:\n```\nAspire.Hosting.DistributedApplication[0]\n      Aspire version: 9.1.0+2a8f48ea5811f317a26405eb315aa315cc9e3cea\nAspire.Hosting.DistributedApplication[0]\n      Distributed application starting.\nAspire.Hosting.DistributedApplication[0]\n      Application host directory is: S:\\aspire91\\aspire91.AppHost\nAspire.Hosting.DistributedApplication[0]\n      Distributed application started. Press Ctrl+C to shut down.\nAspire.Hosting.ApplicationModel.ResourceNotificationService[0]\n      Waiting for resource \u0027DOESNOTEXIST\u0027 to enter the \u0027Healthy\u0027 state.\n```\n\n### .NET Version info\n\n_No response_\n\n### Anything else?\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "`WaitForResourceHealthyAsync` should fail fast if Resource does not exist",
        "labels":  [
                       "area-app-testing"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspire/issues/8499",
        "createdAt":  "2025-04-02T09:42:37Z",
        "number":  8499,
        "author":  "hwoodiwiss",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODQ0h5A==",
                          "nodes":  [
                                        {
                                            "content":  "EYES",
                                            "user":  "slang25",
                                            "createdAt":  "2025-04-10T10:42:35Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "robhughadams",
                                            "createdAt":  "2025-04-10T10:43:05Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "martincostello",
                                            "createdAt":  "2025-04-10T13:28:26Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "dil-adatoth",
                                            "createdAt":  "2025-04-23T12:57:46Z"
                                        },
                                        {
                                            "content":  "EYES",
                                            "user":  "svze",
                                            "createdAt":  "2025-04-24T12:09:54Z"
                                        },
                                        {
                                            "content":  "EYES",
                                            "user":  "ArcadeMode",
                                            "createdAt":  "2025-04-27T07:06:40Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "yarns123",
                                            "createdAt":  "2025-05-07T10:29:01Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "keiranFTW",
                                            "createdAt":  "2025-05-09T16:45:29Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "fu-infotrack",
                                            "createdAt":  "2025-05-19T04:39:27Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "CorruptComputer",
                                            "createdAt":  "2025-05-24T05:34:10Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "jflaga",
                                            "createdAt":  "2025-05-27T01:47:12Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "jeremiahflaga",
                                            "createdAt":  "2025-06-07T18:18:45Z"
                                        },
                                        {
                                            "content":  "EYES",
                                            "user":  "jeremiahflaga",
                                            "createdAt":  "2025-06-07T18:18:47Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "TheRubble",
                                            "createdAt":  "2025-06-13T07:14:20Z"
                                        },
                                        {
                                            "content":  "EYES",
                                            "user":  "TheRubble",
                                            "createdAt":  "2025-06-13T07:14:23Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "pomian-asseco",
                                            "createdAt":  "2025-06-13T09:13:27Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "kesadams",
                                            "createdAt":  "2025-06-27T14:30:31Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "deanro",
                                            "createdAt":  "2025-06-27T21:51:55Z"
                                        },
                                        {
                                            "content":  "EYES",
                                            "user":  "danigutsch",
                                            "createdAt":  "2025-06-28T18:53:51Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "danigutsch",
                                            "createdAt":  "2025-06-28T18:53:51Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Sopor10",
                                            "createdAt":  "2025-09-16T05:18:56Z"
                                        }
                                    ],
                          "totalCount":  21
                      },
        "updatedAt":  "2025-07-22T20:57:31Z",
        "body":  "### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nWhen using Aspire.Hosting.Testing to run integration tests, and using [coverlet.msbuild](https://github.com/coverlet-coverage/coverlet) we had no coverage reported for our tests, regardless of what code they exercised. This reduces the value of the tests that otherwise provide a great amount of value by exercising our system front-to-back.\n\n### Describe the solution you\u0027d like\n\nIt would be useful if coverage tooling that already exists would just work ™, however I appreciate that given how different running an application in Aspire/DistributedApplicationFactory is from something like WebApplicationFactory, that may be unworkable.\n\nI think whatever the solution, it will require some collaboration with the maintainers of coverage tooling.\n\n### Additional context\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOuQ-e4Q==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOKYQzfc6lTIwX",
                                           "createdAt":  "2025-04-02T17:31:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "radical",
                                           "body":  "cc @ReubenBond ",
                                           "updatedAt":  "2025-04-02T17:31:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6o4FLF",
                                           "createdAt":  "2025-04-27T07:49:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ArcadeMode",
                                           "body":  "I\u0027ve been going over the functionality that coverlet provides as-is and there seem to be opportunities for out of process coverage collection: [dotnet-coverage in server mode](https://learn.microsoft.com/en-gb/dotnet/core/additional-tools/dotnet-coverage#use-the-instrument-and-collect-commands-in-server-mode).\n\nPerhaps on the testing side of things Aspire could support a way to instead of `build \u003e run app \u003e run tests` to add some extra \u0027hooks\u0027 to `build \u003e instrument \u003e run collector \u003e run app \u003e run tests \u003e shutdown collector`. It seems from the docs that we could just run these dotnet-coverage commands at the right time and get this working that way. \n\nI am however unsure if that is a desirable implementation. ",
                                           "updatedAt":  "2025-04-27T07:49:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6w_Klf",
                                           "createdAt":  "2025-06-13T07:15:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "TheRubble",
                                           "body":  "Did you ever get to the bottom of this, I\u0027ve just hit the same issue.",
                                           "updatedAt":  "2025-06-13T07:15:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6xXwkJ",
                                           "createdAt":  "2025-06-16T09:31:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEYYIGg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "hwoodiwiss",
                                                                               "createdAt":  "2025-06-16T12:16:28Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "deanro",
                                                                               "createdAt":  "2025-06-27T22:47:54Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "danigutsch",
                                                                               "createdAt":  "2025-06-28T18:53:56Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "ArcadeMode",
                                           "body":  "@TheRubble I personally did not, but would love to see this resolved.\n\nI\u0027d guess that the intrumentation steps could still work as is, but the collector being the main problem due to the app running outside the aspire process (which is where the coverage collector is probably collecting from).\n\nWill this issue get attention from the team sometime @radical / @ReubenBond? If a core contributor could point out a desired implementation that could be a starting point for contributions to be made.\n\nI will also ask around in the coverlet repo to see if they have any suggestions\n\n",
                                           "updatedAt":  "2025-06-16T09:31:42Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6zrgDV",
                                           "createdAt":  "2025-06-27T22:46:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "deanro",
                                           "body":  "I\u0027m hitting this as well. I wouldn\u0027t mind contributing to fix the issue if we had a defined plan of the best way to accomplish this.",
                                           "updatedAt":  "2025-06-27T22:46:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc61AZm1",
                                           "createdAt":  "2025-07-04T16:05:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "nuno-tiago-reis",
                                           "body":  "I\u0027m also getting the same problem, the weird thing is that using the FineCodeCoverage extension and running the tests via VisualStudio, code coverage gets reported correctly. It\u0027s only when running it via the console that it shows the code as being uncovered.",
                                           "updatedAt":  "2025-07-04T16:05:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc61ib-g",
                                           "createdAt":  "2025-07-07T15:53:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "deanro",
                                           "body":  "Similarly I also need it to run from the command line. We have some some folks using Visual Studio on Windows, and some are using Rider on the Mac, we also have a GitHub workflow that builds all the code, runs all the tests and generates the code coverage report using reportgenerator, which is where this really needs to work. I tried assigning an issue to Copilot in our private repro and after about 7 attempts, it hopelessly failed to generate the code coverage for the services that are started via the apphost test - after using many of my credits 🙂",
                                           "updatedAt":  "2025-07-07T15:53:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc65D57h",
                                           "createdAt":  "2025-07-22T20:57:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ArcadeMode",
                                           "body":  "https://github.com/coverlet-coverage/coverlet/issues/1760#issuecomment-3093678971\n\nSharing this reply in the coverlet repo. There\u0027s a suggested workaround with coverlet.console. Doesn\u0027t seem too hard to include in a simple script which runs dotnet test and sets up coverage collection. ",
                                           "updatedAt":  "2025-07-22T20:57:31Z"
                                       }
                                   ],
                         "totalCount":  8
                     },
        "title":  "Code coverage reporting using popular tools does not work with Aspire.Hosting.Testing",
        "labels":  [
                       "area-app-testing"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspire/issues/8719",
        "createdAt":  "2025-04-11T04:35:55Z",
        "number":  8719,
        "author":  "radical",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-06T03:13:50Z",
        "body":  "## Build Information\nBuild: https://github.com/dotnet/aspire/actions/runs/14395360560\nBuild error leg or test failing: Aspire.Hosting.Testing.Tests.TestingFactoryTests.SelectsFirstLaunchProfile\nPull request: \n\u003c!-- Error message template  --\u003e\n## Error Message\n\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssueJsonStepByStep.md).\n\n\u003c!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. --\u003e\n\n```json\n{\n  \"ErrorMessage\": \"\",\n  \"ErrorPattern\": \"\",\n  \"BuildRetry\": false,\n  \"ExcludeConsoleLog\": false\n}\n```\n\n\n```\nAssert.Equal() Failure: Strings differ\nExpected: \"https\"\nActual:   null   at Aspire.Hosting.Testing.Tests.TestingFactoryTests.SelectsFirstLaunchProfile() in /_/tests/Aspire.Hosting.Testing.Tests/TestingFactoryTests.cs:line 76\n--- End of stack trace from previous location ---\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003c!-- BEGIN: Github workflow runs test report --\u003e\n\n## Report for Quarantined runs\n\n### Recent runs:\n| OS | Last 100 runs |\n| --- | --- |\n\n\n-- Updated on 9/6/2025 3:13:49 AM UTC\n## Report for PRs and Rolling builds\n\n### Last 10 failures:\n| Run date | Test Name |\n| --------- | ---- |\n\n### Summary of the failures\n\n| Last 24 hrs | Last 7 days | Last 30 days |\n| --- | --- | --- |\n| 0 | 0 | 0 |\n\n\n-- Updated on 9/6/2025 3:13:49 AM UTC\n\n\u003c!-- END: Github workflow runs test report --\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "Flaky test: Aspire.Hosting.Testing.Tests.TestingFactoryTests.SelectsFirstLaunchProfile",
        "labels":  [
                       "area-app-testing",
                       "flaky-test",
                       "quarantined-test"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspire/issues/8773",
        "createdAt":  "2025-04-14T23:51:54Z",
        "number":  8773,
        "author":  "mitchdenny",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-20T00:03:20Z",
        "body":  "### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Build information\n\nBuild: https://github.com/dotnet/aspire/actions/runs/14447933111/job/40513180521?pr=8767\nBuild error leg or test failing: Aspire.Hosting.Tests.DistributedApplicationTests.ProxylessContainerCanBeReferenced\nPull Request: https://github.com/dotnet/aspire/pull/8767\n\n\n### Fill in the error message template\n\n\u003c!-- Error message template  --\u003e\n## Error Message\n\n```\n failed Aspire.Hosting.Tests.DistributedApplicationTests.ProxylessContainerCanBeReferenced (43s 446ms)\n    Xunit.Runner.InProc.SystemConsole.TestingPlatform.XunitException: System.TimeoutException : The operation at /_/tests/Aspire.Hosting.Tests/DistributedApplicationTests.cs:1044 timed out after reaching the limit of 30000ms.\n      at Microsoft.AspNetCore.InternalTesting.AsyncTestHelpers.TimeoutAfter(Task task, TimeSpan timeout, String filePath, Int32 lineNumber) in /_/tests/Shared/AsyncTestHelpers.cs:177\n      at Aspire.Hosting.Tests.DistributedApplicationTests.ProxylessContainerCanBeReferenced() in /_/tests/Aspire.Hosting.Tests/DistributedApplicationTests.cs:1044\n```\n\n\u003c!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. --\u003e\n\n```json\n{\n  \"ErrorMessage\": \"\",\n  \"ErrorPattern\": \"\",\n  \"BuildRetry\": false,\n  \"ExcludeConsoleLog\": false\n}\n```\n\n\n### Other info\n\n_No response_\n\u003c!--Known issue error report start --\u003e\n\n### Report\n#### Summary\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\n|---|---|---|\n|0|0|0|\n\u003c!--Known issue error report end --\u003e\r\n\u003c!--Known issue error report start --\u003e\r\n\r\n### Report\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|0|0|\r\n\u003c!--Known issue error report end --\u003e\n\n## Report for PRs and Rolling builds\n\n### Last 10 failures:\n| Run date | Test Name |\n| --------- | ---- |\n| Aug 10 3 AM | [linux] [Aspire.Hosting.Tests.DistributedApplicationTests.ProxylessContainerCanBeReferenced](https://github.com/dotnet/aspire/actions/runs/16856819845) |\n\n### Summary of the failures\n\n| Last 24 hrs | Last 7 days | Last 30 days |\n| --- | --- | --- |\n| 0 | 1 | 1 |\n\n\n-- Updated on 8/16/2025 3:05:50 AM UTC\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003c!-- BEGIN: Github workflow runs test report --\u003e\n\n## Report for PRs and Rolling builds\n\n### Last 10 failures:\n| Run date | Test Name |\n| --------- | ---- |\n\n### Summary of the failures\n\n| Last 24 hrs | Last 7 days | Last 30 days |\n| --- | --- | --- |\n| 0 | 0 | 0 |\n\n\n-- Updated on 9/6/2025 3:14:01 AM UTC\n\n\u003c!-- END: Github workflow runs test report --\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOpxy1EQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOKYQzfc6nHLUR",
                                           "createdAt":  "2025-04-15T03:28:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "radical",
                                           "body":  "@mitchdenny Is this a flaky test that should be quarantined?",
                                           "updatedAt":  "2025-04-15T03:28:17Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "[Failing test]: ProxylessContainerCanBeReferenced",
        "labels":  [
                       "blocking-clean-ci",
                       "area-app-testing"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspire/issues/9087",
        "createdAt":  "2025-05-02T21:54:17Z",
        "number":  9087,
        "author":  "eerhardt",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-05-03T19:45:18Z",
        "body":  "Trying to write a test that uses `DistributedApplicationTestingBuilder.CreateAsync` to test my publisher. In order to test my publisher against a sample app, I have:\n\n```C#\n        using var builder = await DistributedApplicationTestingBuilder.CreateAsync\u003cProjects.Sample_AppHost\u003e();\n        builder.AddXunitLogging(Output);\n        builder.Services.AddSingleton\u003cIPublishingActivityProgressReporter\u003e(_ =\u003e NullPublishingActivityProgressReporter.Instance);\n        builder.Services.Configure\u003cMyPublisherOptions\u003e(\"mypub\", options =\u003e\n        {\n            options.OutputPath = _tempOutputDir.FullName;\n        });\n\n        await using var app = await builder.BuildAsync();\n\n        await app.StartAsync();\n\n        var model = app.Services.GetRequiredService\u003cDistributedApplicationModel\u003e();\n        var publisher = app.Services.GetKeyedService\u003cIDistributedApplicationPublisher\u003e(\"mypub\");\n\n        Assert.NotNull(publisher);\n\n        await publisher.PublishAsync(model, default);\n```\n\nThe issue is if I do `DistributedApplicationTestingBuilder.CreateAsync\u003cProjects.Sample_AppHost\u003e()`, it creates the DistributedApplication with `IsRunMode == true`. But I need to execute the AppHost in Publish mode.\n\nAs far I as can tell, there isn\u0027t a clean way to set this up. I can pass in `--publisher`, but that requires a publisher to be passed. And so when `DistributedApplicationTestingBuilder.CreateAsync` runs, it will run the `Main` method of the sample app, which will kick off a publish operation. But my test is also publishing concurrently. This creates problems since they are both publishing.\n\ncc @captainsafia @mitchdenny ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "Support DistributedApplicationTestingBuilder with IsPublishMode == true",
        "labels":  [
                       "area-app-testing"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspire/issues/9093",
        "createdAt":  "2025-05-03T18:28:52Z",
        "number":  9093,
        "author":  "amolenk",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-05-19T14:28:01Z",
        "body":  "### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Describe the bug\n\nI\u0027ve written integration tests using `DistributedApplicationTestingBuilder`. To shorten the test run, I use Persistent lifetime for my PostgreSQL container. I also set the environment to \u0027Testing\u0027 so I can detect that it\u0027s a test run in my AppHost:\n\n```csharp\nvar appHost = await DistributedApplicationTestingBuilder.CreateAsync\u003cProjects.AspireTest_AppHost\u003e([\n    \"--environment=Testing\",\n], cancellationToken);\n```\n\nWhen running the test, the PostgreSQL container is restarted each time.\n\nIf I remove the environment parameter, the PostgreSQL doesn\u0027t restart each time and works as expected:\n\n```csharp\nvar appHost = await DistributedApplicationTestingBuilder.CreateAsync\u003cProjects.AspireTest_AppHost\u003e(cancellationToken);\n```\n\nI can also set other parameters without breaking the Persistent Lifetime functionality. It\u0027s only when settings the `--environment` parameter that the container restarts each time.\n\nUPDATE: The PostgreSQL container doesn\u0027t restart when I explicitly pass in a password parameter.\n\n### Expected Behavior\n\nI expect the PostgreSQL container not to restart, independent of whether or not I\u0027m setting the environment.\n\n### Steps To Reproduce\n\n- Create an Aspire Starter app (aspire-starter template)\n- Add a test project (aspire-xunit template)\n- Add the `Aspire.Hosting.PostgreSQL` package to the AppHost\n- Add the PostgreSQL container:\n   ```csharp\n   var postgres = builder.AddPostgres(\"postgres\")\n       .WithLifetime(ContainerLifetime.Persistent);\n   ```\n- Add the environment parameter:\n   ```csharp\n   var appHost = await DistributedApplicationTestingBuilder.CreateAsync\u003cProjects.AspireTest_AppHost\u003e([\n           \"--environment=Testing\",\n   ], cancellationToken);\n   ```\n- Run the test a couple of times. Each time, the PostgreSQL container will restart (I monitor this in the Docker Desktop dashboard)\n- Remove the `--environment` parameter\n- Run the test a couple of times again. The PostgreSQL container will stay alive and not restart.\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version info\n\n.NET version 9.0.100\n\n### Anything else?\n\n.NET Aspire version 9.2.1",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOrDEpmQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOKYQzfc6qzTtv",
                                           "createdAt":  "2025-05-09T08:07:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Kralizek",
                                           "body":  "What if I wanted to force this behavior after the bug fix?\n\nI also use a persistent container but I see the advantage of running tests against a new one while not touching the one used at dev time.",
                                           "updatedAt":  "2025-05-09T08:07:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6rJA6n",
                                           "createdAt":  "2025-05-12T07:49:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "amolenk",
                                           "body":  "@Kralizek You can change the lifetime of the containers before running the tests. @DamianEdwards has a sample of this: https://github.com/dotnet/aspire-samples/blob/0c27e4e3bac5f102db1002fd2e0e1ba894e1009a/tests/SamplesIntegrationTests/Infrastructure/DistributedApplicationExtensions.cs#L39-L53",
                                           "updatedAt":  "2025-05-12T07:49:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6sMSmZ",
                                           "createdAt":  "2025-05-18T10:15:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEShTjw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Kralizek",
                                                                               "createdAt":  "2025-05-18T10:16:58Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "amolenk",
                                           "body":  "@Kralizek BTW, when I create the AppHost when testing, I pass a `DcpPublisher:ResourceNameSuffix=test` argument. That way I get one set of persistent containers specifically for the test runs (all containers will get the `test` suffix). The persistent containers used at dev time won\u0027t have the suffix.",
                                           "updatedAt":  "2025-05-18T10:15:57Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "PostgreSQL persistent lifetime not working when setting --environment in Integration test",
        "labels":  [
                       "area-app-testing"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspire/issues/9110",
        "createdAt":  "2025-05-05T23:15:51Z",
        "number":  9110,
        "author":  "Kralizek",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-05-30T14:09:42Z",
        "body":  "### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Describe the bug\n\nI have my Identity Provider configured to accept a fixed localhost redirect URI to allow local development. The port is hardcoded in the launchSettings file. When using the Test Host, the services are started with different ports making it impossible to use the remote IdP.\n\n### Expected Behavior\n\nTest Host should honor the launchSettings file of each project.\n\n### Steps To Reproduce\n\n```\nvar builder = await DistributedApplicationTestingBuilder.CreateAsync\u003cProjects.AppHost\u003e();\n\nvar application = await builder.BuildAsync();\n\nawait application.StartAsync();\n\nusing var cts = new CancellationTokenSource(TimeSpan.FromSeconds(30));\n\nawait application.ResourceNotifications.WaitForResourceHealthyAsync(\"app\", cts.Token);\n\nvar baseAddress = application.GetEndpoint(\"app\");\n\n// baseAddress targets a random port number.\n```\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version info\n\n```\n$ dotnet --info\n\n.NET SDK:\n Version:           9.0.203\n Commit:            dc7acfa194\n Workload version:  9.0.200-manifests.9df47798\n MSBuild version:   17.13.20+a4ef1e90f\n\nRuntime Environment:\n OS Name:     Windows\n OS Version:  10.0.22631\n OS Platform: Windows\n RID:         win-x64\n Base Path:   C:\\Program Files\\dotnet\\sdk\\9.0.203\\\n\n.NET workloads installed:\n [aspire]\n   Installation Source: VS 17.12.35514.174\n   Manifest Version:    8.2.2/8.0.100\n   Manifest Path:       C:\\Program Files\\dotnet\\sdk-manifests\\8.0.100\\microsoft.net.sdk.aspire\\8.2.2\\WorkloadManifest.json\n   Install Type:              Msi\n\nConfigured to use loose manifests when installing new manifests.\n\nHost:\n  Version:      9.0.4\n  Architecture: x64\n  Commit:       f57e6dc747\n\n.NET SDKs installed:\n  6.0.100 [C:\\Program Files\\dotnet\\sdk]\n  6.0.103 [C:\\Program Files\\dotnet\\sdk]\n  6.0.202 [C:\\Program Files\\dotnet\\sdk]\n  6.0.203 [C:\\Program Files\\dotnet\\sdk]\n  7.0.317 [C:\\Program Files\\dotnet\\sdk]\n  8.0.408 [C:\\Program Files\\dotnet\\sdk]\n  9.0.100 [C:\\Program Files\\dotnet\\sdk]\n  9.0.105 [C:\\Program Files\\dotnet\\sdk]\n  9.0.203 [C:\\Program Files\\dotnet\\sdk]\n\n.NET runtimes installed:\n  Microsoft.AspNetCore.All 2.1.21 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\n  Microsoft.AspNetCore.App 2.1.21 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 3.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 3.1.28 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 3.1.32 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 5.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 5.0.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 6.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 6.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 6.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 6.0.36 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 7.0.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 8.0.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 8.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 9.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 9.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.NETCore.App 2.1.21 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.NETCore.App 3.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.NETCore.App 3.1.28 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.NETCore.App 3.1.32 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.NETCore.App 5.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.NETCore.App 5.0.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.NETCore.App 6.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.NETCore.App 6.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.NETCore.App 6.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.NETCore.App 6.0.36 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.NETCore.App 7.0.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.NETCore.App 8.0.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.NETCore.App 8.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.NETCore.App 9.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.NETCore.App 9.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.WindowsDesktop.App 3.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n  Microsoft.WindowsDesktop.App 3.1.28 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n  Microsoft.WindowsDesktop.App 3.1.32 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n  Microsoft.WindowsDesktop.App 5.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n  Microsoft.WindowsDesktop.App 5.0.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n  Microsoft.WindowsDesktop.App 6.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n  Microsoft.WindowsDesktop.App 6.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n  Microsoft.WindowsDesktop.App 6.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n  Microsoft.WindowsDesktop.App 6.0.36 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n  Microsoft.WindowsDesktop.App 7.0.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n  Microsoft.WindowsDesktop.App 8.0.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n  Microsoft.WindowsDesktop.App 8.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n  Microsoft.WindowsDesktop.App 9.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n  Microsoft.WindowsDesktop.App 9.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n\nOther architectures found:\n  x86   [C:\\Program Files (x86)\\dotnet]\n    registered at [HKLM\\SOFTWARE\\dotnet\\Setup\\InstalledVersions\\x86\\InstallLocation]\n\nEnvironment variables:\n  Not set\n\nglobal.json file:\n  C:\\Users\\Renato\\Development\\EduConvert\\EduConvert\\global.json\n\nLearn more:\n  https://aka.ms/dotnet/info\n\nDownload .NET:\n  https://aka.ms/dotnet/download\n```\n\nI suspect I should purge some old runtimes...\n\n### Anything else?\n\nAspire 9.2.1",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOrVBhoQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOKYQzfc6qXX_j",
                                           "createdAt":  "2025-05-07T11:40:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Kralizek",
                                           "body":  "@davidfowl Is there anything wrong in my setup? 🤔",
                                           "updatedAt":  "2025-05-07T11:40:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc6tUGGh",
                                           "createdAt":  "2025-05-25T09:51:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Kralizek",
                                           "body":  "I saw that I can pass `\"DcpPublisher:RandomizePorts=false\"` when creating the testing builder. Is there a way to have a more granular approach? random ports for all resources, fixed port for a specified resource?",
                                           "updatedAt":  "2025-05-25T09:51:38Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Test Host doesn\u0027t use ports specified in launchSettings",
        "labels":  [
                       "area-app-testing"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspire/issues/10149",
        "createdAt":  "2025-06-30T19:50:29Z",
        "number":  10149,
        "author":  "afscrome",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-06-30T19:52:03Z",
        "body":  "### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Describe the bug\n\nI\u0027ve been trying to troubleshoot why some of my tests were unexpectedly hitting race conditions with each other.  In my main apphost, these resources are marked as `.WithLifetime(ContainerLifetime.Persistent)`, but for my tests I wanted to turn off all container persistence to ensure the tests are isoalted from each other.\n\nI was attemptign to do this through a `BeforeStartEvent` subscription, but on further investigation it appears that the `DcpInstancesAnnotation` has been already been assigned to the resource by the time my event handler runs.  So even if I remove the Lifetime annotation at this point, it is a bit late as DCP has already processed it.\n\nShould this annotation be assigned to resources after `BeforeStartEvent`s have been processed to give consumers a chance to modify these values before DCP locks in it\u0027s naming decision - https://github.com/dotnet/aspire/blob/cb9d231f82f7d8a6971954c21b4808259388ab91/src/Aspire.Hosting/DistributedApplicationBuilder.cs#L371 .\n\n\n![Image](https://github.com/user-attachments/assets/e8b1054a-aa92-49cf-8200-afe2d11f64f2)\n\n### Expected Behavior\n\nI should be able to change whether a container is persistent or now in `BeforeStartEvent`.\n\n### Steps To Reproduce\n\nI\u0027d expect the following to start two containers, not for both tests to re-use the same container.\n\n```cs\n// NUnit\n[assembly: Parallelizable(ParallelScope.All)]\n\npublic class WebTests\n{\n    [TestCase(1)]\n    [TestCase(2)]\n    public async Task Test(int instance)\n    {\n        var builder = DistributedApplicationTestingBuilder.Create();\n        DisablePersistentContainers(builder);\n\n        var sql = builder.AddSqlServer(\"sql\")\n            .WithLifetime(ContainerLifetime.Persistent);\n\n        var app = builder.Build();\n\n        await app.StartAsync();\n        await Task.Delay(120_000);\n    }\n\n    private static IDistributedApplicationBuilder DisablePersistentContainers(IDistributedApplicationBuilder builder)\n    {\n        builder.Eventing.Subscribe\u003cBeforeStartEvent\u003e((evt, ct) =\u003e\n        {\n            foreach (var resource in evt.Model.Resources.OfType\u003cContainerResource\u003e())\n            {\n                foreach (var lifetimeAnnotation in resource.Annotations.OfType\u003cContainerLifetimeAnnotation\u003e().ToArray())\n                {\n                    resource.Annotations.Remove(lifetimeAnnotation);\n                }\n                foreach (var proxySupport in resource.Annotations.OfType\u003cProxySupportAnnotation\u003e().ToArray())\n                {\n                    resource.Annotations.Remove(proxySupport);\n                }\n            }\n            return Task.CompletedTask;\n        });\n\n        return builder;\n    }\n\n}\n      return builder;\n   }\n```\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version info\n\nReproed on both 9.3.0 and 9.4.0-preview.1.25329.2\n\n### Anything else?\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "Assign `DcpInstancesAnnotation` after `BeforeStartEvent`?",
        "labels":  [
                       "area-app-model",
                       "area-app-testing"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspire/issues/10218",
        "createdAt":  "2025-07-02T16:44:49Z",
        "number":  10218,
        "author":  "afscrome",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODR2c6w==",
                          "nodes":  [
                                        {
                                            "content":  "EYES",
                                            "user":  "KSemenenko",
                                            "createdAt":  "2025-09-19T08:43:56Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2025-07-07T18:27:50Z",
        "body":  "### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Describe the bug\n\nContinuation of #8206, but that issue has been locked.\n\nIf a containers crashes upon startup it still continues to report no logs in both 9.3 and 9.4.0-preview.1.25351.3.\n\n9.4 does have some improvement in that it tells me the container crashed (all be it with a rather confusing error), but the logs are still missing.\n\n```\n    fail: Aspire.Hosting.Dcp.dcpctrl.ContainerReconciler[0]\n      failed to start Container\t{\"Container\": {\"name\":\"REDCTED-mkvtbbkr\"}, \"Reconciliation\": 39, \"ContainerID\": \"aeecc55e407fb644a0fd24dda32536c7a52511566f67bd54da7c19d451d967dd\", \"error\": \"container \u0027REDACTED-mkvtbbkr\u0027 start failed (exit code 1)\\nwriter is closed\\nnot all requested objects were returned\\nonly 0 out of 1 containers were successfully started\"}\n```\n\nThis issue is a significant blocker towards us using Distributed Application Testing builder - when (not if) we screw something up and cause the app to crash on startup, we\u0027re pretty much unable to debug.  Not only does DCP not report the logs, but it also immediately deletes the container from docker when it crashes, so you can\u0027t even pull the logs of the stopped container through docker.\n\nThe fix for our crash is almost certainly a silly missing environment variable, but lack of logs means we\u0027re unable to see exactly what we\u0027re missing.\n\n### Expected Behavior\n\n_No response_\n\n### Steps To Reproduce\n\n_No response_\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version info\n\n_No response_\n\n### Anything else?\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOtZCXgw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOKYQzfc60hKQN",
                                           "createdAt":  "2025-07-02T16:58:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "afscrome",
                                           "body":  "In 9.3, the logs do also show up in the Console log page of the dashboard, just not through `DistributedApplicationTestingBuilder`\n\n```cs\n      var builder = DistributedApplicationTestingBuilder.Create();\n      builder.Services.AddLogging(logging =\u003e\n      {\n         logging\n            .SetMinimumLevel(LogLevel.Debug)\n            .AddFilter(builder.Environment.ApplicationName, LogLevel.Debug)\n            .AddFilter(\"Aspire.\", LogLevel.Debug);\n      });\n```",
                                           "updatedAt":  "2025-07-02T16:58:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc61jeke",
                                           "createdAt":  "2025-07-07T17:16:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dbreshears",
                                           "body":  "Could be that the DistributedApplicationTestingBuilder is not subscribing to the startup logs.   That needs to be investigated.",
                                           "updatedAt":  "2025-07-07T17:16:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc61jfeH",
                                           "createdAt":  "2025-07-07T17:17:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dbreshears",
                                           "body":  "@afscrome , do you have a repro or way that we can simulate the crash",
                                           "updatedAt":  "2025-07-07T17:17:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc61jtmq",
                                           "createdAt":  "2025-07-07T17:41:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "afscrome",
                                           "body":  "Anything that instantly crashes out - missing mandatory argument/env var, unexpected values\n\n```cs\n        appHost.AddContainer(\"nginx\", \"nginx\")\n            .WithArgs(\"--not-a-valid-arg\");\n```\n\nRunning this container via docker cli (`docker run nginx --fake-arg`):\n```\n/docker-entrypoint.sh: 47: exec: --fake-arg: not found\n```\n\nFull test case (based on the aspire sample app)\n\n```cs\n    [Test]\n    public async Task GetWebResourceRootReturnsOkStatusCode()\n    {\n        // Arrange\n        var cancellationToken = TestContext.CurrentContext.CancellationToken;\n\n        var appHost = await DistributedApplicationTestingBuilder.CreateAsync\u003cProjects.SdkContainerPackage_AppHost\u003e(cancellationToken);\n        appHost.Services.AddLogging(logging =\u003e\n        {\n            logging.SetMinimumLevel(LogLevel.Debug);\n            // Override the logging filters from the app\u0027s configuration\n            logging.AddFilter(appHost.Environment.ApplicationName, LogLevel.Debug);\n            logging.AddFilter(\"Aspire.\", LogLevel.Debug);\n        });\n        appHost.Resources.Clear();\n        appHost.AddContainer(\"nginx\", \"nginx\")\n            .WithArgs(\"--fake-arg\")\n            .WithHttpEndpoint(targetPort: 80)\n            .WithHttpHealthCheck();\n\n        await using var app = await appHost.BuildAsync(cancellationToken).WaitAsync(DefaultTimeout, cancellationToken);\n        await app.StartAsync(cancellationToken).WaitAsync(DefaultTimeout, cancellationToken);\n\n        await app.ResourceNotifications.WaitForResourceHealthyAsync(\"nginx\", cancellationToken).WaitAsync(DefaultTimeout, cancellationToken);\n    }\n```\n\ntest output:\n```\n    info: Aspire.Hosting.DistributedApplication[0]\n      Aspire version: 9.4.0-preview.1.25355.1+8e2d33c6570641dd90de2089f6e12bc56034968d\ninfo: Aspire.Hosting.DistributedApplication[0]\n      Distributed application starting.\ninfo: Aspire.Hosting.DistributedApplication[0]\n      Application host directory is: S:\\SdkContainerPackage\\SdkContainerPackage.AppHost\ndbug: Aspire.Hosting.Cli.BackchannelService[0]\n      Backchannel socket path was not specified.\ndbug: Aspire.Hosting.ApplicationModel.ResourceNotificationService[0]\n      Resource nginx/nginx-nubrfzut changed state: Starting\ninfo: Aspire.Hosting.DistributedApplication[0]\n      Distributed application started. Press Ctrl+C to shut down.\ndbug: Aspire.Hosting.ApplicationModel.ResourceNotificationService[0]\n      Waiting for resource \u0027nginx\u0027 to enter the \u0027Healthy\u0027 state.\ndbug: Aspire.Hosting.ApplicationModel.ResourceNotificationService[0]\n      Resource nginx/nginx-nubrfzut changed state: Starting\ninfo: SdkContainerPackage.AppHost.Resources.nginx[0]\n      1: 2025-07-07T17:38:42.0980000Z 8ec1413e49556513c73d25e249f281aa0b27229eb9931002830ac08e434c697a\nfail: Aspire.Hosting.Dcp.dcpctrl.ContainerReconciler[0]\n      failed to start Container\t{\"Container\": \"/nginx-nubrfzut\", \"Reconciliation\": 8, \"ContainerID\": \"8ec1413e4955\", \"ContainerName\": \"nginx-nubrfzut\", \"error\": \"container \u0027nginx-nubrfzut\u0027 start failed (exit code 127)\\nwriter is closed\\nnot all requested objects were returned\\nonly 0 out of 1 containers were successfully started\"}\ndbug: Aspire.Hosting.ApplicationModel.ResourceNotificationService[0]\n      Resource nginx/nginx-nubrfzut changed state: Starting -\u003e FailedToStart\nfail: Aspire.Hosting.ApplicationModel.ResourceNotificationService[0]\n      Stopped waiting for resource \u0027nginx\u0027 to become healthy because it failed to start.\n```",
                                           "updatedAt":  "2025-07-07T17:41:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc61j1AS",
                                           "createdAt":  "2025-07-07T17:53:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "afscrome",
                                           "body":  "Absolute simplest scenario would be something like\n\n```cs\n        appHost.AddContainer(\"nginx\", \"nginx\") // or any base image of your choice with bash\n            .WithEntrypoint(\"bash\")\n            .WithArgs(\"-c\", \"echo hello world; exit 123\");\n```",
                                           "updatedAt":  "2025-07-07T17:53:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc61kJeD",
                                           "createdAt":  "2025-07-07T18:27:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "afscrome",
                                           "body":  "Also looks like it\u0027s not container specific - you can get similar behaviour with a short lived executable.  (Logs showing up in dashboard, but not in test output)\n\n```cs\n        appHost.AddExecutable(\"cmd\", \"cmd.exe\", \".\")\n            .WithArgs(\"/c\", \"echo Hello World!\");\n```",
                                           "updatedAt":  "2025-07-07T18:27:50Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "Still missing crashing container logs in 9.3 \u0026 9.4 preview in tests",
        "labels":  [
                       "area-orchestrator",
                       "area-app-testing"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspire/issues/10280",
        "createdAt":  "2025-07-07T18:53:25Z",
        "number":  10280,
        "author":  "afscrome",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-16T08:37:52Z",
        "body":  "### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Describe the bug\n\nI\u0027ve noticed that some simple `DistributedApplicationTestingBuilder` tests were taking longer than I expected, and it seems like most of this time is being spent disposing the test - e.g. the below test takes ~5.6 seconds, but disposal takes ~4.5 seconds. \n\nThis slowness only seems to affect containers - an equivalent test with an executable takes 2.3 seconds, with 1.2 spent in disposal.  \n\nIs there anything that can be done to speed up test disposal?  Can some of this disposal be made asynchronous to allow my next test to start sooner.  Sure, this is only an extra 5 seconds or so, but multiply that by 5 seconds per test and the effect can quickly add up.\n\n(This in some ways is a continuation of #8424 - simple tests are not takign as long as in that issue, but still longer than I\u0027d have thought / hoped.)\n\n### Expected Behavior\n\n_No response_\n\n### Steps To Reproduce\n\nTest case (using Nunit)\n```cs\n    private static readonly TimeSpan DefaultTimeout = TimeSpan.FromSeconds(30);\n\n    [Test]\n    public async Task Test()\n    {\n        // Arrange\n        var cancellationToken = TestContext.CurrentContext.CancellationToken;\n\n        var appHost = DistributedApplicationTestingBuilder.Create();\n        appHost.Services.AddLogging(logging =\u003e\n        {\n            logging.SetMinimumLevel(LogLevel.Debug);\n            // Override the logging filters from the app\u0027s configuration\n            logging.AddFilter(appHost.Environment.ApplicationName, LogLevel.Debug);\n            logging.AddFilter(\"Aspire.\", LogLevel.Debug);\n            logging.AddSimpleConsole(x =\u003e x.TimestampFormat = \"HH:mm:ss.fff \");\n        });\n\n        //appHost.AddContainer(\"nginx\", \"nginx\")\n        //    .WithEntrypoint(\"bash\")\n        //    .WithArgs(\"-c\", \"echo hello world; exit 0\");\n\n        appHost.AddExecutable(\"cmd\", \"cmd.exe\", \".\")\n            .WithArgs(\"/c\", \"echo HELLO WORLD\\nexit 123\");\n\n        var app = await appHost.BuildAsync(cancellationToken).WaitAsync(DefaultTimeout, cancellationToken);\n\n        try\n        {\n            await app.StartAsync(cancellationToken).WaitAsync(DefaultTimeout, cancellationToken);\n        }\n        finally\n        {\n            Console.WriteLine(\"Start disposal\");\n            var stopwatch = Stopwatch.StartNew();\n            await app.DisposeAsync();\n            stopwatch.Stop();\n            Console.WriteLine($\"Test disposed in {stopwatch.ElapsedMilliseconds} ms\");\n        }\n    }\n```\n\nOutput\n```\n Test\n   Source: WebTests.cs line 12\n   Duration: 5.6 sec\n\n  Standard Output: \n19:38:58.242 dbug: Microsoft.Extensions.Hosting.Internal.Host[1]\n      Hosting starting\n19:38:58.270 info: Aspire.Hosting.DistributedApplication[0]\n      Aspire version: 9.4.0-preview.1.25355.1+8e2d33c6570641dd90de2089f6e12bc56034968d\n19:38:58.270 info: Aspire.Hosting.DistributedApplication[0]\n      Distributed application starting.\n19:38:58.270 info: Aspire.Hosting.DistributedApplication[0]\n      Application host directory is: S:\\SdkContainerPackage\\SdkContainerPackage.Tests\n19:38:58.272 dbug: Aspire.Hosting.Cli.BackchannelService[0]\n      Backchannel socket path was not specified.\n19:38:58.402 info: Aspire.Hosting.Dcp.DcpHost[0]\n      Starting DCP with arguments: start-apiserver --monitor 33464 --detach --kubeconfig \"C:\\Users\\alex\\AppData\\Local\\Temp\\aspire.yglbgkwj.dys\\kubeconfig\"\n19:38:58.418 dbug: Aspire.Hosting.Dcp.DcpExecutor[0]\n      Watching over DCP Container resources.\n19:38:58.418 dbug: Aspire.Hosting.Dcp.DcpExecutor[0]\n      Watching over DCP Endpoint resources.\n19:38:58.418 dbug: Aspire.Hosting.Dcp.DcpExecutor[0]\n      Watching over DCP Service resources.\n19:38:58.418 dbug: Aspire.Hosting.Dcp.DcpExecutor[0]\n      Watching over DCP Executable resources.\n19:38:58.452 dbug: Aspire.Hosting.ApplicationModel.ResourceNotificationService[0]\n      Resource nginx/nginx-utvukexm changed state: Starting\n19:38:58.842 info: Aspire.Hosting.Dcp.dcp.start-apiserver.api-server[0]\n      Starting API server...\n19:38:58.861 info: Aspire.Hosting.Dcp.dcp.start-apiserver.api-server[0]\n      API server started\t{\"Address\": \"::1\", \"Port\": 58458}\n19:38:58.861 info: Aspire.Hosting.Dcp.dcp.start-apiserver.dcp-host[0]\n      Starting DCP controller host\n19:38:58.861 info: Aspire.Hosting.Dcp.dcp.start-apiserver.dcp-host[0]\n      Started all services\t{\"count\": 1}\n19:38:58.985 info: Aspire.Hosting.Dcp.dcpctrl[0]\n      starting controller manager\n19:38:59.131 dbug: Aspire.Hosting.Dcp.KubernetesService[0]\n      Successfully read Kubernetes configuration from \u0027C:\\Users\\alex\\AppData\\Local\\Temp\\aspire.yglbgkwj.dys\\kubeconfig\u0027 after 691 milliseconds.\n19:38:59.203 info: Aspire.Hosting.DistributedApplication[0]\n      Distributed application started. Press Ctrl+C to shut down.\n19:38:59.203 dbug: Microsoft.Extensions.Hosting.Internal.Host[2]\n      Hosting started\nStart disposal\n19:38:59.207 dbug: Aspire.Hosting.Dcp.DcpExecutor[0]\n      Cancellation received while watching Endpoint resources.\n19:38:59.207 dbug: Aspire.Hosting.Dcp.DcpExecutor[0]\n      Stopped watching Endpoint resources.\n19:38:59.208 dbug: Aspire.Hosting.Dcp.DcpExecutor[0]\n      Cancellation received while watching Container resources.\n19:38:59.208 dbug: Aspire.Hosting.Dcp.DcpExecutor[0]\n      Stopped watching Container resources.\n19:38:59.235 dbug: Aspire.Hosting.Dcp.DcpExecutor[0]\n      Cancellation received while watching Service resources.\n19:38:59.235 dbug: Aspire.Hosting.Dcp.DcpExecutor[0]\n      Stopped watching Service resources.\n19:38:59.252 dbug: Aspire.Hosting.Dcp.DcpExecutor[0]\n      Cancellation received while watching Executable resources.\n19:38:59.252 dbug: Aspire.Hosting.Dcp.DcpExecutor[0]\n      Stopped watching Executable resources.\n19:38:59.276 info: Aspire.Hosting.Dcp.dcp.start-apiserver.api-server.adminHttpHandler[0]\n      API server changed status\t{\"OldStatus\": \"Running\", \"NewStatus\": \"CleaningResources\"}\n19:38:59.834 info: Aspire.Hosting.Dcp.dcpctrl.NetworkReconciler[0]\n      network created\t{\"Network\": \"/default-aspire-network\", \"Reconciliation\": 2, \"NetworkName\": \"default-aspire-network-dv5kf40pjs\"}\n19:39:00.703 info: Aspire.Hosting.Dcp.dcpctrl.ContainerReconciler[0]\n      no more Container resources are being watched, cancelling container watch\t{\"Container\": \"/nginx-utvukexm\", \"Reconciliation\": 7, \"ContainerID\": \"053e9ab1e6c7\", \"ContainerName\": \"nginx-utvukexm\"}\n19:39:00.703 info: Aspire.Hosting.Dcp.dcpctrl.os-executor[0]\n      Context expired, stopping process...\t{\"PID\": 32996, \"Command\": \"C:\\\\Program Files\\\\Rancher Desktop\\\\resources\\\\resources\\\\win32\\\\bin\\\\docker.exe\", \"Args\": [\"events\", \"--filter\", \"type=container\", \"--format\", \"{{json .}}\"]}\n19:39:00.851 info: Aspire.Hosting.Dcp.dcpctrl.os-executor[0]\n      Root process has stopped\t{\"Root\": 32996}\n19:39:00.851 info: Aspire.Hosting.Dcp.dcpproc.monitor[0]\n      monitor process exited, shutting down\t{\"pid\": 32996}\n19:39:01.679 info: Aspire.Hosting.Dcp.dcpctrl.NetworkReconciler[0]\n      ContainerNetwork object is being deleted\t{\"Network\": \"/default-aspire-network\", \"Reconciliation\": 4, \"NetworkName\": \"default-aspire-network-dv5kf40pjs\", \"NetworkID\": \"e99914950832\"}\n19:39:03.086 info: Aspire.Hosting.Dcp.dcpctrl.NetworkReconciler[0]\n      no more ContainerNetwork resources are being watched, cancelling network watch\t{\"Network\": \"/default-aspire-network\", \"Reconciliation\": 4, \"NetworkName\": \"default-aspire-network-dv5kf40pjs\", \"NetworkID\": \"e99914950832\"}\n19:39:03.086 info: Aspire.Hosting.Dcp.dcpctrl.os-executor[0]\n      Context expired, stopping process...\t{\"PID\": 29840, \"Command\": \"C:\\\\Program Files\\\\Rancher Desktop\\\\resources\\\\resources\\\\win32\\\\bin\\\\docker.exe\", \"Args\": [\"events\", \"--filter\", \"type=network\", \"--format\", \"{{json .}}\"]}\n19:39:03.218 info: Aspire.Hosting.Dcp.dcpctrl.os-executor[0]\n      Root process has stopped\t{\"Root\": 29840}\n19:39:03.219 info: Aspire.Hosting.Dcp.dcpproc.monitor[0]\n      monitor process exited, shutting down\t{\"pid\": 29840}\n19:39:03.739 info: Aspire.Hosting.Dcp.dcp.start-apiserver.api-server.adminHttpHandler[0]\n      API server changed status\t{\"OldStatus\": \"CleanupComplete\", \"NewStatus\": \"Stopping\"}\n19:39:03.739 info: Aspire.Hosting.Dcp.dcp.start-apiserver[0]\n      Shutting down...\n19:39:03.739 info: Aspire.Hosting.Dcp.dcp.start-apiserver.dcp-host[0]\n      Service DCP controller host terminated gracefully\n19:39:03.739 info: Aspire.Hosting.Dcp.dcp.start-apiserver[0]\n      Shutdown complete.\nTest disposed in 4538 ms\n```\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version info\n\n_No response_\n\n### Anything else?\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOwb4BsA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOKYQzfc63AZa1",
                                           "createdAt":  "2025-07-14T17:13:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dbreshears",
                                           "body":  "Probably in network cleanup, but lets do a detailed perf trace and see if we can make improvements on shutdown",
                                           "updatedAt":  "2025-07-14T17:13:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc7BiWpg",
                                           "createdAt":  "2025-09-02T22:32:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "karolz-ms",
                                           "body":  "@afscrome this happens on Windows, correct?",
                                           "updatedAt":  "2025-09-02T22:32:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc7BijAZ",
                                           "createdAt":  "2025-09-02T23:00:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "karolz-ms",
                                           "body":  "The reason why I am asking is because on Windows we try to be nice and shut down Executables using `GenerateConsoleCtrlEvent` (sending CTRL+BREAK, in lieu of signals available on other OSes). For reasons that are not entirely clear to me it takes approximately 5 seconds for each Executable to get and process that event... with result that it takes about 6-7 seconds total to dispose of the app, and that time is dominated by Executable cleanup. Adding Containers makes no difference.\n\nFor comparison, on Linux I see the app disposal taking approximately 1.5 seconds for Executable-only version and about 2.5 seconds for version with Containers, which I think is reasonable.",
                                           "updatedAt":  "2025-09-02T23:00:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc7BuVyq",
                                           "createdAt":  "2025-09-03T17:31:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "afscrome",
                                           "body":  "This is windows, however I\u0027m seeing the opposite - executables are taking 1.5 secs to dispose, with containers taking the long amounts of time.  Although slightly weirdly with containers, I\u0027m getting `network created` events after disposal starts...  So maybe it\u0027s my test case that\u0027s wrong here.\n\nOverall test time\n\u003cimg width=\"777\" height=\"308\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/70c80d87-648b-4a12-aaa0-1fdde2def5e7\" /\u003e\n\nThese tests are with 9.4.2, can\u0027t get rc sdk onto my work machine so can\u0027t try out latest main.\n\nSample tests\n```cs\n    [Test]\n    public async Task TestContainer()\n    {\n        // Arrange\n        var cancellationToken = TestContext.CurrentContext.CancellationToken;\n\n        var appHost = DistributedApplicationTestingBuilder.Create();\n        appHost.Services.AddLogging(logging =\u003e\n        {\n            logging.SetMinimumLevel(LogLevel.Debug);\n            // Override the logging filters from the app\u0027s configuration\n            logging.AddFilter(appHost.Environment.ApplicationName, LogLevel.Debug);\n            logging.AddFilter(\"Aspire.\", LogLevel.Debug);\n            logging.AddSimpleConsole(x =\u003e x.TimestampFormat = \"HH:mm:ss.fff \");\n        });\n\n        appHost.AddContainer(\"nginx\", \"nginx\")\n            .WithEntrypoint(\"bash\")\n            .WithArgs(\"-c\", \"echo hello world; exit 0\");\n\n\n        var app = await appHost.BuildAsync(cancellationToken).WaitAsync(DefaultTimeout, cancellationToken);\n\n        try\n        {\n            await app.StartAsync(cancellationToken).WaitAsync(DefaultTimeout, cancellationToken);\n        }\n        finally\n        {\n            Console.WriteLine(\"Start disposal\");\n            var stopwatch = Stopwatch.StartNew();\n            await app.DisposeAsync();\n            stopwatch.Stop();\n            Console.WriteLine($\"Test disposed in {stopwatch.ElapsedMilliseconds} ms\");\n        }\n    }\n\n    [Test]\n    public async Task TestExe()\n    {\n        // Arrange\n        var cancellationToken = TestContext.CurrentContext.CancellationToken;\n\n        var appHost = DistributedApplicationTestingBuilder.Create();\n        appHost.Services.AddLogging(logging =\u003e\n        {\n            logging.SetMinimumLevel(LogLevel.Debug);\n            // Override the logging filters from the app\u0027s configuration\n            logging.AddFilter(appHost.Environment.ApplicationName, LogLevel.Debug);\n            logging.AddFilter(\"Aspire.\", LogLevel.Debug);\n            logging.AddSimpleConsole(x =\u003e x.TimestampFormat = \"HH:mm:ss.fff \");\n        });\n\n        appHost.AddExecutable(\"cmd\", \"cmd.exe\", \".\")\n            .WithArgs(\"/c\", \"echo HELLO WORLD\\nexit 123\");\n\n        var app = await appHost.BuildAsync(cancellationToken).WaitAsync(DefaultTimeout, cancellationToken);\n\n        try\n        {\n            await app.StartAsync(cancellationToken).WaitAsync(DefaultTimeout, cancellationToken);\n        }\n        finally\n        {\n            Console.WriteLine(\"Start disposal\");\n            var stopwatch = Stopwatch.StartNew();\n            await app.DisposeAsync();\n            stopwatch.Stop();\n            Console.WriteLine($\"Test disposed in {stopwatch.ElapsedMilliseconds} ms\");\n        }\n    }\n```\n\nContainer Test Output\n```\n TestContainer\n   Source: WebTests.cs line 43\n   Duration: 5.5 sec\n\n  Standard Output: \n18:25:28.912 dbug: Microsoft.Extensions.Hosting.Internal.Host[1]\n      Hosting starting\n18:25:28.956 info: Aspire.Hosting.DistributedApplication[0]\n      Aspire version: 9.4.2+4884590ffaa580e742f479b4daf77f9d36451f35\n18:25:28.957 info: Aspire.Hosting.DistributedApplication[0]\n      Distributed application starting.\n18:25:28.957 info: Aspire.Hosting.DistributedApplication[0]\n      Application host directory is: S:\\AspireApp1\\AspireApp1.Tests\n18:25:28.960 dbug: Aspire.Hosting.Cli.BackchannelService[0]\n      Backchannel socket path was not specified.\n18:25:29.462 info: Aspire.Hosting.Dcp.DcpHost[0]\n      Starting DCP with arguments: start-apiserver --monitor 31320 --detach --kubeconfig \"C:\\Users\\alexanderc\\AppData\\Local\\Temp\\aspire.nwipxazs.4ba\\kubeconfig\"\n18:25:29.487 dbug: Aspire.Hosting.Dcp.DcpExecutor[0]\n      Watching over DCP Endpoint resources.\n18:25:29.487 dbug: Aspire.Hosting.Dcp.DcpExecutor[0]\n      Watching over DCP Service resources.\n18:25:29.487 dbug: Aspire.Hosting.Dcp.DcpExecutor[0]\n      Watching over DCP Executable resources.\n18:25:29.487 dbug: Aspire.Hosting.Dcp.DcpExecutor[0]\n      Watching over DCP Container resources.\n18:25:29.527 dbug: Aspire.Hosting.ApplicationModel.ResourceNotificationService[0]\n      Resource nginx/nginx-bkzangvw changed state: Starting\n18:25:30.247 info: Aspire.Hosting.Dcp.dcp.start-apiserver.api-server[0]\n      Starting API server...\n18:25:30.271 info: Aspire.Hosting.Dcp.dcp.start-apiserver.api-server[0]\n      API server started\t{\"Address\": \"127.0.0.1\", \"Port\": 60259}\n18:25:30.271 info: Aspire.Hosting.Dcp.dcp.start-apiserver.dcp-host[0]\n      Starting DCP controller host\n18:25:30.271 info: Aspire.Hosting.Dcp.dcp.start-apiserver.dcp-host[0]\n      Started all services\t{\"count\": 1}\n18:25:30.562 dbug: Aspire.Hosting.Dcp.KubernetesService[0]\n      Successfully read Kubernetes configuration from \u0027C:\\Users\\alexanderc\\AppData\\Local\\Temp\\aspire.nwipxazs.4ba\\kubeconfig\u0027 after 1051 milliseconds.\n18:25:30.727 info: Aspire.Hosting.DistributedApplication[0]\n      Distributed application started. Press Ctrl+C to shut down.\n18:25:30.727 dbug: Microsoft.Extensions.Hosting.Internal.Host[2]\n      Hosting started\nStart disposal\n18:25:30.732 dbug: Aspire.Hosting.Dcp.DcpExecutor[0]\n      Cancellation received while watching Service resources.\n18:25:30.732 dbug: Aspire.Hosting.Dcp.DcpExecutor[0]\n      Stopped watching Service resources.\n18:25:30.734 dbug: Aspire.Hosting.Dcp.DcpExecutor[0]\n      Cancellation received while watching Container resources.\n18:25:30.734 dbug: Aspire.Hosting.Dcp.DcpExecutor[0]\n      Stopped watching Container resources.\n18:25:30.790 dbug: Aspire.Hosting.Dcp.DcpExecutor[0]\n      Cancellation received while watching Endpoint resources.\n18:25:30.790 dbug: Aspire.Hosting.Dcp.DcpExecutor[0]\n      Stopped watching Endpoint resources.\n18:25:30.809 dbug: Aspire.Hosting.Dcp.DcpExecutor[0]\n      Cancellation received while watching Executable resources.\n18:25:30.809 dbug: Aspire.Hosting.Dcp.DcpExecutor[0]\n      Stopped watching Executable resources.\n18:25:30.836 info: Aspire.Hosting.Dcp.dcp.start-apiserver.api-server.adminHttpHandler[0]\n      API server changed status\t{\"OldStatus\": \"Running\", \"NewStatus\": \"CleaningResources\"}\n18:25:30.881 info: Aspire.Hosting.Dcp.dcpctrl[0]\n      starting controller manager\n18:25:31.844 info: Aspire.Hosting.Dcp.dcpctrl.NetworkReconciler[0]\n      network created\t{\"Network\": \"/aspire-network\", \"Reconciliation\": 2, \"NetworkName\": \"aspire-session-network-uscqtvnx-AspireApp1.Tests\"}\n18:25:32.248 info: Aspire.Hosting.Dcp.dcpctrl.NetworkReconciler[0]\n      ContainerNetwork object is being deleted\t{\"Network\": \"/aspire-network\", \"Reconciliation\": 4, \"NetworkName\": \"aspire-session-network-uscqtvnx-AspireApp1.Tests\", \"NetworkID\": \"dff7863c7005\"}\n18:25:33.414 info: Aspire.Hosting.Dcp.dcpctrl.NetworkReconciler[0]\n      no more ContainerNetwork resources are being watched, cancelling network watch\t{\"Network\": \"/aspire-network\", \"Reconciliation\": 4, \"NetworkName\": \"aspire-session-network-uscqtvnx-AspireApp1.Tests\", \"NetworkID\": \"dff7863c7005\"}\n18:25:33.415 info: Aspire.Hosting.Dcp.dcpctrl.os-executor[0]\n      Context expired, stopping process...\t{\"PID\": 55524, \"Command\": \"C:\\\\Program Files\\\\Docker\\\\Docker\\\\resources\\\\bin\\\\docker.exe\", \"Args\": [\"events\", \"--filter\", \"type=network\", \"--format\", \"{{json .}}\"]}\n18:25:33.491 info: Aspire.Hosting.Dcp.dcpctrl.os-executor[0]\n      Root process has stopped\t{\"Root\": 55524}\n18:25:33.492 info: Aspire.Hosting.Dcp.dcpproc.monitor[0]\n      monitor process exited, shutting down\t{\"pid\": 55524}\n18:25:34.333 info: Aspire.Hosting.Dcp.dcp.start-apiserver.api-server.adminHttpHandler[0]\n      API server changed status\t{\"OldStatus\": \"CleanupComplete\", \"NewStatus\": \"Stopping\"}\n18:25:34.333 info: Aspire.Hosting.Dcp.dcp.start-apiserver[0]\n      Shutting down...\n18:25:34.333 info: Aspire.Hosting.Dcp.dcp.start-apiserver.dcp-host[0]\n      Service DCP controller host terminated gracefully\n18:25:34.334 info: Aspire.Hosting.Dcp.dcp.start-apiserver[0]\n      Shutdown complete.\nTest disposed in 3609 ms\n```\n\nExe Test output\n```\n TestExe\n   Source: WebTests.cs line 80\n   Duration: 2.5 sec\n\n  Standard Output: \n18:25:34.352 dbug: Microsoft.Extensions.Hosting.Internal.Host[1]\n      Hosting starting\n18:25:34.357 info: Aspire.Hosting.DistributedApplication[0]\n      Aspire version: 9.4.2+4884590ffaa580e742f479b4daf77f9d36451f35\n18:25:34.358 info: Aspire.Hosting.DistributedApplication[0]\n      Distributed application starting.\n18:25:34.358 info: Aspire.Hosting.DistributedApplication[0]\n      Application host directory is: S:\\AspireApp1\\AspireApp1.Tests\n18:25:34.358 dbug: Aspire.Hosting.Cli.BackchannelService[0]\n      Backchannel socket path was not specified.\n18:25:34.659 info: Aspire.Hosting.Dcp.DcpHost[0]\n      Starting DCP with arguments: start-apiserver --monitor 31320 --detach --kubeconfig \"C:\\Users\\alexanderc\\AppData\\Local\\Temp\\aspire.5mleaq3t.esi\\kubeconfig\"\n18:25:34.668 dbug: Aspire.Hosting.Dcp.DcpExecutor[0]\n      Watching over DCP Endpoint resources.\n18:25:34.668 dbug: Aspire.Hosting.Dcp.DcpExecutor[0]\n      Watching over DCP Executable resources.\n18:25:34.669 dbug: Aspire.Hosting.Dcp.DcpExecutor[0]\n      Watching over DCP Container resources.\n18:25:34.669 dbug: Aspire.Hosting.Dcp.DcpExecutor[0]\n      Watching over DCP Service resources.\n18:25:34.671 dbug: Aspire.Hosting.ApplicationModel.ResourceNotificationService[0]\n      Resource cmd/cmd-afqregvn changed state: Starting\n18:25:35.351 info: Aspire.Hosting.Dcp.dcp.start-apiserver.api-server[0]\n      Starting API server...\n18:25:35.376 info: Aspire.Hosting.Dcp.dcp.start-apiserver.api-server[0]\n      API server started\t{\"Address\": \"127.0.0.1\", \"Port\": 60277}\n18:25:35.376 info: Aspire.Hosting.Dcp.dcp.start-apiserver.dcp-host[0]\n      Starting DCP controller host\n18:25:35.376 info: Aspire.Hosting.Dcp.dcp.start-apiserver.dcp-host[0]\n      Started all services\t{\"count\": 1}\n18:25:35.439 dbug: Aspire.Hosting.Dcp.KubernetesService[0]\n      Successfully read Kubernetes configuration from \u0027C:\\Users\\alexanderc\\AppData\\Local\\Temp\\aspire.5mleaq3t.esi\\kubeconfig\u0027 after 769 milliseconds.\nStart disposal\n18:25:35.452 info: Aspire.Hosting.DistributedApplication[0]\n      Distributed application started. Press Ctrl+C to shut down.\n18:25:35.452 dbug: Microsoft.Extensions.Hosting.Internal.Host[2]\n      Hosting started\n18:25:35.452 dbug: Aspire.Hosting.Dcp.DcpExecutor[0]\n      Cancellation received while watching Service resources.\n18:25:35.452 dbug: Aspire.Hosting.Dcp.DcpExecutor[0]\n      Stopped watching Service resources.\n18:25:35.470 dbug: Aspire.Hosting.Dcp.DcpExecutor[0]\n      Cancellation received while watching Container resources.\n18:25:35.470 dbug: Aspire.Hosting.Dcp.DcpExecutor[0]\n      Stopped watching Container resources.\n18:25:35.485 dbug: Aspire.Hosting.Dcp.DcpExecutor[0]\n      Cancellation received while watching Executable resources.\n18:25:35.485 dbug: Aspire.Hosting.Dcp.DcpExecutor[0]\n      Stopped watching Executable resources.\n18:25:35.485 dbug: Aspire.Hosting.Dcp.DcpExecutor[0]\n      Cancellation received while watching Endpoint resources.\n18:25:35.485 dbug: Aspire.Hosting.Dcp.DcpExecutor[0]\n      Stopped watching Endpoint resources.\n18:25:35.518 info: Aspire.Hosting.Dcp.dcp.start-apiserver.api-server.adminHttpHandler[0]\n      API server changed status\t{\"OldStatus\": \"Running\", \"NewStatus\": \"CleaningResources\"}\n18:25:35.721 info: Aspire.Hosting.Dcp.dcpctrl[0]\n      starting controller manager\n18:25:36.819 info: Aspire.Hosting.Dcp.dcp.start-apiserver.api-server.adminHttpHandler[0]\n      API server changed status\t{\"OldStatus\": \"CleanupComplete\", \"NewStatus\": \"Stopping\"}\n18:25:36.819 info: Aspire.Hosting.Dcp.dcp.start-apiserver[0]\n      Shutting down...\n18:25:36.820 info: Aspire.Hosting.Dcp.dcp.start-apiserver.dcp-host[0]\n      Service DCP controller host terminated gracefully\n18:25:36.820 info: Aspire.Hosting.Dcp.dcp.start-apiserver[0]\n      Shutdown complete.\nTest disposed in 1368 ms\n```",
                                           "updatedAt":  "2025-09-03T17:31:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc7BujSY",
                                           "createdAt":  "2025-09-03T17:51:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "karolz-ms",
                                           "body":  "The other thing that I forgot to mention is that when `app.StartAsync()` returns, it does not mean everything is necessarily up and running. It only means the Aspire app model has created all the objects and got the information it needs to consider the application \"started\". For both Executables and Containers DCP might still be manipulating them, and it could be that some of these actions need to reach their outcome before cleanup can be started. E.g. this explains why a network created event shows up for some runs with your test--it is a timing issue. In my testing I actually added a delay after `app.StartAsync()` and measured shutdown time only after that, to make sure the shutdown starts from a stable state.\n\nThe cleanup itself is also a bit involved. E.g. for Containers we stop them gracefully, then verify they are really stopped, then remove them, then verify they are actually removed, then (after all ephemeral containers have been removed) delete the container network, then verify it is deleted. So that involves multiple round-trips to Docker/Podman and just takes time (and you do not want to know why we do all the verification 😄). Unlike with startup, we want to make 100% sure that the cleanup is done, all of it, before reporting the shutdown complete, because another instance of the same test might be started right after we report cleanup done, and if there are any resources still running at that time, conflicts may occur.\n\nI looked at the detailed logs and, apart from the CTRL+BREAK issue on Windows, I did not see any evidence of clearly excessive time spent in any phase of the resource cleanup.",
                                           "updatedAt":  "2025-09-03T17:51:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc7BvCVk",
                                           "createdAt":  "2025-09-03T18:35:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "afscrome",
                                           "body":  "\u003e  I forgot to mention is that when app.StartAsync() returns, it does not mean everything is necessarily up and running\n\nI must admit, I still struggle to make sense of when `StartAsync` blocks and when it doesn\u0027t .  When you use `WaitFor(), `StartAsync` gets blocked by all of those dependencies starting.  But use `WithExplicitStart()` instead and that doesn\u0027t block.  \n\n\u003e we want to make 100% sure that the cleanup is done, all of it\n\nWhat if I don\u0027t care, or the time saving is significant enough that I want to take the risk of some edge case failures?\n- When I\u0027m running tests in a test process, why can\u0027t the cleanup of the previous test overlap with the running of the next test?   I can already run tests in parallel, so I\u0027d imagine that overlapped cleanup is no different to a slightly higher degree of parallelism.\n- I\u0027m running on an ephemeral build agent.  Once my test are complete, the agent is going to be completely erased.\n\nSure 5 seconds cleanup for a test may not be unreasonably, but multiply that by 100 tests and it becomes significant.  It also produces a really poor first impressin as devs will typically start with a hello world type test, and it is these test where the disposal is most obvious, leading to poor first impressions.\n\nAll of this is also made worse by `DistributedApplicationTestingBuilder` encouraging the model of one app host per test, rather than an assembly wide one time set up.  (Whilst technically you can do the latter, it makes it a nightmare to get logs out of so failures become undiagnosable.\n\n",
                                           "updatedAt":  "2025-09-03T18:35:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc7BvgGw",
                                           "createdAt":  "2025-09-03T19:12:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "karolz-ms",
                                           "body":  "\u003e I must admit, I still struggle to make sense of when StartAsync blocks and when it doesn\u0027t . When you use WaitFor(), StartAsyncgets blocked by all of those dependencies starting.  But useWithExplicitStart()` instead and that doesn\u0027t block.\n\n`WithExplicitStart()` implies the resource start is asynchronous and on-demand--it may be started at any time after creation, or not at all. The fact that `StartAsync()` does not block on such resources being started makes a lot of sense to me. @mitchdenny or @davidfowl might have more thoughts on that.\n\n\u003e What if I don\u0027t care, or the time saving is significant enough that I want to take the risk of some edge case failures?\n\nThere is `WaitForResourceCleanup` [option on DCP Publisher](https://github.com/dotnet/aspire/blob/main/src/Aspire.Hosting.Testing/DistributedApplicationFactory.cs#L204) that is on by default but you can turn it of [via extension method](https://github.com/dotnet/aspire/blob/main/tests/Shared/DistributedApplicationTestingBuilderExtensions.cs#L38). Please check it out and let me know if it helps!\n\n\u003e Sure 5 seconds cleanup for a test may not be unreasonably, but multiply that by 100 tests and it becomes significant. It also produces a really poor first impressin as devs will typically start with a hello world type test, and it is these test where the disposal is most obvious, leading to poor first impressions.\n\nI think Aspire makes it almost too easy to spin up multi-service, multi-container environments for tests 😆 OK, I am joking a bit, but the costs of these things does add up. My advice would be to do more environment reuse for multiple test scenarios and/or rely more on testing services in isolation.\n\n\u003e All of this is also made worse by DistributedApplicationTestingBuilder encouraging the model of one app host per test, rather than an assembly wide one time set up. (Whilst technically you can do the latter, it makes it a nightmare to get logs out of so failures become undiagnosable.\n\nI think this is a reasonable default and not just because of the log issue. If one throws diverse test scenarios at the same set of instances, there is an opportunity not only for failures related to individual scenarios, but also failures caused by scenario interaction. Which may or may not be symptoms of implementation defects, but surely make test specificity and robustness more challenging.",
                                           "updatedAt":  "2025-09-03T19:12:18Z"
                                       }
                                   ],
                         "totalCount":  7
                     },
        "title":  "Disposing `DistributedApplicationTestingBuilder` takes longer than the test itself",
        "labels":  [
                       "area-orchestrator",
                       "area-app-testing"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspire/issues/10711",
        "createdAt":  "2025-07-28T18:35:07Z",
        "number":  10711,
        "author":  "lukedukeus",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-30T17:24:25Z",
        "body":  "### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nI am using Aspire with an application that has many different resources. I want to test how the distributed application behaves when certain resources go offline.\n\nSay I have a web app, and I want to test how it behaves if a redis cache resource goes offline. I can conditionally add the resource to the `DistributedApplicationBuilder`, and this works, but this isn\u0027t really testing what happens with the resource offline, it is testing what happens if the resource is not there. Rather than looking for the ability to conditionally include a resource, I am looking for the ability to change a specific resources networking config.\n\n### Describe the solution you\u0027d like\n\nI am looking for an API that would let me cut internet or intranet access for a specific resource, while that resource is running. The API should work with `IDistributedApplicationBuilder` and `IDistributedApplicationTestingBuilder` \n\nI imagine the API usage would be something like this:\n```\nvar builder = DistributedApplication.CreateBuilder(args);\n\nvar cache = builder.AddRedis(\"cache\").WithNetworkCommands();\n\nbuilder.AddProject\u003cProjects.ExampleProject\u003e()\n       .WithReference(cache);\n```\n\nIn this example `WithNetworkCommands` would be an extension method that can apply to any resource, something like (Pseudo code):\n```\n        public static IResourceBuilder\u003cT\u003e WithDatabaseCommands(this IResourceBuilder\u003cT\u003e builder) where T : IResource\n        {\n            builder.WithCommand(\n                name: \"cut-network\",\n                displayName: \"Cut Network\",\n                executeCommand: context =\u003e OnCutNetworkCommandAsync(builder, context),\n                updateState: OnUpdateResourceState\n            );\n\n            return builder;\n        }\n\n        private static async Task\u003cExecuteCommandResult\u003e OnCutNetworkCommandAsync(IResourceBuilder\u003cIResource\u003e builder, ExecuteCommandContext context)\n        {\n            var networkInterfaces= await builder.Resource.GetNetworkInterfaces();\n\n            networkInterfaces.Clear();\n\n            return CommandResults.Success();\n        }\n``` \n\nFor testing:\n```\nvar appHost = await DistributedApplicationTestingBuilder.CreateAsync\u003cProjects.ProjectName\u003e();\n\nvar app = await appHost.BuildAsync();\n\n// to test what happens if a resource is started without network:\nappHost .Resources.OfType\u003cNodeAppResource\u003e().ConfigureNetworks(config =\u003e { config.NetworkInterfaces.Clear();})\n\nawait app.StartAsync();\n\n// to test what happens if network is lost while running:\nappHost .Resources.OfType\u003cNodeAppResource\u003e().ConfigureNetworks(config =\u003e { config.NetworkInterfaces.Clear();})\n```\n\n### Additional context\n\n- Should work with normal builder \u0026 testing builder (`IDistributedApplicationBuilder` and `IDistributedApplicationTestingBuilder`)\n- Should work with removing specific network access, like removing single interface or all interfaces, to simulate intranet vs internet access\n- Should work for removing network access at different points in resource lifetime, like before startup, or during resource execution\n- Should be designed so that it exposes all network interfaces, so that in the future, things like network throttling and lossy networks can be simulated",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOuv41fQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOKYQzfc66ePvU",
                                           "createdAt":  "2025-07-28T18:38:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "I dont think you want to mutate the resource object model, instead a way to tell the proxy to break (if you are using the proxy), while the resource is running. The other option is to stop running the resource.",
                                           "updatedAt":  "2025-07-28T18:38:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc66en0W",
                                           "createdAt":  "2025-07-28T18:56:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lukedukeus",
                                           "body":  "That makes sense. I don\u0027t really care about if it mutates the resource object model or something external (I don\u0027t know that much about aspire\u0027s inner workings). I think it could all be accomplished by mutating only the inner networking loop\n\nI care more about being able to tamper with connection either before startup, or once the distributed applicaiton is running. The main thing I care about is being able to tamper with the connection between resources, or connection to the external internet.",
                                           "updatedAt":  "2025-07-28T18:56:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc66fPKe",
                                           "createdAt":  "2025-07-28T19:11:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "Right if you use the aspire proxy, we can build a feature at that level to support this. If you disable the proxy your own option would be the stop the resource.",
                                           "updatedAt":  "2025-07-28T19:11:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc66fXCp",
                                           "createdAt":  "2025-07-28T19:14:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lukedukeus",
                                           "body":  "Is the aspire team interested in a PR that would add this, and if so, do you have pointers on where I should look to get a first draft of this started? Also, do you have any insight on what the usage APIs should look like?",
                                           "updatedAt":  "2025-07-28T19:14:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc660xs_",
                                           "createdAt":  "2025-07-29T23:41:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEcaOSA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "EYES",
                                                                               "user":  "danegsta",
                                                                               "createdAt":  "2025-07-30T00:12:43Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "cc @danegsta new proxy feature request.",
                                           "updatedAt":  "2025-07-29T23:41:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc664ZTu",
                                           "createdAt":  "2025-07-30T08:32:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "afscrome",
                                           "body":  "Have you looked at https://learn.microsoft.com/en-us/microsoft-cloud/dev/dev-proxy/how-to/use-dev-proxy-with-dotnet-aspire at all?  It seems to allow for simulation of errors - can that help?",
                                           "updatedAt":  "2025-07-30T08:32:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc668H_B",
                                           "createdAt":  "2025-07-30T13:17:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lukedukeus",
                                           "body":  "I hadn\u0027t seen that before. It looks like what I am looking for, but it looks like it has to be configured with a static file, so I\u0027m not sure how I would simulate a good network connection that suddenly drops during a resources execution. \n\nIt looks like this would add one additional resource for every resource I want to tamper with the network for. This means I also have to make sure that every resource is using the new proxied endpoints. If possible I would like to have something that uses more fluent configuration, and does not add additional endpoints, just adds some middleware to the existing ones.",
                                           "updatedAt":  "2025-07-30T13:17:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc66_jV9",
                                           "createdAt":  "2025-07-30T17:24:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEcjNYw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "lukedukeus",
                                                                               "createdAt":  "2025-07-30T20:23:56Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "danegsta",
                                           "body":  "Long term I\u0027d love if we made proxies a first class resource rather than the current approach where there\u0027s the built-in proxy which gets managed via endpoints and automatically works with service discovery, but user implemented proxies require the calling application to be aware of the proxy resource for correct service discovery.\n\nThe built-in proxy is intentionally fairly simple (it\u0027s a layer 4 TCP/UDP proxy that isn\u0027t aware of http or fancy things like that), more akin to the `socat` tool, but I\u0027d love if we had a way for users to manage proxies via a mixin approach. Layer YARP/nginx on a lower level traffic shaping proxy that could simulate an unreliable connection, for example. With each proxy layer seeing the modified host/port from the previous layer instead of the unmodified resource host/port. Then resources would opt-in to a proxy stack instead of the proxy resource being responsible for finding all its children.",
                                           "updatedAt":  "2025-07-30T17:24:25Z"
                                       }
                                   ],
                         "totalCount":  8
                     },
        "title":  "Testing broken network connections",
        "labels":  [
                       "area-app-testing"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspire/issues/11021",
        "createdAt":  "2025-08-20T09:40:32Z",
        "number":  11021,
        "author":  "Culan",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODR5i6Q==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "pb-adrianbezzina",
                                            "createdAt":  "2025-09-19T05:43:03Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "johnhealyPB",
                                            "createdAt":  "2025-09-19T05:50:57Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "buzzaII",
                                            "createdAt":  "2025-09-19T06:06:11Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "jbrlloyd-pointsbet",
                                            "createdAt":  "2025-09-19T12:36:28Z"
                                        }
                                    ],
                          "totalCount":  4
                      },
        "updatedAt":  "2025-09-19T21:54:44Z",
        "body":  "### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Describe the bug\n\nWe are using Aspire.Hosting.Testing.\nWe recently updated from 9.3 to 9.4.1.\n\nWe have started seeing exceptions after the tests have passed so in tear down.\n\n### Expected Behavior\n\nWith Aspire 9.4.1 the tests pass and there is no exception thrown.\n\n### Steps To Reproduce\n\nThe issue is reproducible with aspire-samples.\n\n1. Clone aspire-samples main from 20th of May (Update to 9.3)\n2. Build all projects\n3. Open SamplesTests and run a test.\n\nAll work fine, and there is no exception.\n\nDo the same but instead with main from 29th of July (Update to 9.4)\n\n### Exceptions (if any)\n\nException thrown at AppHosts builder.Build().Run()\nAggregateException with a TaskCanceledException as inner exception.\n\n### .NET Version info\n\n.NET SDK:\n Version:           9.0.304\n Commit:            f12f5f689e\n Workload version:  9.0.300-manifests.ad61bb1c\n MSBuild version:   17.14.16+5d8159c5f\n\nRuntime Environment:\n OS Name:     Windows\n OS Version:  10.0.22631\n OS Platform: Windows\n RID:         win-x64\n Base Path:   C:\\Program Files\\dotnet\\sdk\\9.0.304\\\n\n.NET workloads installed:\nThere are no installed workloads to display.\nConfigured to use loose manifests when installing new manifests.\n\nHost:\n  Version:      9.0.8\n  Architecture: x64\n  Commit:       aae90fa090\n\n.NET SDKs installed:\n  8.0.206 [C:\\Program Files\\dotnet\\sdk]\n  8.0.411 [C:\\Program Files\\dotnet\\sdk]\n  8.0.412 [C:\\Program Files\\dotnet\\sdk]\n  8.0.413 [C:\\Program Files\\dotnet\\sdk]\n  9.0.109 [C:\\Program Files\\dotnet\\sdk]\n  9.0.304 [C:\\Program Files\\dotnet\\sdk]\n\n.NET runtimes installed:\n  Microsoft.AspNetCore.App 8.0.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 8.0.18 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 8.0.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 9.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.NETCore.App 8.0.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.NETCore.App 8.0.18 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.NETCore.App 8.0.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.NETCore.App 9.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.WindowsDesktop.App 8.0.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n  Microsoft.WindowsDesktop.App 8.0.18 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n  Microsoft.WindowsDesktop.App 8.0.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n  Microsoft.WindowsDesktop.App 9.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n\nOther architectures found:\n  x86   [C:\\Program Files (x86)\\dotnet]\n    registered at [HKLM\\SOFTWARE\\dotnet\\Setup\\InstalledVersions\\x86\\InstallLocation]\n\nEnvironment variables:\n  Not set\n\nglobal.json file:\n  Not found\n\nLearn more:\n  https://aka.ms/dotnet/info\n\nDownload .NET:\n  https://aka.ms/dotnet/download\n\n### Anything else?\n\n\u003cimg width=\"1450\" height=\"583\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/74b16469-d839-4e46-9a96-db8ba9561b51\" /\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOxYcCSA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOKYQzfc7FhwJI",
                                           "createdAt":  "2025-09-19T21:54:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pb-adrianbezzina",
                                           "body":  "Able to replicate this issue as well by just updating the Aspire from 9.3.1 to 9.4.2 - the test is standard out of the box\n\n```csharp\npublic class WebTests\n{\n    private static readonly TimeSpan DefaultTimeout = TimeSpan.FromSeconds(600);\n\n    [Fact()]\n    public async Task GetWebResourceRootReturnsOkStatusCode()\n    {\n        // Arrange\n        var cancellationToken = TestContext.Current.CancellationToken;\n\n        var appHost = await DistributedApplicationTestingBuilder.CreateAsync\u003cProjects.AspireApp1_AppHost\u003e(cancellationToken);\n        appHost.Services.AddLogging(logging =\u003e\n        {\n            logging.SetMinimumLevel(LogLevel.Debug);\n            // Override the logging filters from the app\u0027s configuration\n            logging.AddFilter(appHost.Environment.ApplicationName, LogLevel.Debug);\n            logging.AddFilter(\"Aspire.\", LogLevel.Debug);\n            // To output logs to the xUnit.net ITestOutputHelper, consider adding a package from https://www.nuget.org/packages?q=xunit+logging\n        });\n        appHost.Services.ConfigureHttpClientDefaults(clientBuilder =\u003e\n        {\n            clientBuilder.AddStandardResilienceHandler();\n        });\n\n        await using var app = await appHost.BuildAsync(cancellationToken).WaitAsync(DefaultTimeout, cancellationToken);\n        await app.StartAsync(cancellationToken).WaitAsync(DefaultTimeout, cancellationToken);\n\n        // Act\n        var httpClient = app.CreateHttpClient(\"web-fe\");\n        await app.ResourceNotifications.WaitForResourceHealthyAsync(\"web-fe\", cancellationToken).WaitAsync(DefaultTimeout, cancellationToken);\n        var response = await httpClient.GetAsync(\"/\", cancellationToken);\n\n        // Assert\n        Assert.Equal(HttpStatusCode.OK, response.StatusCode);\n    }\n}\n```\n\n\u003cimg width=\"1588\" height=\"1345\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/32162b6a-f93e-44af-a4cc-16d11e45c953\" /\u003e",
                                           "updatedAt":  "2025-09-19T21:54:44Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Since Aspire.Hosting.Testing 9.4 the tests throws TaskCanceledException",
        "labels":  [
                       "area-app-testing"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspire/issues/11403",
        "createdAt":  "2025-09-15T08:26:11Z",
        "number":  11403,
        "author":  "afscrome",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-15T08:26:26Z",
        "body":  "### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nThe Community Toolkit has copy and pasted a bunch of internal testing code from the aspire repo to allow it to do tests - https://github.com/CommunityToolkit/Aspire/tree/main/tests/CommunityToolkit.Aspire.Testing .  \n\nBut if it\u0027s having to copy \u0026 paste code rather than using the `Aspire.Hosting.Testing` nuget package, that suggests there are gaps in the Aspire testing story which should be filled.\n\n\n\n\n### Describe the solution you\u0027d like\n\n- `DockerUtils.AttemptDeleteDockerVolume` - this feels like something that would be useful to expose.  Not only for testing scenarios, but it could also be useful for exposing \"Reset\" capabilities from custom commands.  There could also be a higher level option for `DistributedApplicationTestingBuilderOptions` along the lines of `ResetVolumes` that would cause it to automatically reset all volumes involved in a test\n\n- `LoggerNotificationExtensions.WaitForTextAsync` - This can probably be added to `ResourceNotificationService`.   Again this would probably be useful outside of testings (e.g. writing a custom health check for a custom resource that doesn\u0027t expose any external method to check it\u0027s health)\n\n- `TestDistributedApplicationBuilder.Create(DistributedApplicationOperation operation)` - it\u0027s a bit clunky doing tests in publish mode.  There should be some overloads of `DistributedApplicationTestingBuilder` or extension methods to make doing tests with publish mode easier.\n\nThere are also a bunch of xUnit integration things - I could see these eventually becoming an `Aspire.Hosting.Testing.Xunit` package, although I\u0027m not sure the testing story has matured enough to provide such opinionated test framework integrations at this time.\n\n### Additional context\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "Fill Testing Gaps highlighted by Community Toolkit",
        "labels":  [
                       "area-app-testing"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/aspire/issues/11510",
        "createdAt":  "2025-09-19T08:35:00Z",
        "number":  11510,
        "author":  "KSemenenko",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-19T08:47:47Z",
        "body":  "### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nMy reserve (webapi) created on start becase of wriong DI config. I do not regiser DB Context. but  ths code\n\n```cs\npublic async Task InitializeAsync(string projectName)\n{\n    var appHost = await DistributedApplicationTestingBuilder.CreateAsync\u003cProjects.AIBase_AppHost\u003e();\n    \n    App = await appHost.BuildAsync();\n    await App.StartAsync();\n    \n\n    using var cts = new CancellationTokenSource(TimeSpan.FromSeconds(120));\n\n    var events = await App.ResourceNotifications.WaitForResourceHealthyAsync(projectName, cts.Token);\n\n  \n\n    var httpClient = App.CreateHttpClient(projectName, \"https\");\n    ArgumentNullException.ThrowIfNull(httpClient.BaseAddress);\n    ServerUrl = httpClient.BaseAddress.ToString();\n}\n```\n\nworks perfectly. and resourse is healty (but it just creased on line like `var app = builder.Build();`\n\n\n\n### Describe the solution you\u0027d like\n\nso how we can get actual exeptor or crash or logs from ? \nI want to know if my app is started or crashed on start. \n\nBecase now I have to run the app manualy and check dashoard for logs or so\n\n### Additional context\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOxV1Qdg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDOKYQzfc7FXQbe",
                                           "createdAt":  "2025-09-19T08:39:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MihuBot",
                                           "body":  "I\u0027m a bot. Here is a possible related and/or duplicate issue (I may be wrong):\n- https://github.com/dotnet/aspire/issues/10218",
                                           "updatedAt":  "2025-09-19T08:39:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDOKYQzfc7FXVB2",
                                           "createdAt":  "2025-09-19T08:45:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "KSemenenko",
                                           "body":  "\u003e I\u0027m a bot. Here is a possible related and/or duplicate issue (I may be wrong):\n\u003e \n\u003e * [Still missing crashing container logs in 9.3 \u0026 9.4 preview in tests #10218](https://github.com/dotnet/aspire/issues/10218)\n\nmy is a bit differnt,         `var events = await App.ResourceNotifications.WaitForResourceHealthyAsync(projectName, cts.Token);` - shows me that my app is alive. but this is sooo not true",
                                           "updatedAt":  "2025-09-19T08:47:47Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "ability to get logs from resoureses",
        "labels":  [
                       "area-app-testing"
                   ]
    }
]
